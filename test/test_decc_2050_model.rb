# coding: utf-8
# Test for decc_2050_model
require 'rubygems'
gem 'minitest'
require 'test/unit'
require_relative '../lib/decc_2050_model'

class TestDecc2050Model < Test::Unit::TestCase
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Decc2050ModelShim.new end

  # start of Control
  def test_control_m1; assert_equal("Version 3.4.0", worksheet.control_m1); end
  def test_control_ab4; assert_equal("FOTE", worksheet.control_ab4); end
  def test_control_d5; assert_equal("Nuclear power stations", worksheet.control_d5); end
  def test_control_f5; assert_in_epsilon(4, worksheet.control_f5, 0.001); end
  def test_control_h5; assert_equal("No new nuclear power installed; estimated closure of final plant in 2035", worksheet.control_h5); end
  def test_control_i5; assert_equal("~13 3GW power stations delivering ~280 TWh/yr", worksheet.control_i5); end
  def test_control_j5; assert_equal("~30 3GW power stations delivering ~630 TWh/yr", worksheet.control_j5); end
  def test_control_k5; assert_equal("~50 3GW power stations delivering ~1030 TWh/yr", worksheet.control_k5); end
  def test_control_ab5; assert_in_delta(1, worksheet.control_ab5, 0.001); end
  def test_control_bp5; assert_equal("No new nuclear power installed. Final nuclear power station estimated to close in 2035", worksheet.control_bp5); end
  def test_control_bq5; assert_equal("~13 3GW nuclear power stations delivering ~280 TWh/yr", worksheet.control_bq5); end
  def test_control_br5; assert_equal("~30 3GW nuclear power stations delivering ~630 TWh/yr", worksheet.control_br5); end
  def test_control_bs5; assert_equal("~50 3GW nuclear power stations delivering ~1030 TWh/yr", worksheet.control_bs5); end
  def test_control_d6; assert_equal("Carbon Capture Storage (CCS)", worksheet.control_d6); end
  def test_control_d7; assert_equal("CCS power stations", worksheet.control_d7); end
  def test_control_f7; assert_in_epsilon(4, worksheet.control_f7, 0.001); end
  def test_control_h7; assert_equal("Demonstration plants only; no roll-out of CCS", worksheet.control_h7); end
  def test_control_i7; assert_equal("~240 TWh/yr from 25-40 CCS power stations; comparable to current gas & coal generation", worksheet.control_i7); end
  def test_control_j7; assert_equal("~340 TWh/yr from 35-60 CCS power stations; comparable to total current demand", worksheet.control_j7); end
  def test_control_k7; assert_equal("~510 TWh/yr  from 50-90 CCS power stations; build rate of gas plants in the 1990s", worksheet.control_k7); end
  def test_control_ab7; assert_in_epsilon(1.7, worksheet.control_ab7, 0.001); end
  def test_control_bp7; assert_equal("CCS demonstration plants only", worksheet.control_bp7); end
  def test_control_bq7; assert_equal("~240 TWh/yr from 25-40 CCS power stations - comparable to current gas & coal generation", worksheet.control_bq7); end
  def test_control_br7; assert_equal("~340 TWh/yr from 35-60 CCS power stations - comparable to total current demand", worksheet.control_br7); end
  def test_control_bs7; assert_equal("~510 TWh/yr  from 50-90 CCS power stations - this requires a similar build rate to that of gas plants in the 1990s", worksheet.control_bs7); end
  def test_control_d8; assert_equal("CCS power station fuel mix", worksheet.control_d8); end
  def test_control_f8; assert_equal("D", worksheet.control_f8); end
  def test_control_h8; assert_equal("100% coal/biomass, 0% gas/biogas CCS after demonstration plants", worksheet.control_h8); end
  def test_control_i8; assert_equal("66% coal/biomass, 33% gas/biogas CCS after demonstration plants", worksheet.control_i8); end
  def test_control_j8; assert_equal("33% coal/biomass, 66% gas/biogas CCS after demonstration plants", worksheet.control_j8); end
  def test_control_k8; assert_equal("0% coal/biomas, 100% gas/biogas CCS after demonstration plants", worksheet.control_k8); end
  def test_control_ab8; assert_in_epsilon(4, worksheet.control_ab8, 0.001); end
  def test_control_bp8; assert_equal("After demonstration plants, all CCS electricity is from solid fuel (coal or biomass)", worksheet.control_bp8); end
  def test_control_bq8; assert_equal("After demonstration plants, two thirds of CCS electricity is from solid fuel (coal or biomass), one third from gas (natural gas or biogas)", worksheet.control_bq8); end
  def test_control_br8; assert_equal("After demonstration plants, one third of CCS electricity is from solid fuel (coal or biomass), two thirds from gas (natural gas or biogas)", worksheet.control_br8); end
  def test_control_bs8; assert_equal("After demonstration plants, all CCS electricity is from gas (natural gas or biogas)", worksheet.control_bs8); end
  def test_control_d9; assert_equal("Offshore wind", worksheet.control_d9); end
  def test_control_f9; assert_in_epsilon(4, worksheet.control_f9, 0.001); end
  def test_control_h9; assert_equal("~1,400 turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_h9); end
  def test_control_i9; assert_equal("~10,000 turbines in 2050, delivering ~180 TWh/yr", worksheet.control_i9); end
  def test_control_j9; assert_equal("~17,000 turbines in 2050, delivering ~310 TWh/yr", worksheet.control_j9); end
  def test_control_k9; assert_equal("~40,000 turbines in 2050, delivering ~430 TWh/yr", worksheet.control_k9); end
  def test_control_ab9; assert_in_epsilon(2.3, worksheet.control_ab9, 0.001); end
  def test_control_bp9; assert_equal("~1,400 offshore wind turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_bp9); end
  def test_control_bq9; assert_equal("~10,000 offshore wind turbines in 2050, delivering ~180 TWh/yr", worksheet.control_bq9); end
  def test_control_br9; assert_equal("~17,000 offshore wind turbines in 2050, delivering ~310 TWh/yr", worksheet.control_br9); end
  def test_control_bs9; assert_equal("~40,000 offshore wind turbines in 2050, delivering ~430 TWh/yr", worksheet.control_bs9); end
  def test_control_d10; assert_equal("Onshore wind", worksheet.control_d10); end
  def test_control_f10; assert_in_epsilon(4, worksheet.control_f10, 0.001); end
  def test_control_h10; assert_equal("~4,400 turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_h10); end
  def test_control_i10; assert_equal("~8,000 turbines in 2050, delivering ~50 TWh/yr. ", worksheet.control_i10); end
  def test_control_j10; assert_equal("~13,000 turbines in 2050, delivering ~80 TWh/yr", worksheet.control_j10); end
  def test_control_k10; assert_equal("~20,000 turbines in 2050, delivering ~130 TWh/yr", worksheet.control_k10); end
  def test_control_ab10; assert_in_epsilon(2.3, worksheet.control_ab10, 0.001); end
  def test_control_bp10; assert_equal("~4,400 onshore wind turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_bp10); end
  def test_control_bq10; assert_equal("~8,000 onshore wind turbines in 2050, delivering ~50 TWh/yr. ", worksheet.control_bq10); end
  def test_control_br10; assert_equal("~13,000 onshore wind turbines in 2050, delivering ~80 TWh/yr", worksheet.control_br10); end
  def test_control_bs10; assert_equal("~20,000 onshore wind turbines in 2050, delivering ~130 TWh/yr", worksheet.control_bs10); end
  def test_control_d11; assert_equal("Wave", worksheet.control_d11); end
  def test_control_f11; assert_in_epsilon(4, worksheet.control_f11, 0.001); end
  def test_control_h11; assert_equal("None in 2050", worksheet.control_h11); end
  def test_control_i11; assert_equal("~300km of wave farms", worksheet.control_i11); end
  def test_control_j11; assert_equal("~600km of wave farms", worksheet.control_j11); end
  def test_control_k11; assert_equal("~900km of wave farms", worksheet.control_k11); end
  def test_control_ab11; assert_in_epsilon(4, worksheet.control_ab11, 0.001); end
  def test_control_bp11; assert_equal("None in 2050", worksheet.control_bp11); end
  def test_control_bq11; assert_equal("~300km of wave farms", worksheet.control_bq11); end
  def test_control_br11; assert_equal("~600km of wave farms", worksheet.control_br11); end
  def test_control_bs11; assert_equal("~900km of wave farms", worksheet.control_bs11); end
  def test_control_d12; assert_equal("Tidal Stream", worksheet.control_d12); end
  def test_control_f12; assert_in_epsilon(4, worksheet.control_f12, 0.001); end
  def test_control_h12; assert_equal("None in 2050", worksheet.control_h12); end
  def test_control_i12; assert_equal("1,000 tidal stream turbines", worksheet.control_i12); end
  def test_control_j12; assert_equal("4,700 tidal stream turbines", worksheet.control_j12); end
  def test_control_k12; assert_equal("10,600 tidal stream turbines", worksheet.control_k12); end
  def test_control_ab12; assert_in_epsilon(4, worksheet.control_ab12, 0.001); end
  def test_control_bp12; assert_equal("None in 2050", worksheet.control_bp12); end
  def test_control_bq12; assert_equal("1,000 tidal stream turbines", worksheet.control_bq12); end
  def test_control_br12; assert_equal("4,700 tidal stream turbines", worksheet.control_br12); end
  def test_control_bs12; assert_equal("10,600 tidal stream turbines", worksheet.control_bs12); end
  def test_control_d13; assert_equal("Tidal Range", worksheet.control_d13); end
  def test_control_f13; assert_in_epsilon(4, worksheet.control_f13, 0.001); end
  def test_control_h13; assert_equal("None in  2050", worksheet.control_h13); end
  def test_control_i13; assert_equal("3 small tidal range schemes", worksheet.control_i13); end
  def test_control_j13; assert_equal("4 tidal range schemes", worksheet.control_j13); end
  def test_control_k13; assert_equal("8 tidal range schemes", worksheet.control_k13); end
  def test_control_ab13; assert_in_epsilon(3, worksheet.control_ab13, 0.001); end
  def test_control_bp13; assert_equal("None in  2050", worksheet.control_bp13); end
  def test_control_bq13; assert_equal("3 small tidal range schemes", worksheet.control_bq13); end
  def test_control_br13; assert_equal("4 tidal range schemes", worksheet.control_br13); end
  def test_control_bs13; assert_equal("8 tidal range schemes", worksheet.control_bs13); end
  def test_control_d14; assert_equal("Biomass power stations", worksheet.control_d14); end
  def test_control_f14; assert_in_epsilon(4, worksheet.control_f14, 0.001); end
  def test_control_h14; assert_equal("Only plants built and under construction (0.6GW)", worksheet.control_h14); end
  def test_control_i14; assert_equal("8GW power stations by 2050 delivering 62TWh/yr", worksheet.control_i14); end
  def test_control_j14; assert_equal("12GW power stations by 2050 delivering 100TWh/yr", worksheet.control_j14); end
  def test_control_k14; assert_equal("Over 20GW installed capacity by 2050 delivering 180TWh/yr", worksheet.control_k14); end
  def test_control_ab14; assert_in_delta(1, worksheet.control_ab14, 0.001); end
  def test_control_bp14; assert_equal("Only existing biomass plants and those already under construction (0.6GW)", worksheet.control_bp14); end
  def test_control_bq14; assert_equal("8GW of biomass power stations by 2050 delivering 62TWh/yr", worksheet.control_bq14); end
  def test_control_br14; assert_equal("12GW of biomass power stations by 2050 delivering 100TWh/yr", worksheet.control_br14); end
  def test_control_bs14; assert_equal("Over 20GW of biomass power stations by 2050 delivering 180TWh/yr", worksheet.control_bs14); end
  def test_control_d15; assert_equal("Solar panels for electricity", worksheet.control_d15); end
  def test_control_f15; assert_in_epsilon(4, worksheet.control_f15, 0.001); end
  def test_control_h15; assert_equal("No significant solar PV capacity is installed", worksheet.control_h15); end
  def test_control_i15; assert_equal("4m2 of photovoltaic panels per person in 2050, supplying ~60 TWh/yr of electricity", worksheet.control_i15); end
  def test_control_j15; assert_equal(" 5.4m2 of photovoltaic panels per person in 2050, supplying ~80 TWh/yr", worksheet.control_j15); end
  def test_control_k15; assert_equal("9.5m2 of photovoltaic panels per person – all suitable roof and facade space used", worksheet.control_k15); end
  def test_control_ab15; assert_in_epsilon(3.2, worksheet.control_ab15, 0.001); end
  def test_control_bp15; assert_equal("No significant solar PV capacity is installed", worksheet.control_bp15); end
  def test_control_bq15; assert_equal("4m2 of photovoltaic panels per person in 2050, supplying ~60 TWh/yr of electricity", worksheet.control_bq15); end
  def test_control_br15; assert_equal(" 5.4m2 of photovoltaic panels per person in 2050, supplying ~80 TWh/yr", worksheet.control_br15); end
  def test_control_bs15; assert_equal("9.5m2 of photovoltaic panels per person – all suitable roof and facade space used", worksheet.control_bs15); end
  def test_control_d16; assert_equal("Solar panels for hot water", worksheet.control_d16); end
  def test_control_f16; assert_in_epsilon(4, worksheet.control_f16, 0.001); end
  def test_control_h16; assert_equal("As today, a negligible proportion of buildings have solar thermal in 2050", worksheet.control_h16); end
  def test_control_i16; assert_equal("~30% of suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_i16); end
  def test_control_j16; assert_equal("All suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_j16); end
  def test_control_k16; assert_equal("All suitable buildings get ~60% of their hot water from solar thermal", worksheet.control_k16); end
  def test_control_ab16; assert_in_epsilon(2, worksheet.control_ab16, 0.001); end
  def test_control_bp16; assert_equal("As today, a negligible proportion of buildings have solar thermal in 2050", worksheet.control_bp16); end
  def test_control_bq16; assert_equal("~30% of suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_bq16); end
  def test_control_br16; assert_equal("All suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_br16); end
  def test_control_bs16; assert_equal("All suitable buildings get ~60% of their hot water from solar thermal", worksheet.control_bs16); end
  def test_control_d17; assert_equal("Geothermal electricity", worksheet.control_d17); end
  def test_control_f17; assert_in_epsilon(4, worksheet.control_f17, 0.001); end
  def test_control_h17; assert_equal("No deployment of geothermal electricity generation", worksheet.control_h17); end
  def test_control_i17; assert_equal("Supply of geothermal electricity grows slowly to 7 TWh/yr in 2035 and is sustained", worksheet.control_i17); end
  def test_control_j17; assert_equal("Supply grows quickly reaching 21 TWh/yr by 2030 and is sustained", worksheet.control_j17); end
  def test_control_k17; assert_equal("Supply grows rapidly reaching 35 TWh/yr by 2030 and is sustained", worksheet.control_k17); end
  def test_control_ab17; assert_in_epsilon(3, worksheet.control_ab17, 0.001); end
  def test_control_bp17; assert_equal("No deployment of geothermal electricity generation", worksheet.control_bp17); end
  def test_control_bq17; assert_equal("Supply of geothermal electricity grows slowly to 7 TWh/yr in 2035 and is sustained", worksheet.control_bq17); end
  def test_control_br17; assert_equal("Supply of geothermal electricity grows quickly reaching 21 TWh/yr by 2030 and is sustained", worksheet.control_br17); end
  def test_control_bs17; assert_equal("Supply of geothermal electricity grows rapidly reaching 35 TWh/yr by 2030 and is sustained", worksheet.control_bs17); end
  def test_control_d18; assert_equal("Hydroelectric power stations", worksheet.control_d18); end
  def test_control_f18; assert_in_epsilon(4, worksheet.control_f18, 0.001); end
  def test_control_h18; assert_equal("Supply of electricity is maintained at current levels of 5 TWh/yr", worksheet.control_h18); end
  def test_control_i18; assert_equal("Supply grows slowly, reaching 7 TWh/yr by 2050", worksheet.control_i18); end
  def test_control_j18; assert_equal("Supply grows more quickly, reaching 8 TWh/yr by 2030 and is sustained", worksheet.control_j18); end
  def test_control_k18; assert_equal("Supply grows rapidly reaching 13 TWh/yr by 2035 and is sustained", worksheet.control_k18); end
  def test_control_ab18; assert_in_epsilon(3.4, worksheet.control_ab18, 0.001); end
  def test_control_bp18; assert_equal("Supply of hydroelectricity is maintained at current levels of 5 TWh/yr", worksheet.control_bp18); end
  def test_control_bq18; assert_equal("Supply of hydroelectricity grows slowly, reaching 7 TWh/yr by 2050", worksheet.control_bq18); end
  def test_control_br18; assert_equal("Supply of hydroelectricity grows more quickly, reaching 8 TWh/yr by 2030 and is sustained", worksheet.control_br18); end
  def test_control_bs18; assert_equal("Supply of hydroelectricity grows rapidly reaching 13 TWh/yr by 2035 and is sustained", worksheet.control_bs18); end
  def test_control_d19; assert_equal("Small-scale wind", worksheet.control_d19); end
  def test_control_f19; assert_in_epsilon(4, worksheet.control_f19, 0.001); end
  def test_control_h19; assert_equal("As today, no discernable supply of electricity from micro-wind turbines", worksheet.control_h19); end
  def test_control_i19; assert_equal("Supply increases to 1.3 TWh/yr by 2020 and is sustained", worksheet.control_i19); end
  def test_control_j19; assert_equal("Installed in all ~450,000 suitable domestic properties; supplies 3.5 TWh/year from 2020", worksheet.control_j19); end
  def test_control_k19; assert_equal("Installed in all suitable domestic and non-domestic sties; 8.9 TWh/year from 2020", worksheet.control_k19); end
  def test_control_ab19; assert_in_delta(1, worksheet.control_ab19, 0.001); end
  def test_control_bp19; assert_equal("As today, no discernable supply of electricity from micro-wind turbines", worksheet.control_bp19); end
  def test_control_bq19; assert_equal("Supply of electricity from micro wind turbines increases to 1.3 TWh/yr by 2020 and is sustained", worksheet.control_bq19); end
  def test_control_br19; assert_equal("Micro wind turbines installed in all ~450,000 suitable domestic properties, supplying 3.5 TWh/year from 2020", worksheet.control_br19); end
  def test_control_bs19; assert_equal("Micro wind turbines installed in all suitable domestic and non-domestic sties, supplying 8.9 TWh/year from 2020", worksheet.control_bs19); end
  def test_control_d20; assert_equal("Electricity imports", worksheet.control_d20); end
  def test_control_f20; assert_in_epsilon(4, worksheet.control_f20, 0.001); end
  def test_control_h20; assert_equal("No electricity imports, other than for balancing", worksheet.control_h20); end
  def test_control_i20; assert_equal("30 TWh/yr of electricity imported from Southern Europe", worksheet.control_i20); end
  def test_control_j20; assert_equal("70 TWh/yr imported from UK 10% share of international desert solar project ", worksheet.control_j20); end
  def test_control_k20; assert_equal("140 TWh/yr imported from UK 20% share of international desert solar project", worksheet.control_k20); end
  def test_control_ab20; assert_in_delta(1, worksheet.control_ab20, 0.001); end
  def test_control_bp20; assert_equal("No electricity imports, other than for balancing", worksheet.control_bp20); end
  def test_control_bq20; assert_equal("30 TWh/yr of electricity imported from Southern Europe", worksheet.control_bq20); end
  def test_control_br20; assert_equal("70 TWh/yr of electricity imported from a 10% share of an internationally coordinated desert solar project ", worksheet.control_br20); end
  def test_control_bs20; assert_equal("140 TWh/yr of electricity imported from a 20% share of an internationally coordinated desert solar project", worksheet.control_bs20); end
  def test_control_d21; assert_equal("Agriculture and land use", worksheet.control_d21); end
  def test_control_d22; assert_equal("Land dedicated to bioenergy", worksheet.control_d22); end
  def test_control_f22; assert_in_epsilon(4, worksheet.control_f22, 0.001); end
  def test_control_h22; assert_equal("Energy crops and food production similar to today", worksheet.control_h22); end
  def test_control_i22; assert_equal("5% of land used for energy crops", worksheet.control_i22); end
  def test_control_j22; assert_equal("10% of land used for energy crops", worksheet.control_j22); end
  def test_control_k22; assert_equal("17% of land used for energy crops", worksheet.control_k22); end
  def test_control_ab22; assert_in_epsilon(2, worksheet.control_ab22, 0.001); end
  def test_control_bp22; assert_equal("Energy crops and food production similar to today", worksheet.control_bp22); end
  def test_control_bq22; assert_equal("5% of UK land used for energy crops", worksheet.control_bq22); end
  def test_control_br22; assert_equal("10% of UK land used for energy crops", worksheet.control_br22); end
  def test_control_bs22; assert_equal("17% of UK land used for energy crops", worksheet.control_bs22); end
  def test_control_d23; assert_equal("Livestock and their management", worksheet.control_d23); end
  def test_control_f23; assert_in_epsilon(4, worksheet.control_f23, 0.001); end
  def test_control_h23; assert_equal("Livestock numbers increase by 10%", worksheet.control_h23); end
  def test_control_i23; assert_equal("Livestock numbers same as today", worksheet.control_i23); end
  def test_control_j23; assert_equal("Livestock numbers decrease by 10%", worksheet.control_j23); end
  def test_control_k23; assert_equal("Livestock numbers decrease by 20%", worksheet.control_k23); end
  def test_control_ab23; assert_in_epsilon(4, worksheet.control_ab23, 0.001); end
  def test_control_bp23; assert_equal("Livestock numbers increase by 10%", worksheet.control_bp23); end
  def test_control_bq23; assert_equal("Livestock numbers same as today", worksheet.control_bq23); end
  def test_control_br23; assert_equal("Livestock numbers decrease by 10%", worksheet.control_br23); end
  def test_control_bs23; assert_equal("Livestock numbers decrease by 20%", worksheet.control_bs23); end
  def test_control_d24; assert_equal("Volume of waste and recycling", worksheet.control_d24); end
  def test_control_f24; assert_equal("D", worksheet.control_f24); end
  def test_control_h24; assert_equal("Quantity of waste increases 50%; Small increase in rates of recycling and EFW.", worksheet.control_h24); end
  def test_control_i24; assert_equal("Quantity of waste increases 20%; Increase in rates of recycling and EFW.", worksheet.control_i24); end
  def test_control_j24; assert_equal("Quantity of waste increases 33%; Significant increase in rates of recycling and EFW through innovation.", worksheet.control_j24); end
  def test_control_k24; assert_equal("Quantity of waste decreases 20%; Significant increase in rate of recycling.", worksheet.control_k24); end
  def test_control_ab24; assert_in_epsilon(4, worksheet.control_ab24, 0.001); end
  def test_control_bp24; assert_equal("Overall quantity of waste increases 50% to 2050; 21% increase in recycling rate and 44% increase in rate of energy from waste. 24% of waste is sent to landfill", worksheet.control_bp24); end
  def test_control_bq24; assert_equal("Overall quantity of waste increases almost 20% by 2050; recycling and energy from waste rates increase by 36% and 89% respectively. 11% of waste is sent to landfill.", worksheet.control_bq24); end
  def test_control_br24; assert_equal("Overall quantity of waste increases 33%; waste is handled through high-tech and industry-led approaches; by 2050, recycling and energy from waste rates increase by 36% and 89% respectively. Only 2% is sent to landfill.", worksheet.control_br24); end
  def test_control_bs24; assert_equal("Quantity of waste decreases 20% by 2050; recycling and energy from waste increase by 70% and 7% respectively; by 2050, 3% of waste sent to landfill.", worksheet.control_bs24); end
  def test_control_d25; assert_equal("Marine algae", worksheet.control_d25); end
  def test_control_f25; assert_in_epsilon(4, worksheet.control_f25, 0.001); end
  def test_control_h25; assert_equal("No development of macro-algae cultivation", worksheet.control_h25); end
  def test_control_i25; assert_equal("Area same as half of natural reserve used, delivering ~4 TWh/yr", worksheet.control_i25); end
  def test_control_j25; assert_equal("Area same as all of natural reserve used, delivering ~9 TWh/yr", worksheet.control_j25); end
  def test_control_k25; assert_equal("Area same as four times natural reserve used, delivering ~46 TWh/yr", worksheet.control_k25); end
  def test_control_ab25; assert_in_delta(1, worksheet.control_ab25, 0.001); end
  def test_control_bp25; assert_equal("No development of macro-algae cultivation", worksheet.control_bp25); end
  def test_control_bq25; assert_equal("Macro algae covering the same area as half of natural reserve used, delivering ~4 TWh/yr", worksheet.control_bq25); end
  def test_control_br25; assert_equal("Macro algae covering the same area as all of natural reserve used, delivering ~9 TWh/yr", worksheet.control_br25); end
  def test_control_bs25; assert_equal("Macro algae covering the same area as four times natural reserve used, delivering ~46 TWh/yr", worksheet.control_bs25); end
  def test_control_d26; assert_equal("Type of fuels from biomass", worksheet.control_d26); end
  def test_control_f26; assert_equal("D", worksheet.control_f26); end
  def test_control_h26; assert_equal("Biomass converted to a mixture of solid, liquid and gas biofuels", worksheet.control_h26); end
  def test_control_i26; assert_equal("Biomass mainly converted to solid biofuel", worksheet.control_i26); end
  def test_control_j26; assert_equal("Biomass mainly converted to liquid biofuel", worksheet.control_j26); end
  def test_control_k26; assert_equal("Biomass mainly converted to biogas fuel", worksheet.control_k26); end
  def test_control_ab26; assert_in_delta(1, worksheet.control_ab26, 0.001); end
  def test_control_bp26; assert_equal("Biomass converted to a mixture of solid, liquid and gas biofuels", worksheet.control_bp26); end
  def test_control_bq26; assert_equal("Biomass mainly converted to solid biofuel", worksheet.control_bq26); end
  def test_control_br26; assert_equal("Biomass mainly converted to liquid biofuel", worksheet.control_br26); end
  def test_control_bs26; assert_equal("Biomass mainly converted to biogas fuel", worksheet.control_bs26); end
  def test_control_d27; assert_equal("Bioenergy imports", worksheet.control_d27); end
  def test_control_f27; assert_in_epsilon(4, worksheet.control_f27, 0.001); end
  def test_control_h27; assert_equal("Imported biofuel declines from ~ 4 TWh/yr currently to zero", worksheet.control_h27); end
  def test_control_i27; assert_equal("Up to 70 TWh/yr of imported bioenergy in 2050", worksheet.control_i27); end
  def test_control_j27; assert_equal("Up to 140 TWh/yr of imported bioenergy in 2050", worksheet.control_j27); end
  def test_control_k27; assert_equal("Up to 280 TWh/yr of imported bioenergy in 2050", worksheet.control_k27); end
  def test_control_ab27; assert_in_delta(1, worksheet.control_ab27, 0.001); end
  def test_control_bp27; assert_equal("Imported biofuel declines from ~ 4 TWh/yr currently to zero", worksheet.control_bp27); end
  def test_control_bq27; assert_equal("Up to 70 TWh/yr of imported bioenergy in 2050", worksheet.control_bq27); end
  def test_control_br27; assert_equal("Up to 140 TWh/yr of imported bioenergy in 2050", worksheet.control_br27); end
  def test_control_bs27; assert_equal("Up to 280 TWh/yr of imported bioenergy in 2050", worksheet.control_bs27); end
  def test_control_d29; assert_equal("Domestic passenger transport", worksheet.control_d29); end
  def test_control_d30; assert_equal("Domestic transport behaviour", worksheet.control_d30); end
  def test_control_f30; assert_in_epsilon(4, worksheet.control_f30, 0.001); end
  def test_control_h30; assert_equal("In 2050, individuals travel 9% further than today. No noticeable modal shift.", worksheet.control_h30); end
  def test_control_i30; assert_equal("Individuals travel 7% further than today, cars and vans are 80% of 2050 passenger mileage", worksheet.control_i30); end
  def test_control_j30; assert_equal("Individuals travel 7% further than today; cars and vans 74% of 2050 passenger mileage", worksheet.control_j30); end
  def test_control_k30; assert_equal("In 2050, individuals travel the same distance as today. Signficant shift to public transport.", worksheet.control_k30); end
  def test_control_ab30; assert_in_epsilon(4, worksheet.control_ab30, 0.001); end
  def test_control_bp30; assert_equal("In 2050, individuals travel 9% further than today. No noticeable modal shift.", worksheet.control_bp30); end
  def test_control_bq30; assert_equal("Individuals travel 7% further than today, cars and vans are 80% of 2050 passenger mileage", worksheet.control_bq30); end
  def test_control_br30; assert_equal("Individuals travel 7% further than today; cars and vans 74% of 2050 passenger mileage", worksheet.control_br30); end
  def test_control_bs30; assert_equal("In 2050, individuals travel the same distance as today. Signficant shift to public transport.", worksheet.control_bs30); end
  def test_control_d31; assert_equal("Shift to zero emission transport", worksheet.control_d31); end
  def test_control_f31; assert_in_epsilon(4, worksheet.control_f31, 0.001); end
  def test_control_h31; assert_equal("By 2050, 20% plug in hybrid electric cars; 2.5% zero emission cars.", worksheet.control_h31); end
  def test_control_i31; assert_equal("By 2050, 54% plug-in hybrid vehicles; 11%  zero emission vehicles, all buses hybrids.", worksheet.control_i31); end
  def test_control_j31; assert_equal("By 2050, 32% plug-in hybrid vehicles; 48% zero emission vehicles; 22% buses electric.", worksheet.control_j31); end
  def test_control_k31; assert_equal("By 2050 100%  zero emission vehiclesl; all passenger trains electrified; 50% bus electrified ", worksheet.control_k31); end
  def test_control_ab31; assert_in_epsilon(4, worksheet.control_ab31, 0.001); end
  def test_control_bp31; assert_equal("By 2050, 20% plug in hybrid electric cars; 2.5% zero emission cars.", worksheet.control_bp31); end
  def test_control_bq31; assert_equal("By 2050, 35% conventional petrol or diesel engine cars; 54% plug-in hybrid vehicles; 11%  zero emission vehicles; all buses hybrids; 73% of passenger railway is electrifi", worksheet.control_bq31); end
  def test_control_br31; assert_equal("By 2050, 20% conventional combustion engine cars, with 32% in plug-in hybrid vehicles and 48% in zero emission vehicles: 22% of bus travel fully electric or fuel cell electric ", worksheet.control_br31); end
  def test_control_bs31; assert_equal("By 2050 100%  electric motor or hydrogen fuel cell; all passenger trains electrified; 50% bus  electrified ", worksheet.control_bs31); end
  def test_control_d32; assert_equal("Choice of fuel cells or batteries", worksheet.control_d32); end
  def test_control_f32; assert_in_epsilon(4, worksheet.control_f32, 0.001); end
  def test_control_h32; assert_equal("100% of zero emission cars use batteries by 2050", worksheet.control_h32); end
  def test_control_i32; assert_equal("Among zero emission cars, 80% use batteries and 20% use fuel cells by 2050", worksheet.control_i32); end
  def test_control_j32; assert_equal("Among zero emission cars, 20% use batteries and 80% use fuel cells by 2050", worksheet.control_j32); end
  def test_control_k32; assert_equal("100% of zero emission cars use fuel cells by 2050", worksheet.control_k32); end
  def test_control_ab32; assert_in_epsilon(2, worksheet.control_ab32, 0.001); end
  def test_control_bp32; assert_equal("By 2050, 100% electric", worksheet.control_bp32); end
  def test_control_bq32; assert_equal("by 2050, 80% electric,  20% hydrogen fuel cell", worksheet.control_bq32); end
  def test_control_br32; assert_equal("By 2050, 20% electric, 80% hydrogen fuel cell", worksheet.control_br32); end
  def test_control_bs32; assert_equal("By 2050, 100% hydrogen fuel cells", worksheet.control_bs32); end
  def test_control_d33; assert_equal("Domestic freight", worksheet.control_d33); end
  def test_control_f33; assert_in_epsilon(4, worksheet.control_f33, 0.001); end
  def test_control_h33; assert_equal("Road haulage makes up 73% of distance, using conventional engines. Rail all diesel", worksheet.control_h33); end
  def test_control_i33; assert_equal("Some shift from road to rail and water, and more efficient engines", worksheet.control_i33); end
  def test_control_j33; assert_equal("Greater modal shift to rail and water; more efficient HGVs; more efficient logistics", worksheet.control_j33); end
  def test_control_k33; assert_equal("Road modal share falls to half; greater hybridisation. Rail freight is all electric ", worksheet.control_k33); end
  def test_control_ab33; assert_in_epsilon(4, worksheet.control_ab33, 0.001); end
  def test_control_bp33; assert_equal("Road haulage makes up 73% of distance, using conventional engines. Rail all diesel", worksheet.control_bp33); end
  def test_control_bq33; assert_equal("Some shift from road to rail and water, and more efficient engines", worksheet.control_bq33); end
  def test_control_br33; assert_equal("Greater modal shift to rail and water; more efficient HGVs; more efficient logistics", worksheet.control_br33); end
  def test_control_bs33; assert_equal("Road modal share falls to half; greater hybridisation. Rail freight is all electric ", worksheet.control_bs33); end
  def test_control_d34; assert_equal("International aviation", worksheet.control_d34); end
  def test_control_f34; assert_in_epsilon(4, worksheet.control_f34, 0.001); end
  def test_control_h34; assert_equal("By 2050, 130% passengers increase; 50% more fuel use", worksheet.control_h34); end
  def test_control_i34; assert_equal("By 2050, 130% passengers increase; 45% more fuel use", worksheet.control_i34); end
  def test_control_j34; assert_equal("By 2050, 130% passengers increase; 31% more fuel use", worksheet.control_j34); end
  def test_control_k34; assert_equal("By 2050, 85% passengers increase; 5% more fuel use", worksheet.control_k34); end
  def test_control_ab34; assert_in_epsilon(4, worksheet.control_ab34, 0.001); end
  def test_control_bp34; assert_equal("By 2050, international aviation has 130% more passengers but uses only 50% more fuel", worksheet.control_bp34); end
  def test_control_bq34; assert_equal("By 2050, international aviation has 130% more passengers but uses only 45% more fuel", worksheet.control_bq34); end
  def test_control_br34; assert_equal("By 2050, international aviation has 130% more passengers but uses only 31% more fuel", worksheet.control_br34); end
  def test_control_bs34; assert_equal("By 2050, international aviation has 85% more passengers but uses only 5% more fuel", worksheet.control_bs34); end
  def test_control_d35; assert_equal("International shipping", worksheet.control_d35); end
  def test_control_f35; assert_in_epsilon(4, worksheet.control_f35, 0.001); end
  def test_control_h35; assert_equal("no improvements from energy efficiency; between 2007 and 2050 emissions increase by 139%", worksheet.control_h35); end
  def test_control_i35; assert_equal("1/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 78%", worksheet.control_i35); end
  def test_control_j35; assert_equal("2/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 16%", worksheet.control_j35); end
  def test_control_k35; assert_equal("maximum technical feasible reductions realised; between 2007 and 2050 emissions decrease by 46%", worksheet.control_k35); end
  def test_control_ab35; assert_in_epsilon(4, worksheet.control_ab35, 0.001); end
  def test_control_bp35; assert_equal("no improvements from energy efficiency; between 2007 and 2050 emissions increase by 139%", worksheet.control_bp35); end
  def test_control_bq35; assert_equal("1/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 78%", worksheet.control_bq35); end
  def test_control_br35; assert_equal("2/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 16%", worksheet.control_br35); end
  def test_control_bs35; assert_equal("maximum technical feasible reductions realised; between 2007 and 2050 emissions decrease by 46%", worksheet.control_bs35); end
  def test_control_d36; assert_equal("Domestic space heating and hot water", worksheet.control_d36); end
  def test_control_d37; assert_equal("Average temperature of homes", worksheet.control_d37); end
  def test_control_f37; assert_in_epsilon(4, worksheet.control_f37, 0.001); end
  def test_control_h37; assert_equal("Average room temperature increases to 20°C (a 2.5°C increase on 2007)", worksheet.control_h37); end
  def test_control_i37; assert_equal("Average room temperature increases to 18°C (a 0.5°C increase on 2007)", worksheet.control_i37); end
  def test_control_j37; assert_equal("Average room temperature decreases to 17°C (a 0.5°C decrease on 2007)", worksheet.control_j37); end
  def test_control_k37; assert_equal("Average room temperature decreases to 16°C (a 1.5°C decrease on 2007)", worksheet.control_k37); end
  def test_control_ab37; assert_in_epsilon(3, worksheet.control_ab37, 0.001); end
  def test_control_bp37; assert_equal("Average room temperature increases to 20°C (a 2.5°C increase on 2007)", worksheet.control_bp37); end
  def test_control_bq37; assert_equal("Average room temperature increases to 18°C (a 0.5°C increase on 2007)", worksheet.control_bq37); end
  def test_control_br37; assert_equal("Average room temperature decreases to 17°C (a 0.5°C decrease on 2007)", worksheet.control_br37); end
  def test_control_bs37; assert_equal("Average room temperature decreases to 16°C (a 1.5°C decrease on 2007)", worksheet.control_bs37); end
  def test_control_d38; assert_equal("Home insulation", worksheet.control_d38); end
  def test_control_f38; assert_in_epsilon(4, worksheet.control_f38, 0.001); end
  def test_control_h38; assert_equal("Over 7m homes insulated, average thermal leakiness falls by 25%", worksheet.control_h38); end
  def test_control_i38; assert_equal("Over 8m homes insulated, average thermal leakiness falls by 33%", worksheet.control_i38); end
  def test_control_j38; assert_equal("Over 18m homes insulated, average thermal leakiness falls by 42%", worksheet.control_j38); end
  def test_control_k38; assert_equal("Over 24m homes insulated, average thermal leakiness decreases by 50% ", worksheet.control_k38); end
  def test_control_ab38; assert_in_epsilon(4, worksheet.control_ab38, 0.001); end
  def test_control_bp38; assert_equal("Over 7m homes insulated, average thermal leakiness falls by 25%", worksheet.control_bp38); end
  def test_control_bq38; assert_equal("Over 8m homes insulated, average thermal leakiness falls by 33%", worksheet.control_bq38); end
  def test_control_br38; assert_equal("Over 18m homes insulated, average thermal leakiness falls by 42%", worksheet.control_br38); end
  def test_control_bs38; assert_equal("Over 24m homes insulated, average thermal leakiness decreases by 50% ", worksheet.control_bs38); end
  def test_control_d39; assert_equal("Home heating electrification", worksheet.control_d39); end
  def test_control_f39; assert_equal("D", worksheet.control_f39); end
  def test_control_h39; assert_equal("The proportion of domestic heat supplied using electricity is 0-10%, as today", worksheet.control_h39); end
  def test_control_i39; assert_equal("The proportion of new domestic heating systems using electricity is 20%", worksheet.control_i39); end
  def test_control_j39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 30-60%", worksheet.control_j39); end
  def test_control_k39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 80-100%", worksheet.control_k39); end
  def test_control_ab39; assert_in_epsilon(3, worksheet.control_ab39, 0.001); end
  def test_control_bp39; assert_equal("The proportion of domestic heat supplied using electricity is 0-10%, as today", worksheet.control_bp39); end
  def test_control_bq39; assert_equal("The proportion of new domestic heating systems using electricity is 20%", worksheet.control_bq39); end
  def test_control_br39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 30-60%", worksheet.control_br39); end
  def test_control_bs39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 80-100%", worksheet.control_bs39); end
  def test_control_d40; assert_equal("Home heating that isn't electric", worksheet.control_d40); end
  def test_control_f40; assert_equal("D", worksheet.control_f40); end
  def test_control_h40; assert_equal("The dominant non-electric heat source is gas or gas CHP (biogas if available)", worksheet.control_h40); end
  def test_control_i40; assert_equal("The dominant non-electric heat source is coal or coal CHP (biomass if available)", worksheet.control_i40); end
  def test_control_j40; assert_equal("The dominant non-electric heat source is waste heat from power stations", worksheet.control_j40); end
  def test_control_k40; assert_equal("A mixture of gas/biogas; coal/biomass; and heat from power stations", worksheet.control_k40); end
  def test_control_ab40; assert_in_epsilon(3, worksheet.control_ab40, 0.001); end
  def test_control_bp40; assert_equal("The dominant non-electric heat source is gas (biogas if available)", worksheet.control_bp40); end
  def test_control_bq40; assert_equal("The dominant non-electric heat source is coal (biomass if available)", worksheet.control_bq40); end
  def test_control_br40; assert_equal("The dominant non-electric heat source is waste heat from power stations", worksheet.control_br40); end
  def test_control_bs40; assert_equal("A mixture of gas/biogas; coal/biomass; and heat from power stations", worksheet.control_bs40); end
  def test_control_d41; assert_equal("Domestic lighting, appliances, and cooking", worksheet.control_d41); end
  def test_control_d42; assert_equal("Home lighting & appliances", worksheet.control_d42); end
  def test_control_f42; assert_in_epsilon(4, worksheet.control_f42, 0.001); end
  def test_control_h42; assert_equal("Energy demand for domestic lights and appliances increases by 20% (relative to 2007)", worksheet.control_h42); end
  def test_control_i42; assert_equal("Energy demand for domestic lights and appliances is stable", worksheet.control_i42); end
  def test_control_j42; assert_equal("Energy demand for domestic lights and appliances decreases by 40%", worksheet.control_j42); end
  def test_control_k42; assert_equal("Energy demand for domestic lights and appliances decreases by 60%", worksheet.control_k42); end
  def test_control_ab42; assert_in_epsilon(4, worksheet.control_ab42, 0.001); end
  def test_control_bp42; assert_equal("Energy demand for domestic lights and appliances increases by 20% (relative to 2007)", worksheet.control_bp42); end
  def test_control_bq42; assert_equal("Energy demand for domestic lights and appliances is stable", worksheet.control_bq42); end
  def test_control_br42; assert_equal("Energy demand for domestic lights and appliances decreases by 40%", worksheet.control_br42); end
  def test_control_bs42; assert_equal("Energy demand for domestic lights and appliances decreases by 60%", worksheet.control_bs42); end
  def test_control_d43; assert_equal("Electrification of home cooking", worksheet.control_d43); end
  def test_control_f43; assert_equal("B", worksheet.control_f43); end
  def test_control_h43; assert_equal("Energy used for domestic cooking remains at 63% electricity and 37% gas", worksheet.control_h43); end
  def test_control_i43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_i43); end
  def test_control_j43; assert_equal("Same as B", worksheet.control_j43); end
  def test_control_k43; assert_equal("Same as B", worksheet.control_k43); end
  def test_control_ab43; assert_in_epsilon(2, worksheet.control_ab43, 0.001); end
  def test_control_bp43; assert_equal("Energy used for domestic cooking remains at 63% electricity and 37% gas", worksheet.control_bp43); end
  def test_control_bq43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_bq43); end
  def test_control_br43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_br43); end
  def test_control_bs43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_bs43); end
  def test_control_d44; assert_equal("Industrial processes", worksheet.control_d44); end
  def test_control_d45; assert_equal("Growth in industry", worksheet.control_d45); end
  def test_control_f45; assert_equal("C", worksheet.control_f45); end
  def test_control_h45; assert_equal("UK industry output more than doubles by 2050", worksheet.control_h45); end
  def test_control_i45; assert_equal("UK industry grows in line with current trends", worksheet.control_i45); end
  def test_control_j45; assert_equal("UK industry output falls 30-40% by 2050", worksheet.control_j45); end
  def test_control_k45; assert_equal("Same as C", worksheet.control_k45); end
  def test_control_ab45; assert_in_epsilon(2, worksheet.control_ab45, 0.001); end
  def test_control_bp45; assert_equal("UK industry output more than doubles by 2050", worksheet.control_bp45); end
  def test_control_bq45; assert_equal("UK industry grows in line with current trends", worksheet.control_bq45); end
  def test_control_br45; assert_equal("UK industry output falls 30-40% by 2050", worksheet.control_br45); end
  def test_control_bs45; assert_equal("UK industry output falls 30-40% by 2050", worksheet.control_bs45); end
  def test_control_d46; assert_equal("Energy intensity of industry", worksheet.control_d46); end
  def test_control_f46; assert_in_epsilon(3, worksheet.control_f46, 0.001); end
  def test_control_h46; assert_equal("No electrification of processes, little improvement in energy intensity", worksheet.control_h46); end
  def test_control_i46; assert_equal("Some processes electrified; moderate improvements in process emissions and energy demand", worksheet.control_i46); end
  def test_control_j46; assert_equal("High electrification; CCS captures 48% of emissions; process emissions reduced", worksheet.control_j46); end
  def test_control_k46; assert_equal("Same as 3", worksheet.control_k46); end
  def test_control_ab46; assert_in_epsilon(3, worksheet.control_ab46, 0.001); end
  def test_control_bp46; assert_equal("No electrification of industrial processes and little improvement in industrial energy intensity", worksheet.control_bp46); end
  def test_control_bq46; assert_equal("Some industrial processes electrified and moderate improvements in process emissions and energy demand", worksheet.control_bq46); end
  def test_control_br46; assert_equal("Many industrial processes electrified, CCS captures 48% of emissions and  substantial improvements in process emissions and energy demand", worksheet.control_br46); end
  def test_control_bs46; assert_equal("Many industrial processes electrified, CCS captures 48% of emissions and  substantial improvements in process emissions and energy demand", worksheet.control_bs46); end
  def test_control_d47; assert_equal("Commercial heating and cooling", worksheet.control_d47); end
  def test_control_d48; assert_equal("Commercial demand for heating and cooling", worksheet.control_d48); end
  def test_control_f48; assert_in_epsilon(4, worksheet.control_f48, 0.001); end
  def test_control_h48; assert_equal("Space heating demand increases by 50%, hot water demand by 60%, cooling demand by 250%", worksheet.control_h48); end
  def test_control_i48; assert_equal("Space heating demand increases by 30%, hot water demand by 50%, cooling demand by 60%", worksheet.control_i48); end
  def test_control_j48; assert_equal("Space heating demand stable, hot water demand increases by 25%, cooling demand stable", worksheet.control_j48); end
  def test_control_k48; assert_equal("Space heating demand drops by 25%, hot water demand by 10%, cooling demand by 60%", worksheet.control_k48); end
  def test_control_ab48; assert_in_epsilon(4, worksheet.control_ab48, 0.001); end
  def test_control_bp48; assert_equal("Commercial space heating demand increases by 50%, hot water demand by 60%, cooling demand by 250%", worksheet.control_bp48); end
  def test_control_bq48; assert_equal("Commercial space heating demand increases by 30%, hot water demand by 50%, cooling demand by 60%", worksheet.control_bq48); end
  def test_control_br48; assert_equal("Commercial space heating demand stable, hot water demand increases by 25%, cooling demand stable", worksheet.control_br48); end
  def test_control_bs48; assert_equal("Commercial space heating demand drops by 25%, hot water demand by 10%, cooling demand by 60%", worksheet.control_bs48); end
  def test_control_d49; assert_equal("Commercial heating electrification", worksheet.control_d49); end
  def test_control_f49; assert_equal("D", worksheet.control_f49); end
  def test_control_h49; assert_equal("The proportion of non-domestic heat supplied using electricity is 0-10%, as today", worksheet.control_h49); end
  def test_control_i49; assert_equal("The proportion of non-domestic heat supplied using electricity is 20%", worksheet.control_i49); end
  def test_control_j49; assert_equal("The proportion of non-domestic heat supplied using electricity is 30-60%", worksheet.control_j49); end
  def test_control_k49; assert_equal("The proportion of non-domestic heat supplied using electricity is 80-100%", worksheet.control_k49); end
  def test_control_ab49; assert_in_epsilon(4, worksheet.control_ab49, 0.001); end
  def test_control_bp49; assert_equal("The proportion of non-domestic heat supplied using electricity is 0-10%, as today", worksheet.control_bp49); end
  def test_control_bq49; assert_equal("The proportion of non-domestic heat supplied using electricity is 20%", worksheet.control_bq49); end
  def test_control_br49; assert_equal("The proportion of non-domestic heat supplied using electricity is 30-60%", worksheet.control_br49); end
  def test_control_bs49; assert_equal("The proportion of non-domestic heat supplied using electricity is 80-100%", worksheet.control_bs49); end
  def test_control_d50; assert_equal("Commercial heating that isn't electric", worksheet.control_d50); end
  def test_control_f50; assert_equal("D", worksheet.control_f50); end
  def test_control_h50; assert_equal("The dominant non-electric heat source is gas or gas CHP (biogas if available)", worksheet.control_h50); end
  def test_control_i50; assert_equal("The dominant non-electric heat source is coal or coal CHP (biomass if available)", worksheet.control_i50); end
  def test_control_j50; assert_equal("The dominant non-electric heat source is heat from power stations", worksheet.control_j50); end
  def test_control_k50; assert_equal("A mixture of gas/biogas, coal/biomass, and heat from power stations", worksheet.control_k50); end
  def test_control_ab50; assert_in_epsilon(3, worksheet.control_ab50, 0.001); end
  def test_control_bp50; assert_equal("The dominant non-electric heat source is gas (biogas if available)", worksheet.control_bp50); end
  def test_control_bq50; assert_equal("The dominant non-electric heating fuel is coal (biomass if available)", worksheet.control_bq50); end
  def test_control_br50; assert_equal("The dominant non-electric heat source is heat from power stations", worksheet.control_br50); end
  def test_control_bs50; assert_equal("A mixture of gas/biogas, coal/biomass, and heat from power stations", worksheet.control_bs50); end
  def test_control_d51; assert_equal("Commercial lighting, appliances, and catering", worksheet.control_d51); end
  def test_control_d52; assert_equal("Commercial lighting & appliances", worksheet.control_d52); end
  def test_control_f52; assert_in_epsilon(4, worksheet.control_f52, 0.001); end
  def test_control_h52; assert_equal("Energy demand for lights & appliances increases by 33%. Energy for cooking is stable", worksheet.control_h52); end
  def test_control_i52; assert_equal("Energy demand for lights & appliances increases by 15%; decreases by 5% for cooking", worksheet.control_i52); end
  def test_control_j52; assert_equal("Energy demand for lights & appliances decreases by 5%; decreases by 20% for cooking", worksheet.control_j52); end
  def test_control_k52; assert_equal("Energy demand for lights & appliances decreases by 30%; decreases by 25% for cooking", worksheet.control_k52); end
  def test_control_ab52; assert_in_epsilon(4, worksheet.control_ab52, 0.001); end
  def test_control_bp52; assert_equal("Energy demand for commercial lights & appliances increases by 33%. Energy for cooking is stable", worksheet.control_bp52); end
  def test_control_bq52; assert_equal("Energy demand for commercial lights & appliances increases by 15%; decreases by 5% for cooking", worksheet.control_bq52); end
  def test_control_br52; assert_equal("Energy demand for commercial lights & appliances decreases by 5%; decreases by 20% for cooking", worksheet.control_br52); end
  def test_control_bs52; assert_equal("Energy demand for commercial lights & appliances decreases by 30%; decreases by 25% for cooking", worksheet.control_bs52); end
  def test_control_d53; assert_equal("Electrification of commercial cooking", worksheet.control_d53); end
  def test_control_f53; assert_equal("B", worksheet.control_f53); end
  def test_control_h53; assert_equal("60% electricity and 40% gas (no change from 2007)", worksheet.control_h53); end
  def test_control_i53; assert_equal("100% electric", worksheet.control_i53); end
  def test_control_j53; assert_equal("Same as B", worksheet.control_j53); end
  def test_control_k53; assert_equal("Same as B", worksheet.control_k53); end
  def test_control_ab53; assert_in_epsilon(2, worksheet.control_ab53, 0.001); end
  def test_control_bp53; assert_equal("Energy used for commercial cooking is 60% electricity and 40% gas (no change from 2007)", worksheet.control_bp53); end
  def test_control_bq53; assert_equal("Energy used for commercial cooking is 100% electric", worksheet.control_bq53); end
  def test_control_br53; assert_equal("Energy used for commercial cooking is 100% electric", worksheet.control_br53); end
  def test_control_bs53; assert_equal("Energy used for commercial cooking is 100% electric", worksheet.control_bs53); end
  def test_control_d55; assert_equal("Geosequestration", worksheet.control_d55); end
  def test_control_f55; assert_in_epsilon(4, worksheet.control_f55, 0.001); end
  def test_control_h55; assert_equal("No geosequestration", worksheet.control_h55); end
  def test_control_i55; assert_equal("Carbon dioxide sequestration rate of 1 million tonnes per annum by 2050", worksheet.control_i55); end
  def test_control_j55; assert_equal("Carbon dioxide sequestration rate of ~30 million tonnes per annum by 2050", worksheet.control_j55); end
  def test_control_k55; assert_equal("Carbon dioxide sequestration rate of ~110 million tonnes per annum by 2050", worksheet.control_k55); end
  def test_control_ab55; assert_in_epsilon(4, worksheet.control_ab55, 0.001); end
  def test_control_bp55; assert_equal("No geosequestration", worksheet.control_bp55); end
  def test_control_bq55; assert_equal("Carbon dioxide sequestred at a rate of 1 million tonnes per annum by 2050", worksheet.control_bq55); end
  def test_control_br55; assert_equal("Carbon dioxide  sequestred at a rate of ~30 million tonnes per annum by 2050", worksheet.control_br55); end
  def test_control_bs55; assert_equal("Carbon dioxide sequestred at a rate of ~110 million tonnes per annum by 2050", worksheet.control_bs55); end
  def test_control_d56; assert_equal("Storage, demand shifting & interconnection", worksheet.control_d56); end
  def test_control_f56; assert_in_epsilon(4, worksheet.control_f56, 0.001); end
  def test_control_h56; assert_equal("Today’s 3.5 GW storage & 4 GW interconnection with Europe for balancing", worksheet.control_h56); end
  def test_control_i56; assert_equal("4 GW storage & 10 GW interconnection with Europe for balancing", worksheet.control_i56); end
  def test_control_j56; assert_equal("7 GW storage with 2 more pumped storage, 15 GW interconnection & some demand shifting", worksheet.control_j56); end
  def test_control_k56; assert_equal("20 GW storage with large lagoons, 30 GW interconnection & substantial demand shifting", worksheet.control_k56); end
  def test_control_ab56; assert_in_epsilon(4, worksheet.control_ab56, 0.001); end
  def test_control_bp56; assert_equal("Today’s 3.5 GW of pumped storage and 4 GW interconnection with Europe available for balancing electricity supply and demand", worksheet.control_bp56); end
  def test_control_bq56; assert_equal("4 GW of pumped storage and 10 GW interconnection with Europe available for balancing electricity supply and demand", worksheet.control_bq56); end
  def test_control_br56; assert_equal("7 GW of pumped storage (includign 2 more sites), 15 GW of interconnection with Europe and some demand shifting available for balancing electricity supply and demand", worksheet.control_br56); end
  def test_control_bs56; assert_equal("20 GW of pumped storage with large lagoons, 30 GW of interconnection with Europe and substantial demand shifting available for balancing electricity supply and demand", worksheet.control_bs56); end
  def test_control_ab57; assert_in_delta(1, worksheet.control_ab57, 0.001); end

  # start of Preferences

  # start of Intermediate output
  def test_intermediate_output_b2; assert_equal("Energy source / use charts", worksheet.intermediate_output_b2); end
  def test_intermediate_output_h3; assert_equal("2050 Calculator calculations", worksheet.intermediate_output_h3); end
  def test_intermediate_output_d4; assert_equal("TWh / year", worksheet.intermediate_output_d4); end
  def test_intermediate_output_f4; assert_equal("2007 (Consistent)", worksheet.intermediate_output_f4); end
  def test_intermediate_output_h4; assert_in_epsilon(2007, worksheet.intermediate_output_h4, 0.001); end
  def test_intermediate_output_i4; assert_in_epsilon(2010, worksheet.intermediate_output_i4, 0.001); end
  def test_intermediate_output_j4; assert_in_epsilon(2015, worksheet.intermediate_output_j4, 0.001); end
  def test_intermediate_output_k4; assert_in_epsilon(2020, worksheet.intermediate_output_k4, 0.001); end
  def test_intermediate_output_l4; assert_in_epsilon(2025, worksheet.intermediate_output_l4, 0.001); end
  def test_intermediate_output_m4; assert_in_epsilon(2030, worksheet.intermediate_output_m4, 0.001); end
  def test_intermediate_output_n4; assert_in_epsilon(2035, worksheet.intermediate_output_n4, 0.001); end
  def test_intermediate_output_o4; assert_in_epsilon(2040, worksheet.intermediate_output_o4, 0.001); end
  def test_intermediate_output_p4; assert_in_epsilon(2045, worksheet.intermediate_output_p4, 0.001); end
  def test_intermediate_output_q4; assert_in_epsilon(2050, worksheet.intermediate_output_q4, 0.001); end
  def test_intermediate_output_c6; assert_equal("Use", worksheet.intermediate_output_c6); end
  def test_intermediate_output_c7; assert_equal("T.01", worksheet.intermediate_output_c7); end
  def test_intermediate_output_d7; assert_equal("Road transport", worksheet.intermediate_output_d7); end
  def test_intermediate_output_f7; assert_in_epsilon(502.50552967076953, worksheet.intermediate_output_f7, 0.001); end
  def test_intermediate_output_h7; assert_in_epsilon(490.85404977847907, worksheet.intermediate_output_h7, 0.001); end
  def test_intermediate_output_i7; assert_in_epsilon(470.2870297257891, worksheet.intermediate_output_i7, 0.001); end
  def test_intermediate_output_j7; assert_in_epsilon(445.09762990248004, worksheet.intermediate_output_j7, 0.001); end
  def test_intermediate_output_k7; assert_in_epsilon(424.4061681424823, worksheet.intermediate_output_k7, 0.001); end
  def test_intermediate_output_l7; assert_in_epsilon(392.3974289791397, worksheet.intermediate_output_l7, 0.001); end
  def test_intermediate_output_m7; assert_in_epsilon(356.1184633730033, worksheet.intermediate_output_m7, 0.001); end
  def test_intermediate_output_n7; assert_in_epsilon(350.8661658524155, worksheet.intermediate_output_n7, 0.001); end
  def test_intermediate_output_o7; assert_in_epsilon(343.17528729424066, worksheet.intermediate_output_o7, 0.001); end
  def test_intermediate_output_p7; assert_in_epsilon(339.59857626834895, worksheet.intermediate_output_p7, 0.001); end
  def test_intermediate_output_q7; assert_in_epsilon(335.8605908951955, worksheet.intermediate_output_q7, 0.001); end
  def test_intermediate_output_c8; assert_equal("T.02", worksheet.intermediate_output_c8); end
  def test_intermediate_output_d8; assert_equal("Rail transport", worksheet.intermediate_output_d8); end
  def test_intermediate_output_f8; assert_in_epsilon(16.24699816643595, worksheet.intermediate_output_f8, 0.001); end
  def test_intermediate_output_h8; assert_in_epsilon(15.852446803025652, worksheet.intermediate_output_h8, 0.001); end
  def test_intermediate_output_i8; assert_in_epsilon(17.72448740333324, worksheet.intermediate_output_i8, 0.001); end
  def test_intermediate_output_j8; assert_in_epsilon(17.183448840130435, worksheet.intermediate_output_j8, 0.001); end
  def test_intermediate_output_k8; assert_in_epsilon(16.963945338992865, worksheet.intermediate_output_k8, 0.001); end
  def test_intermediate_output_l8; assert_in_epsilon(16.668321544879074, worksheet.intermediate_output_l8, 0.001); end
  def test_intermediate_output_m8; assert_in_epsilon(16.278078430943093, worksheet.intermediate_output_m8, 0.001); end
  def test_intermediate_output_n8; assert_in_epsilon(15.860444512419436, worksheet.intermediate_output_n8, 0.001); end
  def test_intermediate_output_o8; assert_in_epsilon(15.374887113066478, worksheet.intermediate_output_o8, 0.001); end
  def test_intermediate_output_p8; assert_in_epsilon(14.894486251116774, worksheet.intermediate_output_p8, 0.001); end
  def test_intermediate_output_q8; assert_in_epsilon(14.422595081474668, worksheet.intermediate_output_q8, 0.001); end
  def test_intermediate_output_c9; assert_equal("T.03", worksheet.intermediate_output_c9); end
  def test_intermediate_output_d9; assert_equal("Domestic aviation", worksheet.intermediate_output_d9); end
  def test_intermediate_output_f9; assert_in_epsilon(8.73469387755102, worksheet.intermediate_output_f9, 0.001); end
  def test_intermediate_output_h9; assert_in_epsilon(9.019834608709552, worksheet.intermediate_output_h9, 0.001); end
  def test_intermediate_output_i9; assert_in_epsilon(9.551097329516901, worksheet.intermediate_output_i9, 0.001); end
  def test_intermediate_output_j9; assert_in_epsilon(10.163716423089292, worksheet.intermediate_output_j9, 0.001); end
  def test_intermediate_output_k9; assert_in_epsilon(11.078742052970153, worksheet.intermediate_output_k9, 0.001); end
  def test_intermediate_output_l9; assert_in_epsilon(11.927979753386868, worksheet.intermediate_output_l9, 0.001); end
  def test_intermediate_output_m9; assert_in_epsilon(12.657847240047854, worksheet.intermediate_output_m9, 0.001); end
  def test_intermediate_output_n9; assert_in_epsilon(13.331077116581312, worksheet.intermediate_output_n9, 0.001); end
  def test_intermediate_output_o9; assert_in_epsilon(13.860251279239513, worksheet.intermediate_output_o9, 0.001); end
  def test_intermediate_output_p9; assert_in_epsilon(14.344409418627478, worksheet.intermediate_output_p9, 0.001); end
  def test_intermediate_output_q9; assert_in_epsilon(14.785449092646568, worksheet.intermediate_output_q9, 0.001); end
  def test_intermediate_output_c10; assert_equal("T.04", worksheet.intermediate_output_c10); end
  def test_intermediate_output_d10; assert_equal("National navigation", worksheet.intermediate_output_d10); end
  def test_intermediate_output_f10; assert_in_epsilon(18.81937240536579, worksheet.intermediate_output_f10, 0.001); end
  def test_intermediate_output_h10; assert_in_epsilon(18.817339999999998, worksheet.intermediate_output_h10, 0.001); end
  def test_intermediate_output_i10; assert_in_epsilon(26.572895707388618, worksheet.intermediate_output_i10, 0.001); end
  def test_intermediate_output_j10; assert_in_epsilon(25.383064556311584, worksheet.intermediate_output_j10, 0.001); end
  def test_intermediate_output_k10; assert_in_epsilon(24.58984378892685, worksheet.intermediate_output_k10, 0.001); end
  def test_intermediate_output_l10; assert_in_epsilon(23.99670495670838, worksheet.intermediate_output_l10, 0.001); end
  def test_intermediate_output_m10; assert_in_epsilon(23.688791719453825, worksheet.intermediate_output_m10, 0.001); end
  def test_intermediate_output_n10; assert_in_epsilon(23.384829464713203, worksheet.intermediate_output_n10, 0.001); end
  def test_intermediate_output_o10; assert_in_epsilon(23.084767495533725, worksheet.intermediate_output_o10, 0.001); end
  def test_intermediate_output_p10; assert_in_epsilon(22.788555765479813, worksheet.intermediate_output_p10, 0.001); end
  def test_intermediate_output_q10; assert_in_epsilon(22.49614487028552, worksheet.intermediate_output_q10, 0.001); end
  def test_intermediate_output_c11; assert_equal("T.05", worksheet.intermediate_output_c11); end
  def test_intermediate_output_d11; assert_equal("International aviation", worksheet.intermediate_output_d11); end
  def test_intermediate_output_f11; assert_in_epsilon(152.99167541479133, worksheet.intermediate_output_f11, 0.001); end
  def test_intermediate_output_h11; assert_in_epsilon(152.8, worksheet.intermediate_output_h11, 0.001); end
  def test_intermediate_output_i11; assert_in_epsilon(125.0236041697801, worksheet.intermediate_output_i11, 0.001); end
  def test_intermediate_output_j11; assert_in_epsilon(141.92775040162394, worksheet.intermediate_output_j11, 0.001); end
  def test_intermediate_output_k11; assert_in_epsilon(160.72464692710642, worksheet.intermediate_output_k11, 0.001); end
  def test_intermediate_output_l11; assert_in_epsilon(170.5797951758127, worksheet.intermediate_output_l11, 0.001); end
  def test_intermediate_output_m11; assert_in_epsilon(178.72784123896676, worksheet.intermediate_output_m11, 0.001); end
  def test_intermediate_output_n11; assert_in_epsilon(190.58889075870331, worksheet.intermediate_output_n11, 0.001); end
  def test_intermediate_output_o11; assert_in_epsilon(194.9306323392334, worksheet.intermediate_output_o11, 0.001); end
  def test_intermediate_output_p11; assert_in_epsilon(196.4187558423291, worksheet.intermediate_output_p11, 0.001); end
  def test_intermediate_output_q11; assert_in_epsilon(188.58168305622323, worksheet.intermediate_output_q11, 0.001); end
  def test_intermediate_output_c12; assert_equal("T.06", worksheet.intermediate_output_c12); end
  def test_intermediate_output_d12; assert_equal("International shipping", worksheet.intermediate_output_d12); end
  def test_intermediate_output_f12; assert_in_epsilon(29.222291428230907, worksheet.intermediate_output_f12, 0.001); end
  def test_intermediate_output_h12; assert_in_epsilon(54.1581570872572, worksheet.intermediate_output_h12, 0.001); end
  def test_intermediate_output_i12; assert_in_epsilon(57.28499215184298, worksheet.intermediate_output_i12, 0.001); end
  def test_intermediate_output_j12; assert_in_epsilon(62.90268134716652, worksheet.intermediate_output_j12, 0.001); end
  def test_intermediate_output_k12; assert_in_epsilon(69.07127280693672, worksheet.intermediate_output_k12, 0.001); end
  def test_intermediate_output_l12; assert_in_epsilon(76.70040745020478, worksheet.intermediate_output_l12, 0.001); end
  def test_intermediate_output_m12; assert_in_epsilon(85.17220349292045, worksheet.intermediate_output_m12, 0.001); end
  def test_intermediate_output_n12; assert_in_epsilon(94.57973547988082, worksheet.intermediate_output_n12, 0.001); end
  def test_intermediate_output_o12; assert_in_epsilon(105.02635832578606, worksheet.intermediate_output_o12, 0.001); end
  def test_intermediate_output_p12; assert_in_epsilon(116.62684281373198, worksheet.intermediate_output_p12, 0.001); end
  def test_intermediate_output_q12; assert_in_epsilon(129.50863651300597, worksheet.intermediate_output_q12, 0.001); end
  def test_intermediate_output_d13; assert_equal("Transport", worksheet.intermediate_output_d13); end
  def test_intermediate_output_f13; assert_in_epsilon(728.5205609631445, worksheet.intermediate_output_f13, 0.001); end
  def test_intermediate_output_h13; assert_in_epsilon(741.5018282774715, worksheet.intermediate_output_h13, 0.001); end
  def test_intermediate_output_i13; assert_in_epsilon(706.444106487651, worksheet.intermediate_output_i13, 0.001); end
  def test_intermediate_output_j13; assert_in_epsilon(702.6582914708018, worksheet.intermediate_output_j13, 0.001); end
  def test_intermediate_output_k13; assert_in_epsilon(706.8346190574152, worksheet.intermediate_output_k13, 0.001); end
  def test_intermediate_output_l13; assert_in_epsilon(692.2706378601315, worksheet.intermediate_output_l13, 0.001); end
  def test_intermediate_output_m13; assert_in_epsilon(672.6432254953352, worksheet.intermediate_output_m13, 0.001); end
  def test_intermediate_output_n13; assert_in_epsilon(688.6111431847137, worksheet.intermediate_output_n13, 0.001); end
  def test_intermediate_output_o13; assert_in_epsilon(695.4521838470998, worksheet.intermediate_output_o13, 0.001); end
  def test_intermediate_output_p13; assert_in_epsilon(704.6716263596342, worksheet.intermediate_output_p13, 0.001); end
  def test_intermediate_output_q13; assert_in_epsilon(705.6550995088315, worksheet.intermediate_output_q13, 0.001); end
  def test_intermediate_output_c14; assert_equal("I.01", worksheet.intermediate_output_c14); end
  def test_intermediate_output_d14; assert_equal("Industry", worksheet.intermediate_output_d14); end
  def test_intermediate_output_f14; assert_in_epsilon(443.27401323896316, worksheet.intermediate_output_f14, 0.001); end
  def test_intermediate_output_h14; assert_in_epsilon(484.94967152772296, worksheet.intermediate_output_h14, 0.001); end
  def test_intermediate_output_i14; assert_in_epsilon(487.7606604183712, worksheet.intermediate_output_i14, 0.001); end
  def test_intermediate_output_j14; assert_in_epsilon(502.23474865528715, worksheet.intermediate_output_j14, 0.001); end
  def test_intermediate_output_k14; assert_in_epsilon(519.1330102384848, worksheet.intermediate_output_k14, 0.001); end
  def test_intermediate_output_l14; assert_in_epsilon(552.3781274633884, worksheet.intermediate_output_l14, 0.001); end
  def test_intermediate_output_m14; assert_in_epsilon(591.1091456382231, worksheet.intermediate_output_m14, 0.001); end
  def test_intermediate_output_n14; assert_in_epsilon(636.5814837378313, worksheet.intermediate_output_n14, 0.001); end
  def test_intermediate_output_o14; assert_in_epsilon(688.468540997063, worksheet.intermediate_output_o14, 0.001); end
  def test_intermediate_output_p14; assert_in_epsilon(747.149547454009, worksheet.intermediate_output_p14, 0.001); end
  def test_intermediate_output_q14; assert_in_epsilon(813.1263857252411, worksheet.intermediate_output_q14, 0.001); end
  def test_intermediate_output_c15; assert_equal("H.01", worksheet.intermediate_output_c15); end
  def test_intermediate_output_d15; assert_equal("Heating and cooling", worksheet.intermediate_output_d15); end
  def test_intermediate_output_f15; assert_in_epsilon(544.7437698912538, worksheet.intermediate_output_f15, 0.001); end
  def test_intermediate_output_h15; assert_in_epsilon(498.4248385343926, worksheet.intermediate_output_h15, 0.001); end
  def test_intermediate_output_i15; assert_in_epsilon(529.979130446357, worksheet.intermediate_output_i15, 0.001); end
  def test_intermediate_output_j15; assert_in_epsilon(557.2327171072865, worksheet.intermediate_output_j15, 0.001); end
  def test_intermediate_output_k15; assert_in_epsilon(592.1540031837183, worksheet.intermediate_output_k15, 0.001); end
  def test_intermediate_output_l15; assert_in_epsilon(626.0737077944508, worksheet.intermediate_output_l15, 0.001); end
  def test_intermediate_output_m15; assert_in_epsilon(658.8484009719804, worksheet.intermediate_output_m15, 0.001); end
  def test_intermediate_output_n15; assert_in_epsilon(679.2981555455384, worksheet.intermediate_output_n15, 0.001); end
  def test_intermediate_output_o15; assert_in_epsilon(701.2540469917918, worksheet.intermediate_output_o15, 0.001); end
  def test_intermediate_output_p15; assert_in_epsilon(725.2019420085337, worksheet.intermediate_output_p15, 0.001); end
  def test_intermediate_output_q15; assert_in_epsilon(751.5019494407732, worksheet.intermediate_output_q15, 0.001); end
  def test_intermediate_output_c16; assert_equal("L.01", worksheet.intermediate_output_c16); end
  def test_intermediate_output_d16; assert_equal("Lighting & appliances", worksheet.intermediate_output_d16); end
  def test_intermediate_output_f16; assert_in_epsilon(183.9950104721941, worksheet.intermediate_output_f16, 0.001); end
  def test_intermediate_output_h16; assert_in_epsilon(176.36080205964583, worksheet.intermediate_output_h16, 0.001); end
  def test_intermediate_output_i16; assert_in_epsilon(177.42796936210306, worksheet.intermediate_output_i16, 0.001); end
  def test_intermediate_output_j16; assert_in_epsilon(181.64752039357137, worksheet.intermediate_output_j16, 0.001); end
  def test_intermediate_output_k16; assert_in_epsilon(185.83085939782245, worksheet.intermediate_output_k16, 0.001); end
  def test_intermediate_output_l16; assert_in_epsilon(189.81046011329818, worksheet.intermediate_output_l16, 0.001); end
  def test_intermediate_output_m16; assert_in_epsilon(193.5794282147545, worksheet.intermediate_output_m16, 0.001); end
  def test_intermediate_output_n16; assert_in_epsilon(198.1640768915426, worksheet.intermediate_output_n16, 0.001); end
  def test_intermediate_output_o16; assert_in_epsilon(202.8565997740406, worksheet.intermediate_output_o16, 0.001); end
  def test_intermediate_output_p16; assert_in_epsilon(207.7413021010397, worksheet.intermediate_output_p16, 0.001); end
  def test_intermediate_output_q16; assert_in_epsilon(212.82687278526893, worksheet.intermediate_output_q16, 0.001); end
  def test_intermediate_output_c17; assert_equal("F.01", worksheet.intermediate_output_c17); end
  def test_intermediate_output_d17; assert_equal("Food consumption [UNUSED]", worksheet.intermediate_output_d17); end
  def test_intermediate_output_f17; assert_in_epsilon(59.09063200000001, worksheet.intermediate_output_f17, 0.001); end
  def test_intermediate_output_h17; assert_in_delta(0, (worksheet.intermediate_output_h17||0), 0.001); end
  def test_intermediate_output_i17; assert_in_delta(0, (worksheet.intermediate_output_i17||0), 0.001); end
  def test_intermediate_output_j17; assert_in_delta(0, (worksheet.intermediate_output_j17||0), 0.001); end
  def test_intermediate_output_k17; assert_in_delta(0, (worksheet.intermediate_output_k17||0), 0.001); end
  def test_intermediate_output_l17; assert_in_delta(0, (worksheet.intermediate_output_l17||0), 0.001); end
  def test_intermediate_output_m17; assert_in_delta(0, (worksheet.intermediate_output_m17||0), 0.001); end
  def test_intermediate_output_n17; assert_in_delta(0, (worksheet.intermediate_output_n17||0), 0.001); end
  def test_intermediate_output_o17; assert_in_delta(0, (worksheet.intermediate_output_o17||0), 0.001); end
  def test_intermediate_output_p17; assert_in_delta(0, (worksheet.intermediate_output_p17||0), 0.001); end
  def test_intermediate_output_q17; assert_in_delta(0, (worksheet.intermediate_output_q17||0), 0.001); end
  def test_intermediate_output_d18; assert_equal("Total Use", worksheet.intermediate_output_d18); end
  def test_intermediate_output_f18; assert_in_epsilon(1959.6239865655555, worksheet.intermediate_output_f18, 0.001); end
  def test_intermediate_output_h18; assert_in_epsilon(1901.2371403992329, worksheet.intermediate_output_h18, 0.001); end
  def test_intermediate_output_i18; assert_in_epsilon(1901.6118667144822, worksheet.intermediate_output_i18, 0.001); end
  def test_intermediate_output_j18; assert_in_epsilon(1943.773277626947, worksheet.intermediate_output_j18, 0.001); end
  def test_intermediate_output_k18; assert_in_epsilon(2003.9524918774407, worksheet.intermediate_output_k18, 0.001); end
  def test_intermediate_output_l18; assert_in_epsilon(2060.532933231269, worksheet.intermediate_output_l18, 0.001); end
  def test_intermediate_output_m18; assert_in_epsilon(2116.1802003202934, worksheet.intermediate_output_m18, 0.001); end
  def test_intermediate_output_n18; assert_in_epsilon(2202.6548593596262, worksheet.intermediate_output_n18, 0.001); end
  def test_intermediate_output_o18; assert_in_epsilon(2288.0313716099954, worksheet.intermediate_output_o18, 0.001); end
  def test_intermediate_output_p18; assert_in_epsilon(2384.7644179232166, worksheet.intermediate_output_p18, 0.001); end
  def test_intermediate_output_q18; assert_in_epsilon(2483.1103074601147, worksheet.intermediate_output_q18, 0.001); end
  def test_intermediate_output_d20; assert_equal("Dummy for charting uses", worksheet.intermediate_output_d20); end
  def test_intermediate_output_h20; assert_in_epsilon(677.6552077902825, worksheet.intermediate_output_h20, 0.001); end
  def test_intermediate_output_i20; assert_in_epsilon(678.1095519101066, worksheet.intermediate_output_i20, 0.001); end
  def test_intermediate_output_j20; assert_in_epsilon(644.3756325635375, worksheet.intermediate_output_j20, 0.001); end
  def test_intermediate_output_k20; assert_in_epsilon(602.1350706150085, worksheet.intermediate_output_k20, 0.001); end
  def test_intermediate_output_l20; assert_in_epsilon(551.7635324795356, worksheet.intermediate_output_l20, 0.001); end
  def test_intermediate_output_m20; assert_in_epsilon(555.0105844645409, worksheet.intermediate_output_m20, 0.001); end
  def test_intermediate_output_n20; assert_in_epsilon(587.3465026400995, worksheet.intermediate_output_n20, 0.001); end
  def test_intermediate_output_o20; assert_in_epsilon(637.3126016677243, worksheet.intermediate_output_o20, 0.001); end
  def test_intermediate_output_p20; assert_in_epsilon(687.0598602772516, worksheet.intermediate_output_p20, 0.001); end
  def test_intermediate_output_q20; assert_in_epsilon(723.9757293653779, worksheet.intermediate_output_q20, 0.001); end
  def test_intermediate_output_c22; assert_equal("Source", worksheet.intermediate_output_c22); end
  def test_intermediate_output_c23; assert_equal("N.01", worksheet.intermediate_output_c23); end
  def test_intermediate_output_d23; assert_equal("Nuclear fission", worksheet.intermediate_output_d23); end
  def test_intermediate_output_f23; assert_in_epsilon(163.24447683045062, worksheet.intermediate_output_f23, 0.001); end
  def test_intermediate_output_h23; assert_in_epsilon(163.91620313701554, worksheet.intermediate_output_h23, 0.001); end
  def test_intermediate_output_i23; assert_in_epsilon(160.70999999999998, worksheet.intermediate_output_i23, 0.001); end
  def test_intermediate_output_j23; assert_in_epsilon(134.9964, worksheet.intermediate_output_j23, 0.001); end
  def test_intermediate_output_k23; assert_in_epsilon(77.14080000000003, worksheet.intermediate_output_k23, 0.001); end
  def test_intermediate_output_l23; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_l23, 0.001); end
  def test_intermediate_output_m23; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_m23, 0.001); end
  def test_intermediate_output_n23; assert_in_delta(0, (worksheet.intermediate_output_n23||0), 0.001); end
  def test_intermediate_output_o23; assert_in_delta(0, (worksheet.intermediate_output_o23||0), 0.001); end
  def test_intermediate_output_p23; assert_in_delta(0, (worksheet.intermediate_output_p23||0), 0.001); end
  def test_intermediate_output_q23; assert_in_delta(0, (worksheet.intermediate_output_q23||0), 0.001); end
  def test_intermediate_output_c24; assert_equal("R.01", worksheet.intermediate_output_c24); end
  def test_intermediate_output_d24; assert_equal("Solar", worksheet.intermediate_output_d24); end
  def test_intermediate_output_f24; assert_in_delta(0.5360591477000001, worksheet.intermediate_output_f24, 0.001); end
  def test_intermediate_output_h24; assert_in_delta(0.01700604, worksheet.intermediate_output_h24, 0.001); end
  def test_intermediate_output_i24; assert_in_delta(0.028059966000000006, worksheet.intermediate_output_i24, 0.001); end
  def test_intermediate_output_j24; assert_in_delta(0.013604831999999999, worksheet.intermediate_output_j24, 0.001); end
  def test_intermediate_output_k24; assert_in_delta(0, (worksheet.intermediate_output_k24||0), 0.001); end
  def test_intermediate_output_l24; assert_in_delta(0, (worksheet.intermediate_output_l24||0), 0.001); end
  def test_intermediate_output_m24; assert_in_delta(0, (worksheet.intermediate_output_m24||0), 0.001); end
  def test_intermediate_output_n24; assert_in_delta(0, (worksheet.intermediate_output_n24||0), 0.001); end
  def test_intermediate_output_o24; assert_in_delta(0, (worksheet.intermediate_output_o24||0), 0.001); end
  def test_intermediate_output_p24; assert_in_delta(0, (worksheet.intermediate_output_p24||0), 0.001); end
  def test_intermediate_output_q24; assert_in_delta(0, (worksheet.intermediate_output_q24||0), 0.001); end
  def test_intermediate_output_c25; assert_equal("R.02", worksheet.intermediate_output_c25); end
  def test_intermediate_output_d25; assert_equal("Wind", worksheet.intermediate_output_d25); end
  def test_intermediate_output_f25; assert_in_epsilon(6.978861884782586, worksheet.intermediate_output_f25, 0.001); end
  def test_intermediate_output_h25; assert_in_epsilon(5.962752417600001, worksheet.intermediate_output_h25, 0.001); end
  def test_intermediate_output_i25; assert_in_epsilon(14.440670099999998, worksheet.intermediate_output_i25, 0.001); end
  def test_intermediate_output_j25; assert_in_epsilon(29.3428701, worksheet.intermediate_output_j25, 0.001); end
  def test_intermediate_output_k25; assert_in_epsilon(45.35726511600001, worksheet.intermediate_output_k25, 0.001); end
  def test_intermediate_output_l25; assert_in_epsilon(57.69377964, worksheet.intermediate_output_l25, 0.001); end
  def test_intermediate_output_m25; assert_in_epsilon(48.16934531999999, worksheet.intermediate_output_m25, 0.001); end
  def test_intermediate_output_n25; assert_in_epsilon(32.302885319999994, worksheet.intermediate_output_n25, 0.001); end
  def test_intermediate_output_o25; assert_in_epsilon(15.209185319999996, worksheet.intermediate_output_o25, 0.001); end
  def test_intermediate_output_p25; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_p25, 0.001); end
  def test_intermediate_output_q25; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_q25, 0.001); end
  def test_intermediate_output_c26; assert_equal("R.03", worksheet.intermediate_output_c26); end
  def test_intermediate_output_d26; assert_equal("Tidal", worksheet.intermediate_output_d26); end
  def test_intermediate_output_f26; assert_in_delta(0, (worksheet.intermediate_output_f26||0), 0.001); end
  def test_intermediate_output_h26; assert_in_delta(0, (worksheet.intermediate_output_h26||0), 0.001); end
  def test_intermediate_output_i26; assert_in_delta(0.0050034246575342495, worksheet.intermediate_output_i26, 0.001); end
  def test_intermediate_output_j26; assert_in_delta(0.020013698630136998, worksheet.intermediate_output_j26, 0.001); end
  def test_intermediate_output_k26; assert_in_delta(0.050034246575342486, worksheet.intermediate_output_k26, 0.001); end
  def test_intermediate_output_l26; assert_in_delta(0.12508561643835608, worksheet.intermediate_output_l26, 0.001); end
  def test_intermediate_output_m26; assert_in_delta(0.12508561643835608, worksheet.intermediate_output_m26, 0.001); end
  def test_intermediate_output_n26; assert_in_delta(0, (worksheet.intermediate_output_n26||0), 0.001); end
  def test_intermediate_output_o26; assert_in_delta(0, (worksheet.intermediate_output_o26||0), 0.001); end
  def test_intermediate_output_p26; assert_in_delta(0, (worksheet.intermediate_output_p26||0), 0.001); end
  def test_intermediate_output_q26; assert_in_delta(0, (worksheet.intermediate_output_q26||0), 0.001); end
  def test_intermediate_output_c27; assert_equal("R.04", worksheet.intermediate_output_c27); end
  def test_intermediate_output_d27; assert_equal("Wave", worksheet.intermediate_output_d27); end
  def test_intermediate_output_f27; assert_in_delta(0, (worksheet.intermediate_output_f27||0), 0.001); end
  def test_intermediate_output_h27; assert_in_delta(0, (worksheet.intermediate_output_h27||0), 0.001); end
  def test_intermediate_output_i27; assert_in_delta(0, (worksheet.intermediate_output_i27||0), 0.001); end
  def test_intermediate_output_j27; assert_in_delta(0.0030020547945205484, worksheet.intermediate_output_j27, 0.001); end
  def test_intermediate_output_k27; assert_in_delta(0.1584417808219177, worksheet.intermediate_output_k27, 0.001); end
  def test_intermediate_output_l27; assert_in_delta(0.39610445205479383, worksheet.intermediate_output_l27, 0.001); end
  def test_intermediate_output_m27; assert_in_delta(0.39610445205479383, worksheet.intermediate_output_m27, 0.001); end
  def test_intermediate_output_n27; assert_in_delta(0, (worksheet.intermediate_output_n27||0), 0.001); end
  def test_intermediate_output_o27; assert_in_delta(0, (worksheet.intermediate_output_o27||0), 0.001); end
  def test_intermediate_output_p27; assert_in_delta(0, (worksheet.intermediate_output_p27||0), 0.001); end
  def test_intermediate_output_q27; assert_in_delta(0, (worksheet.intermediate_output_q27||0), 0.001); end
  def test_intermediate_output_c28; assert_equal("R.05", worksheet.intermediate_output_c28); end
  def test_intermediate_output_d28; assert_equal("Geothermal", worksheet.intermediate_output_d28); end
  def test_intermediate_output_f28; assert_in_delta(0, (worksheet.intermediate_output_f28||0), 0.001); end
  def test_intermediate_output_h28; assert_in_delta(0, (worksheet.intermediate_output_h28||0), 0.001); end
  def test_intermediate_output_i28; assert_in_delta(0, (worksheet.intermediate_output_i28||0), 0.001); end
  def test_intermediate_output_j28; assert_in_delta(0, (worksheet.intermediate_output_j28||0), 0.001); end
  def test_intermediate_output_k28; assert_in_delta(0, (worksheet.intermediate_output_k28||0), 0.001); end
  def test_intermediate_output_l28; assert_in_delta(0, (worksheet.intermediate_output_l28||0), 0.001); end
  def test_intermediate_output_m28; assert_in_delta(0, (worksheet.intermediate_output_m28||0), 0.001); end
  def test_intermediate_output_n28; assert_in_delta(0, (worksheet.intermediate_output_n28||0), 0.001); end
  def test_intermediate_output_o28; assert_in_delta(0, (worksheet.intermediate_output_o28||0), 0.001); end
  def test_intermediate_output_p28; assert_in_delta(0, (worksheet.intermediate_output_p28||0), 0.001); end
  def test_intermediate_output_q28; assert_in_delta(0, (worksheet.intermediate_output_q28||0), 0.001); end
  def test_intermediate_output_c29; assert_equal("R.06", worksheet.intermediate_output_c29); end
  def test_intermediate_output_d29; assert_equal("Hydro", worksheet.intermediate_output_d29); end
  def test_intermediate_output_f29; assert_in_epsilon(5.088394340000001, worksheet.intermediate_output_f29, 0.001); end
  def test_intermediate_output_h29; assert_in_epsilon(4.114400994, worksheet.intermediate_output_h29, 0.001); end
  def test_intermediate_output_i29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_i29, 0.001); end
  def test_intermediate_output_j29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_j29, 0.001); end
  def test_intermediate_output_k29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_k29, 0.001); end
  def test_intermediate_output_l29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_l29, 0.001); end
  def test_intermediate_output_m29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_m29, 0.001); end
  def test_intermediate_output_n29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_n29, 0.001); end
  def test_intermediate_output_o29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_o29, 0.001); end
  def test_intermediate_output_p29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_p29, 0.001); end
  def test_intermediate_output_q29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_q29, 0.001); end
  def test_intermediate_output_c30; assert_equal("Y.02", worksheet.intermediate_output_c30); end
  def test_intermediate_output_d30; assert_equal("Electricity oversupply (imports)", worksheet.intermediate_output_d30); end
  def test_intermediate_output_f30; assert_in_epsilon(5.21452425, worksheet.intermediate_output_f30, 0.001); end
  def test_intermediate_output_h30; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_h30, 0.001); end
  def test_intermediate_output_i30; assert_in_delta(-1.1368683772161603e-13, worksheet.intermediate_output_i30, 0.001); end
  def test_intermediate_output_j30; assert_in_delta(0, (worksheet.intermediate_output_j30||0), 0.001); end
  def test_intermediate_output_k30; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_k30, 0.001); end
  def test_intermediate_output_l30; assert_in_delta(0, (worksheet.intermediate_output_l30||0), 0.001); end
  def test_intermediate_output_m30; assert_in_delta(0, (worksheet.intermediate_output_m30||0), 0.001); end
  def test_intermediate_output_n30; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_n30, 0.001); end
  def test_intermediate_output_o30; assert_in_delta(0, (worksheet.intermediate_output_o30||0), 0.001); end
  def test_intermediate_output_p30; assert_in_delta(0, (worksheet.intermediate_output_p30||0), 0.001); end
  def test_intermediate_output_q30; assert_in_delta(1.1368683772161603e-13, worksheet.intermediate_output_q30, 0.001); end
  def test_intermediate_output_d31; assert_equal("Primary electricity, solar, marine, and net imports", worksheet.intermediate_output_d31); end
  def test_intermediate_output_f31; assert_in_epsilon(181.06231645293323, worksheet.intermediate_output_f31, 0.001); end
  def test_intermediate_output_h31; assert_in_epsilon(174.0103625886156, worksheet.intermediate_output_h31, 0.001); end
  def test_intermediate_output_i31; assert_in_epsilon(180.5134614906574, worksheet.intermediate_output_i31, 0.001); end
  def test_intermediate_output_j31; assert_in_epsilon(169.7056186854246, worksheet.intermediate_output_j31, 0.001); end
  def test_intermediate_output_k31; assert_in_epsilon(128.03626914339733, worksheet.intermediate_output_k31, 0.001); end
  def test_intermediate_output_l31; assert_in_epsilon(89.25829770849317, worksheet.intermediate_output_l31, 0.001); end
  def test_intermediate_output_m31; assert_in_epsilon(79.73386338849316, worksheet.intermediate_output_m31, 0.001); end
  def test_intermediate_output_n31; assert_in_epsilon(37.632613320000054, worksheet.intermediate_output_n31, 0.001); end
  def test_intermediate_output_o31; assert_in_epsilon(20.53891332, worksheet.intermediate_output_o31, 0.001); end
  def test_intermediate_output_p31; assert_in_epsilon(5.4175633199999975, worksheet.intermediate_output_p31, 0.001); end
  def test_intermediate_output_q31; assert_in_epsilon(5.417563320000111, worksheet.intermediate_output_q31, 0.001); end
  def test_intermediate_output_c32; assert_equal("R.07", worksheet.intermediate_output_c32); end
  def test_intermediate_output_d32; assert_equal("Environmental heat", worksheet.intermediate_output_d32); end
  def test_intermediate_output_f32; assert_in_delta(0, (worksheet.intermediate_output_f32||0), 0.001); end
  def test_intermediate_output_h32; assert_in_delta(0, (worksheet.intermediate_output_h32||0), 0.001); end
  def test_intermediate_output_i32; assert_in_delta(0, (worksheet.intermediate_output_i32||0), 0.001); end
  def test_intermediate_output_j32; assert_in_delta(0, (worksheet.intermediate_output_j32||0), 0.001); end
  def test_intermediate_output_k32; assert_in_delta(0, (worksheet.intermediate_output_k32||0), 0.001); end
  def test_intermediate_output_l32; assert_in_delta(0, (worksheet.intermediate_output_l32||0), 0.001); end
  def test_intermediate_output_m32; assert_in_delta(0, (worksheet.intermediate_output_m32||0), 0.001); end
  def test_intermediate_output_n32; assert_in_delta(0, (worksheet.intermediate_output_n32||0), 0.001); end
  def test_intermediate_output_o32; assert_in_delta(0, (worksheet.intermediate_output_o32||0), 0.001); end
  def test_intermediate_output_p32; assert_in_delta(0, (worksheet.intermediate_output_p32||0), 0.001); end
  def test_intermediate_output_q32; assert_in_delta(0, (worksheet.intermediate_output_q32||0), 0.001); end
  def test_intermediate_output_c33; assert_equal("W.01", worksheet.intermediate_output_c33); end
  def test_intermediate_output_d33; assert_equal("Waste", worksheet.intermediate_output_d33); end
  def test_intermediate_output_f33; assert_in_epsilon(14.240524277899516, worksheet.intermediate_output_f33, 0.001); end
  def test_intermediate_output_h33; assert_in_epsilon(45.917935479270405, worksheet.intermediate_output_h33, 0.001); end
  def test_intermediate_output_i33; assert_in_epsilon(45.11750073265528, worksheet.intermediate_output_i33, 0.001); end
  def test_intermediate_output_j33; assert_in_epsilon(50.840563165328334, worksheet.intermediate_output_j33, 0.001); end
  def test_intermediate_output_k33; assert_in_epsilon(67.3989743162897, worksheet.intermediate_output_k33, 0.001); end
  def test_intermediate_output_l33; assert_in_epsilon(71.83930476932433, worksheet.intermediate_output_l33, 0.001); end
  def test_intermediate_output_m33; assert_in_epsilon(76.80337543889678, worksheet.intermediate_output_m33, 0.001); end
  def test_intermediate_output_n33; assert_in_epsilon(80.23415591862761, worksheet.intermediate_output_n33, 0.001); end
  def test_intermediate_output_o33; assert_in_epsilon(83.9090127808891, worksheet.intermediate_output_o33, 0.001); end
  def test_intermediate_output_p33; assert_in_epsilon(87.83582735854061, worksheet.intermediate_output_p33, 0.001); end
  def test_intermediate_output_q33; assert_in_epsilon(92.01899457064886, worksheet.intermediate_output_q33, 0.001); end
  def test_intermediate_output_c34; assert_equal("A.01", worksheet.intermediate_output_c34); end
  def test_intermediate_output_d34; assert_equal("Agriculture", worksheet.intermediate_output_d34); end
  def test_intermediate_output_f34; assert_in_epsilon(58.005772267812624, worksheet.intermediate_output_f34, 0.001); end
  def test_intermediate_output_h34; assert_in_epsilon(4.881522222222221, worksheet.intermediate_output_h34, 0.001); end
  def test_intermediate_output_i34; assert_in_epsilon(3.0279139524977032, worksheet.intermediate_output_i34, 0.001); end
  def test_intermediate_output_j34; assert_in_epsilon(4.692845238477029, worksheet.intermediate_output_j34, 0.001); end
  def test_intermediate_output_k34; assert_in_epsilon(6.402563081931533, worksheet.intermediate_output_k34, 0.001); end
  def test_intermediate_output_l34; assert_in_epsilon(8.158190817458818, worksheet.intermediate_output_l34, 0.001); end
  def test_intermediate_output_m34; assert_in_epsilon(9.96089275380401, worksheet.intermediate_output_m34, 0.001); end
  def test_intermediate_output_n34; assert_in_epsilon(11.811876531949348, worksheet.intermediate_output_n34, 0.001); end
  def test_intermediate_output_o34; assert_in_epsilon(13.712395650409537, worksheet.intermediate_output_o34, 0.001); end
  def test_intermediate_output_p34; assert_in_epsilon(15.663752170256295, worksheet.intermediate_output_p34, 0.001); end
  def test_intermediate_output_q34; assert_in_epsilon(17.667299613344547, worksheet.intermediate_output_q34, 0.001); end
  def test_intermediate_output_c35; assert_equal("Y.01", worksheet.intermediate_output_c35); end
  def test_intermediate_output_d35; assert_equal("Biomass oversupply (imports)", worksheet.intermediate_output_d35); end
  def test_intermediate_output_f35; assert_in_epsilon(26.262503111111116, worksheet.intermediate_output_f35, 0.001); end
  def test_intermediate_output_h35; assert_in_epsilon(4.00072, worksheet.intermediate_output_h35, 0.001); end
  def test_intermediate_output_i35; assert_in_epsilon(3.7216, worksheet.intermediate_output_i35, 0.001); end
  def test_intermediate_output_j35; assert_in_epsilon(3.2564, worksheet.intermediate_output_j35, 0.001); end
  def test_intermediate_output_k35; assert_in_epsilon(2.7912, worksheet.intermediate_output_k35, 0.001); end
  def test_intermediate_output_l35; assert_in_epsilon(2.326, worksheet.intermediate_output_l35, 0.001); end
  def test_intermediate_output_m35; assert_in_epsilon(1.8608, worksheet.intermediate_output_m35, 0.001); end
  def test_intermediate_output_n35; assert_in_epsilon(1.3956, worksheet.intermediate_output_n35, 0.001); end
  def test_intermediate_output_o35; assert_in_delta(0.9304000000000001, worksheet.intermediate_output_o35, 0.001); end
  def test_intermediate_output_p35; assert_in_delta(0.4652, worksheet.intermediate_output_p35, 0.001); end
  def test_intermediate_output_q35; assert_in_delta(0, (worksheet.intermediate_output_q35||0), 0.001); end
  def test_intermediate_output_d36; assert_equal("Agriculture, waste, and biomatter imports", worksheet.intermediate_output_d36); end
  def test_intermediate_output_f36; assert_in_epsilon(98.50879965682326, worksheet.intermediate_output_f36, 0.001); end
  def test_intermediate_output_h36; assert_in_epsilon(54.80017770149263, worksheet.intermediate_output_h36, 0.001); end
  def test_intermediate_output_i36; assert_in_epsilon(51.86701468515299, worksheet.intermediate_output_i36, 0.001); end
  def test_intermediate_output_j36; assert_in_epsilon(58.78980840380536, worksheet.intermediate_output_j36, 0.001); end
  def test_intermediate_output_k36; assert_in_epsilon(76.59273739822123, worksheet.intermediate_output_k36, 0.001); end
  def test_intermediate_output_l36; assert_in_epsilon(82.32349558678314, worksheet.intermediate_output_l36, 0.001); end
  def test_intermediate_output_m36; assert_in_epsilon(88.6250681927008, worksheet.intermediate_output_m36, 0.001); end
  def test_intermediate_output_n36; assert_in_epsilon(93.44163245057696, worksheet.intermediate_output_n36, 0.001); end
  def test_intermediate_output_o36; assert_in_epsilon(98.55180843129864, worksheet.intermediate_output_o36, 0.001); end
  def test_intermediate_output_p36; assert_in_epsilon(103.96477952879691, worksheet.intermediate_output_p36, 0.001); end
  def test_intermediate_output_q36; assert_in_epsilon(109.6862941839934, worksheet.intermediate_output_q36, 0.001); end
  def test_intermediate_output_c37; assert_equal("Y.04", worksheet.intermediate_output_c37); end
  def test_intermediate_output_d37; assert_equal("Coal oversupply (imports)", worksheet.intermediate_output_d37); end
  def test_intermediate_output_f37; assert_in_epsilon(329.602732356217, worksheet.intermediate_output_f37, 0.001); end
  def test_intermediate_output_h37; assert_in_epsilon(346.59158236078616, worksheet.intermediate_output_h37, 0.001); end
  def test_intermediate_output_i37; assert_in_epsilon(349.7879707863396, worksheet.intermediate_output_i37, 0.001); end
  def test_intermediate_output_j37; assert_in_epsilon(296.36321857088853, worksheet.intermediate_output_j37, 0.001); end
  def test_intermediate_output_k37; assert_in_epsilon(211.2161187019778, worksheet.intermediate_output_k37, 0.001); end
  def test_intermediate_output_l37; assert_in_epsilon(77.82581145406314, worksheet.intermediate_output_l37, 0.001); end
  def test_intermediate_output_m37; assert_in_epsilon(35.20638476620721, worksheet.intermediate_output_m37, 0.001); end
  def test_intermediate_output_n37; assert_in_epsilon(19.108428227236942, worksheet.intermediate_output_n37, 0.001); end
  def test_intermediate_output_o37; assert_in_epsilon(22.865993134684118, worksheet.intermediate_output_o37, 0.001); end
  def test_intermediate_output_p37; assert_in_epsilon(26.79703902923795, worksheet.intermediate_output_p37, 0.001); end
  def test_intermediate_output_q37; assert_in_epsilon(31.3768044831494, worksheet.intermediate_output_q37, 0.001); end
  def test_intermediate_output_c38; assert_equal("Q.01", worksheet.intermediate_output_c38); end
  def test_intermediate_output_d38; assert_equal("Coal reserves", worksheet.intermediate_output_d38); end
  def test_intermediate_output_f38; assert_in_epsilon(145.79944495555736, worksheet.intermediate_output_f38, 0.001); end
  def test_intermediate_output_h38; assert_in_epsilon(124.3957013942179, worksheet.intermediate_output_h38, 0.001); end
  def test_intermediate_output_i38; assert_in_epsilon(127.93, worksheet.intermediate_output_i38, 0.001); end
  def test_intermediate_output_j38; assert_in_epsilon(127.93, worksheet.intermediate_output_j38, 0.001); end
  def test_intermediate_output_k38; assert_in_epsilon(127.93, worksheet.intermediate_output_k38, 0.001); end
  def test_intermediate_output_l38; assert_in_epsilon(127.93, worksheet.intermediate_output_l38, 0.001); end
  def test_intermediate_output_m38; assert_in_epsilon(63.965, worksheet.intermediate_output_m38, 0.001); end
  def test_intermediate_output_n38; assert_in_epsilon(63.965, worksheet.intermediate_output_n38, 0.001); end
  def test_intermediate_output_o38; assert_in_epsilon(63.965, worksheet.intermediate_output_o38, 0.001); end
  def test_intermediate_output_p38; assert_in_epsilon(63.965, worksheet.intermediate_output_p38, 0.001); end
  def test_intermediate_output_q38; assert_in_epsilon(63.965, worksheet.intermediate_output_q38, 0.001); end
  def test_intermediate_output_d39; assert_equal("Coal", worksheet.intermediate_output_d39); end
  def test_intermediate_output_f39; assert_in_epsilon(475.4021773117744, worksheet.intermediate_output_f39, 0.001); end
  def test_intermediate_output_h39; assert_in_epsilon(470.98728375500406, worksheet.intermediate_output_h39, 0.001); end
  def test_intermediate_output_i39; assert_in_epsilon(477.7179707863396, worksheet.intermediate_output_i39, 0.001); end
  def test_intermediate_output_j39; assert_in_epsilon(424.29321857088854, worksheet.intermediate_output_j39, 0.001); end
  def test_intermediate_output_k39; assert_in_epsilon(339.1461187019778, worksheet.intermediate_output_k39, 0.001); end
  def test_intermediate_output_l39; assert_in_epsilon(205.75581145406315, worksheet.intermediate_output_l39, 0.001); end
  def test_intermediate_output_m39; assert_in_epsilon(99.17138476620721, worksheet.intermediate_output_m39, 0.001); end
  def test_intermediate_output_n39; assert_in_epsilon(83.07342822723695, worksheet.intermediate_output_n39, 0.001); end
  def test_intermediate_output_o39; assert_in_epsilon(86.83099313468412, worksheet.intermediate_output_o39, 0.001); end
  def test_intermediate_output_p39; assert_in_epsilon(90.76203902923795, worksheet.intermediate_output_p39, 0.001); end
  def test_intermediate_output_q39; assert_in_epsilon(95.3418044831494, worksheet.intermediate_output_q39, 0.001); end
  def test_intermediate_output_c40; assert_equal("Q.02", worksheet.intermediate_output_c40); end
  def test_intermediate_output_d40; assert_equal("Oil reserves", worksheet.intermediate_output_d40); end
  def test_intermediate_output_f40; assert_in_epsilon(887.460075730032, worksheet.intermediate_output_f40, 0.001); end
  def test_intermediate_output_h40; assert_in_epsilon(975.8912083497981, worksheet.intermediate_output_h40, 0.001); end
  def test_intermediate_output_i40; assert_in_epsilon(802.547952837212, worksheet.intermediate_output_i40, 0.001); end
  def test_intermediate_output_j40; assert_in_epsilon(646.8288435333163, worksheet.intermediate_output_j40, 0.001); end
  def test_intermediate_output_k40; assert_in_epsilon(501.7889500727494, worksheet.intermediate_output_k40, 0.001); end
  def test_intermediate_output_l40; assert_in_epsilon(388.27472421443264, worksheet.intermediate_output_l40, 0.001); end
  def test_intermediate_output_m40; assert_in_epsilon(300.43958011019754, worksheet.intermediate_output_m40, 0.001); end
  def test_intermediate_output_n40; assert_in_epsilon(232.47441995977493, worksheet.intermediate_output_n40, 0.001); end
  def test_intermediate_output_o40; assert_in_epsilon(179.88427462124332, worksheet.intermediate_output_o40, 0.001); end
  def test_intermediate_output_p40; assert_in_epsilon(139.19102265793308, worksheet.intermediate_output_p40, 0.001); end
  def test_intermediate_output_q40; assert_in_epsilon(107.70336000383915, worksheet.intermediate_output_q40, 0.001); end
  def test_intermediate_output_c41; assert_equal("Y.05", worksheet.intermediate_output_c41); end
  def test_intermediate_output_d41; assert_equal("Oil and petroleum products oversupply (imports)", worksheet.intermediate_output_d41); end
  def test_intermediate_output_f41; assert_in_epsilon(79.74397690520158, worksheet.intermediate_output_f41, 0.001); end
  def test_intermediate_output_h41; assert_in_epsilon(-74.88229852333984, worksheet.intermediate_output_h41, 0.001); end
  def test_intermediate_output_i41; assert_in_epsilon(65.64315527619635, worksheet.intermediate_output_i41, 0.001); end
  def test_intermediate_output_j41; assert_in_epsilon(208.35818004652242, worksheet.intermediate_output_j41, 0.001); end
  def test_intermediate_output_k41; assert_in_epsilon(357.8050142717038, worksheet.intermediate_output_k41, 0.001); end
  def test_intermediate_output_l41; assert_in_epsilon(457.52363182891844, worksheet.intermediate_output_l41, 0.001); end
  def test_intermediate_output_m41; assert_in_epsilon(528.050159297357, worksheet.intermediate_output_m41, 0.001); end
  def test_intermediate_output_n41; assert_in_epsilon(614.947899051517, worksheet.intermediate_output_n41, 0.001); end
  def test_intermediate_output_o41; assert_in_epsilon(678.4226005986385, worksheet.intermediate_output_o41, 0.001); end
  def test_intermediate_output_p41; assert_in_epsilon(733.6856489742773, worksheet.intermediate_output_p41, 0.001); end
  def test_intermediate_output_q41; assert_in_epsilon(772.3784493415866, worksheet.intermediate_output_q41, 0.001); end
  def test_intermediate_output_c42; assert_equal("Y.03", worksheet.intermediate_output_c42); end
  def test_intermediate_output_d42; assert_equal("Petroleum products oversupply", worksheet.intermediate_output_d42); end
  def test_intermediate_output_f42; assert_in_epsilon(-60.58105389631571, worksheet.intermediate_output_f42, 0.001); end
  def test_intermediate_output_h42; assert_in_delta(0, (worksheet.intermediate_output_h42||0), 0.001); end
  def test_intermediate_output_i42; assert_in_delta(0, (worksheet.intermediate_output_i42||0), 0.001); end
  def test_intermediate_output_j42; assert_in_delta(0, (worksheet.intermediate_output_j42||0), 0.001); end
  def test_intermediate_output_k42; assert_in_delta(0, (worksheet.intermediate_output_k42||0), 0.001); end
  def test_intermediate_output_l42; assert_in_delta(0, (worksheet.intermediate_output_l42||0), 0.001); end
  def test_intermediate_output_m42; assert_in_delta(0, (worksheet.intermediate_output_m42||0), 0.001); end
  def test_intermediate_output_n42; assert_in_delta(0, (worksheet.intermediate_output_n42||0), 0.001); end
  def test_intermediate_output_o42; assert_in_delta(0, (worksheet.intermediate_output_o42||0), 0.001); end
  def test_intermediate_output_p42; assert_in_delta(0, (worksheet.intermediate_output_p42||0), 0.001); end
  def test_intermediate_output_q42; assert_in_delta(0, (worksheet.intermediate_output_q42||0), 0.001); end
  def test_intermediate_output_d43; assert_equal("Oil and petroleum products", worksheet.intermediate_output_d43); end
  def test_intermediate_output_f43; assert_in_epsilon(906.622998738918, worksheet.intermediate_output_f43, 0.001); end
  def test_intermediate_output_h43; assert_in_epsilon(901.0089098264583, worksheet.intermediate_output_h43, 0.001); end
  def test_intermediate_output_i43; assert_in_epsilon(868.1911081134084, worksheet.intermediate_output_i43, 0.001); end
  def test_intermediate_output_j43; assert_in_epsilon(855.1870235798388, worksheet.intermediate_output_j43, 0.001); end
  def test_intermediate_output_k43; assert_in_epsilon(859.5939643444532, worksheet.intermediate_output_k43, 0.001); end
  def test_intermediate_output_l43; assert_in_epsilon(845.7983560433511, worksheet.intermediate_output_l43, 0.001); end
  def test_intermediate_output_m43; assert_in_epsilon(828.4897394075546, worksheet.intermediate_output_m43, 0.001); end
  def test_intermediate_output_n43; assert_in_epsilon(847.4223190112918, worksheet.intermediate_output_n43, 0.001); end
  def test_intermediate_output_o43; assert_in_epsilon(858.3068752198818, worksheet.intermediate_output_o43, 0.001); end
  def test_intermediate_output_p43; assert_in_epsilon(872.8766716322104, worksheet.intermediate_output_p43, 0.001); end
  def test_intermediate_output_q43; assert_in_epsilon(880.0818093454258, worksheet.intermediate_output_q43, 0.001); end
  def test_intermediate_output_c44; assert_equal("Y.06", worksheet.intermediate_output_c44); end
  def test_intermediate_output_d44; assert_equal("Gas oversupply (imports)", worksheet.intermediate_output_d44); end
  def test_intermediate_output_f44; assert_in_epsilon(214.86865308275657, worksheet.intermediate_output_f44, 0.001); end
  def test_intermediate_output_h44; assert_in_epsilon(247.08561431794476, worksheet.intermediate_output_h44, 0.001); end
  def test_intermediate_output_i44; assert_in_epsilon(355.65896766491574, worksheet.intermediate_output_i44, 0.001); end
  def test_intermediate_output_j44; assert_in_epsilon(584.2856578271776, worksheet.intermediate_output_j44, 0.001); end
  def test_intermediate_output_k44; assert_in_epsilon(819.5978269658395, worksheet.intermediate_output_k44, 0.001); end
  def test_intermediate_output_l44; assert_in_epsilon(1092.7090523281695, worksheet.intermediate_output_l44, 0.001); end
  def test_intermediate_output_m44; assert_in_epsilon(1345.7822461215947, worksheet.intermediate_output_m44, 0.001); end
  def test_intermediate_output_n44; assert_in_epsilon(1550.9349336341452, worksheet.intermediate_output_n44, 0.001); end
  def test_intermediate_output_o44; assert_in_epsilon(1723.772025018814, worksheet.intermediate_output_o44, 0.001); end
  def test_intermediate_output_p44; assert_in_epsilon(1892.5295522591648, worksheet.intermediate_output_p44, 0.001); end
  def test_intermediate_output_q44; assert_in_epsilon(2034.3260236076515, worksheet.intermediate_output_q44, 0.001); end
  def test_intermediate_output_c45; assert_equal("Q.03", worksheet.intermediate_output_c45); end
  def test_intermediate_output_d45; assert_equal("Gas reserves", worksheet.intermediate_output_d45); end
  def test_intermediate_output_f45; assert_in_epsilon(834.0611502141918, worksheet.intermediate_output_f45, 0.001); end
  def test_intermediate_output_h45; assert_in_epsilon(731, worksheet.intermediate_output_h45, 0.001); end
  def test_intermediate_output_i45; assert_in_epsilon(645.7728958841146, worksheet.intermediate_output_i45, 0.001); end
  def test_intermediate_output_j45; assert_in_epsilon(495.88758312334966, worksheet.intermediate_output_j45, 0.001); end
  def test_intermediate_output_k45; assert_in_epsilon(383.12064593855996, worksheet.intermediate_output_k45, 0.001); end
  def test_intermediate_output_l45; assert_in_epsilon(296.45145258994444, worksheet.intermediate_output_l45, 0.001); end
  def test_intermediate_output_m45; assert_in_epsilon(229.38848290828395, worksheet.intermediate_output_m45, 0.001); end
  def test_intermediate_output_n45; assert_in_epsilon(177.49643535647462, worksheet.intermediate_output_n45, 0.001); end
  def test_intermediate_output_o45; assert_in_epsilon(137.343358153041, worksheet.intermediate_output_o45, 0.001); end
  def test_intermediate_output_p45; assert_in_epsilon(106.27367243105833, worksheet.intermediate_output_p45, 0.001); end
  def test_intermediate_output_q45; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_q45, 0.001); end
  def test_intermediate_output_d46; assert_equal("Natural gas", worksheet.intermediate_output_d46); end
  def test_intermediate_output_f46; assert_in_epsilon(1048.9298032969484, worksheet.intermediate_output_f46, 0.001); end
  def test_intermediate_output_h46; assert_in_epsilon(978.0856143179448, worksheet.intermediate_output_h46, 0.001); end
  def test_intermediate_output_i46; assert_in_epsilon(1001.4318635490304, worksheet.intermediate_output_i46, 0.001); end
  def test_intermediate_output_j46; assert_in_epsilon(1080.1732409505273, worksheet.intermediate_output_j46, 0.001); end
  def test_intermediate_output_k46; assert_in_epsilon(1202.7184729043995, worksheet.intermediate_output_k46, 0.001); end
  def test_intermediate_output_l46; assert_in_epsilon(1389.160504918114, worksheet.intermediate_output_l46, 0.001); end
  def test_intermediate_output_m46; assert_in_epsilon(1575.1707290298787, worksheet.intermediate_output_m46, 0.001); end
  def test_intermediate_output_n46; assert_in_epsilon(1728.4313689906198, worksheet.intermediate_output_n46, 0.001); end
  def test_intermediate_output_o46; assert_in_epsilon(1861.115383171855, worksheet.intermediate_output_o46, 0.001); end
  def test_intermediate_output_p46; assert_in_epsilon(1998.803224690223, worksheet.intermediate_output_p46, 0.001); end
  def test_intermediate_output_q46; assert_in_epsilon(2116.5585654929237, worksheet.intermediate_output_q46, 0.001); end
  def test_intermediate_output_d47; assert_equal("Total Primary Supply", worksheet.intermediate_output_d47); end
  def test_intermediate_output_f47; assert_in_epsilon(2710.526095457397, worksheet.intermediate_output_f47, 0.001); end
  def test_intermediate_output_h47; assert_in_epsilon(2578.8923481895154, worksheet.intermediate_output_h47, 0.001); end
  def test_intermediate_output_i47; assert_in_epsilon(2579.7214186245888, worksheet.intermediate_output_i47, 0.001); end
  def test_intermediate_output_j47; assert_in_epsilon(2588.1489101904845, worksheet.intermediate_output_j47, 0.001); end
  def test_intermediate_output_k47; assert_in_epsilon(2606.0875624924493, worksheet.intermediate_output_k47, 0.001); end
  def test_intermediate_output_l47; assert_in_epsilon(2612.2964657108046, worksheet.intermediate_output_l47, 0.001); end
  def test_intermediate_output_m47; assert_in_epsilon(2671.1907847848342, worksheet.intermediate_output_m47, 0.001); end
  def test_intermediate_output_n47; assert_in_epsilon(2790.0013619997258, worksheet.intermediate_output_n47, 0.001); end
  def test_intermediate_output_o47; assert_in_epsilon(2925.3439732777197, worksheet.intermediate_output_o47, 0.001); end
  def test_intermediate_output_p47; assert_in_epsilon(3071.824278200468, worksheet.intermediate_output_p47, 0.001); end
  def test_intermediate_output_q47; assert_in_epsilon(3207.0860368254926, worksheet.intermediate_output_q47, 0.001); end
  def test_intermediate_output_d49; assert_equal("Dummy for charting supply", worksheet.intermediate_output_d49); end
  def test_intermediate_output_h49; assert_in_delta(0, (worksheet.intermediate_output_h49||0), 0.001); end
  def test_intermediate_output_i49; assert_in_delta(0, (worksheet.intermediate_output_i49||0), 0.001); end
  def test_intermediate_output_j49; assert_in_delta(0, (worksheet.intermediate_output_j49||0), 0.001); end
  def test_intermediate_output_k49; assert_in_delta(0, (worksheet.intermediate_output_k49||0), 0.001); end
  def test_intermediate_output_l49; assert_in_delta(0, (worksheet.intermediate_output_l49||0), 0.001); end
  def test_intermediate_output_m49; assert_in_delta(0, (worksheet.intermediate_output_m49||0), 0.001); end
  def test_intermediate_output_n49; assert_in_delta(0, (worksheet.intermediate_output_n49||0), 0.001); end
  def test_intermediate_output_o49; assert_in_delta(0, (worksheet.intermediate_output_o49||0), 0.001); end
  def test_intermediate_output_p49; assert_in_delta(0, (worksheet.intermediate_output_p49||0), 0.001); end
  def test_intermediate_output_q49; assert_in_delta(0, (worksheet.intermediate_output_q49||0), 0.001); end
  def test_intermediate_output_c51; assert_equal("Conversion losses, distribution, and own use", worksheet.intermediate_output_c51); end
  def test_intermediate_output_c52; assert_equal("X.01", worksheet.intermediate_output_c52); end
  def test_intermediate_output_d52; assert_equal("Conversion losses", worksheet.intermediate_output_d52); end
  def test_intermediate_output_f52; assert_in_epsilon(561.4193024884444, worksheet.intermediate_output_f52, 0.001); end
  def test_intermediate_output_h52; assert_in_epsilon(556.1887122447632, worksheet.intermediate_output_h52, 0.001); end
  def test_intermediate_output_i52; assert_in_epsilon(560.8881073341678, worksheet.intermediate_output_i52, 0.001); end
  def test_intermediate_output_j52; assert_in_epsilon(529.3973301231902, worksheet.intermediate_output_j52, 0.001); end
  def test_intermediate_output_k52; assert_in_epsilon(489.5311776027561, worksheet.intermediate_output_k52, 0.001); end
  def test_intermediate_output_l52; assert_in_epsilon(440.2046781681558, worksheet.intermediate_output_l52, 0.001); end
  def test_intermediate_output_m52; assert_in_epsilon(441.91042038654575, worksheet.intermediate_output_m52, 0.001); end
  def test_intermediate_output_n52; assert_in_epsilon(472.104863879208, worksheet.intermediate_output_n52, 0.001); end
  def test_intermediate_output_o52; assert_in_epsilon(518.8164147321908, worksheet.intermediate_output_o52, 0.001); end
  def test_intermediate_output_p52; assert_in_epsilon(564.8907139368554, worksheet.intermediate_output_p52, 0.001); end
  def test_intermediate_output_q52; assert_in_epsilon(598.2337162439092, worksheet.intermediate_output_q52, 0.001); end
  def test_intermediate_output_c53; assert_equal("X.02", worksheet.intermediate_output_c53); end
  def test_intermediate_output_d53; assert_equal("Distribution losses and own use", worksheet.intermediate_output_d53); end
  def test_intermediate_output_f53; assert_in_epsilon(186.94703532055274, worksheet.intermediate_output_f53, 0.001); end
  def test_intermediate_output_h53; assert_in_epsilon(121.466495545519, worksheet.intermediate_output_h53, 0.001); end
  def test_intermediate_output_i53; assert_in_epsilon(117.2214445759387, worksheet.intermediate_output_i53, 0.001); end
  def test_intermediate_output_j53; assert_in_epsilon(114.97830244034738, worksheet.intermediate_output_j53, 0.001); end
  def test_intermediate_output_k53; assert_in_epsilon(112.60389301225256, worksheet.intermediate_output_k53, 0.001); end
  def test_intermediate_output_l53; assert_in_epsilon(111.55885431137969, worksheet.intermediate_output_l53, 0.001); end
  def test_intermediate_output_m53; assert_in_epsilon(113.10016407799569, worksheet.intermediate_output_m53, 0.001); end
  def test_intermediate_output_n53; assert_in_epsilon(115.24163876089172, worksheet.intermediate_output_n53, 0.001); end
  def test_intermediate_output_o53; assert_in_epsilon(118.49618693553369, worksheet.intermediate_output_o53, 0.001); end
  def test_intermediate_output_p53; assert_in_epsilon(122.1691463403966, worksheet.intermediate_output_p53, 0.001); end
  def test_intermediate_output_q53; assert_in_epsilon(125.74201312146774, worksheet.intermediate_output_q53, 0.001); end
  def test_intermediate_output_d54; assert_equal("Supply net of losses", worksheet.intermediate_output_d54); end
  def test_intermediate_output_f54; assert_in_epsilon(1962.1597576483998, worksheet.intermediate_output_f54, 0.001); end
  def test_intermediate_output_h54; assert_in_epsilon(1901.237140399233, worksheet.intermediate_output_h54, 0.001); end
  def test_intermediate_output_i54; assert_in_epsilon(1901.6118667144824, worksheet.intermediate_output_i54, 0.001); end
  def test_intermediate_output_j54; assert_in_epsilon(1943.7732776269468, worksheet.intermediate_output_j54, 0.001); end
  def test_intermediate_output_k54; assert_in_epsilon(2003.9524918774405, worksheet.intermediate_output_k54, 0.001); end
  def test_intermediate_output_l54; assert_in_epsilon(2060.532933231269, worksheet.intermediate_output_l54, 0.001); end
  def test_intermediate_output_m54; assert_in_epsilon(2116.180200320293, worksheet.intermediate_output_m54, 0.001); end
  def test_intermediate_output_n54; assert_in_epsilon(2202.6548593596262, worksheet.intermediate_output_n54, 0.001); end
  def test_intermediate_output_o54; assert_in_epsilon(2288.0313716099954, worksheet.intermediate_output_o54, 0.001); end
  def test_intermediate_output_p54; assert_in_epsilon(2384.764417923216, worksheet.intermediate_output_p54, 0.001); end
  def test_intermediate_output_q54; assert_in_epsilon(2483.1103074601156, worksheet.intermediate_output_q54, 0.001); end
  def test_intermediate_output_c56; assert_equal("Supply / demand not accounted for", worksheet.intermediate_output_c56); end
  def test_intermediate_output_c58; assert_equal("C.01", worksheet.intermediate_output_c58); end
  def test_intermediate_output_d58; assert_equal("Coal and fossil waste", worksheet.intermediate_output_d58); end
  def test_intermediate_output_f58; assert_in_delta(0.4668835385115244, worksheet.intermediate_output_f58, 0.001); end
  def test_intermediate_output_h58; assert_in_delta(0, (worksheet.intermediate_output_h58||0), 0.001); end
  def test_intermediate_output_i58; assert_in_delta(0, (worksheet.intermediate_output_i58||0), 0.001); end
  def test_intermediate_output_j58; assert_in_delta(0, (worksheet.intermediate_output_j58||0), 0.001); end
  def test_intermediate_output_k58; assert_in_delta(0, (worksheet.intermediate_output_k58||0), 0.001); end
  def test_intermediate_output_l58; assert_in_delta(0, (worksheet.intermediate_output_l58||0), 0.001); end
  def test_intermediate_output_m58; assert_in_delta(0, (worksheet.intermediate_output_m58||0), 0.001); end
  def test_intermediate_output_n58; assert_in_delta(0, (worksheet.intermediate_output_n58||0), 0.001); end
  def test_intermediate_output_o58; assert_in_delta(0, (worksheet.intermediate_output_o58||0), 0.001); end
  def test_intermediate_output_p58; assert_in_delta(0, (worksheet.intermediate_output_p58||0), 0.001); end
  def test_intermediate_output_q58; assert_in_delta(0, (worksheet.intermediate_output_q58||0), 0.001); end
  def test_intermediate_output_c59; assert_equal("C.02", worksheet.intermediate_output_c59); end
  def test_intermediate_output_d59; assert_equal("Oil and petroleum products", worksheet.intermediate_output_d59); end
  def test_intermediate_output_f59; assert_in_epsilon(35.99412042466514, worksheet.intermediate_output_f59, 0.001); end
  def test_intermediate_output_h59; assert_in_delta(0, (worksheet.intermediate_output_h59||0), 0.001); end
  def test_intermediate_output_i59; assert_in_delta(0, (worksheet.intermediate_output_i59||0), 0.001); end
  def test_intermediate_output_j59; assert_in_delta(0, (worksheet.intermediate_output_j59||0), 0.001); end
  def test_intermediate_output_k59; assert_in_delta(0, (worksheet.intermediate_output_k59||0), 0.001); end
  def test_intermediate_output_l59; assert_in_delta(0, (worksheet.intermediate_output_l59||0), 0.001); end
  def test_intermediate_output_m59; assert_in_delta(0, (worksheet.intermediate_output_m59||0), 0.001); end
  def test_intermediate_output_n59; assert_in_delta(0, (worksheet.intermediate_output_n59||0), 0.001); end
  def test_intermediate_output_o59; assert_in_delta(0, (worksheet.intermediate_output_o59||0), 0.001); end
  def test_intermediate_output_p59; assert_in_delta(0, (worksheet.intermediate_output_p59||0), 0.001); end
  def test_intermediate_output_q59; assert_in_delta(0, (worksheet.intermediate_output_q59||0), 0.001); end
  def test_intermediate_output_c60; assert_equal("C.03", worksheet.intermediate_output_c60); end
  def test_intermediate_output_d60; assert_equal("Natural gas", worksheet.intermediate_output_d60); end
  def test_intermediate_output_f60; assert_in_epsilon(-10.228142999999932, worksheet.intermediate_output_f60, 0.001); end
  def test_intermediate_output_h60; assert_in_delta(0, (worksheet.intermediate_output_h60||0), 0.001); end
  def test_intermediate_output_i60; assert_in_delta(0, (worksheet.intermediate_output_i60||0), 0.001); end
  def test_intermediate_output_j60; assert_in_delta(0, (worksheet.intermediate_output_j60||0), 0.001); end
  def test_intermediate_output_k60; assert_in_delta(0, (worksheet.intermediate_output_k60||0), 0.001); end
  def test_intermediate_output_l60; assert_in_delta(0, (worksheet.intermediate_output_l60||0), 0.001); end
  def test_intermediate_output_m60; assert_in_delta(0, (worksheet.intermediate_output_m60||0), 0.001); end
  def test_intermediate_output_n60; assert_in_delta(0, (worksheet.intermediate_output_n60||0), 0.001); end
  def test_intermediate_output_o60; assert_in_delta(0, (worksheet.intermediate_output_o60||0), 0.001); end
  def test_intermediate_output_p60; assert_in_delta(0, (worksheet.intermediate_output_p60||0), 0.001); end
  def test_intermediate_output_q60; assert_in_delta(0, (worksheet.intermediate_output_q60||0), 0.001); end
  def test_intermediate_output_c61; assert_equal("V.03", worksheet.intermediate_output_c61); end
  def test_intermediate_output_d61; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_d61); end
  def test_intermediate_output_f61; assert_in_delta(0, (worksheet.intermediate_output_f61||0), 0.001); end
  def test_intermediate_output_h61; assert_in_delta(0, (worksheet.intermediate_output_h61||0), 0.001); end
  def test_intermediate_output_i61; assert_in_delta(0, (worksheet.intermediate_output_i61||0), 0.001); end
  def test_intermediate_output_j61; assert_in_delta(0, (worksheet.intermediate_output_j61||0), 0.001); end
  def test_intermediate_output_k61; assert_in_delta(0, (worksheet.intermediate_output_k61||0), 0.001); end
  def test_intermediate_output_l61; assert_in_delta(0, (worksheet.intermediate_output_l61||0), 0.001); end
  def test_intermediate_output_m61; assert_in_delta(0, (worksheet.intermediate_output_m61||0), 0.001); end
  def test_intermediate_output_n61; assert_in_delta(0, (worksheet.intermediate_output_n61||0), 0.001); end
  def test_intermediate_output_o61; assert_in_delta(0, (worksheet.intermediate_output_o61||0), 0.001); end
  def test_intermediate_output_p61; assert_in_delta(0, (worksheet.intermediate_output_p61||0), 0.001); end
  def test_intermediate_output_q61; assert_in_delta(0, (worksheet.intermediate_output_q61||0), 0.001); end
  def test_intermediate_output_c62; assert_equal("V.04", worksheet.intermediate_output_c62); end
  def test_intermediate_output_d62; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_d62); end
  def test_intermediate_output_f62; assert_in_epsilon(-40.98525046434433, worksheet.intermediate_output_f62, 0.001); end
  def test_intermediate_output_h62; assert_in_delta(0, (worksheet.intermediate_output_h62||0), 0.001); end
  def test_intermediate_output_i62; assert_in_delta(0, (worksheet.intermediate_output_i62||0), 0.001); end
  def test_intermediate_output_j62; assert_in_delta(0, (worksheet.intermediate_output_j62||0), 0.001); end
  def test_intermediate_output_k62; assert_in_delta(0, (worksheet.intermediate_output_k62||0), 0.001); end
  def test_intermediate_output_l62; assert_in_delta(0, (worksheet.intermediate_output_l62||0), 0.001); end
  def test_intermediate_output_m62; assert_in_delta(0, (worksheet.intermediate_output_m62||0), 0.001); end
  def test_intermediate_output_n62; assert_in_delta(0, (worksheet.intermediate_output_n62||0), 0.001); end
  def test_intermediate_output_o62; assert_in_delta(0, (worksheet.intermediate_output_o62||0), 0.001); end
  def test_intermediate_output_p62; assert_in_delta(0, (worksheet.intermediate_output_p62||0), 0.001); end
  def test_intermediate_output_q62; assert_in_delta(0, (worksheet.intermediate_output_q62||0), 0.001); end
  def test_intermediate_output_c63; assert_equal("V.05", worksheet.intermediate_output_c63); end
  def test_intermediate_output_d63; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_d63); end
  def test_intermediate_output_f63; assert_in_epsilon(15.047768550745332, worksheet.intermediate_output_f63, 0.001); end
  def test_intermediate_output_h63; assert_in_delta(0, (worksheet.intermediate_output_h63||0), 0.001); end
  def test_intermediate_output_i63; assert_in_delta(0, (worksheet.intermediate_output_i63||0), 0.001); end
  def test_intermediate_output_j63; assert_in_delta(0, (worksheet.intermediate_output_j63||0), 0.001); end
  def test_intermediate_output_k63; assert_in_delta(0, (worksheet.intermediate_output_k63||0), 0.001); end
  def test_intermediate_output_l63; assert_in_delta(0, (worksheet.intermediate_output_l63||0), 0.001); end
  def test_intermediate_output_m63; assert_in_delta(0, (worksheet.intermediate_output_m63||0), 0.001); end
  def test_intermediate_output_n63; assert_in_delta(0, (worksheet.intermediate_output_n63||0), 0.001); end
  def test_intermediate_output_o63; assert_in_delta(0, (worksheet.intermediate_output_o63||0), 0.001); end
  def test_intermediate_output_p63; assert_in_delta(0, (worksheet.intermediate_output_p63||0), 0.001); end
  def test_intermediate_output_q63; assert_in_delta(0, (worksheet.intermediate_output_q63||0), 0.001); end
  def test_intermediate_output_c64; assert_equal("V.06", worksheet.intermediate_output_c64); end
  def test_intermediate_output_d64; assert_equal("Blast furnace gas", worksheet.intermediate_output_d64); end
  def test_intermediate_output_f64; assert_in_delta(-0.11045622230000071, worksheet.intermediate_output_f64, 0.001); end
  def test_intermediate_output_h64; assert_in_delta(0, (worksheet.intermediate_output_h64||0), 0.001); end
  def test_intermediate_output_i64; assert_in_delta(0, (worksheet.intermediate_output_i64||0), 0.001); end
  def test_intermediate_output_j64; assert_in_delta(0, (worksheet.intermediate_output_j64||0), 0.001); end
  def test_intermediate_output_k64; assert_in_delta(0, (worksheet.intermediate_output_k64||0), 0.001); end
  def test_intermediate_output_l64; assert_in_delta(0, (worksheet.intermediate_output_l64||0), 0.001); end
  def test_intermediate_output_m64; assert_in_delta(0, (worksheet.intermediate_output_m64||0), 0.001); end
  def test_intermediate_output_n64; assert_in_delta(0, (worksheet.intermediate_output_n64||0), 0.001); end
  def test_intermediate_output_o64; assert_in_delta(0, (worksheet.intermediate_output_o64||0), 0.001); end
  def test_intermediate_output_p64; assert_in_delta(0, (worksheet.intermediate_output_p64||0), 0.001); end
  def test_intermediate_output_q64; assert_in_delta(0, (worksheet.intermediate_output_q64||0), 0.001); end
  def test_intermediate_output_c65; assert_equal("V.08", worksheet.intermediate_output_c65); end
  def test_intermediate_output_d65; assert_equal("Edible biomass", worksheet.intermediate_output_d65); end
  def test_intermediate_output_f65; assert_in_delta(0, (worksheet.intermediate_output_f65||0), 0.001); end
  def test_intermediate_output_h65; assert_in_delta(0, (worksheet.intermediate_output_h65||0), 0.001); end
  def test_intermediate_output_i65; assert_in_delta(0, (worksheet.intermediate_output_i65||0), 0.001); end
  def test_intermediate_output_j65; assert_in_delta(0, (worksheet.intermediate_output_j65||0), 0.001); end
  def test_intermediate_output_k65; assert_in_delta(0, (worksheet.intermediate_output_k65||0), 0.001); end
  def test_intermediate_output_l65; assert_in_delta(0, (worksheet.intermediate_output_l65||0), 0.001); end
  def test_intermediate_output_m65; assert_in_delta(0, (worksheet.intermediate_output_m65||0), 0.001); end
  def test_intermediate_output_n65; assert_in_delta(0, (worksheet.intermediate_output_n65||0), 0.001); end
  def test_intermediate_output_o65; assert_in_delta(0, (worksheet.intermediate_output_o65||0), 0.001); end
  def test_intermediate_output_p65; assert_in_delta(0, (worksheet.intermediate_output_p65||0), 0.001); end
  def test_intermediate_output_q65; assert_in_delta(0, (worksheet.intermediate_output_q65||0), 0.001); end
  def test_intermediate_output_c66; assert_equal("V.07", worksheet.intermediate_output_c66); end
  def test_intermediate_output_d66; assert_equal("Heat transport", worksheet.intermediate_output_d66); end
  def test_intermediate_output_f66; assert_in_delta(0.0029616599999983118, worksheet.intermediate_output_f66, 0.001); end
  def test_intermediate_output_h66; assert_in_delta(0, (worksheet.intermediate_output_h66||0), 0.001); end
  def test_intermediate_output_i66; assert_in_delta(0, (worksheet.intermediate_output_i66||0), 0.001); end
  def test_intermediate_output_j66; assert_in_delta(0, (worksheet.intermediate_output_j66||0), 0.001); end
  def test_intermediate_output_k66; assert_in_delta(0, (worksheet.intermediate_output_k66||0), 0.001); end
  def test_intermediate_output_l66; assert_in_delta(0, (worksheet.intermediate_output_l66||0), 0.001); end
  def test_intermediate_output_m66; assert_in_delta(0, (worksheet.intermediate_output_m66||0), 0.001); end
  def test_intermediate_output_n66; assert_in_delta(0, (worksheet.intermediate_output_n66||0), 0.001); end
  def test_intermediate_output_o66; assert_in_delta(0, (worksheet.intermediate_output_o66||0), 0.001); end
  def test_intermediate_output_p66; assert_in_delta(0, (worksheet.intermediate_output_p66||0), 0.001); end
  def test_intermediate_output_q66; assert_in_delta(0, (worksheet.intermediate_output_q66||0), 0.001); end
  def test_intermediate_output_c67; assert_equal("V.09", worksheet.intermediate_output_c67); end
  def test_intermediate_output_d67; assert_equal("Dry biomass and waste", worksheet.intermediate_output_d67); end
  def test_intermediate_output_f67; assert_in_delta(-0.3409880345172063, worksheet.intermediate_output_f67, 0.001); end
  def test_intermediate_output_h67; assert_in_delta(0, (worksheet.intermediate_output_h67||0), 0.001); end
  def test_intermediate_output_i67; assert_in_delta(0, (worksheet.intermediate_output_i67||0), 0.001); end
  def test_intermediate_output_j67; assert_in_delta(0, (worksheet.intermediate_output_j67||0), 0.001); end
  def test_intermediate_output_k67; assert_in_delta(0, (worksheet.intermediate_output_k67||0), 0.001); end
  def test_intermediate_output_l67; assert_in_delta(0, (worksheet.intermediate_output_l67||0), 0.001); end
  def test_intermediate_output_m67; assert_in_delta(0, (worksheet.intermediate_output_m67||0), 0.001); end
  def test_intermediate_output_n67; assert_in_delta(0, (worksheet.intermediate_output_n67||0), 0.001); end
  def test_intermediate_output_o67; assert_in_delta(0, (worksheet.intermediate_output_o67||0), 0.001); end
  def test_intermediate_output_p67; assert_in_delta(0, (worksheet.intermediate_output_p67||0), 0.001); end
  def test_intermediate_output_q67; assert_in_delta(0, (worksheet.intermediate_output_q67||0), 0.001); end
  def test_intermediate_output_c68; assert_equal("V.10", worksheet.intermediate_output_c68); end
  def test_intermediate_output_d68; assert_equal("Wet biomass and waste", worksheet.intermediate_output_d68); end
  def test_intermediate_output_f68; assert_in_delta(0, (worksheet.intermediate_output_f68||0), 0.001); end
  def test_intermediate_output_h68; assert_in_delta(0, (worksheet.intermediate_output_h68||0), 0.001); end
  def test_intermediate_output_i68; assert_in_delta(0, (worksheet.intermediate_output_i68||0), 0.001); end
  def test_intermediate_output_j68; assert_in_delta(0, (worksheet.intermediate_output_j68||0), 0.001); end
  def test_intermediate_output_k68; assert_in_delta(0, (worksheet.intermediate_output_k68||0), 0.001); end
  def test_intermediate_output_l68; assert_in_delta(0, (worksheet.intermediate_output_l68||0), 0.001); end
  def test_intermediate_output_m68; assert_in_delta(0, (worksheet.intermediate_output_m68||0), 0.001); end
  def test_intermediate_output_n68; assert_in_delta(0, (worksheet.intermediate_output_n68||0), 0.001); end
  def test_intermediate_output_o68; assert_in_delta(0, (worksheet.intermediate_output_o68||0), 0.001); end
  def test_intermediate_output_p68; assert_in_delta(0, (worksheet.intermediate_output_p68||0), 0.001); end
  def test_intermediate_output_q68; assert_in_delta(0, (worksheet.intermediate_output_q68||0), 0.001); end
  def test_intermediate_output_c69; assert_equal("V.11", worksheet.intermediate_output_c69); end
  def test_intermediate_output_d69; assert_equal("Domestic solar thermal", worksheet.intermediate_output_d69); end
  def test_intermediate_output_f69; assert_in_delta(0, (worksheet.intermediate_output_f69||0), 0.001); end
  def test_intermediate_output_h69; assert_in_delta(0, (worksheet.intermediate_output_h69||0), 0.001); end
  def test_intermediate_output_i69; assert_in_delta(0, (worksheet.intermediate_output_i69||0), 0.001); end
  def test_intermediate_output_j69; assert_in_delta(0, (worksheet.intermediate_output_j69||0), 0.001); end
  def test_intermediate_output_k69; assert_in_delta(0, (worksheet.intermediate_output_k69||0), 0.001); end
  def test_intermediate_output_l69; assert_in_delta(0, (worksheet.intermediate_output_l69||0), 0.001); end
  def test_intermediate_output_m69; assert_in_delta(0, (worksheet.intermediate_output_m69||0), 0.001); end
  def test_intermediate_output_n69; assert_in_delta(0, (worksheet.intermediate_output_n69||0), 0.001); end
  def test_intermediate_output_o69; assert_in_delta(0, (worksheet.intermediate_output_o69||0), 0.001); end
  def test_intermediate_output_p69; assert_in_delta(0, (worksheet.intermediate_output_p69||0), 0.001); end
  def test_intermediate_output_q69; assert_in_delta(0, (worksheet.intermediate_output_q69||0), 0.001); end
  def test_intermediate_output_c70; assert_equal("V.12", worksheet.intermediate_output_c70); end
  def test_intermediate_output_d70; assert_equal("H2", worksheet.intermediate_output_d70); end
  def test_intermediate_output_f70; assert_in_delta(0, (worksheet.intermediate_output_f70||0), 0.001); end
  def test_intermediate_output_h70; assert_in_delta(0, (worksheet.intermediate_output_h70||0), 0.001); end
  def test_intermediate_output_i70; assert_in_delta(0, (worksheet.intermediate_output_i70||0), 0.001); end
  def test_intermediate_output_j70; assert_in_delta(0, (worksheet.intermediate_output_j70||0), 0.001); end
  def test_intermediate_output_k70; assert_in_delta(0, (worksheet.intermediate_output_k70||0), 0.001); end
  def test_intermediate_output_l70; assert_in_delta(0, (worksheet.intermediate_output_l70||0), 0.001); end
  def test_intermediate_output_m70; assert_in_delta(0, (worksheet.intermediate_output_m70||0), 0.001); end
  def test_intermediate_output_n70; assert_in_delta(0, (worksheet.intermediate_output_n70||0), 0.001); end
  def test_intermediate_output_o70; assert_in_delta(0, (worksheet.intermediate_output_o70||0), 0.001); end
  def test_intermediate_output_p70; assert_in_delta(0, (worksheet.intermediate_output_p70||0), 0.001); end
  def test_intermediate_output_q70; assert_in_delta(0, (worksheet.intermediate_output_q70||0), 0.001); end
  def test_intermediate_output_c71; assert_equal("V.13", worksheet.intermediate_output_c71); end
  def test_intermediate_output_d71; assert_equal("Energy crops (second generation)", worksheet.intermediate_output_d71); end
  def test_intermediate_output_f71; assert_in_delta(0, (worksheet.intermediate_output_f71||0), 0.001); end
  def test_intermediate_output_h71; assert_in_delta(0, (worksheet.intermediate_output_h71||0), 0.001); end
  def test_intermediate_output_i71; assert_in_delta(0, (worksheet.intermediate_output_i71||0), 0.001); end
  def test_intermediate_output_j71; assert_in_delta(0, (worksheet.intermediate_output_j71||0), 0.001); end
  def test_intermediate_output_k71; assert_in_delta(0, (worksheet.intermediate_output_k71||0), 0.001); end
  def test_intermediate_output_l71; assert_in_delta(0, (worksheet.intermediate_output_l71||0), 0.001); end
  def test_intermediate_output_m71; assert_in_delta(0, (worksheet.intermediate_output_m71||0), 0.001); end
  def test_intermediate_output_n71; assert_in_delta(0, (worksheet.intermediate_output_n71||0), 0.001); end
  def test_intermediate_output_o71; assert_in_delta(0, (worksheet.intermediate_output_o71||0), 0.001); end
  def test_intermediate_output_p71; assert_in_delta(0, (worksheet.intermediate_output_p71||0), 0.001); end
  def test_intermediate_output_q71; assert_in_delta(0, (worksheet.intermediate_output_q71||0), 0.001); end
  def test_intermediate_output_d72; assert_equal("Total unnaccounted supply / demand", worksheet.intermediate_output_d72); end
  def test_intermediate_output_f72; assert_in_delta(-0.15310354723947603, worksheet.intermediate_output_f72, 0.001); end
  def test_intermediate_output_h72; assert_in_delta(0, (worksheet.intermediate_output_h72||0), 0.001); end
  def test_intermediate_output_i72; assert_in_delta(0, (worksheet.intermediate_output_i72||0), 0.001); end
  def test_intermediate_output_j72; assert_in_delta(0, (worksheet.intermediate_output_j72||0), 0.001); end
  def test_intermediate_output_k72; assert_in_delta(0, (worksheet.intermediate_output_k72||0), 0.001); end
  def test_intermediate_output_l72; assert_in_delta(0, (worksheet.intermediate_output_l72||0), 0.001); end
  def test_intermediate_output_m72; assert_in_delta(0, (worksheet.intermediate_output_m72||0), 0.001); end
  def test_intermediate_output_n72; assert_in_delta(0, (worksheet.intermediate_output_n72||0), 0.001); end
  def test_intermediate_output_o72; assert_in_delta(0, (worksheet.intermediate_output_o72||0), 0.001); end
  def test_intermediate_output_p72; assert_in_delta(0, (worksheet.intermediate_output_p72||0), 0.001); end
  def test_intermediate_output_q72; assert_in_delta(0, (worksheet.intermediate_output_q72||0), 0.001); end
  def test_intermediate_output_d74; assert_equal("Supply, Demand, and Unaccounted supply", worksheet.intermediate_output_d74); end
  def test_intermediate_output_f74; assert_in_epsilon(-2.688874630083825, worksheet.intermediate_output_f74, 0.001); end
  def test_intermediate_output_h74; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_h74, 0.001); end
  def test_intermediate_output_i74; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_i74, 0.001); end
  def test_intermediate_output_j74; assert_in_delta(2.2737367544323206e-13, worksheet.intermediate_output_j74, 0.001); end
  def test_intermediate_output_k74; assert_in_delta(2.2737367544323206e-13, worksheet.intermediate_output_k74, 0.001); end
  def test_intermediate_output_l74; assert_in_delta(0, (worksheet.intermediate_output_l74||0), 0.001); end
  def test_intermediate_output_m74; assert_in_delta(4.547473508864641e-13, worksheet.intermediate_output_m74, 0.001); end
  def test_intermediate_output_n74; assert_in_delta(0, (worksheet.intermediate_output_n74||0), 0.001); end
  def test_intermediate_output_o74; assert_in_delta(0, (worksheet.intermediate_output_o74||0), 0.001); end
  def test_intermediate_output_p74; assert_in_delta(4.547473508864641e-13, worksheet.intermediate_output_p74, 0.001); end
  def test_intermediate_output_q74; assert_in_delta(-9.094947017729282e-13, worksheet.intermediate_output_q74, 0.001); end
  def test_intermediate_output_b78; assert_equal("Electricity grid (net of distribution losses)", worksheet.intermediate_output_b78); end
  def test_intermediate_output_c80; assert_equal("V.01", worksheet.intermediate_output_c80); end
  def test_intermediate_output_d80; assert_equal("Electricity (delivered to end user)", worksheet.intermediate_output_d80); end
  def test_intermediate_output_f80; assert_in_epsilon(-352.03495223253594, worksheet.intermediate_output_f80, 0.001); end
  def test_intermediate_output_h80; assert_in_epsilon(-354.55512401053005, worksheet.intermediate_output_h80, 0.001); end
  def test_intermediate_output_i80; assert_in_epsilon(-359.3035386016395, worksheet.intermediate_output_i80, 0.001); end
  def test_intermediate_output_j80; assert_in_epsilon(-369.03248902008096, worksheet.intermediate_output_j80, 0.001); end
  def test_intermediate_output_k80; assert_in_epsilon(-386.250791304654, worksheet.intermediate_output_k80, 0.001); end
  def test_intermediate_output_l80; assert_in_epsilon(-408.9802633841156, worksheet.intermediate_output_l80, 0.001); end
  def test_intermediate_output_m80; assert_in_epsilon(-431.840140503318, worksheet.intermediate_output_m80, 0.001); end
  def test_intermediate_output_n80; assert_in_epsilon(-456.51521049820974, worksheet.intermediate_output_n80, 0.001); end
  def test_intermediate_output_o80; assert_in_epsilon(-482.7119907502589, worksheet.intermediate_output_o80, 0.001); end
  def test_intermediate_output_p80; assert_in_epsilon(-510.56223518581226, worksheet.intermediate_output_p80, 0.001); end
  def test_intermediate_output_q80; assert_in_epsilon(-540.8941778422982, worksheet.intermediate_output_q80, 0.001); end
  def test_intermediate_output_r80; assert_equal("REFERENCED", worksheet.intermediate_output_r80); end
  def test_intermediate_output_c81; assert_equal("V.02", worksheet.intermediate_output_c81); end
  def test_intermediate_output_d81; assert_equal("Electricity (supplied to grid)", worksheet.intermediate_output_d81); end
  def test_intermediate_output_f81; assert_in_epsilon(354.72382686261983, worksheet.intermediate_output_f81, 0.001); end
  def test_intermediate_output_h81; assert_in_epsilon(354.55512401053005, worksheet.intermediate_output_h81, 0.001); end
  def test_intermediate_output_i81; assert_in_epsilon(359.3035386016395, worksheet.intermediate_output_i81, 0.001); end
  def test_intermediate_output_j81; assert_in_epsilon(369.03248902008096, worksheet.intermediate_output_j81, 0.001); end
  def test_intermediate_output_k81; assert_in_epsilon(386.250791304654, worksheet.intermediate_output_k81, 0.001); end
  def test_intermediate_output_l81; assert_in_epsilon(408.9802633841156, worksheet.intermediate_output_l81, 0.001); end
  def test_intermediate_output_m81; assert_in_epsilon(431.840140503318, worksheet.intermediate_output_m81, 0.001); end
  def test_intermediate_output_n81; assert_in_epsilon(456.51521049820974, worksheet.intermediate_output_n81, 0.001); end
  def test_intermediate_output_o81; assert_in_epsilon(482.7119907502589, worksheet.intermediate_output_o81, 0.001); end
  def test_intermediate_output_p81; assert_in_epsilon(510.56223518581226, worksheet.intermediate_output_p81, 0.001); end
  def test_intermediate_output_q81; assert_in_epsilon(540.8941778422982, worksheet.intermediate_output_q81, 0.001); end
  def test_intermediate_output_d82; assert_equal("Total electricity grid", worksheet.intermediate_output_d82); end
  def test_intermediate_output_f82; assert_in_epsilon(2.6888746300838875, worksheet.intermediate_output_f82, 0.001); end
  def test_intermediate_output_h82; assert_in_delta(0, (worksheet.intermediate_output_h82||0), 0.001); end
  def test_intermediate_output_i82; assert_in_delta(0, (worksheet.intermediate_output_i82||0), 0.001); end
  def test_intermediate_output_j82; assert_in_delta(0, (worksheet.intermediate_output_j82||0), 0.001); end
  def test_intermediate_output_k82; assert_in_delta(0, (worksheet.intermediate_output_k82||0), 0.001); end
  def test_intermediate_output_l82; assert_in_delta(0, (worksheet.intermediate_output_l82||0), 0.001); end
  def test_intermediate_output_m82; assert_in_delta(0, (worksheet.intermediate_output_m82||0), 0.001); end
  def test_intermediate_output_n82; assert_in_delta(0, (worksheet.intermediate_output_n82||0), 0.001); end
  def test_intermediate_output_o82; assert_in_delta(0, (worksheet.intermediate_output_o82||0), 0.001); end
  def test_intermediate_output_p82; assert_in_delta(0, (worksheet.intermediate_output_p82||0), 0.001); end
  def test_intermediate_output_q82; assert_in_delta(0, (worksheet.intermediate_output_q82||0), 0.001); end
  def test_intermediate_output_c84; assert_equal("V.02", worksheet.intermediate_output_c84); end
  def test_intermediate_output_d84; assert_equal("Losses", worksheet.intermediate_output_d84); end
  def test_intermediate_output_h84; assert_in_epsilon(-26.584481639635896, worksheet.intermediate_output_h84, 0.001); end
  def test_intermediate_output_i84; assert_in_epsilon(-26.940516941246642, worksheet.intermediate_output_i84, 0.001); end
  def test_intermediate_output_j84; assert_in_epsilon(-27.669991954458737, worksheet.intermediate_output_j84, 0.001); end
  def test_intermediate_output_k84; assert_in_epsilon(-28.96101727027485, worksheet.intermediate_output_k84, 0.001); end
  def test_intermediate_output_l84; assert_in_epsilon(-30.665269140449823, worksheet.intermediate_output_l84, 0.001); end
  def test_intermediate_output_m84; assert_in_epsilon(-32.37929875786335, worksheet.intermediate_output_m84, 0.001); end
  def test_intermediate_output_n84; assert_in_epsilon(-34.229431221938114, worksheet.intermediate_output_n84, 0.001); end
  def test_intermediate_output_o84; assert_in_epsilon(-36.19366125689169, worksheet.intermediate_output_o84, 0.001); end
  def test_intermediate_output_p84; assert_in_epsilon(-38.2818677492462, worksheet.intermediate_output_p84, 0.001); end
  def test_intermediate_output_q84; assert_in_epsilon(-40.55615154332804, worksheet.intermediate_output_q84, 0.001); end
  def test_intermediate_output_d85; assert_equal("Demand (for charting)", worksheet.intermediate_output_d85); end
  def test_intermediate_output_h85; assert_in_epsilon(381.13960565016595, worksheet.intermediate_output_h85, 0.001); end
  def test_intermediate_output_i85; assert_in_epsilon(386.24405554288614, worksheet.intermediate_output_i85, 0.001); end
  def test_intermediate_output_j85; assert_in_epsilon(396.7024809745397, worksheet.intermediate_output_j85, 0.001); end
  def test_intermediate_output_k85; assert_in_epsilon(415.21180857492885, worksheet.intermediate_output_k85, 0.001); end
  def test_intermediate_output_l85; assert_in_epsilon(439.6455325245654, worksheet.intermediate_output_l85, 0.001); end
  def test_intermediate_output_m85; assert_in_epsilon(464.2194392611814, worksheet.intermediate_output_m85, 0.001); end
  def test_intermediate_output_n85; assert_in_epsilon(490.74464172014785, worksheet.intermediate_output_n85, 0.001); end
  def test_intermediate_output_o85; assert_in_epsilon(518.9056520071506, worksheet.intermediate_output_o85, 0.001); end
  def test_intermediate_output_p85; assert_in_epsilon(548.8441029350585, worksheet.intermediate_output_p85, 0.001); end
  def test_intermediate_output_q85; assert_in_epsilon(581.4503293856262, worksheet.intermediate_output_q85, 0.001); end
  def test_intermediate_output_d86; assert_equal("Dummy for charting", worksheet.intermediate_output_d86); end
  def test_intermediate_output_h86; assert_in_epsilon(382.3986332411074, worksheet.intermediate_output_h86, 0.001); end
  def test_intermediate_output_i86; assert_in_epsilon(387.53578983301105, worksheet.intermediate_output_i86, 0.001); end
  def test_intermediate_output_j86; assert_in_epsilon(398.05780658703287, worksheet.intermediate_output_j86, 0.001); end
  def test_intermediate_output_k86; assert_in_epsilon(416.63591542237106, worksheet.intermediate_output_k86, 0.001); end
  def test_intermediate_output_l86; assert_in_epsilon(441.1794721712877, worksheet.intermediate_output_l86, 0.001); end
  def test_intermediate_output_m86; assert_in_epsilon(465.8763425872702, worksheet.intermediate_output_m86, 0.001); end
  def test_intermediate_output_n86; assert_in_epsilon(492.53880094784535, worksheet.intermediate_output_n86, 0.001); end
  def test_intermediate_output_o86; assert_in_epsilon(520.8527268021878, worksheet.intermediate_output_o86, 0.001); end
  def test_intermediate_output_p86; assert_in_epsilon(550.9613340699603, worksheet.intermediate_output_p86, 0.001); end
  def test_intermediate_output_q86; assert_in_epsilon(583.7567645739484, worksheet.intermediate_output_q86, 0.001); end
  def test_intermediate_output_c89; assert_equal("Z.01", worksheet.intermediate_output_c89); end
  def test_intermediate_output_d89; assert_equal("Unallocated", worksheet.intermediate_output_d89); end
  def test_intermediate_output_f89; assert_in_delta(0, (worksheet.intermediate_output_f89||0), 0.001); end
  def test_intermediate_output_h89; assert_in_delta(0, (worksheet.intermediate_output_h89||0), 0.001); end
  def test_intermediate_output_i89; assert_in_delta(0, (worksheet.intermediate_output_i89||0), 0.001); end
  def test_intermediate_output_j89; assert_in_delta(0, (worksheet.intermediate_output_j89||0), 0.001); end
  def test_intermediate_output_k89; assert_in_delta(1.0231815394945443e-12, worksheet.intermediate_output_k89, 0.001); end
  def test_intermediate_output_l89; assert_in_delta(0, (worksheet.intermediate_output_l89||0), 0.001); end
  def test_intermediate_output_m89; assert_in_delta(0, (worksheet.intermediate_output_m89||0), 0.001); end
  def test_intermediate_output_n89; assert_in_delta(0, (worksheet.intermediate_output_n89||0), 0.001); end
  def test_intermediate_output_o89; assert_in_delta(0, (worksheet.intermediate_output_o89||0), 0.001); end
  def test_intermediate_output_p89; assert_in_delta(0, (worksheet.intermediate_output_p89||0), 0.001); end
  def test_intermediate_output_q89; assert_in_delta(-1.0231815394945443e-12, worksheet.intermediate_output_q89, 0.001); end
  def test_intermediate_output_d91; assert_equal("Net balance (should be zero!)", worksheet.intermediate_output_d91); end
  def test_intermediate_output_f91; assert_in_delta(6.261657858885883e-14, worksheet.intermediate_output_f91, 0.001); end
  def test_intermediate_output_h91; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_h91, 0.001); end
  def test_intermediate_output_i91; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_i91, 0.001); end
  def test_intermediate_output_j91; assert_in_delta(2.2737367544323206e-13, worksheet.intermediate_output_j91, 0.001); end
  def test_intermediate_output_k91; assert_in_delta(1.2505552149377763e-12, worksheet.intermediate_output_k91, 0.001); end
  def test_intermediate_output_l91; assert_in_delta(0, (worksheet.intermediate_output_l91||0), 0.001); end
  def test_intermediate_output_m91; assert_in_delta(4.547473508864641e-13, worksheet.intermediate_output_m91, 0.001); end
  def test_intermediate_output_n91; assert_in_delta(0, (worksheet.intermediate_output_n91||0), 0.001); end
  def test_intermediate_output_o91; assert_in_delta(0, (worksheet.intermediate_output_o91||0), 0.001); end
  def test_intermediate_output_p91; assert_in_delta(4.547473508864641e-13, worksheet.intermediate_output_p91, 0.001); end
  def test_intermediate_output_q91; assert_in_delta(-1.9326762412674725e-12, worksheet.intermediate_output_q91, 0.001); end
  def test_intermediate_output_b93; assert_equal("Electricity Generation", worksheet.intermediate_output_b93); end
  def test_intermediate_output_c95; assert_equal("V.02", worksheet.intermediate_output_c95); end
  def test_intermediate_output_d95; assert_equal("TWh", worksheet.intermediate_output_d95); end
  def test_intermediate_output_h95; assert_in_epsilon(2007, worksheet.intermediate_output_h95, 0.001); end
  def test_intermediate_output_i95; assert_in_epsilon(2010, worksheet.intermediate_output_i95, 0.001); end
  def test_intermediate_output_j95; assert_in_epsilon(2015, worksheet.intermediate_output_j95, 0.001); end
  def test_intermediate_output_k95; assert_in_epsilon(2020, worksheet.intermediate_output_k95, 0.001); end
  def test_intermediate_output_l95; assert_in_epsilon(2025, worksheet.intermediate_output_l95, 0.001); end
  def test_intermediate_output_m95; assert_in_epsilon(2030, worksheet.intermediate_output_m95, 0.001); end
  def test_intermediate_output_n95; assert_in_epsilon(2035, worksheet.intermediate_output_n95, 0.001); end
  def test_intermediate_output_o95; assert_in_epsilon(2040, worksheet.intermediate_output_o95, 0.001); end
  def test_intermediate_output_p95; assert_in_epsilon(2045, worksheet.intermediate_output_p95, 0.001); end
  def test_intermediate_output_q95; assert_in_epsilon(2050, worksheet.intermediate_output_q95, 0.001); end
  def test_intermediate_output_c96; assert_equal("I.a", worksheet.intermediate_output_c96); end
  def test_intermediate_output_d96; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d96); end
  def test_intermediate_output_f96; assert_in_epsilon(276.53401618322465, worksheet.intermediate_output_f96, 0.001); end
  def test_intermediate_output_h96; assert_in_epsilon(314.8345777895074, worksheet.intermediate_output_h96, 0.001); end
  def test_intermediate_output_i96; assert_in_epsilon(315.1363283423535, worksheet.intermediate_output_i96, 0.001); end
  def test_intermediate_output_j96; assert_in_epsilon(314.0881604766082, worksheet.intermediate_output_j96, 0.001); end
  def test_intermediate_output_k96; assert_in_epsilon(329.6597217689738, worksheet.intermediate_output_k96, 0.001); end
  def test_intermediate_output_l96; assert_in_epsilon(358.34267123779455, worksheet.intermediate_output_l96, 0.001); end
  def test_intermediate_output_m96; assert_in_epsilon(392.512563383777, worksheet.intermediate_output_m96, 0.001); end
  def test_intermediate_output_n96; assert_in_epsilon(443.95605106784535, worksheet.intermediate_output_n96, 0.001); end
  def test_intermediate_output_o96; assert_in_epsilon(489.3416961771879, worksheet.intermediate_output_o96, 0.001); end
  def test_intermediate_output_p96; assert_in_epsilon(534.5403588249603, worksheet.intermediate_output_p96, 0.001); end
  def test_intermediate_output_q96; assert_in_epsilon(567.3003966039485, worksheet.intermediate_output_q96, 0.001); end
  def test_intermediate_output_c97; assert_equal("IX.a", worksheet.intermediate_output_c97); end
  def test_intermediate_output_d97; assert_equal("Domestic space heating and hot water", worksheet.intermediate_output_d97); end
  def test_intermediate_output_f97; assert_in_delta(0, (worksheet.intermediate_output_f97||0), 0.001); end
  def test_intermediate_output_h97; assert_in_delta(0, (worksheet.intermediate_output_h97||0), 0.001); end
  def test_intermediate_output_i97; assert_in_delta(0, (worksheet.intermediate_output_i97||0), 0.001); end
  def test_intermediate_output_j97; assert_in_delta(0, (worksheet.intermediate_output_j97||0), 0.001); end
  def test_intermediate_output_k97; assert_in_delta(0, (worksheet.intermediate_output_k97||0), 0.001); end
  def test_intermediate_output_l97; assert_in_delta(0, (worksheet.intermediate_output_l97||0), 0.001); end
  def test_intermediate_output_m97; assert_in_delta(0, (worksheet.intermediate_output_m97||0), 0.001); end
  def test_intermediate_output_n97; assert_in_delta(0, (worksheet.intermediate_output_n97||0), 0.001); end
  def test_intermediate_output_o97; assert_in_delta(0, (worksheet.intermediate_output_o97||0), 0.001); end
  def test_intermediate_output_p97; assert_in_delta(0, (worksheet.intermediate_output_p97||0), 0.001); end
  def test_intermediate_output_q97; assert_in_delta(0, (worksheet.intermediate_output_q97||0), 0.001); end
  def test_intermediate_output_c98; assert_equal("IX.c", worksheet.intermediate_output_c98); end
  def test_intermediate_output_d98; assert_equal("Commercial heating and cooling", worksheet.intermediate_output_d98); end
  def test_intermediate_output_f98; assert_in_delta(0, (worksheet.intermediate_output_f98||0), 0.001); end
  def test_intermediate_output_h98; assert_in_delta(0, (worksheet.intermediate_output_h98||0), 0.001); end
  def test_intermediate_output_i98; assert_in_delta(0, (worksheet.intermediate_output_i98||0), 0.001); end
  def test_intermediate_output_j98; assert_in_delta(0, (worksheet.intermediate_output_j98||0), 0.001); end
  def test_intermediate_output_k98; assert_in_delta(0, (worksheet.intermediate_output_k98||0), 0.001); end
  def test_intermediate_output_l98; assert_in_delta(0, (worksheet.intermediate_output_l98||0), 0.001); end
  def test_intermediate_output_m98; assert_in_delta(0, (worksheet.intermediate_output_m98||0), 0.001); end
  def test_intermediate_output_n98; assert_in_delta(0, (worksheet.intermediate_output_n98||0), 0.001); end
  def test_intermediate_output_o98; assert_in_delta(0, (worksheet.intermediate_output_o98||0), 0.001); end
  def test_intermediate_output_p98; assert_in_delta(0, (worksheet.intermediate_output_p98||0), 0.001); end
  def test_intermediate_output_q98; assert_in_delta(0, (worksheet.intermediate_output_q98||0), 0.001); end
  def test_intermediate_output_d99; assert_equal("Unabated thermal generation", worksheet.intermediate_output_d99); end
  def test_intermediate_output_f99; assert_in_epsilon(276.53401618322465, worksheet.intermediate_output_f99, 0.001); end
  def test_intermediate_output_h99; assert_in_epsilon(314.8345777895074, worksheet.intermediate_output_h99, 0.001); end
  def test_intermediate_output_i99; assert_in_epsilon(315.1363283423535, worksheet.intermediate_output_i99, 0.001); end
  def test_intermediate_output_j99; assert_in_epsilon(314.0881604766082, worksheet.intermediate_output_j99, 0.001); end
  def test_intermediate_output_k99; assert_in_epsilon(329.6597217689738, worksheet.intermediate_output_k99, 0.001); end
  def test_intermediate_output_l99; assert_in_epsilon(358.34267123779455, worksheet.intermediate_output_l99, 0.001); end
  def test_intermediate_output_m99; assert_in_epsilon(392.512563383777, worksheet.intermediate_output_m99, 0.001); end
  def test_intermediate_output_n99; assert_in_epsilon(443.95605106784535, worksheet.intermediate_output_n99, 0.001); end
  def test_intermediate_output_o99; assert_in_epsilon(489.3416961771879, worksheet.intermediate_output_o99, 0.001); end
  def test_intermediate_output_p99; assert_in_epsilon(534.5403588249603, worksheet.intermediate_output_p99, 0.001); end
  def test_intermediate_output_q99; assert_in_epsilon(567.3003966039485, worksheet.intermediate_output_q99, 0.001); end
  def test_intermediate_output_c100; assert_equal("I.b", worksheet.intermediate_output_c100); end
  def test_intermediate_output_d100; assert_equal("Carbon Capture Storage (CCS)", worksheet.intermediate_output_d100); end
  def test_intermediate_output_f100; assert_in_delta(0, (worksheet.intermediate_output_f100||0), 0.001); end
  def test_intermediate_output_h100; assert_in_delta(0, (worksheet.intermediate_output_h100||0), 0.001); end
  def test_intermediate_output_i100; assert_in_delta(0, (worksheet.intermediate_output_i100||0), 0.001); end
  def test_intermediate_output_j100; assert_in_epsilon(5.079787425, worksheet.intermediate_output_j100, 0.001); end
  def test_intermediate_output_k100; assert_in_epsilon(10.834644510000002, worksheet.intermediate_output_k100, 0.001); end
  def test_intermediate_output_l100; assert_in_epsilon(10.876743225, worksheet.intermediate_output_l100, 0.001); end
  def test_intermediate_output_m100; assert_in_epsilon(10.928155815, worksheet.intermediate_output_m100, 0.001); end
  def test_intermediate_output_n100; assert_in_epsilon(10.95013656, worksheet.intermediate_output_n100, 0.001); end
  def test_intermediate_output_o100; assert_in_epsilon(10.972117305000001, worksheet.intermediate_output_o100, 0.001); end
  def test_intermediate_output_p100; assert_in_epsilon(11.003411924999998, worksheet.intermediate_output_p100, 0.001); end
  def test_intermediate_output_q100; assert_in_epsilon(11.03880465, worksheet.intermediate_output_q100, 0.001); end
  def test_intermediate_output_c101; assert_equal("II.a", worksheet.intermediate_output_c101); end
  def test_intermediate_output_d101; assert_equal("Nuclear power", worksheet.intermediate_output_d101); end
  def test_intermediate_output_f101; assert_in_epsilon(57.248895000000005, worksheet.intermediate_output_f101, 0.001); end
  def test_intermediate_output_h101; assert_in_epsilon(57.469896, worksheet.intermediate_output_h101, 0.001); end
  def test_intermediate_output_i101; assert_in_epsilon(52.596, worksheet.intermediate_output_i101, 0.001); end
  def test_intermediate_output_j101; assert_in_epsilon(44.18064, worksheet.intermediate_output_j101, 0.001); end
  def test_intermediate_output_k101; assert_in_epsilon(25.246080000000006, worksheet.intermediate_output_k101, 0.001); end
  def test_intermediate_output_l101; assert_in_epsilon(8.415360000000005, worksheet.intermediate_output_l101, 0.001); end
  def test_intermediate_output_m101; assert_in_epsilon(8.415360000000005, worksheet.intermediate_output_m101, 0.001); end
  def test_intermediate_output_n101; assert_in_delta(0, (worksheet.intermediate_output_n101||0), 0.001); end
  def test_intermediate_output_o101; assert_in_delta(0, (worksheet.intermediate_output_o101||0), 0.001); end
  def test_intermediate_output_p101; assert_in_delta(0, (worksheet.intermediate_output_p101||0), 0.001); end
  def test_intermediate_output_q101; assert_in_delta(0, (worksheet.intermediate_output_q101||0), 0.001); end
  def test_intermediate_output_c102; assert_equal("III.a.1", worksheet.intermediate_output_c102); end
  def test_intermediate_output_d102; assert_equal("Onshore wind", worksheet.intermediate_output_d102); end
  def test_intermediate_output_f102; assert_in_epsilon(4.4912823, worksheet.intermediate_output_f102, 0.001); end
  def test_intermediate_output_h102; assert_in_epsilon(4.9858220412000005, worksheet.intermediate_output_h102, 0.001); end
  def test_intermediate_output_i102; assert_in_epsilon(10.317757319999997, worksheet.intermediate_output_i102, 0.001); end
  def test_intermediate_output_j102; assert_in_epsilon(17.549707319999996, worksheet.intermediate_output_j102, 0.001); end
  def test_intermediate_output_k102; assert_in_epsilon(24.78165732, worksheet.intermediate_output_k102, 0.001); end
  def test_intermediate_output_l102; assert_in_epsilon(28.963039319999996, worksheet.intermediate_output_l102, 0.001); end
  def test_intermediate_output_m102; assert_in_epsilon(21.783685319999993, worksheet.intermediate_output_m102, 0.001); end
  def test_intermediate_output_n102; assert_in_epsilon(14.551735319999997, worksheet.intermediate_output_n102, 0.001); end
  def test_intermediate_output_o102; assert_in_epsilon(7.319785319999996, worksheet.intermediate_output_o102, 0.001); end
  def test_intermediate_output_p102; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_p102, 0.001); end
  def test_intermediate_output_q102; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_q102, 0.001); end
  def test_intermediate_output_c103; assert_equal("III.a.2", worksheet.intermediate_output_c103); end
  def test_intermediate_output_d103; assert_equal("Offshore wind", worksheet.intermediate_output_d103); end
  def test_intermediate_output_f103; assert_in_delta(0.7825523999999999, worksheet.intermediate_output_f103, 0.001); end
  def test_intermediate_output_h103; assert_in_delta(0.9769303763999999, worksheet.intermediate_output_h103, 0.001); end
  def test_intermediate_output_i103; assert_in_epsilon(4.122912780000003, worksheet.intermediate_output_i103, 0.001); end
  def test_intermediate_output_j103; assert_in_epsilon(11.793162780000001, worksheet.intermediate_output_j103, 0.001); end
  def test_intermediate_output_k103; assert_in_epsilon(20.575607796000003, worksheet.intermediate_output_k103, 0.001); end
  def test_intermediate_output_l103; assert_in_epsilon(28.73074032000001, worksheet.intermediate_output_l103, 0.001); end
  def test_intermediate_output_m103; assert_in_epsilon(26.385659999999998, worksheet.intermediate_output_m103, 0.001); end
  def test_intermediate_output_n103; assert_in_epsilon(17.75115, worksheet.intermediate_output_n103, 0.001); end
  def test_intermediate_output_o103; assert_in_epsilon(7.8894, worksheet.intermediate_output_o103, 0.001); end
  def test_intermediate_output_p103; assert_in_delta(0, (worksheet.intermediate_output_p103||0), 0.001); end
  def test_intermediate_output_q103; assert_in_delta(0, (worksheet.intermediate_output_q103||0), 0.001); end
  def test_intermediate_output_c104; assert_equal("III.b", worksheet.intermediate_output_c104); end
  def test_intermediate_output_d104; assert_equal("Hydroelectric power stations", worksheet.intermediate_output_d104); end
  def test_intermediate_output_f104; assert_in_epsilon(4.1137551000000006, worksheet.intermediate_output_f104, 0.001); end
  def test_intermediate_output_h104; assert_in_epsilon(4.114400994, worksheet.intermediate_output_h104, 0.001); end
  def test_intermediate_output_i104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_i104, 0.001); end
  def test_intermediate_output_j104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_j104, 0.001); end
  def test_intermediate_output_k104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_k104, 0.001); end
  def test_intermediate_output_l104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_l104, 0.001); end
  def test_intermediate_output_m104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_m104, 0.001); end
  def test_intermediate_output_n104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_n104, 0.001); end
  def test_intermediate_output_o104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_o104, 0.001); end
  def test_intermediate_output_p104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_p104, 0.001); end
  def test_intermediate_output_q104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_q104, 0.001); end
  def test_intermediate_output_c105; assert_equal("III.c", worksheet.intermediate_output_c105); end
  def test_intermediate_output_d105; assert_equal("Tidal and Wave", worksheet.intermediate_output_d105); end
  def test_intermediate_output_f105; assert_in_delta(0, (worksheet.intermediate_output_f105||0), 0.001); end
  def test_intermediate_output_h105; assert_in_delta(0, (worksheet.intermediate_output_h105||0), 0.001); end
  def test_intermediate_output_i105; assert_in_delta(0.0050034246575342495, worksheet.intermediate_output_i105, 0.001); end
  def test_intermediate_output_j105; assert_in_delta(0.023015753424657545, worksheet.intermediate_output_j105, 0.001); end
  def test_intermediate_output_k105; assert_in_delta(0.20847602739726018, worksheet.intermediate_output_k105, 0.001); end
  def test_intermediate_output_l105; assert_in_delta(0.5211900684931499, worksheet.intermediate_output_l105, 0.001); end
  def test_intermediate_output_m105; assert_in_delta(0.5211900684931499, worksheet.intermediate_output_m105, 0.001); end
  def test_intermediate_output_n105; assert_in_delta(0, (worksheet.intermediate_output_n105||0), 0.001); end
  def test_intermediate_output_o105; assert_in_delta(0, (worksheet.intermediate_output_o105||0), 0.001); end
  def test_intermediate_output_p105; assert_in_delta(0, (worksheet.intermediate_output_p105||0), 0.001); end
  def test_intermediate_output_q105; assert_in_delta(0, (worksheet.intermediate_output_q105||0), 0.001); end
  def test_intermediate_output_c106; assert_equal("III.d", worksheet.intermediate_output_c106); end
  def test_intermediate_output_d106; assert_equal("Geothermal electricity", worksheet.intermediate_output_d106); end
  def test_intermediate_output_f106; assert_in_delta(0, (worksheet.intermediate_output_f106||0), 0.001); end
  def test_intermediate_output_h106; assert_in_delta(0, (worksheet.intermediate_output_h106||0), 0.001); end
  def test_intermediate_output_i106; assert_in_delta(0, (worksheet.intermediate_output_i106||0), 0.001); end
  def test_intermediate_output_j106; assert_in_delta(0, (worksheet.intermediate_output_j106||0), 0.001); end
  def test_intermediate_output_k106; assert_in_delta(0, (worksheet.intermediate_output_k106||0), 0.001); end
  def test_intermediate_output_l106; assert_in_delta(0, (worksheet.intermediate_output_l106||0), 0.001); end
  def test_intermediate_output_m106; assert_in_delta(0, (worksheet.intermediate_output_m106||0), 0.001); end
  def test_intermediate_output_n106; assert_in_delta(0, (worksheet.intermediate_output_n106||0), 0.001); end
  def test_intermediate_output_o106; assert_in_delta(0, (worksheet.intermediate_output_o106||0), 0.001); end
  def test_intermediate_output_p106; assert_in_delta(0, (worksheet.intermediate_output_p106||0), 0.001); end
  def test_intermediate_output_q106; assert_in_delta(0, (worksheet.intermediate_output_q106||0), 0.001); end
  def test_intermediate_output_c107; assert_equal("III.e", worksheet.intermediate_output_c107); end
  def test_intermediate_output_d107; assert_equal("Tidal [UNUSED - See III.c]", worksheet.intermediate_output_d107); end
  def test_intermediate_output_f107; assert_in_delta(0, (worksheet.intermediate_output_f107||0), 0.001); end
  def test_intermediate_output_h107; assert_in_delta(0, (worksheet.intermediate_output_h107||0), 0.001); end
  def test_intermediate_output_i107; assert_in_delta(0, (worksheet.intermediate_output_i107||0), 0.001); end
  def test_intermediate_output_j107; assert_in_delta(0, (worksheet.intermediate_output_j107||0), 0.001); end
  def test_intermediate_output_k107; assert_in_delta(0, (worksheet.intermediate_output_k107||0), 0.001); end
  def test_intermediate_output_l107; assert_in_delta(0, (worksheet.intermediate_output_l107||0), 0.001); end
  def test_intermediate_output_m107; assert_in_delta(0, (worksheet.intermediate_output_m107||0), 0.001); end
  def test_intermediate_output_n107; assert_in_delta(0, (worksheet.intermediate_output_n107||0), 0.001); end
  def test_intermediate_output_o107; assert_in_delta(0, (worksheet.intermediate_output_o107||0), 0.001); end
  def test_intermediate_output_p107; assert_in_delta(0, (worksheet.intermediate_output_p107||0), 0.001); end
  def test_intermediate_output_q107; assert_in_delta(0, (worksheet.intermediate_output_q107||0), 0.001); end
  def test_intermediate_output_c108; assert_equal("IV.a", worksheet.intermediate_output_c108); end
  def test_intermediate_output_d108; assert_equal("Solar PV", worksheet.intermediate_output_d108); end
  def test_intermediate_output_f108; assert_in_delta(0, (worksheet.intermediate_output_f108||0), 0.001); end
  def test_intermediate_output_h108; assert_in_delta(0.01700604, worksheet.intermediate_output_h108, 0.001); end
  def test_intermediate_output_i108; assert_in_delta(0.028059966000000006, worksheet.intermediate_output_i108, 0.001); end
  def test_intermediate_output_j108; assert_in_delta(0.013604831999999999, worksheet.intermediate_output_j108, 0.001); end
  def test_intermediate_output_k108; assert_in_delta(0, (worksheet.intermediate_output_k108||0), 0.001); end
  def test_intermediate_output_l108; assert_in_delta(0, (worksheet.intermediate_output_l108||0), 0.001); end
  def test_intermediate_output_m108; assert_in_delta(0, (worksheet.intermediate_output_m108||0), 0.001); end
  def test_intermediate_output_n108; assert_in_delta(0, (worksheet.intermediate_output_n108||0), 0.001); end
  def test_intermediate_output_o108; assert_in_delta(0, (worksheet.intermediate_output_o108||0), 0.001); end
  def test_intermediate_output_p108; assert_in_delta(0, (worksheet.intermediate_output_p108||0), 0.001); end
  def test_intermediate_output_q108; assert_in_delta(0, (worksheet.intermediate_output_q108||0), 0.001); end
  def test_intermediate_output_d109; assert_equal("Non-thermal renewable generation", worksheet.intermediate_output_d109); end
  def test_intermediate_output_f109; assert_in_epsilon(9.3875898, worksheet.intermediate_output_f109, 0.001); end
  def test_intermediate_output_h109; assert_in_epsilon(10.094159451600001, worksheet.intermediate_output_h109, 0.001); end
  def test_intermediate_output_i109; assert_in_epsilon(19.803461490657536, worksheet.intermediate_output_i109, 0.001); end
  def test_intermediate_output_j109; assert_in_epsilon(34.70921868542466, worksheet.intermediate_output_j109, 0.001); end
  def test_intermediate_output_k109; assert_in_epsilon(50.89546914339727, worksheet.intermediate_output_k109, 0.001); end
  def test_intermediate_output_l109; assert_in_epsilon(63.54469770849315, worksheet.intermediate_output_l109, 0.001); end
  def test_intermediate_output_m109; assert_in_epsilon(54.02026338849314, worksheet.intermediate_output_m109, 0.001); end
  def test_intermediate_output_n109; assert_in_epsilon(37.63261332, worksheet.intermediate_output_n109, 0.001); end
  def test_intermediate_output_o109; assert_in_epsilon(20.53891332, worksheet.intermediate_output_o109, 0.001); end
  def test_intermediate_output_p109; assert_in_epsilon(5.4175633199999975, worksheet.intermediate_output_p109, 0.001); end
  def test_intermediate_output_q109; assert_in_epsilon(5.4175633199999975, worksheet.intermediate_output_q109, 0.001); end
  def test_intermediate_output_c110; assert_equal("VII.a", worksheet.intermediate_output_c110); end
  def test_intermediate_output_d110; assert_equal("Electricity imports", worksheet.intermediate_output_d110); end
  def test_intermediate_output_f110; assert_in_epsilon(5.21452425, worksheet.intermediate_output_f110, 0.001); end
  def test_intermediate_output_h110; assert_in_delta(0, (worksheet.intermediate_output_h110||0), 0.001); end
  def test_intermediate_output_i110; assert_in_delta(0, (worksheet.intermediate_output_i110||0), 0.001); end
  def test_intermediate_output_j110; assert_in_delta(0, (worksheet.intermediate_output_j110||0), 0.001); end
  def test_intermediate_output_k110; assert_in_delta(0, (worksheet.intermediate_output_k110||0), 0.001); end
  def test_intermediate_output_l110; assert_in_delta(0, (worksheet.intermediate_output_l110||0), 0.001); end
  def test_intermediate_output_m110; assert_in_delta(0, (worksheet.intermediate_output_m110||0), 0.001); end
  def test_intermediate_output_n110; assert_in_delta(0, (worksheet.intermediate_output_n110||0), 0.001); end
  def test_intermediate_output_o110; assert_in_delta(0, (worksheet.intermediate_output_o110||0), 0.001); end
  def test_intermediate_output_p110; assert_in_delta(0, (worksheet.intermediate_output_p110||0), 0.001); end
  def test_intermediate_output_q110; assert_in_delta(0, (worksheet.intermediate_output_q110||0), 0.001); end
  def test_intermediate_output_d111; assert_equal("Total generation supplied to grid", worksheet.intermediate_output_d111); end
  def test_intermediate_output_f111; assert_in_epsilon(348.38502523322467, worksheet.intermediate_output_f111, 0.001); end
  def test_intermediate_output_h111; assert_in_epsilon(382.3986332411074, worksheet.intermediate_output_h111, 0.001); end
  def test_intermediate_output_i111; assert_in_epsilon(387.53578983301105, worksheet.intermediate_output_i111, 0.001); end
  def test_intermediate_output_j111; assert_in_epsilon(398.05780658703287, worksheet.intermediate_output_j111, 0.001); end
  def test_intermediate_output_k111; assert_in_epsilon(416.63591542237106, worksheet.intermediate_output_k111, 0.001); end
  def test_intermediate_output_l111; assert_in_epsilon(441.1794721712877, worksheet.intermediate_output_l111, 0.001); end
  def test_intermediate_output_m111; assert_in_epsilon(465.8763425872702, worksheet.intermediate_output_m111, 0.001); end
  def test_intermediate_output_n111; assert_in_epsilon(492.53880094784535, worksheet.intermediate_output_n111, 0.001); end
  def test_intermediate_output_o111; assert_in_epsilon(520.8527268021878, worksheet.intermediate_output_o111, 0.001); end
  def test_intermediate_output_p111; assert_in_epsilon(550.9613340699603, worksheet.intermediate_output_p111, 0.001); end
  def test_intermediate_output_q111; assert_in_epsilon(583.7567645739484, worksheet.intermediate_output_q111, 0.001); end
  def test_intermediate_output_s111; assert_in_epsilon(624.3129161172765, worksheet.intermediate_output_s111, 0.001); end
  def test_intermediate_output_d113; assert_equal("Electricity exports", worksheet.intermediate_output_d113); end
  def test_intermediate_output_f113; assert_in_delta(0, (worksheet.intermediate_output_f113||0), 0.001); end
  def test_intermediate_output_h113; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_h113, 0.001); end
  def test_intermediate_output_i113; assert_in_delta(-1.1368683772161603e-13, worksheet.intermediate_output_i113, 0.001); end
  def test_intermediate_output_j113; assert_in_delta(0, (worksheet.intermediate_output_j113||0), 0.001); end
  def test_intermediate_output_k113; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_k113, 0.001); end
  def test_intermediate_output_l113; assert_in_delta(0, (worksheet.intermediate_output_l113||0), 0.001); end
  def test_intermediate_output_m113; assert_in_delta(0, (worksheet.intermediate_output_m113||0), 0.001); end
  def test_intermediate_output_n113; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_n113, 0.001); end
  def test_intermediate_output_o113; assert_in_delta(0, (worksheet.intermediate_output_o113||0), 0.001); end
  def test_intermediate_output_p113; assert_in_delta(0, (worksheet.intermediate_output_p113||0), 0.001); end
  def test_intermediate_output_q113; assert_in_delta(1.1368683772161603e-13, worksheet.intermediate_output_q113, 0.001); end
  def test_intermediate_output_r113; assert_equal("REFERENCED", worksheet.intermediate_output_r113); end
  def test_intermediate_output_d114; assert_equal("Electricity used in UK, before losses and district heating heat demand", worksheet.intermediate_output_d114); end
  def test_intermediate_output_f114; assert_in_epsilon(348.38502523322467, worksheet.intermediate_output_f114, 0.001); end
  def test_intermediate_output_h114; assert_in_epsilon(382.3986332411074, worksheet.intermediate_output_h114, 0.001); end
  def test_intermediate_output_i114; assert_in_epsilon(387.53578983301094, worksheet.intermediate_output_i114, 0.001); end
  def test_intermediate_output_j114; assert_in_epsilon(398.05780658703287, worksheet.intermediate_output_j114, 0.001); end
  def test_intermediate_output_k114; assert_in_epsilon(416.63591542237106, worksheet.intermediate_output_k114, 0.001); end
  def test_intermediate_output_l114; assert_in_epsilon(441.1794721712877, worksheet.intermediate_output_l114, 0.001); end
  def test_intermediate_output_m114; assert_in_epsilon(465.8763425872702, worksheet.intermediate_output_m114, 0.001); end
  def test_intermediate_output_n114; assert_in_epsilon(492.53880094784535, worksheet.intermediate_output_n114, 0.001); end
  def test_intermediate_output_o114; assert_in_epsilon(520.8527268021878, worksheet.intermediate_output_o114, 0.001); end
  def test_intermediate_output_p114; assert_in_epsilon(550.9613340699603, worksheet.intermediate_output_p114, 0.001); end
  def test_intermediate_output_q114; assert_in_epsilon(583.7567645739484, worksheet.intermediate_output_q114, 0.001); end
  def test_intermediate_output_d116; assert_equal("GW installed capacity", worksheet.intermediate_output_d116); end
  def test_intermediate_output_h116; assert_in_epsilon(2007, worksheet.intermediate_output_h116, 0.001); end
  def test_intermediate_output_i116; assert_in_epsilon(2010, worksheet.intermediate_output_i116, 0.001); end
  def test_intermediate_output_j116; assert_in_epsilon(2015, worksheet.intermediate_output_j116, 0.001); end
  def test_intermediate_output_k116; assert_in_epsilon(2020, worksheet.intermediate_output_k116, 0.001); end
  def test_intermediate_output_l116; assert_in_epsilon(2025, worksheet.intermediate_output_l116, 0.001); end
  def test_intermediate_output_m116; assert_in_epsilon(2030, worksheet.intermediate_output_m116, 0.001); end
  def test_intermediate_output_n116; assert_in_epsilon(2035, worksheet.intermediate_output_n116, 0.001); end
  def test_intermediate_output_o116; assert_in_epsilon(2040, worksheet.intermediate_output_o116, 0.001); end
  def test_intermediate_output_p116; assert_in_epsilon(2045, worksheet.intermediate_output_p116, 0.001); end
  def test_intermediate_output_q116; assert_in_epsilon(2050, worksheet.intermediate_output_q116, 0.001); end
  def test_intermediate_output_c117; assert_equal("I.a", worksheet.intermediate_output_c117); end
  def test_intermediate_output_d117; assert_equal("Unabated thermal generation ", worksheet.intermediate_output_d117); end
  def test_intermediate_output_h117; assert_in_epsilon(62.581667698868486, worksheet.intermediate_output_h117, 0.001); end
  def test_intermediate_output_i117; assert_in_epsilon(59.62017218491017, worksheet.intermediate_output_i117, 0.001); end
  def test_intermediate_output_j117; assert_in_epsilon(54.274959368437834, worksheet.intermediate_output_j117, 0.001); end
  def test_intermediate_output_k117; assert_in_epsilon(55.90304337684134, worksheet.intermediate_output_k117, 0.001); end
  def test_intermediate_output_l117; assert_in_epsilon(59.371283601869976, worksheet.intermediate_output_l117, 0.001); end
  def test_intermediate_output_m117; assert_in_epsilon(63.96671610830432, worksheet.intermediate_output_m117, 0.001); end
  def test_intermediate_output_n117; assert_in_epsilon(72.17889427786666, worksheet.intermediate_output_n117, 0.001); end
  def test_intermediate_output_o117; assert_in_epsilon(79.57527071757568, worksheet.intermediate_output_o117, 0.001); end
  def test_intermediate_output_p117; assert_in_epsilon(86.9411751287377, worksheet.intermediate_output_p117, 0.001); end
  def test_intermediate_output_q117; assert_in_epsilon(92.27999032038532, worksheet.intermediate_output_q117, 0.001); end
  def test_intermediate_output_c118; assert_equal("I.a.Liquid", worksheet.intermediate_output_c118); end
  def test_intermediate_output_d118; assert_equal("Oil / Biofuel", worksheet.intermediate_output_d118); end
  def test_intermediate_output_h118; assert_in_epsilon(4.1, worksheet.intermediate_output_h118, 0.001); end
  def test_intermediate_output_i118; assert_in_epsilon(4.0568, worksheet.intermediate_output_i118, 0.001); end
  def test_intermediate_output_j118; assert_in_delta(0, (worksheet.intermediate_output_j118||0), 0.001); end
  def test_intermediate_output_k118; assert_in_delta(0, (worksheet.intermediate_output_k118||0), 0.001); end
  def test_intermediate_output_l118; assert_in_delta(0, (worksheet.intermediate_output_l118||0), 0.001); end
  def test_intermediate_output_m118; assert_in_delta(0, (worksheet.intermediate_output_m118||0), 0.001); end
  def test_intermediate_output_n118; assert_in_delta(0, (worksheet.intermediate_output_n118||0), 0.001); end
  def test_intermediate_output_o118; assert_in_delta(0, (worksheet.intermediate_output_o118||0), 0.001); end
  def test_intermediate_output_p118; assert_in_delta(0, (worksheet.intermediate_output_p118||0), 0.001); end
  def test_intermediate_output_q118; assert_in_delta(0, (worksheet.intermediate_output_q118||0), 0.001); end
  def test_intermediate_output_c119; assert_equal("I.a.Solid", worksheet.intermediate_output_c119); end
  def test_intermediate_output_d119; assert_equal("Coal / Biomass", worksheet.intermediate_output_d119); end
  def test_intermediate_output_h119; assert_in_epsilon(28.137999999999998, worksheet.intermediate_output_h119, 0.001); end
  def test_intermediate_output_i119; assert_in_epsilon(28.137999999999998, worksheet.intermediate_output_i119, 0.001); end
  def test_intermediate_output_j119; assert_in_epsilon(23.422, worksheet.intermediate_output_j119, 0.001); end
  def test_intermediate_output_k119; assert_in_epsilon(17.055000000000003, worksheet.intermediate_output_k119, 0.001); end
  def test_intermediate_output_l119; assert_in_epsilon(8.612, worksheet.intermediate_output_l119, 0.001); end
  def test_intermediate_output_m119; assert_in_epsilon(1.7999999999999998, worksheet.intermediate_output_m119, 0.001); end
  def test_intermediate_output_n119; assert_in_delta(0.6, worksheet.intermediate_output_n119, 0.001); end
  def test_intermediate_output_o119; assert_in_delta(0.6, worksheet.intermediate_output_o119, 0.001); end
  def test_intermediate_output_p119; assert_in_delta(0.6, worksheet.intermediate_output_p119, 0.001); end
  def test_intermediate_output_q119; assert_in_delta(0.6, worksheet.intermediate_output_q119, 0.001); end
  def test_intermediate_output_c120; assert_equal("I.a.Gas", worksheet.intermediate_output_c120); end
  def test_intermediate_output_d120; assert_equal("Gas / Biogas", worksheet.intermediate_output_d120); end
  def test_intermediate_output_h120; assert_in_epsilon(30.343667698868483, worksheet.intermediate_output_h120, 0.001); end
  def test_intermediate_output_i120; assert_in_epsilon(27.425372184910167, worksheet.intermediate_output_i120, 0.001); end
  def test_intermediate_output_j120; assert_in_epsilon(30.85295936843783, worksheet.intermediate_output_j120, 0.001); end
  def test_intermediate_output_k120; assert_in_epsilon(38.84804337684133, worksheet.intermediate_output_k120, 0.001); end
  def test_intermediate_output_l120; assert_in_epsilon(50.759283601869974, worksheet.intermediate_output_l120, 0.001); end
  def test_intermediate_output_m120; assert_in_epsilon(62.16671610830432, worksheet.intermediate_output_m120, 0.001); end
  def test_intermediate_output_n120; assert_in_epsilon(71.57889427786667, worksheet.intermediate_output_n120, 0.001); end
  def test_intermediate_output_o120; assert_in_epsilon(78.97527071757568, worksheet.intermediate_output_o120, 0.001); end
  def test_intermediate_output_p120; assert_in_epsilon(86.3411751287377, worksheet.intermediate_output_p120, 0.001); end
  def test_intermediate_output_q120; assert_in_epsilon(91.67999032038533, worksheet.intermediate_output_q120, 0.001); end
  def test_intermediate_output_c121; assert_equal("I.b", worksheet.intermediate_output_c121); end
  def test_intermediate_output_d121; assert_equal("Carbon Capture Storage (CCS)", worksheet.intermediate_output_d121); end
  def test_intermediate_output_h121; assert_in_delta(0, (worksheet.intermediate_output_h121||0), 0.001); end
  def test_intermediate_output_i121; assert_in_delta(0, (worksheet.intermediate_output_i121||0), 0.001); end
  def test_intermediate_output_j121; assert_in_delta(0.8500000000000001, worksheet.intermediate_output_j121, 0.001); end
  def test_intermediate_output_k121; assert_in_epsilon(1.7000000000000002, worksheet.intermediate_output_k121, 0.001); end
  def test_intermediate_output_l121; assert_in_epsilon(1.7, worksheet.intermediate_output_l121, 0.001); end
  def test_intermediate_output_m121; assert_in_epsilon(1.7, worksheet.intermediate_output_m121, 0.001); end
  def test_intermediate_output_n121; assert_in_epsilon(1.7, worksheet.intermediate_output_n121, 0.001); end
  def test_intermediate_output_o121; assert_in_epsilon(1.7, worksheet.intermediate_output_o121, 0.001); end
  def test_intermediate_output_p121; assert_in_epsilon(1.7, worksheet.intermediate_output_p121, 0.001); end
  def test_intermediate_output_q121; assert_in_epsilon(1.7, worksheet.intermediate_output_q121, 0.001); end
  def test_intermediate_output_c122; assert_equal("II.a", worksheet.intermediate_output_c122); end
  def test_intermediate_output_d122; assert_equal("Nuclear power", worksheet.intermediate_output_d122); end
  def test_intermediate_output_h122; assert_in_epsilon(11, worksheet.intermediate_output_h122, 0.001); end
  def test_intermediate_output_i122; assert_in_epsilon(10, worksheet.intermediate_output_i122, 0.001); end
  def test_intermediate_output_j122; assert_in_epsilon(7.2, worksheet.intermediate_output_j122, 0.001); end
  def test_intermediate_output_k122; assert_in_epsilon(3.6000000000000005, worksheet.intermediate_output_k122, 0.001); end
  def test_intermediate_output_l122; assert_in_epsilon(1.2000000000000006, worksheet.intermediate_output_l122, 0.001); end
  def test_intermediate_output_m122; assert_in_epsilon(1.2000000000000006, worksheet.intermediate_output_m122, 0.001); end
  def test_intermediate_output_n122; assert_in_delta(0, (worksheet.intermediate_output_n122||0), 0.001); end
  def test_intermediate_output_o122; assert_in_delta(0, (worksheet.intermediate_output_o122||0), 0.001); end
  def test_intermediate_output_p122; assert_in_delta(0, (worksheet.intermediate_output_p122||0), 0.001); end
  def test_intermediate_output_q122; assert_in_delta(0, (worksheet.intermediate_output_q122||0), 0.001); end
  def test_intermediate_output_c123; assert_equal("III.a.1", worksheet.intermediate_output_c123); end
  def test_intermediate_output_d123; assert_equal("Onshore wind", worksheet.intermediate_output_d123); end
  def test_intermediate_output_h123; assert_in_epsilon(2.0834, worksheet.intermediate_output_h123, 0.001); end
  def test_intermediate_output_i123; assert_in_epsilon(3.923399999999999, worksheet.intermediate_output_i123, 0.001); end
  def test_intermediate_output_j123; assert_in_epsilon(6.673399999999999, worksheet.intermediate_output_j123, 0.001); end
  def test_intermediate_output_k123; assert_in_epsilon(9.423399999999999, worksheet.intermediate_output_k123, 0.001); end
  def test_intermediate_output_l123; assert_in_epsilon(11.013399999999999, worksheet.intermediate_output_l123, 0.001); end
  def test_intermediate_output_m123; assert_in_epsilon(8.283399999999999, worksheet.intermediate_output_m123, 0.001); end
  def test_intermediate_output_n123; assert_in_epsilon(5.5333999999999985, worksheet.intermediate_output_n123, 0.001); end
  def test_intermediate_output_o123; assert_in_epsilon(2.7833999999999985, worksheet.intermediate_output_o123, 0.001); end
  def test_intermediate_output_p123; assert_in_delta(0.03339999999999854, worksheet.intermediate_output_p123, 0.001); end
  def test_intermediate_output_q123; assert_in_delta(0.03339999999999854, worksheet.intermediate_output_q123, 0.001); end
  def test_intermediate_output_c124; assert_equal("III.a.2", worksheet.intermediate_output_c124); end
  def test_intermediate_output_d124; assert_equal("Offshore wind", worksheet.intermediate_output_d124); end
  def test_intermediate_output_h124; assert_in_delta(0.3938, worksheet.intermediate_output_h124, 0.001); end
  def test_intermediate_output_i124; assert_in_epsilon(1.343800000000001, worksheet.intermediate_output_i124, 0.001); end
  def test_intermediate_output_j124; assert_in_epsilon(3.8438000000000008, worksheet.intermediate_output_j124, 0.001); end
  def test_intermediate_output_k124; assert_in_epsilon(6.343800000000001, worksheet.intermediate_output_k124, 0.001); end
  def test_intermediate_output_l124; assert_in_epsilon(8.193800000000001, worksheet.intermediate_output_l124, 0.001); end
  def test_intermediate_output_m124; assert_in_epsilon(7, worksheet.intermediate_output_m124, 0.001); end
  def test_intermediate_output_n124; assert_in_epsilon(4.5, worksheet.intermediate_output_n124, 0.001); end
  def test_intermediate_output_o124; assert_in_epsilon(2, worksheet.intermediate_output_o124, 0.001); end
  def test_intermediate_output_p124; assert_in_delta(0, (worksheet.intermediate_output_p124||0), 0.001); end
  def test_intermediate_output_q124; assert_in_delta(0, (worksheet.intermediate_output_q124||0), 0.001); end
  def test_intermediate_output_c125; assert_equal("III.b", worksheet.intermediate_output_c125); end
  def test_intermediate_output_d125; assert_equal("Hydroelectric power stations", worksheet.intermediate_output_d125); end
  def test_intermediate_output_h125; assert_in_epsilon(1.293, worksheet.intermediate_output_h125, 0.001); end
  def test_intermediate_output_i125; assert_in_epsilon(1.6, worksheet.intermediate_output_i125, 0.001); end
  def test_intermediate_output_j125; assert_in_epsilon(1.6, worksheet.intermediate_output_j125, 0.001); end
  def test_intermediate_output_k125; assert_in_epsilon(1.6, worksheet.intermediate_output_k125, 0.001); end
  def test_intermediate_output_l125; assert_in_epsilon(1.6, worksheet.intermediate_output_l125, 0.001); end
  def test_intermediate_output_m125; assert_in_epsilon(1.6, worksheet.intermediate_output_m125, 0.001); end
  def test_intermediate_output_n125; assert_in_epsilon(1.6, worksheet.intermediate_output_n125, 0.001); end
  def test_intermediate_output_o125; assert_in_epsilon(1.6, worksheet.intermediate_output_o125, 0.001); end
  def test_intermediate_output_p125; assert_in_epsilon(1.6, worksheet.intermediate_output_p125, 0.001); end
  def test_intermediate_output_q125; assert_in_epsilon(1.6, worksheet.intermediate_output_q125, 0.001); end
  def test_intermediate_output_c126; assert_equal("III.c.Wave", worksheet.intermediate_output_c126); end
  def test_intermediate_output_d126; assert_equal("Wave", worksheet.intermediate_output_d126); end
  def test_intermediate_output_h126; assert_in_delta(0, (worksheet.intermediate_output_h126||0), 0.001); end
  def test_intermediate_output_i126; assert_in_delta(0, (worksheet.intermediate_output_i126||0), 0.001); end
  def test_intermediate_output_j126; assert_in_delta(0.0015220700152207, worksheet.intermediate_output_j126, 0.001); end
  def test_intermediate_output_k126; assert_in_delta(0.0803314730255369, worksheet.intermediate_output_k126, 0.001); end
  def test_intermediate_output_l126; assert_in_delta(0.200828682563842, worksheet.intermediate_output_l126, 0.001); end
  def test_intermediate_output_m126; assert_in_delta(0.200828682563842, worksheet.intermediate_output_m126, 0.001); end
  def test_intermediate_output_n126; assert_in_delta(0, (worksheet.intermediate_output_n126||0), 0.001); end
  def test_intermediate_output_o126; assert_in_delta(0, (worksheet.intermediate_output_o126||0), 0.001); end
  def test_intermediate_output_p126; assert_in_delta(0, (worksheet.intermediate_output_p126||0), 0.001); end
  def test_intermediate_output_q126; assert_in_delta(0, (worksheet.intermediate_output_q126||0), 0.001); end
  def test_intermediate_output_c127; assert_equal("III.c.TidalStream", worksheet.intermediate_output_c127); end
  def test_intermediate_output_d127; assert_equal("Tidal Stream", worksheet.intermediate_output_d127); end
  def test_intermediate_output_h127; assert_in_delta(0, (worksheet.intermediate_output_h127||0), 0.001); end
  def test_intermediate_output_i127; assert_in_delta(0.00158548959918823, worksheet.intermediate_output_i127, 0.001); end
  def test_intermediate_output_j127; assert_in_delta(0.00634195839675292, worksheet.intermediate_output_j127, 0.001); end
  def test_intermediate_output_k127; assert_in_delta(0.0158548959918823, worksheet.intermediate_output_k127, 0.001); end
  def test_intermediate_output_l127; assert_in_delta(0.0396372399797057, worksheet.intermediate_output_l127, 0.001); end
  def test_intermediate_output_m127; assert_in_delta(0.0396372399797057, worksheet.intermediate_output_m127, 0.001); end
  def test_intermediate_output_n127; assert_in_delta(0, (worksheet.intermediate_output_n127||0), 0.001); end
  def test_intermediate_output_o127; assert_in_delta(0, (worksheet.intermediate_output_o127||0), 0.001); end
  def test_intermediate_output_p127; assert_in_delta(0, (worksheet.intermediate_output_p127||0), 0.001); end
  def test_intermediate_output_q127; assert_in_delta(0, (worksheet.intermediate_output_q127||0), 0.001); end
  def test_intermediate_output_c128; assert_equal("III.c.TidalRange", worksheet.intermediate_output_c128); end
  def test_intermediate_output_d128; assert_equal("Tidal Range", worksheet.intermediate_output_d128); end
  def test_intermediate_output_h128; assert_in_delta(0, (worksheet.intermediate_output_h128||0), 0.001); end
  def test_intermediate_output_i128; assert_in_delta(0, (worksheet.intermediate_output_i128||0), 0.001); end
  def test_intermediate_output_j128; assert_in_delta(0, (worksheet.intermediate_output_j128||0), 0.001); end
  def test_intermediate_output_k128; assert_in_delta(0, (worksheet.intermediate_output_k128||0), 0.001); end
  def test_intermediate_output_l128; assert_in_delta(0, (worksheet.intermediate_output_l128||0), 0.001); end
  def test_intermediate_output_m128; assert_in_delta(0, (worksheet.intermediate_output_m128||0), 0.001); end
  def test_intermediate_output_n128; assert_in_delta(0, (worksheet.intermediate_output_n128||0), 0.001); end
  def test_intermediate_output_o128; assert_in_delta(0, (worksheet.intermediate_output_o128||0), 0.001); end
  def test_intermediate_output_p128; assert_in_delta(0, (worksheet.intermediate_output_p128||0), 0.001); end
  def test_intermediate_output_q128; assert_in_delta(0, (worksheet.intermediate_output_q128||0), 0.001); end
  def test_intermediate_output_c129; assert_equal("III.d", worksheet.intermediate_output_c129); end
  def test_intermediate_output_d129; assert_equal("Geothermal electricity", worksheet.intermediate_output_d129); end
  def test_intermediate_output_h129; assert_in_delta(0, (worksheet.intermediate_output_h129||0), 0.001); end
  def test_intermediate_output_i129; assert_in_delta(0, (worksheet.intermediate_output_i129||0), 0.001); end
  def test_intermediate_output_j129; assert_in_delta(0, (worksheet.intermediate_output_j129||0), 0.001); end
  def test_intermediate_output_k129; assert_in_delta(0, (worksheet.intermediate_output_k129||0), 0.001); end
  def test_intermediate_output_l129; assert_in_delta(0, (worksheet.intermediate_output_l129||0), 0.001); end
  def test_intermediate_output_m129; assert_in_delta(0, (worksheet.intermediate_output_m129||0), 0.001); end
  def test_intermediate_output_n129; assert_in_delta(0, (worksheet.intermediate_output_n129||0), 0.001); end
  def test_intermediate_output_o129; assert_in_delta(0, (worksheet.intermediate_output_o129||0), 0.001); end
  def test_intermediate_output_p129; assert_in_delta(0, (worksheet.intermediate_output_p129||0), 0.001); end
  def test_intermediate_output_q129; assert_in_delta(0, (worksheet.intermediate_output_q129||0), 0.001); end
  def test_intermediate_output_c130; assert_equal("IV.a", worksheet.intermediate_output_c130); end
  def test_intermediate_output_d130; assert_equal("Solar PV", worksheet.intermediate_output_d130); end
  def test_intermediate_output_h130; assert_in_delta(0.02, worksheet.intermediate_output_h130, 0.001); end
  def test_intermediate_output_i130; assert_in_delta(0.033, worksheet.intermediate_output_i130, 0.001); end
  def test_intermediate_output_j130; assert_in_delta(0.016, worksheet.intermediate_output_j130, 0.001); end
  def test_intermediate_output_k130; assert_in_delta(0, (worksheet.intermediate_output_k130||0), 0.001); end
  def test_intermediate_output_l130; assert_in_delta(0, (worksheet.intermediate_output_l130||0), 0.001); end
  def test_intermediate_output_m130; assert_in_delta(0, (worksheet.intermediate_output_m130||0), 0.001); end
  def test_intermediate_output_n130; assert_in_delta(0, (worksheet.intermediate_output_n130||0), 0.001); end
  def test_intermediate_output_o130; assert_in_delta(0, (worksheet.intermediate_output_o130||0), 0.001); end
  def test_intermediate_output_p130; assert_in_delta(0, (worksheet.intermediate_output_p130||0), 0.001); end
  def test_intermediate_output_q130; assert_in_delta(0, (worksheet.intermediate_output_q130||0), 0.001); end
  def test_intermediate_output_c131; assert_equal("VII.c", worksheet.intermediate_output_c131); end
  def test_intermediate_output_d131; assert_equal("Standby / peaking gas", worksheet.intermediate_output_d131); end
  def test_intermediate_output_h131; assert_in_delta(0, (worksheet.intermediate_output_h131||0), 0.001); end
  def test_intermediate_output_i131; assert_in_delta(0, (worksheet.intermediate_output_i131||0), 0.001); end
  def test_intermediate_output_j131; assert_in_delta(0, (worksheet.intermediate_output_j131||0), 0.001); end
  def test_intermediate_output_k131; assert_in_delta(0, (worksheet.intermediate_output_k131||0), 0.001); end
  def test_intermediate_output_l131; assert_in_delta(0, (worksheet.intermediate_output_l131||0), 0.001); end
  def test_intermediate_output_m131; assert_in_delta(0, (worksheet.intermediate_output_m131||0), 0.001); end
  def test_intermediate_output_n131; assert_in_delta(0, (worksheet.intermediate_output_n131||0), 0.001); end
  def test_intermediate_output_o131; assert_in_delta(0, (worksheet.intermediate_output_o131||0), 0.001); end
  def test_intermediate_output_p131; assert_in_delta(0, (worksheet.intermediate_output_p131||0), 0.001); end
  def test_intermediate_output_q131; assert_in_delta(0, (worksheet.intermediate_output_q131||0), 0.001); end
  def test_intermediate_output_d132; assert_equal("Total generation", worksheet.intermediate_output_d132); end
  def test_intermediate_output_h132; assert_in_epsilon(77.37186769886848, worksheet.intermediate_output_h132, 0.001); end
  def test_intermediate_output_i132; assert_in_epsilon(76.52195767450935, worksheet.intermediate_output_i132, 0.001); end
  def test_intermediate_output_j132; assert_in_epsilon(74.4660233968498, worksheet.intermediate_output_j132, 0.001); end
  def test_intermediate_output_k132; assert_in_epsilon(78.66642974585875, worksheet.intermediate_output_k132, 0.001); end
  def test_intermediate_output_l132; assert_in_epsilon(83.31894952441353, worksheet.intermediate_output_l132, 0.001); end
  def test_intermediate_output_m132; assert_in_epsilon(83.99058203084786, worksheet.intermediate_output_m132, 0.001); end
  def test_intermediate_output_n132; assert_in_epsilon(85.51229427786666, worksheet.intermediate_output_n132, 0.001); end
  def test_intermediate_output_o132; assert_in_epsilon(87.65867071757567, worksheet.intermediate_output_o132, 0.001); end
  def test_intermediate_output_p132; assert_in_epsilon(90.2745751287377, worksheet.intermediate_output_p132, 0.001); end
  def test_intermediate_output_q132; assert_in_epsilon(95.61339032038532, worksheet.intermediate_output_q132, 0.001); end
  def test_intermediate_output_b135; assert_equal("Emissions", worksheet.intermediate_output_b135); end
  def test_intermediate_output_c137; assert_equal("Emissions as % of base year, adjusted so that 2007 matches actuals", worksheet.intermediate_output_c137); end
  def test_intermediate_output_d138; assert_equal("IPCC Sector", worksheet.intermediate_output_d138); end
  def test_intermediate_output_f138; assert_equal("2007 Actuals, GHG Inv.", worksheet.intermediate_output_f138); end
  def test_intermediate_output_h138; assert_in_epsilon(2007, worksheet.intermediate_output_h138, 0.001); end
  def test_intermediate_output_i138; assert_in_epsilon(2010, worksheet.intermediate_output_i138, 0.001); end
  def test_intermediate_output_j138; assert_in_epsilon(2015, worksheet.intermediate_output_j138, 0.001); end
  def test_intermediate_output_k138; assert_in_epsilon(2020, worksheet.intermediate_output_k138, 0.001); end
  def test_intermediate_output_l138; assert_in_epsilon(2025, worksheet.intermediate_output_l138, 0.001); end
  def test_intermediate_output_m138; assert_in_epsilon(2030, worksheet.intermediate_output_m138, 0.001); end
  def test_intermediate_output_n138; assert_in_epsilon(2035, worksheet.intermediate_output_n138, 0.001); end
  def test_intermediate_output_o138; assert_in_epsilon(2040, worksheet.intermediate_output_o138, 0.001); end
  def test_intermediate_output_p138; assert_in_epsilon(2045, worksheet.intermediate_output_p138, 0.001); end
  def test_intermediate_output_q138; assert_in_epsilon(2050, worksheet.intermediate_output_q138, 0.001); end
  def test_intermediate_output_c139; assert_equal("1A", worksheet.intermediate_output_c139); end
  def test_intermediate_output_d139; assert_equal("Fuel Combustion", worksheet.intermediate_output_d139); end
  def test_intermediate_output_c140; assert_equal("1B", worksheet.intermediate_output_c140); end
  def test_intermediate_output_d140; assert_equal("Fugitive Emissions from Fuels", worksheet.intermediate_output_d140); end
  def test_intermediate_output_c141; assert_in_delta(1, worksheet.intermediate_output_c141, 0.001); end
  def test_intermediate_output_d141; assert_equal("Fuel Combustion", worksheet.intermediate_output_d141); end
  def test_intermediate_output_f141; assert_in_delta(0.6828579138027161, worksheet.intermediate_output_f141, 0.001); end
  def test_intermediate_output_h141; assert_in_delta(0.6678069130499626, worksheet.intermediate_output_h141, 0.001); end
  def test_intermediate_output_i141; assert_in_delta(0.6708004234176836, worksheet.intermediate_output_i141, 0.001); end
  def test_intermediate_output_j141; assert_in_delta(0.6571747189058497, worksheet.intermediate_output_j141, 0.001); end
  def test_intermediate_output_k141; assert_in_delta(0.6482115264128914, worksheet.intermediate_output_k141, 0.001); end
  def test_intermediate_output_l141; assert_in_delta(0.6317669771154719, worksheet.intermediate_output_l141, 0.001); end
  def test_intermediate_output_m141; assert_in_delta(0.6223141660124656, worksheet.intermediate_output_m141, 0.001); end
  def test_intermediate_output_n141; assert_in_delta(0.652232630034348, worksheet.intermediate_output_n141, 0.001); end
  def test_intermediate_output_o141; assert_in_delta(0.6847773100996317, worksheet.intermediate_output_o141, 0.001); end
  def test_intermediate_output_p141; assert_in_delta(0.7204648309839465, worksheet.intermediate_output_p141, 0.001); end
  def test_intermediate_output_q141; assert_in_delta(0.7520402626448672, worksheet.intermediate_output_q141, 0.001); end
  def test_intermediate_output_c142; assert_in_epsilon(2, worksheet.intermediate_output_c142, 0.001); end
  def test_intermediate_output_d142; assert_equal("Industrial Processes", worksheet.intermediate_output_d142); end
  def test_intermediate_output_f142; assert_in_delta(0.034882184192791134, worksheet.intermediate_output_f142, 0.001); end
  def test_intermediate_output_h142; assert_in_delta(0.035310682202552277, worksheet.intermediate_output_h142, 0.001); end
  def test_intermediate_output_i142; assert_in_delta(0.03572856045682798, worksheet.intermediate_output_i142, 0.001); end
  def test_intermediate_output_j142; assert_in_delta(0.036523261324670285, worksheet.intermediate_output_j142, 0.001); end
  def test_intermediate_output_k142; assert_in_delta(0.03744497807715714, worksheet.intermediate_output_k142, 0.001); end
  def test_intermediate_output_l142; assert_in_delta(0.0389490766041948, worksheet.intermediate_output_l142, 0.001); end
  def test_intermediate_output_m142; assert_in_delta(0.040565329677541735, worksheet.intermediate_output_m142, 0.001); end
  def test_intermediate_output_n142; assert_in_delta(0.042301496667442366, worksheet.intermediate_output_n142, 0.001); end
  def test_intermediate_output_o142; assert_in_delta(0.04416588490724138, worksheet.intermediate_output_o142, 0.001); end
  def test_intermediate_output_p142; assert_in_delta(0.04616738840221109, worksheet.intermediate_output_p142, 0.001); end
  def test_intermediate_output_q142; assert_in_delta(0.04831552927644501, worksheet.intermediate_output_q142, 0.001); end
  def test_intermediate_output_c143; assert_in_epsilon(3, worksheet.intermediate_output_c143, 0.001); end
  def test_intermediate_output_d143; assert_equal("Solvent and Other Product Use", worksheet.intermediate_output_d143); end
  def test_intermediate_output_f143; assert_in_delta(0, (worksheet.intermediate_output_f143||0), 0.001); end
  def test_intermediate_output_h143; assert_in_delta(0, (worksheet.intermediate_output_h143||0), 0.001); end
  def test_intermediate_output_i143; assert_in_delta(0, (worksheet.intermediate_output_i143||0), 0.001); end
  def test_intermediate_output_j143; assert_in_delta(0, (worksheet.intermediate_output_j143||0), 0.001); end
  def test_intermediate_output_k143; assert_in_delta(0, (worksheet.intermediate_output_k143||0), 0.001); end
  def test_intermediate_output_l143; assert_in_delta(0, (worksheet.intermediate_output_l143||0), 0.001); end
  def test_intermediate_output_m143; assert_in_delta(0, (worksheet.intermediate_output_m143||0), 0.001); end
  def test_intermediate_output_n143; assert_in_delta(0, (worksheet.intermediate_output_n143||0), 0.001); end
  def test_intermediate_output_o143; assert_in_delta(0, (worksheet.intermediate_output_o143||0), 0.001); end
  def test_intermediate_output_p143; assert_in_delta(0, (worksheet.intermediate_output_p143||0), 0.001); end
  def test_intermediate_output_q143; assert_in_delta(0, (worksheet.intermediate_output_q143||0), 0.001); end
  def test_intermediate_output_c144; assert_in_epsilon(4, worksheet.intermediate_output_c144, 0.001); end
  def test_intermediate_output_d144; assert_equal("Agriculture", worksheet.intermediate_output_d144); end
  def test_intermediate_output_f144; assert_in_delta(0.05435207327207761, worksheet.intermediate_output_f144, 0.001); end
  def test_intermediate_output_h144; assert_in_delta(0.05482675998829791, worksheet.intermediate_output_h144, 0.001); end
  def test_intermediate_output_i144; assert_in_delta(0.05386431563416159, worksheet.intermediate_output_i144, 0.001); end
  def test_intermediate_output_j144; assert_in_delta(0.05245627746567819, worksheet.intermediate_output_j144, 0.001); end
  def test_intermediate_output_k144; assert_in_delta(0.049823919456519365, worksheet.intermediate_output_k144, 0.001); end
  def test_intermediate_output_l144; assert_in_delta(0.050069858173583344, worksheet.intermediate_output_l144, 0.001); end
  def test_intermediate_output_m144; assert_in_delta(0.05032017765606012, worksheet.intermediate_output_m144, 0.001); end
  def test_intermediate_output_n144; assert_in_delta(0.050574994421691756, worksheet.intermediate_output_n144, 0.001); end
  def test_intermediate_output_o144; assert_in_delta(0.05083442861171919, worksheet.intermediate_output_o144, 0.001); end
  def test_intermediate_output_p144; assert_in_delta(0.0510986041083521, worksheet.intermediate_output_p144, 0.001); end
  def test_intermediate_output_q144; assert_in_delta(0.05136764865608457, worksheet.intermediate_output_q144, 0.001); end
  def test_intermediate_output_c145; assert_in_epsilon(5, worksheet.intermediate_output_c145, 0.001); end
  def test_intermediate_output_d145; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.intermediate_output_d145); end
  def test_intermediate_output_f145; assert_in_delta(-0.002225951062639978, worksheet.intermediate_output_f145, 0.001); end
  def test_intermediate_output_h145; assert_in_delta(-0.0023102093696985592, worksheet.intermediate_output_h145, 0.001); end
  def test_intermediate_output_i145; assert_in_delta(0.0032277657925736543, worksheet.intermediate_output_i145, 0.001); end
  def test_intermediate_output_j145; assert_in_delta(0.007511927762985841, worksheet.intermediate_output_j145, 0.001); end
  def test_intermediate_output_k145; assert_in_delta(0.011668194382539646, worksheet.intermediate_output_k145, 0.001); end
  def test_intermediate_output_l145; assert_in_delta(0.015509596674971898, worksheet.intermediate_output_l145, 0.001); end
  def test_intermediate_output_m145; assert_in_delta(0.017669964458809334, worksheet.intermediate_output_m145, 0.001); end
  def test_intermediate_output_n145; assert_in_delta(0.018053247474649627, worksheet.intermediate_output_n145, 0.001); end
  def test_intermediate_output_o145; assert_in_delta(0.016804500721319563, worksheet.intermediate_output_o145, 0.001); end
  def test_intermediate_output_p145; assert_in_delta(0.015230277315978697, worksheet.intermediate_output_p145, 0.001); end
  def test_intermediate_output_q145; assert_in_delta(0.014630544800564478, worksheet.intermediate_output_q145, 0.001); end
  def test_intermediate_output_c146; assert_in_epsilon(6, worksheet.intermediate_output_c146, 0.001); end
  def test_intermediate_output_d146; assert_equal("Waste", worksheet.intermediate_output_d146); end
  def test_intermediate_output_f146; assert_in_delta(0.028590076266100505, worksheet.intermediate_output_f146, 0.001); end
  def test_intermediate_output_h146; assert_in_delta(0.029242253344372738, worksheet.intermediate_output_h146, 0.001); end
  def test_intermediate_output_i146; assert_in_delta(0.01925939440094479, worksheet.intermediate_output_i146, 0.001); end
  def test_intermediate_output_j146; assert_in_delta(0.01696919133467546, worksheet.intermediate_output_j146, 0.001); end
  def test_intermediate_output_k146; assert_in_delta(0.014681373544582689, worksheet.intermediate_output_k146, 0.001); end
  def test_intermediate_output_l146; assert_in_delta(0.014442189928574645, worksheet.intermediate_output_l146, 0.001); end
  def test_intermediate_output_m146; assert_in_delta(0.014054645604210197, worksheet.intermediate_output_m146, 0.001); end
  def test_intermediate_output_n146; assert_in_delta(0.01409545496226172, worksheet.intermediate_output_n146, 0.001); end
  def test_intermediate_output_o146; assert_in_delta(0.01405509003650066, worksheet.intermediate_output_o146, 0.001); end
  def test_intermediate_output_p146; assert_in_delta(0.013935922060302336, worksheet.intermediate_output_p146, 0.001); end
  def test_intermediate_output_q146; assert_in_delta(0.013738020737025677, worksheet.intermediate_output_q146, 0.001); end
  def test_intermediate_output_c147; assert_in_epsilon(7, worksheet.intermediate_output_c147, 0.001); end
  def test_intermediate_output_d147; assert_equal("Other", worksheet.intermediate_output_d147); end
  def test_intermediate_output_f147; assert_in_delta(0, (worksheet.intermediate_output_f147||0), 0.001); end
  def test_intermediate_output_h147; assert_in_delta(0, (worksheet.intermediate_output_h147||0), 0.001); end
  def test_intermediate_output_i147; assert_in_delta(0, (worksheet.intermediate_output_i147||0), 0.001); end
  def test_intermediate_output_j147; assert_in_delta(0, (worksheet.intermediate_output_j147||0), 0.001); end
  def test_intermediate_output_k147; assert_in_delta(0, (worksheet.intermediate_output_k147||0), 0.001); end
  def test_intermediate_output_l147; assert_in_delta(0, (worksheet.intermediate_output_l147||0), 0.001); end
  def test_intermediate_output_m147; assert_in_delta(0, (worksheet.intermediate_output_m147||0), 0.001); end
  def test_intermediate_output_n147; assert_in_delta(0, (worksheet.intermediate_output_n147||0), 0.001); end
  def test_intermediate_output_o147; assert_in_delta(0, (worksheet.intermediate_output_o147||0), 0.001); end
  def test_intermediate_output_p147; assert_in_delta(0, (worksheet.intermediate_output_p147||0), 0.001); end
  def test_intermediate_output_q147; assert_in_delta(0, (worksheet.intermediate_output_q147||0), 0.001); end
  def test_intermediate_output_c148; assert_equal("X1", worksheet.intermediate_output_c148); end
  def test_intermediate_output_d148; assert_equal("International Aviation and Shipping", worksheet.intermediate_output_d148); end
  def test_intermediate_output_f148; assert_in_delta(0.05318296088087667, worksheet.intermediate_output_f148, 0.001); end
  def test_intermediate_output_h148; assert_in_delta(0.06676285813643498, worksheet.intermediate_output_h148, 0.001); end
  def test_intermediate_output_i148; assert_in_delta(0.05881112938274484, worksheet.intermediate_output_i148, 0.001); end
  def test_intermediate_output_j148; assert_in_delta(0.06607647289352106, worksheet.intermediate_output_j148, 0.001); end
  def test_intermediate_output_k148; assert_in_delta(0.07413011695435195, worksheet.intermediate_output_k148, 0.001); end
  def test_intermediate_output_l148; assert_in_delta(0.07977039088586957, worksheet.intermediate_output_l148, 0.001); end
  def test_intermediate_output_m148; assert_in_delta(0.08513180391921189, worksheet.intermediate_output_m148, 0.001); end
  def test_intermediate_output_n148; assert_in_delta(0.09199285887775663, worksheet.intermediate_output_n148, 0.001); end
  def test_intermediate_output_o148; assert_in_delta(0.0967634535243631, worksheet.intermediate_output_o148, 0.001); end
  def test_intermediate_output_p148; assert_in_delta(0.10098572188434322, worksheet.intermediate_output_p148, 0.001); end
  def test_intermediate_output_q148; assert_in_delta(0.10261310391848912, worksheet.intermediate_output_q148, 0.001); end
  def test_intermediate_output_c149; assert_equal("X2", worksheet.intermediate_output_c149); end
  def test_intermediate_output_d149; assert_equal("Bioenergy credit", worksheet.intermediate_output_d149); end
  def test_intermediate_output_h149; assert_in_delta(0, (worksheet.intermediate_output_h149||0), 0.001); end
  def test_intermediate_output_i149; assert_in_delta(-0.012315653838376942, worksheet.intermediate_output_i149, 0.001); end
  def test_intermediate_output_j149; assert_in_delta(-0.013314784254263952, worksheet.intermediate_output_j149, 0.001); end
  def test_intermediate_output_k149; assert_in_delta(-0.016198553641164022, worksheet.intermediate_output_k149, 0.001); end
  def test_intermediate_output_l149; assert_in_delta(-0.01851637843336895, worksheet.intermediate_output_l149, 0.001); end
  def test_intermediate_output_m149; assert_in_delta(-0.01971090835860932, worksheet.intermediate_output_m149, 0.001); end
  def test_intermediate_output_n149; assert_in_delta(-0.020551111197713436, worksheet.intermediate_output_n149, 0.001); end
  def test_intermediate_output_o149; assert_in_delta(-0.021453040375083103, worksheet.intermediate_output_o149, 0.001); end
  def test_intermediate_output_p149; assert_in_delta(-0.02241835503408012, worksheet.intermediate_output_p149, 0.001); end
  def test_intermediate_output_q149; assert_in_delta(-0.023448029706508396, worksheet.intermediate_output_q149, 0.001); end
  def test_intermediate_output_c150; assert_equal("X3", worksheet.intermediate_output_c150); end
  def test_intermediate_output_d150; assert_equal("Carbon capture", worksheet.intermediate_output_d150); end
  def test_intermediate_output_h150; assert_in_delta(0, (worksheet.intermediate_output_h150||0), 0.001); end
  def test_intermediate_output_i150; assert_in_delta(0, (worksheet.intermediate_output_i150||0), 0.001); end
  def test_intermediate_output_j150; assert_in_delta(-0.0035891576707315818, worksheet.intermediate_output_j150, 0.001); end
  def test_intermediate_output_k150; assert_in_delta(-0.008454996178783602, worksheet.intermediate_output_k150, 0.001); end
  def test_intermediate_output_l150; assert_in_delta(-0.008277235536726239, worksheet.intermediate_output_l150, 0.001); end
  def test_intermediate_output_m150; assert_in_delta(-0.00810684524173644, worksheet.intermediate_output_m150, 0.001); end
  def test_intermediate_output_n150; assert_in_delta(-0.00794337383560226, worksheet.intermediate_output_n150, 0.001); end
  def test_intermediate_output_o150; assert_in_delta(-0.007925376916571596, worksheet.intermediate_output_o150, 0.001); end
  def test_intermediate_output_p150; assert_in_delta(-0.0077689716270428755, worksheet.intermediate_output_p150, 0.001); end
  def test_intermediate_output_q150; assert_in_delta(-0.00761866161510782, worksheet.intermediate_output_q150, 0.001); end
  def test_intermediate_output_d151; assert_equal("Total", worksheet.intermediate_output_d151); end
  def test_intermediate_output_f151; assert_in_delta(0.851639257351922, worksheet.intermediate_output_f151, 0.001); end
  def test_intermediate_output_h151; assert_in_delta(0.8516392573519219, worksheet.intermediate_output_h151, 0.001); end
  def test_intermediate_output_i151; assert_in_delta(0.8293759352465595, worksheet.intermediate_output_i151, 0.001); end
  def test_intermediate_output_j151; assert_in_delta(0.819807907762385, worksheet.intermediate_output_j151, 0.001); end
  def test_intermediate_output_k151; assert_in_delta(0.8113065590080945, worksheet.intermediate_output_k151, 0.001); end
  def test_intermediate_output_l151; assert_in_delta(0.8037144754125709, worksheet.intermediate_output_l151, 0.001); end
  def test_intermediate_output_m151; assert_in_delta(0.8022383337279532, worksheet.intermediate_output_m151, 0.001); end
  def test_intermediate_output_n151; assert_in_delta(0.8407561974048343, worksheet.intermediate_output_n151, 0.001); end
  def test_intermediate_output_o151; assert_in_delta(0.8780222506091209, worksheet.intermediate_output_o151, 0.001); end
  def test_intermediate_output_p151; assert_in_delta(0.9176954180940111, worksheet.intermediate_output_p151, 0.001); end
  def test_intermediate_output_q151; assert_in_delta(0.9516384187118598, worksheet.intermediate_output_q151, 0.001); end
  def test_intermediate_output_c153; assert_equal("Excluding international bunkers", worksheet.intermediate_output_c153); end
  def test_intermediate_output_f153; assert_in_delta(0.8215417518529308, worksheet.intermediate_output_f153, 0.001); end
  def test_intermediate_output_h153; assert_in_delta(0.8075692243262238, worksheet.intermediate_output_h153, 0.001); end
  def test_intermediate_output_i153; assert_in_delta(0.792843845459647, worksheet.intermediate_output_i153, 0.001); end
  def test_intermediate_output_j153; assert_in_delta(0.7755237777766647, worksheet.intermediate_output_j153, 0.001); end
  def test_intermediate_output_k153; assert_in_delta(0.7584901369132153, worksheet.intermediate_output_k153, 0.001); end
  def test_intermediate_output_l153; assert_in_delta(0.7448751973956035, worksheet.intermediate_output_l153, 0.001); end
  def test_intermediate_output_m153; assert_in_delta(0.7378399511257568, worksheet.intermediate_output_m153, 0.001); end
  def test_intermediate_output_n153; assert_in_delta(0.7704120408036527, worksheet.intermediate_output_n153, 0.001); end
  def test_intermediate_output_o153; assert_in_delta(0.8038470278764973, worksheet.intermediate_output_o153, 0.001); end
  def test_intermediate_output_p153; assert_in_delta(0.840322905016626, worksheet.intermediate_output_p153, 0.001); end
  def test_intermediate_output_q153; assert_in_delta(0.8735728524724905, worksheet.intermediate_output_q153, 0.001); end
  def test_intermediate_output_e155; assert_equal("Adjustment factor:", worksheet.intermediate_output_e155); end
  def test_intermediate_output_h155; assert_in_epsilon(1.012284150768566, worksheet.intermediate_output_h155, 0.001); end
  def test_intermediate_output_p155; assert_equal("% reduction 1990-2050", worksheet.intermediate_output_p155); end
  def test_intermediate_output_q155; assert_in_delta(0.048361581288140165, worksheet.intermediate_output_q155, 0.001); end
  def test_intermediate_output_c157; assert_equal("Emissions by sector", worksheet.intermediate_output_c157); end
  def test_intermediate_output_f157; assert_equal("Sector", worksheet.intermediate_output_f157); end
  def test_intermediate_output_h157; assert_in_epsilon(2007, worksheet.intermediate_output_h157, 0.001); end
  def test_intermediate_output_i157; assert_in_epsilon(2010, worksheet.intermediate_output_i157, 0.001); end
  def test_intermediate_output_j157; assert_in_epsilon(2015, worksheet.intermediate_output_j157, 0.001); end
  def test_intermediate_output_k157; assert_in_epsilon(2020, worksheet.intermediate_output_k157, 0.001); end
  def test_intermediate_output_l157; assert_in_epsilon(2025, worksheet.intermediate_output_l157, 0.001); end
  def test_intermediate_output_m157; assert_in_epsilon(2030, worksheet.intermediate_output_m157, 0.001); end
  def test_intermediate_output_n157; assert_in_epsilon(2035, worksheet.intermediate_output_n157, 0.001); end
  def test_intermediate_output_o157; assert_in_epsilon(2040, worksheet.intermediate_output_o157, 0.001); end
  def test_intermediate_output_p157; assert_in_epsilon(2045, worksheet.intermediate_output_p157, 0.001); end
  def test_intermediate_output_q157; assert_in_epsilon(2050, worksheet.intermediate_output_q157, 0.001); end
  def test_intermediate_output_c158; assert_equal("I", worksheet.intermediate_output_c158); end
  def test_intermediate_output_f158; assert_equal("Hydrocarbon fuel power generation", worksheet.intermediate_output_f158); end
  def test_intermediate_output_h158; assert_in_epsilon(200.1293411589495, worksheet.intermediate_output_h158, 0.001); end
  def test_intermediate_output_i158; assert_in_epsilon(200.9000332315603, worksheet.intermediate_output_i158, 0.001); end
  def test_intermediate_output_j158; assert_in_epsilon(188.34859276793827, worksheet.intermediate_output_j158, 0.001); end
  def test_intermediate_output_k158; assert_in_epsilon(176.00991739673591, worksheet.intermediate_output_k158, 0.001); end
  def test_intermediate_output_l158; assert_in_epsilon(162.0258149281104, worksheet.intermediate_output_l158, 0.001); end
  def test_intermediate_output_m158; assert_in_epsilon(154.8971414117987, worksheet.intermediate_output_m158, 0.001); end
  def test_intermediate_output_n158; assert_in_epsilon(170.74970156139895, worksheet.intermediate_output_n158, 0.001); end
  def test_intermediate_output_o158; assert_in_epsilon(187.8548886190499, worksheet.intermediate_output_o158, 0.001); end
  def test_intermediate_output_p158; assert_in_epsilon(204.876013864254, worksheet.intermediate_output_p158, 0.001); end
  def test_intermediate_output_q158; assert_in_epsilon(217.20934655242903, worksheet.intermediate_output_q158, 0.001); end
  def test_intermediate_output_c159; assert_equal("II", worksheet.intermediate_output_c159); end
  def test_intermediate_output_f159; assert_equal("Nuclear power generation", worksheet.intermediate_output_f159); end
  def test_intermediate_output_h159; assert_in_delta(0, (worksheet.intermediate_output_h159||0), 0.001); end
  def test_intermediate_output_i159; assert_in_delta(0, (worksheet.intermediate_output_i159||0), 0.001); end
  def test_intermediate_output_j159; assert_in_delta(0, (worksheet.intermediate_output_j159||0), 0.001); end
  def test_intermediate_output_k159; assert_in_delta(0, (worksheet.intermediate_output_k159||0), 0.001); end
  def test_intermediate_output_l159; assert_in_delta(0, (worksheet.intermediate_output_l159||0), 0.001); end
  def test_intermediate_output_m159; assert_in_delta(0, (worksheet.intermediate_output_m159||0), 0.001); end
  def test_intermediate_output_n159; assert_in_delta(0, (worksheet.intermediate_output_n159||0), 0.001); end
  def test_intermediate_output_o159; assert_in_delta(0, (worksheet.intermediate_output_o159||0), 0.001); end
  def test_intermediate_output_p159; assert_in_delta(0, (worksheet.intermediate_output_p159||0), 0.001); end
  def test_intermediate_output_q159; assert_in_delta(0, (worksheet.intermediate_output_q159||0), 0.001); end
  def test_intermediate_output_c160; assert_equal("III", worksheet.intermediate_output_c160); end
  def test_intermediate_output_f160; assert_equal("National renewable power generation", worksheet.intermediate_output_f160); end
  def test_intermediate_output_h160; assert_in_delta(0, (worksheet.intermediate_output_h160||0), 0.001); end
  def test_intermediate_output_i160; assert_in_delta(0, (worksheet.intermediate_output_i160||0), 0.001); end
  def test_intermediate_output_j160; assert_in_delta(0, (worksheet.intermediate_output_j160||0), 0.001); end
  def test_intermediate_output_k160; assert_in_delta(0, (worksheet.intermediate_output_k160||0), 0.001); end
  def test_intermediate_output_l160; assert_in_delta(0, (worksheet.intermediate_output_l160||0), 0.001); end
  def test_intermediate_output_m160; assert_in_delta(0, (worksheet.intermediate_output_m160||0), 0.001); end
  def test_intermediate_output_n160; assert_in_delta(0, (worksheet.intermediate_output_n160||0), 0.001); end
  def test_intermediate_output_o160; assert_in_delta(0, (worksheet.intermediate_output_o160||0), 0.001); end
  def test_intermediate_output_p160; assert_in_delta(0, (worksheet.intermediate_output_p160||0), 0.001); end
  def test_intermediate_output_q160; assert_in_delta(0, (worksheet.intermediate_output_q160||0), 0.001); end
  def test_intermediate_output_c161; assert_equal("IV", worksheet.intermediate_output_c161); end
  def test_intermediate_output_f161; assert_equal("Distributed renewable power generation", worksheet.intermediate_output_f161); end
  def test_intermediate_output_h161; assert_in_delta(0, (worksheet.intermediate_output_h161||0), 0.001); end
  def test_intermediate_output_i161; assert_in_delta(0, (worksheet.intermediate_output_i161||0), 0.001); end
  def test_intermediate_output_j161; assert_in_delta(0, (worksheet.intermediate_output_j161||0), 0.001); end
  def test_intermediate_output_k161; assert_in_delta(0, (worksheet.intermediate_output_k161||0), 0.001); end
  def test_intermediate_output_l161; assert_in_delta(0, (worksheet.intermediate_output_l161||0), 0.001); end
  def test_intermediate_output_m161; assert_in_delta(0, (worksheet.intermediate_output_m161||0), 0.001); end
  def test_intermediate_output_n161; assert_in_delta(0, (worksheet.intermediate_output_n161||0), 0.001); end
  def test_intermediate_output_o161; assert_in_delta(0, (worksheet.intermediate_output_o161||0), 0.001); end
  def test_intermediate_output_p161; assert_in_delta(0, (worksheet.intermediate_output_p161||0), 0.001); end
  def test_intermediate_output_q161; assert_in_delta(0, (worksheet.intermediate_output_q161||0), 0.001); end
  def test_intermediate_output_c162; assert_equal("V", worksheet.intermediate_output_c162); end
  def test_intermediate_output_f162; assert_equal("Bioenergy", worksheet.intermediate_output_f162); end
  def test_intermediate_output_h162; assert_in_epsilon(-10.06308255895862, worksheet.intermediate_output_h162, 0.001); end
  def test_intermediate_output_i162; assert_in_epsilon(-9.727927159777284, worksheet.intermediate_output_i162, 0.001); end
  def test_intermediate_output_j162; assert_in_epsilon(-10.517123416542791, worksheet.intermediate_output_j162, 0.001); end
  def test_intermediate_output_k162; assert_in_epsilon(-12.794964196213206, worksheet.intermediate_output_k162, 0.001); end
  def test_intermediate_output_l162; assert_in_epsilon(-14.625774889952789, worksheet.intermediate_output_l162, 0.001); end
  def test_intermediate_output_m162; assert_in_epsilon(-15.569313922099209, worksheet.intermediate_output_m162, 0.001); end
  def test_intermediate_output_n162; assert_in_epsilon(-16.232975967615104, worksheet.intermediate_output_n162, 0.001); end
  def test_intermediate_output_o162; assert_in_epsilon(-16.945394606192743, worksheet.intermediate_output_o162, 0.001); end
  def test_intermediate_output_p162; assert_in_epsilon(-17.707880367178195, worksheet.intermediate_output_p162, 0.001); end
  def test_intermediate_output_q162; assert_in_epsilon(-18.52120301679968, worksheet.intermediate_output_q162, 0.001); end
  def test_intermediate_output_c163; assert_equal("VI", worksheet.intermediate_output_c163); end
  def test_intermediate_output_f163; assert_equal("Agriculture and waste", worksheet.intermediate_output_f163); end
  def test_intermediate_output_h163; assert_in_epsilon(66.08340837179765, worksheet.intermediate_output_h163, 0.001); end
  def test_intermediate_output_i163; assert_in_epsilon(61.843294707610944, worksheet.intermediate_output_i163, 0.001); end
  def test_intermediate_output_j163; assert_in_epsilon(62.31568934263669, worksheet.intermediate_output_j163, 0.001); end
  def test_intermediate_output_k163; assert_in_epsilon(61.72194190442068, worksheet.intermediate_output_k163, 0.001); end
  def test_intermediate_output_l163; assert_in_epsilon(64.77125456499759, worksheet.intermediate_output_l163, 0.001); end
  def test_intermediate_output_m163; assert_in_epsilon(66.37908637995565, worksheet.intermediate_output_m163, 0.001); end
  def test_intermediate_output_n163; assert_in_epsilon(66.92519862134839, worksheet.intermediate_output_n163, 0.001); end
  def test_intermediate_output_o163; assert_in_epsilon(66.1217958977555, worksheet.intermediate_output_o163, 0.001); end
  def test_intermediate_output_p163; assert_in_epsilon(65.00287408664136, worksheet.intermediate_output_p163, 0.001); end
  def test_intermediate_output_q163; assert_in_epsilon(64.59541235029391, worksheet.intermediate_output_q163, 0.001); end
  def test_intermediate_output_c164; assert_equal("VII", worksheet.intermediate_output_c164); end
  def test_intermediate_output_f164; assert_equal("Electricity distribution, storage, and balancing", worksheet.intermediate_output_f164); end
  def test_intermediate_output_h164; assert_in_delta(0, (worksheet.intermediate_output_h164||0), 0.001); end
  def test_intermediate_output_i164; assert_in_delta(0, (worksheet.intermediate_output_i164||0), 0.001); end
  def test_intermediate_output_j164; assert_in_delta(0, (worksheet.intermediate_output_j164||0), 0.001); end
  def test_intermediate_output_k164; assert_in_delta(0, (worksheet.intermediate_output_k164||0), 0.001); end
  def test_intermediate_output_l164; assert_in_delta(0, (worksheet.intermediate_output_l164||0), 0.001); end
  def test_intermediate_output_m164; assert_in_delta(0, (worksheet.intermediate_output_m164||0), 0.001); end
  def test_intermediate_output_n164; assert_in_delta(0, (worksheet.intermediate_output_n164||0), 0.001); end
  def test_intermediate_output_o164; assert_in_delta(0, (worksheet.intermediate_output_o164||0), 0.001); end
  def test_intermediate_output_p164; assert_in_delta(0, (worksheet.intermediate_output_p164||0), 0.001); end
  def test_intermediate_output_q164; assert_in_delta(0, (worksheet.intermediate_output_q164||0), 0.001); end
  def test_intermediate_output_c165; assert_equal("VIII", worksheet.intermediate_output_c165); end
  def test_intermediate_output_f165; assert_equal("H2 Production", worksheet.intermediate_output_f165); end
  def test_intermediate_output_h165; assert_in_delta(0, (worksheet.intermediate_output_h165||0), 0.001); end
  def test_intermediate_output_i165; assert_in_delta(0, (worksheet.intermediate_output_i165||0), 0.001); end
  def test_intermediate_output_j165; assert_in_delta(0, (worksheet.intermediate_output_j165||0), 0.001); end
  def test_intermediate_output_k165; assert_in_delta(0, (worksheet.intermediate_output_k165||0), 0.001); end
  def test_intermediate_output_l165; assert_in_delta(0, (worksheet.intermediate_output_l165||0), 0.001); end
  def test_intermediate_output_m165; assert_in_delta(0, (worksheet.intermediate_output_m165||0), 0.001); end
  def test_intermediate_output_n165; assert_in_delta(0, (worksheet.intermediate_output_n165||0), 0.001); end
  def test_intermediate_output_o165; assert_in_delta(0, (worksheet.intermediate_output_o165||0), 0.001); end
  def test_intermediate_output_p165; assert_in_delta(0, (worksheet.intermediate_output_p165||0), 0.001); end
  def test_intermediate_output_q165; assert_in_delta(0, (worksheet.intermediate_output_q165||0), 0.001); end
  def test_intermediate_output_c166; assert_equal("IX", worksheet.intermediate_output_c166); end
  def test_intermediate_output_f166; assert_equal("Heating", worksheet.intermediate_output_f166); end
  def test_intermediate_output_h166; assert_in_epsilon(84.42746088138698, worksheet.intermediate_output_h166, 0.001); end
  def test_intermediate_output_i166; assert_in_epsilon(89.95109883345357, worksheet.intermediate_output_i166, 0.001); end
  def test_intermediate_output_j166; assert_in_epsilon(94.73022286990212, worksheet.intermediate_output_j166, 0.001); end
  def test_intermediate_output_k166; assert_in_epsilon(99.88949361637397, worksheet.intermediate_output_k166, 0.001); end
  def test_intermediate_output_l166; assert_in_epsilon(104.86768786103143, worksheet.intermediate_output_l166, 0.001); end
  def test_intermediate_output_m166; assert_in_epsilon(109.63235844756252, worksheet.intermediate_output_m166, 0.001); end
  def test_intermediate_output_n166; assert_in_epsilon(112.23766853832588, worksheet.intermediate_output_n166, 0.001); end
  def test_intermediate_output_o166; assert_in_epsilon(115.10407627300276, worksheet.intermediate_output_o166, 0.001); end
  def test_intermediate_output_p166; assert_in_epsilon(118.29522839507794, worksheet.intermediate_output_p166, 0.001); end
  def test_intermediate_output_q166; assert_in_epsilon(121.84040240808157, worksheet.intermediate_output_q166, 0.001); end
  def test_intermediate_output_c167; assert_equal("X", worksheet.intermediate_output_c167); end
  def test_intermediate_output_f167; assert_equal("Lighting and appliances", worksheet.intermediate_output_f167); end
  def test_intermediate_output_h167; assert_in_epsilon(3.141184245661737, worksheet.intermediate_output_h167, 0.001); end
  def test_intermediate_output_i167; assert_in_epsilon(3.1414794849371583, worksheet.intermediate_output_i167, 0.001); end
  def test_intermediate_output_j167; assert_in_epsilon(3.1430116249066473, worksheet.intermediate_output_j167, 0.001); end
  def test_intermediate_output_k167; assert_in_epsilon(3.1444715711432187, worksheet.intermediate_output_k167, 0.001); end
  def test_intermediate_output_l167; assert_in_epsilon(3.1459194387889333, worksheet.intermediate_output_l167, 0.001); end
  def test_intermediate_output_m167; assert_in_epsilon(3.147384506518218, worksheet.intermediate_output_m167, 0.001); end
  def test_intermediate_output_n167; assert_in_epsilon(3.152030205423205, worksheet.intermediate_output_n167, 0.001); end
  def test_intermediate_output_o167; assert_in_epsilon(3.1537507004118606, worksheet.intermediate_output_o167, 0.001); end
  def test_intermediate_output_p167; assert_in_epsilon(3.1554726130591564, worksheet.intermediate_output_p167, 0.001); end
  def test_intermediate_output_q167; assert_in_epsilon(3.157195944639504, worksheet.intermediate_output_q167, 0.001); end
  def test_intermediate_output_c168; assert_equal("XI", worksheet.intermediate_output_c168); end
  def test_intermediate_output_f168; assert_equal("Industry", worksheet.intermediate_output_f168); end
  def test_intermediate_output_h168; assert_in_epsilon(93.41484291354766, worksheet.intermediate_output_h168, 0.001); end
  def test_intermediate_output_i168; assert_in_epsilon(96.00150323723506, worksheet.intermediate_output_i168, 0.001); end
  def test_intermediate_output_j168; assert_in_epsilon(100.59741720562442, worksheet.intermediate_output_j168, 0.001); end
  def test_intermediate_output_k168; assert_in_epsilon(105.5686266242299, worksheet.intermediate_output_k168, 0.001); end
  def test_intermediate_output_l168; assert_in_epsilon(113.28548836188013, worksheet.intermediate_output_l168, 0.001); end
  def test_intermediate_output_m168; assert_in_epsilon(121.78943022435276, worksheet.intermediate_output_m168, 0.001); end
  def test_intermediate_output_n168; assert_in_epsilon(131.16524930442887, worksheet.intermediate_output_n168, 0.001); end
  def test_intermediate_output_o168; assert_in_epsilon(141.50723447386534, worksheet.intermediate_output_o168, 0.001); end
  def test_intermediate_output_p168; assert_in_epsilon(152.9202515674579, worksheet.intermediate_output_p168, 0.001); end
  def test_intermediate_output_q168; assert_in_epsilon(165.5209541617014, worksheet.intermediate_output_q168, 0.001); end
  def test_intermediate_output_c169; assert_equal("XII", worksheet.intermediate_output_c169); end
  def test_intermediate_output_f169; assert_equal("Transport", worksheet.intermediate_output_f169); end
  def test_intermediate_output_h169; assert_in_epsilon(186.72938294460735, worksheet.intermediate_output_h169, 0.001); end
  def test_intermediate_output_i169; assert_in_epsilon(177.9231327172653, worksheet.intermediate_output_i169, 0.001); end
  def test_intermediate_output_j169; assert_in_epsilon(176.9417054583468, worksheet.intermediate_output_j169, 0.001); end
  def test_intermediate_output_k169; assert_in_epsilon(177.95807299666504, worksheet.intermediate_output_k169, 0.001); end
  def test_intermediate_output_l169; assert_in_epsilon(173.7021953552261, worksheet.intermediate_output_l169, 0.001); end
  def test_intermediate_output_m169; assert_in_epsilon(168.19531542257448, worksheet.intermediate_output_m169, 0.001); end
  def test_intermediate_output_n169; assert_in_epsilon(171.71412882658595, worksheet.intermediate_output_n169, 0.001); end
  def test_intermediate_output_o169; assert_in_epsilon(172.91811908128162, worksheet.intermediate_output_o169, 0.001); end
  def test_intermediate_output_p169; assert_in_epsilon(174.79241971415271, worksheet.intermediate_output_p169, 0.001); end
  def test_intermediate_output_q169; assert_in_epsilon(174.51194113099547, worksheet.intermediate_output_q169, 0.001); end
  def test_intermediate_output_c170; assert_equal("XIII", worksheet.intermediate_output_c170); end
  def test_intermediate_output_f170; assert_equal("Food consumption [UNUSED]", worksheet.intermediate_output_f170); end
  def test_intermediate_output_h170; assert_in_delta(0, (worksheet.intermediate_output_h170||0), 0.001); end
  def test_intermediate_output_i170; assert_in_delta(0, (worksheet.intermediate_output_i170||0), 0.001); end
  def test_intermediate_output_j170; assert_in_delta(0, (worksheet.intermediate_output_j170||0), 0.001); end
  def test_intermediate_output_k170; assert_in_delta(0, (worksheet.intermediate_output_k170||0), 0.001); end
  def test_intermediate_output_l170; assert_in_delta(0, (worksheet.intermediate_output_l170||0), 0.001); end
  def test_intermediate_output_m170; assert_in_delta(0, (worksheet.intermediate_output_m170||0), 0.001); end
  def test_intermediate_output_n170; assert_in_delta(0, (worksheet.intermediate_output_n170||0), 0.001); end
  def test_intermediate_output_o170; assert_in_delta(0, (worksheet.intermediate_output_o170||0), 0.001); end
  def test_intermediate_output_p170; assert_in_delta(0, (worksheet.intermediate_output_p170||0), 0.001); end
  def test_intermediate_output_q170; assert_in_delta(0, (worksheet.intermediate_output_q170||0), 0.001); end
  def test_intermediate_output_c171; assert_equal("XIV", worksheet.intermediate_output_c171); end
  def test_intermediate_output_f171; assert_equal("Geosequestration", worksheet.intermediate_output_f171); end
  def test_intermediate_output_h171; assert_in_delta(0, (worksheet.intermediate_output_h171||0), 0.001); end
  def test_intermediate_output_i171; assert_in_delta(0, (worksheet.intermediate_output_i171||0), 0.001); end
  def test_intermediate_output_j171; assert_in_delta(0, (worksheet.intermediate_output_j171||0), 0.001); end
  def test_intermediate_output_k171; assert_in_delta(0, (worksheet.intermediate_output_k171||0), 0.001); end
  def test_intermediate_output_l171; assert_in_delta(0, (worksheet.intermediate_output_l171||0), 0.001); end
  def test_intermediate_output_m171; assert_in_delta(0, (worksheet.intermediate_output_m171||0), 0.001); end
  def test_intermediate_output_n171; assert_in_delta(0, (worksheet.intermediate_output_n171||0), 0.001); end
  def test_intermediate_output_o171; assert_in_delta(0, (worksheet.intermediate_output_o171||0), 0.001); end
  def test_intermediate_output_p171; assert_in_delta(0, (worksheet.intermediate_output_p171||0), 0.001); end
  def test_intermediate_output_q171; assert_in_delta(0, (worksheet.intermediate_output_q171||0), 0.001); end
  def test_intermediate_output_c172; assert_equal("XV", worksheet.intermediate_output_c172); end
  def test_intermediate_output_f172; assert_equal("Fossil fuel production", worksheet.intermediate_output_f172); end
  def test_intermediate_output_h172; assert_in_epsilon(34.39920743834843, worksheet.intermediate_output_h172, 0.001); end
  def test_intermediate_output_i172; assert_in_epsilon(30.60246590539384, worksheet.intermediate_output_i172, 0.001); end
  def test_intermediate_output_j172; assert_in_epsilon(27.166079693467566, worksheet.intermediate_output_j172, 0.001); end
  def test_intermediate_output_k172; assert_in_epsilon(23.96536083310944, worksheet.intermediate_output_k172, 0.001); end
  def test_intermediate_output_l172; assert_in_epsilon(21.460345730333966, worksheet.intermediate_output_l172, 0.001); end
  def test_intermediate_output_m172; assert_in_epsilon(18.16434836936552, worksheet.intermediate_output_m172, 0.001); end
  def test_intermediate_output_n172; assert_in_epsilon(16.664503293983817, worksheet.intermediate_output_n172, 0.001); end
  def test_intermediate_output_o172; assert_in_epsilon(15.503951765450205, worksheet.intermediate_output_o172, 0.001); end
  def test_intermediate_output_p172; assert_in_epsilon(14.605939115684412, worksheet.intermediate_output_p172, 0.001); end
  def test_intermediate_output_q172; assert_in_epsilon(13.911074045661776, worksheet.intermediate_output_q172, 0.001); end
  def test_intermediate_output_c173; assert_equal("XVI", worksheet.intermediate_output_c173); end
  def test_intermediate_output_f173; assert_equal("Transfers", worksheet.intermediate_output_f173); end
  def test_intermediate_output_h173; assert_in_epsilon(4.370651364088464, worksheet.intermediate_output_h173, 0.001); end
  def test_intermediate_output_i173; assert_in_epsilon(4.4749758879895225, worksheet.intermediate_output_i173, 0.001); end
  def test_intermediate_output_j173; assert_in_epsilon(4.8268378349521575, worksheet.intermediate_output_j173, 0.001); end
  def test_intermediate_output_k173; assert_in_epsilon(5.374440700551223, worksheet.intermediate_output_k173, 0.001); end
  def test_intermediate_output_l173; assert_in_epsilon(6.2075713688848, worksheet.intermediate_output_l173, 0.001); end
  def test_intermediate_output_m173; assert_in_epsilon(7.038772470145664, worksheet.intermediate_output_m173, 0.001); end
  def test_intermediate_output_n173; assert_in_epsilon(7.723629516706557, worksheet.intermediate_output_n173, 0.001); end
  def test_intermediate_output_o173; assert_in_epsilon(8.316538316391078, worksheet.intermediate_output_o173, 0.001); end
  def test_intermediate_output_p173; assert_in_epsilon(8.931807106301969, worksheet.intermediate_output_p173, 0.001); end
  def test_intermediate_output_q173; assert_in_epsilon(9.458005972100564, worksheet.intermediate_output_q173, 0.001); end
  def test_intermediate_output_c174; assert_equal("XVII", worksheet.intermediate_output_c174); end
  def test_intermediate_output_f174; assert_equal("District heating", worksheet.intermediate_output_f174); end
  def test_intermediate_output_h174; assert_in_delta(0, (worksheet.intermediate_output_h174||0), 0.001); end
  def test_intermediate_output_i174; assert_in_delta(0, (worksheet.intermediate_output_i174||0), 0.001); end
  def test_intermediate_output_j174; assert_in_delta(0, (worksheet.intermediate_output_j174||0), 0.001); end
  def test_intermediate_output_k174; assert_in_delta(0, (worksheet.intermediate_output_k174||0), 0.001); end
  def test_intermediate_output_l174; assert_in_delta(0, (worksheet.intermediate_output_l174||0), 0.001); end
  def test_intermediate_output_m174; assert_in_delta(0, (worksheet.intermediate_output_m174||0), 0.001); end
  def test_intermediate_output_n174; assert_in_delta(0, (worksheet.intermediate_output_n174||0), 0.001); end
  def test_intermediate_output_o174; assert_in_delta(0, (worksheet.intermediate_output_o174||0), 0.001); end
  def test_intermediate_output_p174; assert_in_delta(0, (worksheet.intermediate_output_p174||0), 0.001); end
  def test_intermediate_output_q174; assert_in_delta(0, (worksheet.intermediate_output_q174||0), 0.001); end
  def test_intermediate_output_f175; assert_equal("Total", worksheet.intermediate_output_f175); end
  def test_intermediate_output_h175; assert_in_epsilon(662.6323967594291, worksheet.intermediate_output_h175, 0.001); end
  def test_intermediate_output_i175; assert_in_epsilon(655.1100568456684, worksheet.intermediate_output_i175, 0.001); end
  def test_intermediate_output_j175; assert_in_epsilon(647.5524333812318, worksheet.intermediate_output_j175, 0.001); end
  def test_intermediate_output_k175; assert_in_epsilon(640.8373614470162, worksheet.intermediate_output_k175, 0.001); end
  def test_intermediate_output_l175; assert_in_epsilon(634.8405027193006, worksheet.intermediate_output_l175, 0.001); end
  def test_intermediate_output_m175; assert_in_epsilon(633.6745233101743, worksheet.intermediate_output_m175, 0.001); end
  def test_intermediate_output_n175; assert_in_epsilon(664.0991339005865, worksheet.intermediate_output_n175, 0.001); end
  def test_intermediate_output_o175; assert_in_epsilon(693.5349605210155, worksheet.intermediate_output_o175, 0.001); end
  def test_intermediate_output_p175; assert_in_epsilon(724.8721260954513, worksheet.intermediate_output_p175, 0.001); end
  def test_intermediate_output_q175; assert_in_epsilon(751.6831295491035, worksheet.intermediate_output_q175, 0.001); end
  def test_intermediate_output_f176; assert_equal("Emissions in the time period (up to and including year above)", worksheet.intermediate_output_f176); end
  def test_intermediate_output_i176; assert_in_epsilon(2627.962567296434, worksheet.intermediate_output_i176, 0.001); end
  def test_intermediate_output_j176; assert_in_epsilon(3252.8774138350323, worksheet.intermediate_output_j176, 0.001); end
  def test_intermediate_output_k176; assert_in_epsilon(3217.6169511035123, worksheet.intermediate_output_k176, 0.001); end
  def test_intermediate_output_l176; assert_in_epsilon(3186.1962310519343, worksheet.intermediate_output_l176, 0.001); end
  def test_intermediate_output_m176; assert_in_epsilon(3170.704575369124, worksheet.intermediate_output_m176, 0.001); end
  def test_intermediate_output_n176; assert_in_epsilon(3259.646448322108, worksheet.intermediate_output_n176, 0.001); end
  def test_intermediate_output_o176; assert_in_epsilon(3408.8031493642193, worksheet.intermediate_output_o176, 0.001); end
  def test_intermediate_output_p176; assert_in_epsilon(3561.686299328385, worksheet.intermediate_output_p176, 0.001); end
  def test_intermediate_output_q176; assert_in_epsilon(3704.793640838213, worksheet.intermediate_output_q176, 0.001); end
  def test_intermediate_output_r176; assert_equal("REFERENCED - All costs", worksheet.intermediate_output_r176); end
  def test_intermediate_output_c177; assert_equal("Modelled emissions", worksheet.intermediate_output_c177); end
  def test_intermediate_output_f177; assert_equal("Cumulative emissions", worksheet.intermediate_output_f177); end
  def test_intermediate_output_i177; assert_in_epsilon(2627.962567296434, worksheet.intermediate_output_i177, 0.001); end
  def test_intermediate_output_j177; assert_in_epsilon(5880.839981131467, worksheet.intermediate_output_j177, 0.001); end
  def test_intermediate_output_k177; assert_in_epsilon(9098.456932234978, worksheet.intermediate_output_k177, 0.001); end
  def test_intermediate_output_l177; assert_in_epsilon(12284.653163286912, worksheet.intermediate_output_l177, 0.001); end
  def test_intermediate_output_m177; assert_in_epsilon(15455.357738656036, worksheet.intermediate_output_m177, 0.001); end
  def test_intermediate_output_n177; assert_in_epsilon(18715.00418697814, worksheet.intermediate_output_n177, 0.001); end
  def test_intermediate_output_o177; assert_in_epsilon(22123.80733634236, worksheet.intermediate_output_o177, 0.001); end
  def test_intermediate_output_p177; assert_in_epsilon(25685.493635670748, worksheet.intermediate_output_p177, 0.001); end
  def test_intermediate_output_q177; assert_in_epsilon(29390.28727650896, worksheet.intermediate_output_q177, 0.001); end
  def test_intermediate_output_d179; assert_equal("IPCC Sector", worksheet.intermediate_output_d179); end
  def test_intermediate_output_f179; assert_equal("Actuals, GHG Inv.", worksheet.intermediate_output_f179); end
  def test_intermediate_output_q179; assert_equal("Mt CO2e", worksheet.intermediate_output_q179); end
  def test_intermediate_output_c180; assert_equal("1A", worksheet.intermediate_output_c180); end
  def test_intermediate_output_d180; assert_equal("Fuel Combustion", worksheet.intermediate_output_d180); end
  def test_intermediate_output_f180; assert_in_epsilon(532.6387375112939, worksheet.intermediate_output_f180, 0.001); end
  def test_intermediate_output_h180; assert_in_epsilon(515.3867661226177, worksheet.intermediate_output_h180, 0.001); end
  def test_intermediate_output_i180; assert_in_epsilon(518.4763620730675, worksheet.intermediate_output_i180, 0.001); end
  def test_intermediate_output_j180; assert_in_epsilon(508.17424564741026, worksheet.intermediate_output_j180, 0.001); end
  def test_intermediate_output_k180; assert_in_epsilon(501.3035093982542, worksheet.intermediate_output_k180, 0.001); end
  def test_intermediate_output_l180; assert_in_epsilon(488.0733636537022, worksheet.intermediate_output_l180, 0.001); end
  def test_intermediate_output_m180; assert_in_epsilon(481.59148811847797, worksheet.intermediate_output_m180, 0.001); end
  def test_intermediate_output_n180; assert_in_epsilon(504.89332708244854, worksheet.intermediate_output_n180, 0.001); end
  def test_intermediate_output_o180; assert_in_epsilon(530.2812993718057, worksheet.intermediate_output_o180, 0.001); end
  def test_intermediate_output_p180; assert_in_epsilon(558.0673169327632, worksheet.intermediate_output_p180, 0.001); end
  def test_intermediate_output_q180; assert_in_epsilon(582.6463046497499, worksheet.intermediate_output_q180, 0.001); end
  def test_intermediate_output_c181; assert_equal("1B", worksheet.intermediate_output_c181); end
  def test_intermediate_output_d181; assert_equal("Fugitive Emissions from Fuels", worksheet.intermediate_output_d181); end
  def test_intermediate_output_f181; assert_in_epsilon(13.3650064404099, worksheet.intermediate_output_f181, 0.001); end
  def test_intermediate_output_h181; assert_in_epsilon(12.10264631136367, worksheet.intermediate_output_h181, 0.001); end
  def test_intermediate_output_i181; assert_in_epsilon(11.377573689629285, worksheet.intermediate_output_i181, 0.001); end
  def test_intermediate_output_j181; assert_in_epsilon(10.91697603357635, worksheet.intermediate_output_j181, 0.001); end
  def test_intermediate_output_k181; assert_in_epsilon(10.707837772224696, worksheet.intermediate_output_k181, 0.001); end
  def test_intermediate_output_l181; assert_in_epsilon(10.948711502474438, worksheet.intermediate_output_l181, 0.001); end
  def test_intermediate_output_m181; assert_in_epsilon(9.96397104865273, worksheet.intermediate_output_m181, 0.001); end
  def test_intermediate_output_n181; assert_in_epsilon(10.294221988862613, worksheet.intermediate_output_n181, 0.001); end
  def test_intermediate_output_o181; assert_in_epsilon(10.612743343131624, worksheet.intermediate_output_o181, 0.001); end
  def test_intermediate_output_p181; assert_in_epsilon(11.015696358290674, worksheet.intermediate_output_p181, 0.001); end
  def test_intermediate_output_q181; assert_in_epsilon(11.377609324855749, worksheet.intermediate_output_q181, 0.001); end
  def test_intermediate_output_c182; assert_in_delta(1, worksheet.intermediate_output_c182, 0.001); end
  def test_intermediate_output_d182; assert_equal("Fuel Combustion", worksheet.intermediate_output_d182); end
  def test_intermediate_output_f182; assert_in_epsilon(546.0037439517039, worksheet.intermediate_output_f182, 0.001); end
  def test_intermediate_output_h182; assert_in_epsilon(527.4894124339813, worksheet.intermediate_output_h182, 0.001); end
  def test_intermediate_output_i182; assert_in_epsilon(529.8539357626968, worksheet.intermediate_output_i182, 0.001); end
  def test_intermediate_output_j182; assert_in_epsilon(519.0912216809866, worksheet.intermediate_output_j182, 0.001); end
  def test_intermediate_output_k182; assert_in_epsilon(512.0113471704789, worksheet.intermediate_output_k182, 0.001); end
  def test_intermediate_output_l182; assert_in_epsilon(499.02207515617664, worksheet.intermediate_output_l182, 0.001); end
  def test_intermediate_output_m182; assert_in_epsilon(491.5554591671307, worksheet.intermediate_output_m182, 0.001); end
  def test_intermediate_output_n182; assert_in_epsilon(515.1875490713112, worksheet.intermediate_output_n182, 0.001); end
  def test_intermediate_output_o182; assert_in_epsilon(540.8940427149373, worksheet.intermediate_output_o182, 0.001); end
  def test_intermediate_output_p182; assert_in_epsilon(569.0830132910539, worksheet.intermediate_output_p182, 0.001); end
  def test_intermediate_output_q182; assert_in_epsilon(594.0239139746056, worksheet.intermediate_output_q182, 0.001); end
  def test_intermediate_output_c183; assert_in_epsilon(2, worksheet.intermediate_output_c183, 0.001); end
  def test_intermediate_output_d183; assert_equal("Industrial Processes", worksheet.intermediate_output_d183); end
  def test_intermediate_output_f183; assert_in_epsilon(27.8913120599484, worksheet.intermediate_output_f183, 0.001); end
  def test_intermediate_output_h183; assert_in_epsilon(27.891312059948405, worksheet.intermediate_output_h183, 0.001); end
  def test_intermediate_output_i183; assert_in_epsilon(28.22138704196695, worksheet.intermediate_output_i183, 0.001); end
  def test_intermediate_output_j183; assert_in_epsilon(28.849107848156855, worksheet.intermediate_output_j183, 0.001); end
  def test_intermediate_output_k183; assert_in_epsilon(29.577156358435566, worksheet.intermediate_output_k183, 0.001); end
  def test_intermediate_output_l183; assert_in_epsilon(30.76521840566171, worksheet.intermediate_output_l183, 0.001); end
  def test_intermediate_output_m183; assert_in_epsilon(32.041869436587184, worksheet.intermediate_output_m183, 0.001); end
  def test_intermediate_output_n183; assert_in_epsilon(33.413238446840964, worksheet.intermediate_output_n183, 0.001); end
  def test_intermediate_output_o183; assert_in_epsilon(34.885887258858915, worksheet.intermediate_output_o183, 0.001); end
  def test_intermediate_output_p183; assert_in_epsilon(36.4668410973334, worksheet.intermediate_output_p183, 0.001); end
  def test_intermediate_output_q183; assert_in_epsilon(38.1636213274151, worksheet.intermediate_output_q183, 0.001); end
  def test_intermediate_output_c184; assert_in_epsilon(3, worksheet.intermediate_output_c184, 0.001); end
  def test_intermediate_output_d184; assert_equal("Solvent and Other Product Use", worksheet.intermediate_output_d184); end
  def test_intermediate_output_f184; assert_in_delta(0, (worksheet.intermediate_output_f184||0), 0.001); end
  def test_intermediate_output_h184; assert_in_delta(0, (worksheet.intermediate_output_h184||0), 0.001); end
  def test_intermediate_output_i184; assert_in_delta(0, (worksheet.intermediate_output_i184||0), 0.001); end
  def test_intermediate_output_j184; assert_in_delta(0, (worksheet.intermediate_output_j184||0), 0.001); end
  def test_intermediate_output_k184; assert_in_delta(0, (worksheet.intermediate_output_k184||0), 0.001); end
  def test_intermediate_output_l184; assert_in_delta(0, (worksheet.intermediate_output_l184||0), 0.001); end
  def test_intermediate_output_m184; assert_in_delta(0, (worksheet.intermediate_output_m184||0), 0.001); end
  def test_intermediate_output_n184; assert_in_delta(0, (worksheet.intermediate_output_n184||0), 0.001); end
  def test_intermediate_output_o184; assert_in_delta(0, (worksheet.intermediate_output_o184||0), 0.001); end
  def test_intermediate_output_p184; assert_in_delta(0, (worksheet.intermediate_output_p184||0), 0.001); end
  def test_intermediate_output_q184; assert_in_delta(0, (worksheet.intermediate_output_q184||0), 0.001); end
  def test_intermediate_output_c185; assert_in_epsilon(4, worksheet.intermediate_output_c185, 0.001); end
  def test_intermediate_output_d185; assert_equal("Agriculture", worksheet.intermediate_output_d185); end
  def test_intermediate_output_f185; assert_in_epsilon(43.4591660991799, worksheet.intermediate_output_f185, 0.001); end
  def test_intermediate_output_h185; assert_in_epsilon(43.3067326, worksheet.intermediate_output_h185, 0.001); end
  def test_intermediate_output_i185; assert_in_epsilon(42.546514044392154, worksheet.intermediate_output_i185, 0.001); end
  def test_intermediate_output_j185; assert_in_epsilon(41.43432845352159, worksheet.intermediate_output_j185, 0.001); end
  def test_intermediate_output_k185; assert_in_epsilon(39.355073278960084, worksheet.intermediate_output_k185, 0.001); end
  def test_intermediate_output_l185; assert_in_epsilon(39.54933612174251, worksheet.intermediate_output_l185, 0.001); end
  def test_intermediate_output_m185; assert_in_epsilon(39.74705925720603, worksheet.intermediate_output_m185, 0.001); end
  def test_intermediate_output_n185; assert_in_epsilon(39.94833472074905, worksheet.intermediate_output_n185, 0.001); end
  def test_intermediate_output_o185; assert_in_epsilon(40.15325740991057, worksheet.intermediate_output_o185, 0.001); end
  def test_intermediate_output_p185; assert_in_epsilon(40.36192517715773, worksheet.intermediate_output_p185, 0.001); end
  def test_intermediate_output_q185; assert_in_epsilon(40.5744389257109, worksheet.intermediate_output_q185, 0.001); end
  def test_intermediate_output_c186; assert_in_epsilon(5, worksheet.intermediate_output_c186, 0.001); end
  def test_intermediate_output_d186; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.intermediate_output_d186); end
  def test_intermediate_output_f186; assert_in_epsilon(-1.7798396847837301, worksheet.intermediate_output_f186, 0.001); end
  def test_intermediate_output_h186; assert_in_epsilon(-1.824795399999999, worksheet.intermediate_output_h186, 0.001); end
  def test_intermediate_output_i186; assert_in_epsilon(2.549557736117353, worksheet.intermediate_output_i186, 0.001); end
  def test_intermediate_output_j186; assert_in_epsilon(5.933544988096667, worksheet.intermediate_output_j186, 0.001); end
  def test_intermediate_output_k186; assert_in_epsilon(9.216509860464468, worksheet.intermediate_output_k186, 0.001); end
  def test_intermediate_output_l186; assert_in_epsilon(12.250768713675887, worksheet.intermediate_output_l186, 0.001); end
  def test_intermediate_output_m186; assert_in_epsilon(13.957206773343671, worksheet.intermediate_output_m186, 0.001); end
  def test_intermediate_output_n186; assert_in_epsilon(14.259955560261957, worksheet.intermediate_output_n186, 0.001); end
  def test_intermediate_output_o186; assert_in_epsilon(13.273591570430609, worksheet.intermediate_output_o186, 0.001); end
  def test_intermediate_output_p186; assert_in_epsilon(12.03013906507904, worksheet.intermediate_output_p186, 0.001); end
  def test_intermediate_output_q186; assert_in_epsilon(11.556420470689867, worksheet.intermediate_output_q186, 0.001); end
  def test_intermediate_output_c187; assert_in_epsilon(6, worksheet.intermediate_output_c187, 0.001); end
  def test_intermediate_output_d187; assert_equal("Waste", worksheet.intermediate_output_d187); end
  def test_intermediate_output_f187; assert_in_epsilon(22.8602295816192, worksheet.intermediate_output_f187, 0.001); end
  def test_intermediate_output_h187; assert_in_epsilon(23.0979625, worksheet.intermediate_output_h187, 0.001); end
  def test_intermediate_output_i187; assert_in_epsilon(15.21267066552306, worksheet.intermediate_output_i187, 0.001); end
  def test_intermediate_output_j187; assert_in_epsilon(13.403677907027117, worksheet.intermediate_output_j187, 0.001); end
  def test_intermediate_output_k187; assert_in_epsilon(11.596569237935283, worksheet.intermediate_output_k187, 0.001); end
  def test_intermediate_output_l187; assert_in_epsilon(11.407642135495301, worksheet.intermediate_output_l187, 0.001); end
  def test_intermediate_output_m187; assert_in_epsilon(11.10152741287662, worksheet.intermediate_output_m187, 0.001); end
  def test_intermediate_output_n187; assert_in_epsilon(11.133762036208225, worksheet.intermediate_output_n187, 0.001); end
  def test_intermediate_output_o187; assert_in_epsilon(11.101878462443766, worksheet.intermediate_output_o187, 0.001); end
  def test_intermediate_output_p187; assert_in_epsilon(11.007749688815606, worksheet.intermediate_output_p187, 0.001); end
  def test_intermediate_output_q187; assert_in_epsilon(10.851430772830827, worksheet.intermediate_output_q187, 0.001); end
  def test_intermediate_output_c188; assert_in_epsilon(7, worksheet.intermediate_output_c188, 0.001); end
  def test_intermediate_output_d188; assert_equal("Other", worksheet.intermediate_output_d188); end
  def test_intermediate_output_h188; assert_in_delta(0, (worksheet.intermediate_output_h188||0), 0.001); end
  def test_intermediate_output_i188; assert_in_delta(0, (worksheet.intermediate_output_i188||0), 0.001); end
  def test_intermediate_output_j188; assert_in_delta(0, (worksheet.intermediate_output_j188||0), 0.001); end
  def test_intermediate_output_k188; assert_in_delta(0, (worksheet.intermediate_output_k188||0), 0.001); end
  def test_intermediate_output_l188; assert_in_delta(0, (worksheet.intermediate_output_l188||0), 0.001); end
  def test_intermediate_output_m188; assert_in_delta(0, (worksheet.intermediate_output_m188||0), 0.001); end
  def test_intermediate_output_n188; assert_in_delta(0, (worksheet.intermediate_output_n188||0), 0.001); end
  def test_intermediate_output_o188; assert_in_delta(0, (worksheet.intermediate_output_o188||0), 0.001); end
  def test_intermediate_output_p188; assert_in_delta(0, (worksheet.intermediate_output_p188||0), 0.001); end
  def test_intermediate_output_q188; assert_in_delta(0, (worksheet.intermediate_output_q188||0), 0.001); end
  def test_intermediate_output_c189; assert_equal("X1", worksheet.intermediate_output_c189); end
  def test_intermediate_output_d189; assert_equal("International Aviation and Shipping", worksheet.intermediate_output_d189); end
  def test_intermediate_output_f189; assert_in_epsilon(42.52436, worksheet.intermediate_output_f189, 0.001); end
  def test_intermediate_output_h189; assert_in_epsilon(52.73485512445805, worksheet.intermediate_output_h189, 0.001); end
  def test_intermediate_output_i189; assert_in_epsilon(46.453918754749346, worksheet.intermediate_output_i189, 0.001); end
  def test_intermediate_output_j189; assert_in_epsilon(52.19269100274443, worksheet.intermediate_output_j189, 0.001); end
  def test_intermediate_output_k189; assert_in_epsilon(58.554128553904185, worksheet.intermediate_output_k189, 0.001); end
  def test_intermediate_output_l189; assert_in_epsilon(63.00928576171873, worksheet.intermediate_output_l189, 0.001); end
  def test_intermediate_output_m189; assert_in_epsilon(67.24417545140071, worksheet.intermediate_output_m189, 0.001); end
  def test_intermediate_output_n189; assert_in_epsilon(72.66360699371727, worksheet.intermediate_output_n189, 0.001); end
  def test_intermediate_output_o189; assert_in_epsilon(76.43181920884129, worksheet.intermediate_output_o189, 0.001); end
  def test_intermediate_output_p189; assert_in_epsilon(79.76691774229698, worksheet.intermediate_output_p189, 0.001); end
  def test_intermediate_output_q189; assert_in_epsilon(81.05235935157397, worksheet.intermediate_output_q189, 0.001); end
  def test_intermediate_output_c190; assert_equal("X2", worksheet.intermediate_output_c190); end
  def test_intermediate_output_d190; assert_equal("Bioenergy credit", worksheet.intermediate_output_d190); end
  def test_intermediate_output_h190; assert_in_delta(0, (worksheet.intermediate_output_h190||0), 0.001); end
  def test_intermediate_output_i190; assert_in_epsilon(-9.727927159777284, worksheet.intermediate_output_i190, 0.001); end
  def test_intermediate_output_j190; assert_in_epsilon(-10.517123416542791, worksheet.intermediate_output_j190, 0.001); end
  def test_intermediate_output_k190; assert_in_epsilon(-12.794964196213206, worksheet.intermediate_output_k190, 0.001); end
  def test_intermediate_output_l190; assert_in_epsilon(-14.625774889952789, worksheet.intermediate_output_l190, 0.001); end
  def test_intermediate_output_m190; assert_in_epsilon(-15.569313922099209, worksheet.intermediate_output_m190, 0.001); end
  def test_intermediate_output_n190; assert_in_epsilon(-16.232975967615104, worksheet.intermediate_output_n190, 0.001); end
  def test_intermediate_output_o190; assert_in_epsilon(-16.945394606192743, worksheet.intermediate_output_o190, 0.001); end
  def test_intermediate_output_p190; assert_in_epsilon(-17.707880367178195, worksheet.intermediate_output_p190, 0.001); end
  def test_intermediate_output_q190; assert_in_epsilon(-18.52120301679968, worksheet.intermediate_output_q190, 0.001); end
  def test_intermediate_output_c191; assert_equal("X3", worksheet.intermediate_output_c191); end
  def test_intermediate_output_d191; assert_equal("Carbon capture", worksheet.intermediate_output_d191); end
  def test_intermediate_output_h191; assert_in_delta(0, (worksheet.intermediate_output_h191||0), 0.001); end
  def test_intermediate_output_i191; assert_in_delta(0, (worksheet.intermediate_output_i191||0), 0.001); end
  def test_intermediate_output_j191; assert_in_epsilon(-2.8350150827586207, worksheet.intermediate_output_j191, 0.001); end
  def test_intermediate_output_k191; assert_in_epsilon(-6.678458816949153, worksheet.intermediate_output_k191, 0.001); end
  def test_intermediate_output_l191; assert_in_epsilon(-6.538048685217391, worksheet.intermediate_output_l191, 0.001); end
  def test_intermediate_output_m191; assert_in_epsilon(-6.403460266271363, worksheet.intermediate_output_m191, 0.001); end
  def test_intermediate_output_n191; assert_in_epsilon(-6.274336960887095, worksheet.intermediate_output_n191, 0.001); end
  def test_intermediate_output_o191; assert_in_epsilon(-6.260121498214285, worksheet.intermediate_output_o191, 0.001); end
  def test_intermediate_output_p191; assert_in_epsilon(-6.136579599107142, worksheet.intermediate_output_p191, 0.001); end
  def test_intermediate_output_q191; assert_in_epsilon(-6.017852256923077, worksheet.intermediate_output_q191, 0.001); end
  def test_intermediate_output_d192; assert_equal("Total", worksheet.intermediate_output_d192); end
  def test_intermediate_output_f192; assert_in_epsilon(680.9589720076677, worksheet.intermediate_output_f192, 0.001); end
  def test_intermediate_output_h192; assert_in_epsilon(672.6954793183878, worksheet.intermediate_output_h192, 0.001); end
  def test_intermediate_output_i192; assert_in_epsilon(655.1100568456683, worksheet.intermediate_output_i192, 0.001); end
  def test_intermediate_output_j192; assert_in_epsilon(647.5524333812319, worksheet.intermediate_output_j192, 0.001); end
  def test_intermediate_output_k192; assert_in_epsilon(640.8373614470161, worksheet.intermediate_output_k192, 0.001); end
  def test_intermediate_output_l192; assert_in_epsilon(634.8405027193006, worksheet.intermediate_output_l192, 0.001); end
  def test_intermediate_output_m192; assert_in_epsilon(633.6745233101742, worksheet.intermediate_output_m192, 0.001); end
  def test_intermediate_output_n192; assert_in_epsilon(664.0991339005865, worksheet.intermediate_output_n192, 0.001); end
  def test_intermediate_output_o192; assert_in_epsilon(693.5349605210155, worksheet.intermediate_output_o192, 0.001); end
  def test_intermediate_output_p192; assert_in_epsilon(724.8721260954513, worksheet.intermediate_output_p192, 0.001); end
  def test_intermediate_output_q192; assert_in_epsilon(751.6831295491035, worksheet.intermediate_output_q192, 0.001); end
  def test_intermediate_output_r192; assert_equal("REFERENCED - All costs", worksheet.intermediate_output_r192); end
  def test_intermediate_output_c194; assert_equal("Excluding international bunkers", worksheet.intermediate_output_c194); end
  def test_intermediate_output_f194; assert_in_epsilon(638.4346120076677, worksheet.intermediate_output_f194, 0.001); end
  def test_intermediate_output_h194; assert_in_epsilon(619.9606241939298, worksheet.intermediate_output_h194, 0.001); end
  def test_intermediate_output_i194; assert_in_epsilon(608.656138090919, worksheet.intermediate_output_i194, 0.001); end
  def test_intermediate_output_j194; assert_in_epsilon(595.3597423784875, worksheet.intermediate_output_j194, 0.001); end
  def test_intermediate_output_k194; assert_in_epsilon(582.2832328931119, worksheet.intermediate_output_k194, 0.001); end
  def test_intermediate_output_l194; assert_in_epsilon(571.8312169575819, worksheet.intermediate_output_l194, 0.001); end
  def test_intermediate_output_m194; assert_in_epsilon(566.4303478587735, worksheet.intermediate_output_m194, 0.001); end
  def test_intermediate_output_n194; assert_in_epsilon(591.4355269068692, worksheet.intermediate_output_n194, 0.001); end
  def test_intermediate_output_o194; assert_in_epsilon(617.1031413121742, worksheet.intermediate_output_o194, 0.001); end
  def test_intermediate_output_p194; assert_in_epsilon(645.1052083531544, worksheet.intermediate_output_p194, 0.001); end
  def test_intermediate_output_q194; assert_in_epsilon(670.6307701975295, worksheet.intermediate_output_q194, 0.001); end
  def test_intermediate_output_r194; assert_equal("REFERENCED - All costs", worksheet.intermediate_output_r194); end
  def test_intermediate_output_c197; assert_equal("Please note: emissions by sector need to account for bio-energy, which is accounted for seperately (in V). ", worksheet.intermediate_output_c197); end
  def test_intermediate_output_c198; assert_equal("Cumulative emissions are estimates based on a linear trajectory between the 5 year time periods", worksheet.intermediate_output_c198); end
  def test_intermediate_output_c201; assert_equal("Targets", worksheet.intermediate_output_c201); end
  def test_intermediate_output_h201; assert_equal("2050 target", worksheet.intermediate_output_h201); end
  def test_intermediate_output_i201; assert_equal("2020 target ", worksheet.intermediate_output_i201); end
  def test_intermediate_output_k201; assert_equal("2050 target", worksheet.intermediate_output_k201); end
  def test_intermediate_output_l201; assert_equal("2020 target", worksheet.intermediate_output_l201); end
  def test_intermediate_output_n201; assert_equal("Actuals, as % of 2007, modelled", worksheet.intermediate_output_n201); end
  def test_intermediate_output_f202; assert_equal("Base year (1990)", worksheet.intermediate_output_f202); end
  def test_intermediate_output_h202; assert_equal("(20% of base)", worksheet.intermediate_output_h202); end
  def test_intermediate_output_i202; assert_equal("(66% of base)", worksheet.intermediate_output_i202); end
  def test_intermediate_output_k202; assert_equal("% of 2007", worksheet.intermediate_output_k202); end
  def test_intermediate_output_l202; assert_equal("% of 2007", worksheet.intermediate_output_l202); end
  def test_intermediate_output_o202; assert_in_epsilon(2020, worksheet.intermediate_output_o202, 0.001); end
  def test_intermediate_output_p202; assert_in_epsilon(2030, worksheet.intermediate_output_p202, 0.001); end
  def test_intermediate_output_q202; assert_in_epsilon(2050, worksheet.intermediate_output_q202, 0.001); end
  def test_intermediate_output_d203; assert_equal("Kyoto agreed sectors", worksheet.intermediate_output_d203); end
  def test_intermediate_output_f203; assert_in_epsilon(777.11767, worksheet.intermediate_output_f203, 0.001); end
  def test_intermediate_output_h203; assert_in_epsilon(155.42353400000002, worksheet.intermediate_output_h203, 0.001); end
  def test_intermediate_output_i203; assert_in_epsilon(512.8976622, worksheet.intermediate_output_i203, 0.001); end
  def test_intermediate_output_d204; assert_equal("International bunkers (CO2 only)", worksheet.intermediate_output_d204); end
  def test_intermediate_output_f204; assert_in_epsilon(22.4685, worksheet.intermediate_output_f204, 0.001); end
  def test_intermediate_output_k204; assert_in_epsilon(159.91723399999998, worksheet.intermediate_output_k204, 0.001); end
  def test_intermediate_output_l204; assert_in_epsilon(527.7268721999999, worksheet.intermediate_output_l204, 0.001); end
  def test_intermediate_output_d205; assert_equal("Total", worksheet.intermediate_output_d205); end
  def test_intermediate_output_f205; assert_in_epsilon(799.5861699999999, worksheet.intermediate_output_f205, 0.001); end
  def test_intermediate_output_h205; assert_in_epsilon(159.917234, worksheet.intermediate_output_h205, 0.001); end
  def test_intermediate_output_i205; assert_in_epsilon(527.7268722, worksheet.intermediate_output_i205, 0.001); end
  def test_intermediate_output_k205; assert_in_epsilon(187.77578959575553, worksheet.intermediate_output_k205, 0.001); end
  def test_intermediate_output_l205; assert_in_epsilon(619.6601056659932, worksheet.intermediate_output_l205, 0.001); end
  def test_intermediate_output_o205; assert_in_delta(0.9526411000953179, worksheet.intermediate_output_o205, 0.001); end
  def test_intermediate_output_p205; assert_in_delta(0.9419931347721388, worksheet.intermediate_output_p205, 0.001); end
  def test_intermediate_output_q205; assert_in_epsilon(1.1174196239742098, worksheet.intermediate_output_q205, 0.001); end
  def test_intermediate_output_d206; assert_equal("Target, for chart", worksheet.intermediate_output_d206); end
  def test_intermediate_output_h206; assert_in_delta(0.2, worksheet.intermediate_output_h206, 0.001); end
  def test_intermediate_output_i206; assert_in_delta(0.2, worksheet.intermediate_output_i206, 0.001); end
  def test_intermediate_output_j206; assert_in_delta(0.2, worksheet.intermediate_output_j206, 0.001); end
  def test_intermediate_output_k206; assert_in_delta(0.2, worksheet.intermediate_output_k206, 0.001); end
  def test_intermediate_output_l206; assert_in_delta(0.2, worksheet.intermediate_output_l206, 0.001); end
  def test_intermediate_output_m206; assert_in_delta(0.2, worksheet.intermediate_output_m206, 0.001); end
  def test_intermediate_output_n206; assert_in_delta(0.2, worksheet.intermediate_output_n206, 0.001); end
  def test_intermediate_output_o206; assert_in_delta(0.2, worksheet.intermediate_output_o206, 0.001); end
  def test_intermediate_output_p206; assert_in_delta(0.2, worksheet.intermediate_output_p206, 0.001); end
  def test_intermediate_output_q206; assert_in_delta(0.2, worksheet.intermediate_output_q206, 0.001); end
  def test_intermediate_output_d207; assert_equal("Dummy, for chart", worksheet.intermediate_output_d207); end
  def test_intermediate_output_h207; assert_in_delta(0, (worksheet.intermediate_output_h207||0), 0.001); end
  def test_intermediate_output_i207; assert_in_delta(0, (worksheet.intermediate_output_i207||0), 0.001); end
  def test_intermediate_output_j207; assert_in_delta(0, (worksheet.intermediate_output_j207||0), 0.001); end
  def test_intermediate_output_k207; assert_in_delta(0, (worksheet.intermediate_output_k207||0), 0.001); end
  def test_intermediate_output_l207; assert_in_delta(0, (worksheet.intermediate_output_l207||0), 0.001); end
  def test_intermediate_output_m207; assert_in_delta(0, (worksheet.intermediate_output_m207||0), 0.001); end
  def test_intermediate_output_n207; assert_in_delta(0, (worksheet.intermediate_output_n207||0), 0.001); end
  def test_intermediate_output_o207; assert_in_delta(0, (worksheet.intermediate_output_o207||0), 0.001); end
  def test_intermediate_output_p207; assert_in_delta(0, (worksheet.intermediate_output_p207||0), 0.001); end
  def test_intermediate_output_q207; assert_in_delta(0, (worksheet.intermediate_output_q207||0), 0.001); end
  def test_intermediate_output_b210; assert_equal("Bio-energy - Production and Use", worksheet.intermediate_output_b210); end
  def test_intermediate_output_b212; assert_equal("Production", worksheet.intermediate_output_b212); end
  def test_intermediate_output_c214; assert_equal("Domestic", worksheet.intermediate_output_c214); end
  def test_intermediate_output_h214; assert_equal("2007", worksheet.intermediate_output_h214); end
  def test_intermediate_output_i214; assert_equal("2010", worksheet.intermediate_output_i214); end
  def test_intermediate_output_j214; assert_equal("2015", worksheet.intermediate_output_j214); end
  def test_intermediate_output_k214; assert_equal("2020", worksheet.intermediate_output_k214); end
  def test_intermediate_output_l214; assert_equal("2025", worksheet.intermediate_output_l214); end
  def test_intermediate_output_m214; assert_equal("2030", worksheet.intermediate_output_m214); end
  def test_intermediate_output_n214; assert_equal("2035", worksheet.intermediate_output_n214); end
  def test_intermediate_output_o214; assert_equal("2040", worksheet.intermediate_output_o214); end
  def test_intermediate_output_p214; assert_equal("2045", worksheet.intermediate_output_p214); end
  def test_intermediate_output_q214; assert_equal("2050", worksheet.intermediate_output_q214); end
  def test_intermediate_output_c215; assert_equal("V.a", worksheet.intermediate_output_c215); end
  def test_intermediate_output_d215; assert_equal("V.03", worksheet.intermediate_output_d215); end
  def test_intermediate_output_e215; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_e215); end
  def test_intermediate_output_h215; assert_in_epsilon(13.727592565398165, worksheet.intermediate_output_h215, 0.001); end
  def test_intermediate_output_i215; assert_in_epsilon(15.6952277934, worksheet.intermediate_output_i215, 0.001); end
  def test_intermediate_output_j215; assert_in_epsilon(16.807364904225004, worksheet.intermediate_output_j215, 0.001); end
  def test_intermediate_output_k215; assert_in_epsilon(17.9578694341, worksheet.intermediate_output_k215, 0.001); end
  def test_intermediate_output_l215; assert_in_epsilon(21.31595716513819, worksheet.intermediate_output_l215, 0.001); end
  def test_intermediate_output_m215; assert_in_epsilon(23.850401876699994, worksheet.intermediate_output_m215, 0.001); end
  def test_intermediate_output_n215; assert_in_epsilon(25.35724666577778, worksheet.intermediate_output_n215, 0.001); end
  def test_intermediate_output_o215; assert_in_epsilon(26.916433165955553, worksheet.intermediate_output_o215, 0.001); end
  def test_intermediate_output_p215; assert_in_epsilon(28.527961377233332, worksheet.intermediate_output_p215, 0.001); end
  def test_intermediate_output_q215; assert_in_epsilon(30.19183129961111, worksheet.intermediate_output_q215, 0.001); end
  def test_intermediate_output_c216; assert_equal("V.a", worksheet.intermediate_output_c216); end
  def test_intermediate_output_d216; assert_equal("V.04", worksheet.intermediate_output_d216); end
  def test_intermediate_output_e216; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_e216); end
  def test_intermediate_output_h216; assert_in_epsilon(1.562605222222222, worksheet.intermediate_output_h216, 0.001); end
  def test_intermediate_output_i216; assert_in_epsilon(1.0691270054227253, worksheet.intermediate_output_i216, 0.001); end
  def test_intermediate_output_j216; assert_in_epsilon(1.6812610687861258, worksheet.intermediate_output_j216, 0.001); end
  def test_intermediate_output_k216; assert_in_epsilon(2.3096705383941964, worksheet.intermediate_output_k216, 0.001); end
  def test_intermediate_output_l216; assert_in_epsilon(3.528739363098261, worksheet.intermediate_output_l216, 0.001); end
  def test_intermediate_output_m216; assert_in_epsilon(4.329131457560122, worksheet.intermediate_output_m216, 0.001); end
  def test_intermediate_output_n216; assert_in_epsilon(5.1504279377230455, worksheet.intermediate_output_n216, 0.001); end
  def test_intermediate_output_o216; assert_in_epsilon(5.993130384698937, worksheet.intermediate_output_o216, 0.001); end
  def test_intermediate_output_p216; assert_in_epsilon(6.857757484212166, worksheet.intermediate_output_p216, 0.001); end
  def test_intermediate_output_q216; assert_in_epsilon(7.744845969984378, worksheet.intermediate_output_q216, 0.001); end
  def test_intermediate_output_c217; assert_equal("V.a", worksheet.intermediate_output_c217); end
  def test_intermediate_output_d217; assert_equal("V.05", worksheet.intermediate_output_d217); end
  def test_intermediate_output_e217; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_e217); end
  def test_intermediate_output_h217; assert_in_epsilon(22.230008822067568, worksheet.intermediate_output_h217, 0.001); end
  def test_intermediate_output_i217; assert_in_epsilon(18.298750109496886, worksheet.intermediate_output_i217, 0.001); end
  def test_intermediate_output_j217; assert_in_epsilon(20.750204806664975, worksheet.intermediate_output_j217, 0.001); end
  def test_intermediate_output_k217; assert_in_epsilon(31.205781820552314, worksheet.intermediate_output_k217, 0.001); end
  def test_intermediate_output_l217; assert_in_epsilon(34.73401888518371, worksheet.intermediate_output_l217, 0.001); end
  def test_intermediate_output_m217; assert_in_epsilon(35.3876884007179, worksheet.intermediate_output_m217, 0.001); end
  def test_intermediate_output_n217; assert_in_epsilon(36.21199755249822, worksheet.intermediate_output_n217, 0.001); end
  def test_intermediate_output_o217; assert_in_epsilon(37.18458852134214, worksheet.intermediate_output_o217, 0.001); end
  def test_intermediate_output_p217; assert_in_epsilon(38.31187901330933, worksheet.intermediate_output_p217, 0.001); end
  def test_intermediate_output_q217; assert_in_epsilon(39.597323282735694, worksheet.intermediate_output_q217, 0.001); end
  def test_intermediate_output_c219; assert_equal("Imports", worksheet.intermediate_output_c219); end
  def test_intermediate_output_c220; assert_equal("V.b", worksheet.intermediate_output_c220); end
  def test_intermediate_output_d220; assert_equal("V.03", worksheet.intermediate_output_d220); end
  def test_intermediate_output_e220; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_e220); end
  def test_intermediate_output_h220; assert_in_epsilon(4.39614, worksheet.intermediate_output_h220, 0.001); end
  def test_intermediate_output_i220; assert_in_epsilon(4.089432558139535, worksheet.intermediate_output_i220, 0.001); end
  def test_intermediate_output_j220; assert_in_epsilon(3.578253488372093, worksheet.intermediate_output_j220, 0.001); end
  def test_intermediate_output_k220; assert_in_epsilon(3.0670744186046512, worksheet.intermediate_output_k220, 0.001); end
  def test_intermediate_output_l220; assert_in_epsilon(2.5558953488372094, worksheet.intermediate_output_l220, 0.001); end
  def test_intermediate_output_m220; assert_in_epsilon(2.0447162790697675, worksheet.intermediate_output_m220, 0.001); end
  def test_intermediate_output_n220; assert_in_epsilon(1.5335372093023256, worksheet.intermediate_output_n220, 0.001); end
  def test_intermediate_output_o220; assert_in_epsilon(1.0223581395348837, worksheet.intermediate_output_o220, 0.001); end
  def test_intermediate_output_p220; assert_in_delta(0.5111790697674419, worksheet.intermediate_output_p220, 0.001); end
  def test_intermediate_output_q220; assert_in_delta(0, (worksheet.intermediate_output_q220||0), 0.001); end
  def test_intermediate_output_c221; assert_equal("V.b", worksheet.intermediate_output_c221); end
  def test_intermediate_output_d221; assert_equal("V.04", worksheet.intermediate_output_d221); end
  def test_intermediate_output_e221; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_e221); end
  def test_intermediate_output_h221; assert_in_delta(-0.39542, worksheet.intermediate_output_h221, 0.001); end
  def test_intermediate_output_i221; assert_in_delta(-0.36783255813953486, worksheet.intermediate_output_i221, 0.001); end
  def test_intermediate_output_j221; assert_in_delta(-0.32185348837209304, worksheet.intermediate_output_j221, 0.001); end
  def test_intermediate_output_k221; assert_in_delta(-0.2758744186046512, worksheet.intermediate_output_k221, 0.001); end
  def test_intermediate_output_l221; assert_in_delta(-0.2298953488372093, worksheet.intermediate_output_l221, 0.001); end
  def test_intermediate_output_m221; assert_in_delta(-0.18391627906976743, worksheet.intermediate_output_m221, 0.001); end
  def test_intermediate_output_n221; assert_in_delta(-0.13793720930232556, worksheet.intermediate_output_n221, 0.001); end
  def test_intermediate_output_o221; assert_in_delta(-0.09195813953488369, worksheet.intermediate_output_o221, 0.001); end
  def test_intermediate_output_p221; assert_in_delta(-0.04597906976744187, worksheet.intermediate_output_p221, 0.001); end
  def test_intermediate_output_q221; assert_in_delta(0, (worksheet.intermediate_output_q221||0), 0.001); end
  def test_intermediate_output_c222; assert_equal("V.b", worksheet.intermediate_output_c222); end
  def test_intermediate_output_d222; assert_equal("V.05", worksheet.intermediate_output_d222); end
  def test_intermediate_output_e222; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_e222); end
  def test_intermediate_output_h222; assert_in_delta(0, (worksheet.intermediate_output_h222||0), 0.001); end
  def test_intermediate_output_i222; assert_in_delta(0, (worksheet.intermediate_output_i222||0), 0.001); end
  def test_intermediate_output_j222; assert_in_delta(0, (worksheet.intermediate_output_j222||0), 0.001); end
  def test_intermediate_output_k222; assert_in_delta(0, (worksheet.intermediate_output_k222||0), 0.001); end
  def test_intermediate_output_l222; assert_in_delta(0, (worksheet.intermediate_output_l222||0), 0.001); end
  def test_intermediate_output_m222; assert_in_delta(0, (worksheet.intermediate_output_m222||0), 0.001); end
  def test_intermediate_output_n222; assert_in_delta(0, (worksheet.intermediate_output_n222||0), 0.001); end
  def test_intermediate_output_o222; assert_in_delta(0, (worksheet.intermediate_output_o222||0), 0.001); end
  def test_intermediate_output_p222; assert_in_delta(0, (worksheet.intermediate_output_p222||0), 0.001); end
  def test_intermediate_output_q222; assert_in_delta(0, (worksheet.intermediate_output_q222||0), 0.001); end
  def test_intermediate_output_c224; assert_equal("Total", worksheet.intermediate_output_c224); end
  def test_intermediate_output_c225; assert_equal("V.b", worksheet.intermediate_output_c225); end
  def test_intermediate_output_d225; assert_equal("V.03", worksheet.intermediate_output_d225); end
  def test_intermediate_output_e225; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_e225); end
  def test_intermediate_output_h225; assert_in_epsilon(18.123732565398164, worksheet.intermediate_output_h225, 0.001); end
  def test_intermediate_output_i225; assert_in_epsilon(19.784660351539536, worksheet.intermediate_output_i225, 0.001); end
  def test_intermediate_output_j225; assert_in_epsilon(20.385618392597095, worksheet.intermediate_output_j225, 0.001); end
  def test_intermediate_output_k225; assert_in_epsilon(21.024943852704652, worksheet.intermediate_output_k225, 0.001); end
  def test_intermediate_output_l225; assert_in_epsilon(23.871852513975398, worksheet.intermediate_output_l225, 0.001); end
  def test_intermediate_output_m225; assert_in_epsilon(25.89511815576976, worksheet.intermediate_output_m225, 0.001); end
  def test_intermediate_output_n225; assert_in_epsilon(26.890783875080103, worksheet.intermediate_output_n225, 0.001); end
  def test_intermediate_output_o225; assert_in_epsilon(27.938791305490437, worksheet.intermediate_output_o225, 0.001); end
  def test_intermediate_output_p225; assert_in_epsilon(29.039140447000776, worksheet.intermediate_output_p225, 0.001); end
  def test_intermediate_output_q225; assert_in_epsilon(30.19183129961111, worksheet.intermediate_output_q225, 0.001); end
  def test_intermediate_output_c226; assert_equal("V.b", worksheet.intermediate_output_c226); end
  def test_intermediate_output_d226; assert_equal("V.04", worksheet.intermediate_output_d226); end
  def test_intermediate_output_e226; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_e226); end
  def test_intermediate_output_h226; assert_in_epsilon(1.1671852222222219, worksheet.intermediate_output_h226, 0.001); end
  def test_intermediate_output_i226; assert_in_delta(0.7012944472831905, worksheet.intermediate_output_i226, 0.001); end
  def test_intermediate_output_j226; assert_in_epsilon(1.3594075804140329, worksheet.intermediate_output_j226, 0.001); end
  def test_intermediate_output_k226; assert_in_epsilon(2.033796119789545, worksheet.intermediate_output_k226, 0.001); end
  def test_intermediate_output_l226; assert_in_epsilon(3.298844014261052, worksheet.intermediate_output_l226, 0.001); end
  def test_intermediate_output_m226; assert_in_epsilon(4.145215178490354, worksheet.intermediate_output_m226, 0.001); end
  def test_intermediate_output_n226; assert_in_epsilon(5.01249072842072, worksheet.intermediate_output_n226, 0.001); end
  def test_intermediate_output_o226; assert_in_epsilon(5.901172245164053, worksheet.intermediate_output_o226, 0.001); end
  def test_intermediate_output_p226; assert_in_epsilon(6.811778414444724, worksheet.intermediate_output_p226, 0.001); end
  def test_intermediate_output_q226; assert_in_epsilon(7.744845969984378, worksheet.intermediate_output_q226, 0.001); end
  def test_intermediate_output_c227; assert_equal("V.b", worksheet.intermediate_output_c227); end
  def test_intermediate_output_d227; assert_equal("V.05", worksheet.intermediate_output_d227); end
  def test_intermediate_output_e227; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_e227); end
  def test_intermediate_output_h227; assert_in_epsilon(22.230008822067568, worksheet.intermediate_output_h227, 0.001); end
  def test_intermediate_output_i227; assert_in_epsilon(18.298750109496886, worksheet.intermediate_output_i227, 0.001); end
  def test_intermediate_output_j227; assert_in_epsilon(20.750204806664975, worksheet.intermediate_output_j227, 0.001); end
  def test_intermediate_output_k227; assert_in_epsilon(31.205781820552314, worksheet.intermediate_output_k227, 0.001); end
  def test_intermediate_output_l227; assert_in_epsilon(34.73401888518371, worksheet.intermediate_output_l227, 0.001); end
  def test_intermediate_output_m227; assert_in_epsilon(35.3876884007179, worksheet.intermediate_output_m227, 0.001); end
  def test_intermediate_output_n227; assert_in_epsilon(36.21199755249822, worksheet.intermediate_output_n227, 0.001); end
  def test_intermediate_output_o227; assert_in_epsilon(37.18458852134214, worksheet.intermediate_output_o227, 0.001); end
  def test_intermediate_output_p227; assert_in_epsilon(38.31187901330933, worksheet.intermediate_output_p227, 0.001); end
  def test_intermediate_output_q227; assert_in_epsilon(39.597323282735694, worksheet.intermediate_output_q227, 0.001); end
  def test_intermediate_output_b229; assert_equal("Hydro-carbon use by sector and Bio-energy share", worksheet.intermediate_output_b229); end
  def test_intermediate_output_h229; assert_equal("Please note: Bio-energy is not assigned to sectors but is assumed to replace fossil fuels up to maximum demand", worksheet.intermediate_output_h229); end
  def test_intermediate_output_c231; assert_equal("Solid Hydrocarbon consumption", worksheet.intermediate_output_c231); end
  def test_intermediate_output_h231; assert_in_epsilon(496.28220167438485, worksheet.intermediate_output_h231, 0.001); end
  def test_intermediate_output_i231; assert_in_epsilon(504.62288647121244, worksheet.intermediate_output_i231, 0.001); end
  def test_intermediate_output_j231; assert_in_epsilon(452.46752362640234, worksheet.intermediate_output_j231, 0.001); end
  def test_intermediate_output_k231; assert_in_epsilon(368.65089298968246, worksheet.intermediate_output_k231, 0.001); end
  def test_intermediate_output_l231; assert_in_epsilon(239.36577243928855, worksheet.intermediate_output_l231, 0.001); end
  def test_intermediate_output_m231; assert_in_epsilon(136.14982492197697, worksheet.intermediate_output_m231, 0.001); end
  def test_intermediate_output_n231; assert_in_epsilon(121.80330314231705, worksheet.intermediate_output_n231, 0.001); end
  def test_intermediate_output_o231; assert_in_epsilon(127.3882431335079, worksheet.intermediate_output_o231, 0.001); end
  def test_intermediate_output_p231; assert_in_epsilon(133.22260443623873, worksheet.intermediate_output_p231, 0.001); end
  def test_intermediate_output_q231; assert_in_epsilon(139.78162562276052, worksheet.intermediate_output_q231, 0.001); end
  def test_intermediate_output_c232; assert_equal("V", worksheet.intermediate_output_c232); end
  def test_intermediate_output_d232; assert_equal("Share of solid biomass to total solid hydrocarbon consumption", worksheet.intermediate_output_d232); end
  def test_intermediate_output_h232; assert_in_delta(0.036519005727489916, worksheet.intermediate_output_h232, 0.001); end
  def test_intermediate_output_i232; assert_in_delta(0.03920682331689727, worksheet.intermediate_output_i232, 0.001); end
  def test_intermediate_output_j232; assert_in_delta(0.045054323963876985, worksheet.intermediate_output_j232, 0.001); end
  def test_intermediate_output_k232; assert_in_delta(0.05703212511489314, worksheet.intermediate_output_k232, 0.001); end
  def test_intermediate_output_l232; assert_in_delta(0.09972959905965723, worksheet.intermediate_output_l232, 0.001); end
  def test_intermediate_output_m232; assert_in_delta(0.19019575067841188, worksheet.intermediate_output_m232, 0.001); end
  def test_intermediate_output_n232; assert_in_delta(0.22077220552599017, worksheet.intermediate_output_n232, 0.001); end
  def test_intermediate_output_o232; assert_in_delta(0.21932001429841122, worksheet.intermediate_output_o232, 0.001); end
  def test_intermediate_output_p232; assert_in_delta(0.21797457398379502, worksheet.intermediate_output_p232, 0.001); end
  def test_intermediate_output_q232; assert_in_delta(0.21599284716499248, worksheet.intermediate_output_q232, 0.001); end
  def test_intermediate_output_c233; assert_equal("I.b", worksheet.intermediate_output_c233); end
  def test_intermediate_output_d233; assert_equal("Carbon Capture Storage (CCS)", worksheet.intermediate_output_d233); end
  def test_intermediate_output_h233; assert_in_delta(0, (worksheet.intermediate_output_h233||0), 0.001); end
  def test_intermediate_output_i233; assert_in_delta(0, (worksheet.intermediate_output_i233||0), 0.001); end
  def test_intermediate_output_j233; assert_in_epsilon(6.773727272727275, worksheet.intermediate_output_j233, 0.001); end
  def test_intermediate_output_k233; assert_in_epsilon(20.697500000000005, worksheet.intermediate_output_k233, 0.001); end
  def test_intermediate_output_l233; assert_in_epsilon(20.24755434782609, worksheet.intermediate_output_l233, 0.001); end
  def test_intermediate_output_m233; assert_in_epsilon(19.81675531914894, worksheet.intermediate_output_m233, 0.001); end
  def test_intermediate_output_n233; assert_in_epsilon(19.40390625, worksheet.intermediate_output_n233, 0.001); end
  def test_intermediate_output_o233; assert_in_epsilon(19.403906250000002, worksheet.intermediate_output_o233, 0.001); end
  def test_intermediate_output_p233; assert_in_epsilon(19.007908163265306, worksheet.intermediate_output_p233, 0.001); end
  def test_intermediate_output_q233; assert_in_epsilon(18.627750000000002, worksheet.intermediate_output_q233, 0.001); end
  def test_intermediate_output_c234; assert_equal("I.a", worksheet.intermediate_output_c234); end
  def test_intermediate_output_d234; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d234); end
  def test_intermediate_output_h234; assert_in_epsilon(426.5928682890119, worksheet.intermediate_output_h234, 0.001); end
  def test_intermediate_output_i234; assert_in_epsilon(434.1451350399233, worksheet.intermediate_output_i234, 0.001); end
  def test_intermediate_output_j234; assert_in_epsilon(374.30469360000006, worksheet.intermediate_output_j234, 0.001); end
  def test_intermediate_output_k234; assert_in_epsilon(273.841074, worksheet.intermediate_output_k234, 0.001); end
  def test_intermediate_output_l234; assert_in_epsilon(140.6206656, worksheet.intermediate_output_l234, 0.001); end
  def test_intermediate_output_m234; assert_in_epsilon(33.13548, worksheet.intermediate_output_m234, 0.001); end
  def test_intermediate_output_n234; assert_in_epsilon(14.200920000000002, worksheet.intermediate_output_n234, 0.001); end
  def test_intermediate_output_o234; assert_in_epsilon(14.200920000000002, worksheet.intermediate_output_o234, 0.001); end
  def test_intermediate_output_p234; assert_in_epsilon(14.200920000000002, worksheet.intermediate_output_p234, 0.001); end
  def test_intermediate_output_q234; assert_in_epsilon(14.200920000000002, worksheet.intermediate_output_q234, 0.001); end
  def test_intermediate_output_c235; assert_equal("XI", worksheet.intermediate_output_c235); end
  def test_intermediate_output_d235; assert_equal("Industry", worksheet.intermediate_output_d235); end
  def test_intermediate_output_h235; assert_in_epsilon(54.553269110073614, worksheet.intermediate_output_h235, 0.001); end
  def test_intermediate_output_i235; assert_in_epsilon(56.4320461816109, worksheet.intermediate_output_i235, 0.001); end
  def test_intermediate_output_j235; assert_in_epsilon(59.735865536857546, worksheet.intermediate_output_j235, 0.001); end
  def test_intermediate_output_k235; assert_in_epsilon(63.268616228002266, worksheet.intermediate_output_k235, 0.001); end
  def test_intermediate_output_l235; assert_in_epsilon(68.70433316568167, worksheet.intermediate_output_l235, 0.001); end
  def test_intermediate_output_m235; assert_in_epsilon(74.72159652945082, worksheet.intermediate_output_m235, 0.001); end
  def test_intermediate_output_n235; assert_in_epsilon(81.38590342879701, worksheet.intermediate_output_n235, 0.001); end
  def test_intermediate_output_o235; assert_in_epsilon(88.77029323244011, worksheet.intermediate_output_o235, 0.001); end
  def test_intermediate_output_p235; assert_in_epsilon(96.95622560934686, worksheet.intermediate_output_p235, 0.001); end
  def test_intermediate_output_q235; assert_in_epsilon(106.03456133604239, worksheet.intermediate_output_q235, 0.001); end
  def test_intermediate_output_c236; assert_equal("IX", worksheet.intermediate_output_c236); end
  def test_intermediate_output_d236; assert_equal("Heating", worksheet.intermediate_output_d236); end
  def test_intermediate_output_h236; assert_in_epsilon(14.25680300224757, worksheet.intermediate_output_h236, 0.001); end
  def test_intermediate_output_i236; assert_in_epsilon(13.147942484875603, worksheet.intermediate_output_i236, 0.001); end
  def test_intermediate_output_j236; assert_in_epsilon(10.750153595975089, worksheet.intermediate_output_j236, 0.001); end
  def test_intermediate_output_k236; assert_in_epsilon(9.935261760116955, worksheet.intermediate_output_k236, 0.001); end
  def test_intermediate_output_l236; assert_in_epsilon(8.879384011776363, worksheet.intermediate_output_l236, 0.001); end
  def test_intermediate_output_m236; assert_in_epsilon(7.5797072356746025, worksheet.intermediate_output_m236, 0.001); end
  def test_intermediate_output_n236; assert_in_epsilon(5.91081821062347, worksheet.intermediate_output_n236, 0.001); end
  def test_intermediate_output_o236; assert_in_epsilon(4.105860802720359, worksheet.intermediate_output_o236, 0.001); end
  def test_intermediate_output_p236; assert_in_epsilon(2.1447416140822204, worksheet.intermediate_output_p236, 0.001); end
  def test_intermediate_output_q236; assert_in_delta(0, (worksheet.intermediate_output_q236||0), 0.001); end
  def test_intermediate_output_c238; assert_equal("Liquid Hydrocarbon consumption", worksheet.intermediate_output_c238); end
  def test_intermediate_output_h238; assert_in_epsilon(905.4992863681687, worksheet.intermediate_output_h238, 0.001); end
  def test_intermediate_output_i238; assert_in_epsilon(868.8924025606916, worksheet.intermediate_output_i238, 0.001); end
  def test_intermediate_output_j238; assert_in_epsilon(856.5464311602528, worksheet.intermediate_output_j238, 0.001); end
  def test_intermediate_output_k238; assert_in_epsilon(861.6277604642428, worksheet.intermediate_output_k238, 0.001); end
  def test_intermediate_output_l238; assert_in_epsilon(849.0972000576121, worksheet.intermediate_output_l238, 0.001); end
  def test_intermediate_output_m238; assert_in_epsilon(832.634954586045, worksheet.intermediate_output_m238, 0.001); end
  def test_intermediate_output_n238; assert_in_epsilon(852.4348097397127, worksheet.intermediate_output_n238, 0.001); end
  def test_intermediate_output_o238; assert_in_epsilon(864.2080474650459, worksheet.intermediate_output_o238, 0.001); end
  def test_intermediate_output_p238; assert_in_epsilon(879.6884500466551, worksheet.intermediate_output_p238, 0.001); end
  def test_intermediate_output_q238; assert_in_epsilon(887.8266553154101, worksheet.intermediate_output_q238, 0.001); end
  def test_intermediate_output_c239; assert_equal("V", worksheet.intermediate_output_c239); end
  def test_intermediate_output_d239; assert_equal("Share of Bioliquids to total liquid hydrocarbon consumption", worksheet.intermediate_output_d239); end
  def test_intermediate_output_h239; assert_in_delta(0.0012889962916521325, worksheet.intermediate_output_h239, 0.001); end
  def test_intermediate_output_i239; assert_in_delta(0.0008071131076948339, worksheet.intermediate_output_i239, 0.001); end
  def test_intermediate_output_j239; assert_in_delta(0.0015870798487510117, worksheet.intermediate_output_j239, 0.001); end
  def test_intermediate_output_k239; assert_in_delta(0.0023604115525406714, worksheet.intermediate_output_k239, 0.001); end
  def test_intermediate_output_l239; assert_in_delta(0.003885119411578818, worksheet.intermediate_output_l239, 0.001); end
  def test_intermediate_output_m239; assert_in_delta(0.004978430410180415, worksheet.intermediate_output_m239, 0.001); end
  def test_intermediate_output_n239; assert_in_delta(0.005880204176494461, worksheet.intermediate_output_n239, 0.001); end
  def test_intermediate_output_o239; assert_in_delta(0.006828416215833416, worksheet.intermediate_output_o239, 0.001); end
  def test_intermediate_output_p239; assert_in_delta(0.007743398715856113, worksheet.intermediate_output_p239, 0.001); end
  def test_intermediate_output_q239; assert_in_delta(0.008723376262264774, worksheet.intermediate_output_q239, 0.001); end
  def test_intermediate_output_c240; assert_equal("XII", worksheet.intermediate_output_c240); end
  def test_intermediate_output_d240; assert_equal("Transport", worksheet.intermediate_output_d240); end
  def test_intermediate_output_h240; assert_in_epsilon(732.8202358203371, worksheet.intermediate_output_h240, 0.001); end
  def test_intermediate_output_i240; assert_in_epsilon(698.2600703738092, worksheet.intermediate_output_i240, 0.001); end
  def test_intermediate_output_j240; assert_in_epsilon(694.4084550362566, worksheet.intermediate_output_j240, 0.001); end
  def test_intermediate_output_k240; assert_in_epsilon(698.3971936448528, worksheet.intermediate_output_k240, 0.001); end
  def test_intermediate_output_l240; assert_in_epsilon(681.6949842354908, worksheet.intermediate_output_l240, 0.001); end
  def test_intermediate_output_m240; assert_in_epsilon(660.0832111591712, worksheet.intermediate_output_m240, 0.001); end
  def test_intermediate_output_n240; assert_in_epsilon(673.8928089196928, worksheet.intermediate_output_n240, 0.001); end
  def test_intermediate_output_o240; assert_in_epsilon(678.617873654862, worksheet.intermediate_output_o240, 0.001); end
  def test_intermediate_output_p240; assert_in_epsilon(685.9735742420924, worksheet.intermediate_output_p240, 0.001); end
  def test_intermediate_output_q240; assert_in_epsilon(684.8728348822198, worksheet.intermediate_output_q240, 0.001); end
  def test_intermediate_output_c241; assert_equal("XI", worksheet.intermediate_output_c241); end
  def test_intermediate_output_d241; assert_equal("Industry", worksheet.intermediate_output_d241); end
  def test_intermediate_output_h241; assert_in_epsilon(81.62303487912313, worksheet.intermediate_output_h241, 0.001); end
  def test_intermediate_output_i241; assert_in_epsilon(84.43407606770457, worksheet.intermediate_output_i241, 0.001); end
  def test_intermediate_output_j241; assert_in_epsilon(89.37727684864225, worksheet.intermediate_output_j241, 0.001); end
  def test_intermediate_output_k241; assert_in_epsilon(94.66300651409517, worksheet.intermediate_output_k241, 0.001); end
  def test_intermediate_output_l241; assert_in_epsilon(102.79596940403718, worksheet.intermediate_output_l241, 0.001); end
  def test_intermediate_output_m241; assert_in_epsilon(111.79904667932928, worksheet.intermediate_output_m241, 0.001); end
  def test_intermediate_output_n241; assert_in_epsilon(121.7702356358142, worksheet.intermediate_output_n241, 0.001); end
  def test_intermediate_output_o241; assert_in_epsilon(132.81881835755073, worksheet.intermediate_output_o241, 0.001); end
  def test_intermediate_output_p241; assert_in_epsilon(145.06667544875887, worksheet.intermediate_output_p241, 0.001); end
  def test_intermediate_output_q241; assert_in_epsilon(158.64975352551576, worksheet.intermediate_output_q241, 0.001); end
  def test_intermediate_output_c242; assert_equal("XV.a", worksheet.intermediate_output_c242); end
  def test_intermediate_output_d242; assert_equal("Petroleum refineries", worksheet.intermediate_output_d242); end
  def test_intermediate_output_h242; assert_in_epsilon(56.266685142190774, worksheet.intermediate_output_h242, 0.001); end
  def test_intermediate_output_i242; assert_in_epsilon(52.99943367286665, worksheet.intermediate_output_i242, 0.001); end
  def test_intermediate_output_j242; assert_in_epsilon(50.22299177401593, worksheet.intermediate_output_j242, 0.001); end
  def test_intermediate_output_k242; assert_in_epsilon(47.6369582485937, worksheet.intermediate_output_k242, 0.001); end
  def test_intermediate_output_l242; assert_in_epsilon(45.613021339389, worksheet.intermediate_output_l242, 0.001); end
  def test_intermediate_output_m242; assert_in_epsilon(44.04693754034374, worksheet.intermediate_output_m242, 0.001); end
  def test_intermediate_output_n242; assert_in_epsilon(42.83513175011493, worksheet.intermediate_output_n242, 0.001); end
  def test_intermediate_output_o242; assert_in_epsilon(41.897459529683765, worksheet.intermediate_output_o242, 0.001); end
  def test_intermediate_output_p242; assert_in_epsilon(41.17190663989083, worksheet.intermediate_output_p242, 0.001); end
  def test_intermediate_output_q242; assert_in_epsilon(40.61048764462102, worksheet.intermediate_output_q242, 0.001); end
  def test_intermediate_output_c244; assert_equal("Gaseous Hydrocarbon consumption", worksheet.intermediate_output_c244); end
  def test_intermediate_output_h244; assert_in_epsilon(989.1712766501873, worksheet.intermediate_output_h244, 0.001); end
  def test_intermediate_output_i244; assert_in_epsilon(1008.3202590740525, worksheet.intermediate_output_i244, 0.001); end
  def test_intermediate_output_j244; assert_in_epsilon(1088.615908778863, worksheet.intermediate_output_j244, 0.001); end
  def test_intermediate_output_k244; assert_in_epsilon(1220.2204324873592, worksheet.intermediate_output_k244, 0.001); end
  def test_intermediate_output_l244; assert_in_epsilon(1408.066373618732, worksheet.intermediate_output_l244, 0.001); end
  def test_intermediate_output_m244; assert_in_epsilon(1592.6108593355107, worksheet.intermediate_output_m244, 0.001); end
  def test_intermediate_output_n244; assert_in_epsilon(1744.9495506051887, worksheet.intermediate_output_n244, 0.001); end
  def test_intermediate_output_o244; assert_in_epsilon(1877.094348807031, worksheet.intermediate_output_o244, 0.001); end
  def test_intermediate_output_p244; assert_in_epsilon(2014.340660060927, worksheet.intermediate_output_p244, 0.001); end
  def test_intermediate_output_q244; assert_in_epsilon(2132.039736084559, worksheet.intermediate_output_q244, 0.001); end
  def test_intermediate_output_c245; assert_equal("V", worksheet.intermediate_output_c245); end
  def test_intermediate_output_d245; assert_equal("Share of Biogas to total gaseous hydrocarbon consumption", worksheet.intermediate_output_d245); end
  def test_intermediate_output_h245; assert_in_delta(0.022473366692721947, worksheet.intermediate_output_h245, 0.001); end
  def test_intermediate_output_i245; assert_in_delta(0.018147756077320866, worksheet.intermediate_output_i245, 0.001); end
  def test_intermediate_output_j245; assert_in_delta(0.019061089075890113, worksheet.intermediate_output_j245, 0.001); end
  def test_intermediate_output_k245; assert_in_delta(0.02557388893819854, worksheet.intermediate_output_k245, 0.001); end
  def test_intermediate_output_l245; assert_in_delta(0.02466788465086148, worksheet.intermediate_output_l245, 0.001); end
  def test_intermediate_output_m245; assert_in_delta(0.022219921579263124, worksheet.intermediate_output_m245, 0.001); end
  def test_intermediate_output_n245; assert_in_delta(0.020752461032434468, worksheet.intermediate_output_n245, 0.001); end
  def test_intermediate_output_o245; assert_in_delta(0.019809653438557548, worksheet.intermediate_output_o245, 0.001); end
  def test_intermediate_output_p245; assert_in_delta(0.01901956296317353, worksheet.intermediate_output_p245, 0.001); end
  def test_intermediate_output_q245; assert_in_delta(0.018572507168865084, worksheet.intermediate_output_q245, 0.001); end
  def test_intermediate_output_c246; assert_equal("IX.a", worksheet.intermediate_output_c246); end
  def test_intermediate_output_d246; assert_equal("Domestic space heating and hot water", worksheet.intermediate_output_d246); end
  def test_intermediate_output_h246; assert_in_epsilon(324.47780687796825, worksheet.intermediate_output_h246, 0.001); end
  def test_intermediate_output_i246; assert_in_epsilon(354.8435737936154, worksheet.intermediate_output_i246, 0.001); end
  def test_intermediate_output_j246; assert_in_epsilon(382.96955209021405, worksheet.intermediate_output_j246, 0.001); end
  def test_intermediate_output_k246; assert_in_epsilon(408.4682642374902, worksheet.intermediate_output_k246, 0.001); end
  def test_intermediate_output_l246; assert_in_epsilon(433.28527096925444, worksheet.intermediate_output_l246, 0.001); end
  def test_intermediate_output_m246; assert_in_epsilon(457.22652053439543, worksheet.intermediate_output_m246, 0.001); end
  def test_intermediate_output_n246; assert_in_epsilon(470.098708854415, worksheet.intermediate_output_n246, 0.001); end
  def test_intermediate_output_o246; assert_in_epsilon(484.2897766694549, worksheet.intermediate_output_o246, 0.001); end
  def test_intermediate_output_p246; assert_in_epsilon(500.17015397996613, worksheet.intermediate_output_p246, 0.001); end
  def test_intermediate_output_q246; assert_in_epsilon(517.9434690774432, worksheet.intermediate_output_q246, 0.001); end
  def test_intermediate_output_c247; assert_equal("IX.c", worksheet.intermediate_output_c247); end
  def test_intermediate_output_d247; assert_equal("Commercial heating and cooling", worksheet.intermediate_output_d247); end
  def test_intermediate_output_h247; assert_in_epsilon(78.26235982624942, worksheet.intermediate_output_h247, 0.001); end
  def test_intermediate_output_i247; assert_in_epsilon(80.65151401584527, worksheet.intermediate_output_i247, 0.001); end
  def test_intermediate_output_j247; assert_in_epsilon(85.39821392838152, worksheet.intermediate_output_j247, 0.001); end
  def test_intermediate_output_k247; assert_in_epsilon(91.44410327375198, worksheet.intermediate_output_k247, 0.001); end
  def test_intermediate_output_l247; assert_in_epsilon(98.05380686191101, worksheet.intermediate_output_l247, 0.001); end
  def test_intermediate_output_m247; assert_in_epsilon(105.27784091104671, worksheet.intermediate_output_m247, 0.001); end
  def test_intermediate_output_n247; assert_in_epsilon(113.17110264565169, worksheet.intermediate_output_n247, 0.001); end
  def test_intermediate_output_o247; assert_in_epsilon(121.79324900623955, worksheet.intermediate_output_o247, 0.001); end
  def test_intermediate_output_p247; assert_in_epsilon(131.2091076031487, worksheet.intermediate_output_p247, 0.001); end
  def test_intermediate_output_q247; assert_in_epsilon(141.48912264058296, worksheet.intermediate_output_q247, 0.001); end
  def test_intermediate_output_c248; assert_equal("XI", worksheet.intermediate_output_c248); end
  def test_intermediate_output_d248; assert_equal("Industry", worksheet.intermediate_output_d248); end
  def test_intermediate_output_h248; assert_in_epsilon(150.05297390894643, worksheet.intermediate_output_h248, 0.001); end
  def test_intermediate_output_i248; assert_in_epsilon(155.22069513803135, worksheet.intermediate_output_i248, 0.001); end
  def test_intermediate_output_j248; assert_in_epsilon(164.30810506964173, worksheet.intermediate_output_j248, 0.001); end
  def test_intermediate_output_k248; assert_in_epsilon(174.02520829613317, worksheet.intermediate_output_k248, 0.001); end
  def test_intermediate_output_l248; assert_in_epsilon(188.97656694304166, worksheet.intermediate_output_l248, 0.001); end
  def test_intermediate_output_m248; assert_in_epsilon(205.52751388455468, worksheet.intermediate_output_m248, 0.001); end
  def test_intermediate_output_n248; assert_in_epsilon(223.85820397154254, worksheet.intermediate_output_n248, 0.001); end
  def test_intermediate_output_o248; assert_in_epsilon(244.16953762056374, worksheet.intermediate_output_o248, 0.001); end
  def test_intermediate_output_p248; assert_in_epsilon(266.68557593339085, worksheet.intermediate_output_p248, 0.001); end
  def test_intermediate_output_q248; assert_in_epsilon(291.656238483162, worksheet.intermediate_output_q248, 0.001); end
  def test_intermediate_output_c249; assert_equal("I.a", worksheet.intermediate_output_c249); end
  def test_intermediate_output_d249; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d249); end
  def test_intermediate_output_h249; assert_in_epsilon(350.57120492669185, worksheet.intermediate_output_h249, 0.001); end
  def test_intermediate_output_i249; assert_in_epsilon(343.3066403541333, worksheet.intermediate_output_i249, 0.001); end
  def test_intermediate_output_j249; assert_in_epsilon(386.21265572428075, worksheet.intermediate_output_j249, 0.001); end
  def test_intermediate_output_k249; assert_in_epsilon(486.29390208870655, worksheet.intermediate_output_k249, 0.001); end
  def test_intermediate_output_l249; assert_in_epsilon(635.3969967171009, worksheet.intermediate_output_l249, 0.001); end
  def test_intermediate_output_m249; assert_in_epsilon(778.193502902905, worksheet.intermediate_output_m249, 0.001); end
  def test_intermediate_output_n249; assert_in_epsilon(896.0137185784046, worksheet.intermediate_output_n249, 0.001); end
  def test_intermediate_output_o249; assert_in_epsilon(988.6004346014633, worksheet.intermediate_output_o249, 0.001); end
  def test_intermediate_output_p249; assert_in_epsilon(1080.805706402919, worksheet.intermediate_output_p249, 0.001); end
  def test_intermediate_output_q249; assert_in_epsilon(1147.6361834720549, worksheet.intermediate_output_q249, 0.001); end
  def test_intermediate_output_c250; assert_equal("I.b", worksheet.intermediate_output_c250); end
  def test_intermediate_output_d250; assert_equal("Carbon Capture Storage (CCS)", worksheet.intermediate_output_d250); end
  def test_intermediate_output_h250; assert_in_delta(0, (worksheet.intermediate_output_h250||0), 0.001); end
  def test_intermediate_output_i250; assert_in_delta(0, (worksheet.intermediate_output_i250||0), 0.001); end
  def test_intermediate_output_j250; assert_in_epsilon(5.781025862068966, worksheet.intermediate_output_j250, 0.001); end
  def test_intermediate_output_k250; assert_in_epsilon(5.683042372881357, worksheet.intermediate_output_k250, 0.001); end
  def test_intermediate_output_l250; assert_in_epsilon(5.588325, worksheet.intermediate_output_l250, 0.001); end
  def test_intermediate_output_m250; assert_in_epsilon(5.4967131147540975, worksheet.intermediate_output_m250, 0.001); end
  def test_intermediate_output_n250; assert_in_epsilon(5.408056451612903, worksheet.intermediate_output_n250, 0.001); end
  def test_intermediate_output_o250; assert_in_epsilon(5.322214285714286, worksheet.intermediate_output_o250, 0.001); end
  def test_intermediate_output_p250; assert_in_epsilon(5.2390546874999995, worksheet.intermediate_output_p250, 0.001); end
  def test_intermediate_output_q250; assert_in_epsilon(5.158453846153846, worksheet.intermediate_output_q250, 0.001); end
  def test_intermediate_output_d252; assert_equal("Bio type", worksheet.intermediate_output_d252); end
  def test_intermediate_output_e252; assert_equal("Column1", worksheet.intermediate_output_e252); end
  def test_intermediate_output_f252; assert_equal("Column2", worksheet.intermediate_output_f252); end
  def test_intermediate_output_g252; assert_equal("Column22", worksheet.intermediate_output_g252); end
  def test_intermediate_output_h252; assert_equal("2007", worksheet.intermediate_output_h252); end
  def test_intermediate_output_i252; assert_equal("2010", worksheet.intermediate_output_i252); end
  def test_intermediate_output_j252; assert_equal("2015", worksheet.intermediate_output_j252); end
  def test_intermediate_output_k252; assert_equal("2020", worksheet.intermediate_output_k252); end
  def test_intermediate_output_l252; assert_equal("2025", worksheet.intermediate_output_l252); end
  def test_intermediate_output_m252; assert_equal("2030", worksheet.intermediate_output_m252); end
  def test_intermediate_output_n252; assert_equal("2035", worksheet.intermediate_output_n252); end
  def test_intermediate_output_o252; assert_equal("2040", worksheet.intermediate_output_o252); end
  def test_intermediate_output_p252; assert_equal("2045", worksheet.intermediate_output_p252); end
  def test_intermediate_output_q252; assert_equal("2050", worksheet.intermediate_output_q252); end
  def test_intermediate_output_d253; assert_equal("Solid", worksheet.intermediate_output_d253); end
  def test_intermediate_output_h253; assert_in_delta(0.036519005727489916, worksheet.intermediate_output_h253, 0.001); end
  def test_intermediate_output_i253; assert_in_delta(0.03920682331689727, worksheet.intermediate_output_i253, 0.001); end
  def test_intermediate_output_j253; assert_in_delta(0.045054323963876985, worksheet.intermediate_output_j253, 0.001); end
  def test_intermediate_output_k253; assert_in_delta(0.05703212511489314, worksheet.intermediate_output_k253, 0.001); end
  def test_intermediate_output_l253; assert_in_delta(0.09972959905965723, worksheet.intermediate_output_l253, 0.001); end
  def test_intermediate_output_m253; assert_in_delta(0.19019575067841188, worksheet.intermediate_output_m253, 0.001); end
  def test_intermediate_output_n253; assert_in_delta(0.22077220552599017, worksheet.intermediate_output_n253, 0.001); end
  def test_intermediate_output_o253; assert_in_delta(0.21932001429841122, worksheet.intermediate_output_o253, 0.001); end
  def test_intermediate_output_p253; assert_in_delta(0.21797457398379502, worksheet.intermediate_output_p253, 0.001); end
  def test_intermediate_output_q253; assert_in_delta(0.21599284716499248, worksheet.intermediate_output_q253, 0.001); end
  def test_intermediate_output_d254; assert_equal("Liquid", worksheet.intermediate_output_d254); end
  def test_intermediate_output_h254; assert_in_delta(0.0012889962916521325, worksheet.intermediate_output_h254, 0.001); end
  def test_intermediate_output_i254; assert_in_delta(0.0008071131076948339, worksheet.intermediate_output_i254, 0.001); end
  def test_intermediate_output_j254; assert_in_delta(0.0015870798487510117, worksheet.intermediate_output_j254, 0.001); end
  def test_intermediate_output_k254; assert_in_delta(0.0023604115525406714, worksheet.intermediate_output_k254, 0.001); end
  def test_intermediate_output_l254; assert_in_delta(0.003885119411578818, worksheet.intermediate_output_l254, 0.001); end
  def test_intermediate_output_m254; assert_in_delta(0.004978430410180415, worksheet.intermediate_output_m254, 0.001); end
  def test_intermediate_output_n254; assert_in_delta(0.005880204176494461, worksheet.intermediate_output_n254, 0.001); end
  def test_intermediate_output_o254; assert_in_delta(0.006828416215833416, worksheet.intermediate_output_o254, 0.001); end
  def test_intermediate_output_p254; assert_in_delta(0.007743398715856113, worksheet.intermediate_output_p254, 0.001); end
  def test_intermediate_output_q254; assert_in_delta(0.008723376262264774, worksheet.intermediate_output_q254, 0.001); end
  def test_intermediate_output_d255; assert_equal("Gas", worksheet.intermediate_output_d255); end
  def test_intermediate_output_h255; assert_in_delta(0.022473366692721947, worksheet.intermediate_output_h255, 0.001); end
  def test_intermediate_output_i255; assert_in_delta(0.018147756077320866, worksheet.intermediate_output_i255, 0.001); end
  def test_intermediate_output_j255; assert_in_delta(0.019061089075890113, worksheet.intermediate_output_j255, 0.001); end
  def test_intermediate_output_k255; assert_in_delta(0.02557388893819854, worksheet.intermediate_output_k255, 0.001); end
  def test_intermediate_output_l255; assert_in_delta(0.02466788465086148, worksheet.intermediate_output_l255, 0.001); end
  def test_intermediate_output_m255; assert_in_delta(0.022219921579263124, worksheet.intermediate_output_m255, 0.001); end
  def test_intermediate_output_n255; assert_in_delta(0.020752461032434468, worksheet.intermediate_output_n255, 0.001); end
  def test_intermediate_output_o255; assert_in_delta(0.019809653438557548, worksheet.intermediate_output_o255, 0.001); end
  def test_intermediate_output_p255; assert_in_delta(0.01901956296317353, worksheet.intermediate_output_p255, 0.001); end
  def test_intermediate_output_q255; assert_in_delta(0.018572507168865084, worksheet.intermediate_output_q255, 0.001); end
  def test_intermediate_output_b257; assert_equal("Electricity Generation Emissions", worksheet.intermediate_output_b257); end
  def test_intermediate_output_c260; assert_equal("Emissions from Electricity Generation, exlcuding CHP", worksheet.intermediate_output_c260); end
  def test_intermediate_output_h260; assert_equal("2007", worksheet.intermediate_output_h260); end
  def test_intermediate_output_i260; assert_equal("2010", worksheet.intermediate_output_i260); end
  def test_intermediate_output_j260; assert_equal("2015", worksheet.intermediate_output_j260); end
  def test_intermediate_output_k260; assert_equal("2020", worksheet.intermediate_output_k260); end
  def test_intermediate_output_l260; assert_equal("2025", worksheet.intermediate_output_l260); end
  def test_intermediate_output_m260; assert_equal("2030", worksheet.intermediate_output_m260); end
  def test_intermediate_output_n260; assert_equal("2035", worksheet.intermediate_output_n260); end
  def test_intermediate_output_o260; assert_equal("2040", worksheet.intermediate_output_o260); end
  def test_intermediate_output_p260; assert_equal("2045", worksheet.intermediate_output_p260); end
  def test_intermediate_output_q260; assert_equal("2050", worksheet.intermediate_output_q260); end
  def test_intermediate_output_c261; assert_equal("Power Generation", worksheet.intermediate_output_c261); end
  def test_intermediate_output_h261; assert_in_epsilon(200.1293411589495, worksheet.intermediate_output_h261, 0.001); end
  def test_intermediate_output_i261; assert_in_epsilon(200.9000332315603, worksheet.intermediate_output_i261, 0.001); end
  def test_intermediate_output_j261; assert_in_epsilon(191.1836078506969, worksheet.intermediate_output_j261, 0.001); end
  def test_intermediate_output_k261; assert_in_epsilon(182.68837621368507, worksheet.intermediate_output_k261, 0.001); end
  def test_intermediate_output_l261; assert_in_epsilon(168.5638636133278, worksheet.intermediate_output_l261, 0.001); end
  def test_intermediate_output_m261; assert_in_epsilon(161.30060167807008, worksheet.intermediate_output_m261, 0.001); end
  def test_intermediate_output_n261; assert_in_epsilon(177.02403852228605, worksheet.intermediate_output_n261, 0.001); end
  def test_intermediate_output_o261; assert_in_epsilon(194.11501011726418, worksheet.intermediate_output_o261, 0.001); end
  def test_intermediate_output_p261; assert_in_epsilon(211.01259346336113, worksheet.intermediate_output_p261, 0.001); end
  def test_intermediate_output_q261; assert_in_epsilon(223.2271988093521, worksheet.intermediate_output_q261, 0.001); end
  def test_intermediate_output_c262; assert_equal("CCS in Power", worksheet.intermediate_output_c262); end
  def test_intermediate_output_h262; assert_in_delta(0, (worksheet.intermediate_output_h262||0), 0.001); end
  def test_intermediate_output_i262; assert_in_delta(0, (worksheet.intermediate_output_i262||0), 0.001); end
  def test_intermediate_output_j262; assert_in_epsilon(-2.8350150827586207, worksheet.intermediate_output_j262, 0.001); end
  def test_intermediate_output_k262; assert_in_epsilon(-6.678458816949153, worksheet.intermediate_output_k262, 0.001); end
  def test_intermediate_output_l262; assert_in_epsilon(-6.538048685217391, worksheet.intermediate_output_l262, 0.001); end
  def test_intermediate_output_m262; assert_in_epsilon(-6.403460266271363, worksheet.intermediate_output_m262, 0.001); end
  def test_intermediate_output_n262; assert_in_epsilon(-6.274336960887095, worksheet.intermediate_output_n262, 0.001); end
  def test_intermediate_output_o262; assert_in_epsilon(-6.260121498214285, worksheet.intermediate_output_o262, 0.001); end
  def test_intermediate_output_p262; assert_in_epsilon(-6.136579599107142, worksheet.intermediate_output_p262, 0.001); end
  def test_intermediate_output_q262; assert_in_epsilon(-6.017852256923077, worksheet.intermediate_output_q262, 0.001); end
  def test_intermediate_output_c263; assert_equal("Bioenergy in Gas Power", worksheet.intermediate_output_c263); end
  def test_intermediate_output_h263; assert_in_epsilon(-1.4556779256945098, worksheet.intermediate_output_h263, 0.001); end
  def test_intermediate_output_i263; assert_in_epsilon(-1.1511344571226152, worksheet.intermediate_output_i263, 0.001); end
  def test_intermediate_output_j263; assert_in_epsilon(-1.3601760663003253, worksheet.intermediate_output_j263, 0.001); end
  def test_intermediate_output_k263; assert_in_epsilon(-2.297822699450182, worksheet.intermediate_output_k263, 0.001); end
  def test_intermediate_output_l263; assert_in_epsilon(-2.895996172564888, worksheet.intermediate_output_l263, 0.001); end
  def test_intermediate_output_m263; assert_in_epsilon(-3.1948541686539373, worksheet.intermediate_output_m263, 0.001); end
  def test_intermediate_output_n263; assert_in_epsilon(-3.435620479999991, worksheet.intermediate_output_n263, 0.001); end
  def test_intermediate_output_o263; assert_in_epsilon(-3.618416804654365, worksheet.intermediate_output_o263, 0.001); end
  def test_intermediate_output_p263; assert_in_epsilon(-3.79812347406438, worksheet.intermediate_output_p263, 0.001); end
  def test_intermediate_output_q263; assert_in_epsilon(-3.9381811038760692, worksheet.intermediate_output_q263, 0.001); end
  def test_intermediate_output_c264; assert_equal("Bioenergy in Solid BM Power", worksheet.intermediate_output_c264); end
  def test_intermediate_output_h264; assert_in_epsilon(-4.854855135469395, worksheet.intermediate_output_h264, 0.001); end
  def test_intermediate_output_i264; assert_in_epsilon(-5.304449684320754, worksheet.intermediate_output_i264, 0.001); end
  def test_intermediate_output_j264; assert_in_epsilon(-5.255396535609748, worksheet.intermediate_output_j264, 0.001); end
  def test_intermediate_output_k264; assert_in_epsilon(-4.8670060241582815, worksheet.intermediate_output_k264, 0.001); end
  def test_intermediate_output_l264; assert_in_epsilon(-4.370357480351144, worksheet.intermediate_output_l264, 0.001); end
  def test_intermediate_output_m264; assert_in_epsilon(-1.9639834141663535, worksheet.intermediate_output_m264, 0.001); end
  def test_intermediate_output_n264; assert_in_delta(-0.9770226165457311, worksheet.intermediate_output_n264, 0.001); end
  def test_intermediate_output_o264; assert_in_delta(-0.9705959757033588, worksheet.intermediate_output_o264, 0.001); end
  def test_intermediate_output_p264; assert_in_delta(-0.9646417587154885, worksheet.intermediate_output_p264, 0.001); end
  def test_intermediate_output_q264; assert_in_delta(-0.9558716695769018, worksheet.intermediate_output_q264, 0.001); end
  def test_intermediate_output_c265; assert_equal("Bioenergy in Solid HC CCS Power", worksheet.intermediate_output_c265); end
  def test_intermediate_output_h265; assert_in_delta(0, (worksheet.intermediate_output_h265||0), 0.001); end
  def test_intermediate_output_i265; assert_in_delta(0, (worksheet.intermediate_output_i265||0), 0.001); end
  def test_intermediate_output_j265; assert_in_delta(-0.09510600174385891, worksheet.intermediate_output_j265, 0.001); end
  def test_intermediate_output_k265; assert_in_delta(-0.36785883035579997, worksheet.intermediate_output_k265, 0.001); end
  def test_intermediate_output_l265; assert_in_delta(-0.6292748667151671, worksheet.intermediate_output_l265, 0.001); end
  def test_intermediate_output_m265; assert_in_epsilon(-1.1745651117594005, worksheet.intermediate_output_m265, 0.001); end
  def test_intermediate_output_n265; assert_in_epsilon(-1.3349878216047313, worksheet.intermediate_output_n265, 0.001); end
  def test_intermediate_output_o265; assert_in_epsilon(-1.3262065640236866, worksheet.intermediate_output_o265, 0.001); end
  def test_intermediate_output_p265; assert_in_epsilon(-1.2911714142544801, worksheet.intermediate_output_p265, 0.001); end
  def test_intermediate_output_q265; assert_in_epsilon(-1.2538440110190843, worksheet.intermediate_output_q265, 0.001); end
  def test_intermediate_output_c266; assert_equal("Bioenergy in Gas CCS Power", worksheet.intermediate_output_c266); end
  def test_intermediate_output_h266; assert_in_delta(0, (worksheet.intermediate_output_h266||0), 0.001); end
  def test_intermediate_output_i266; assert_in_delta(0, (worksheet.intermediate_output_i266||0), 0.001); end
  def test_intermediate_output_j266; assert_in_delta(-0.020359801523083705, worksheet.intermediate_output_j266, 0.001); end
  def test_intermediate_output_k266; assert_in_delta(-0.026853357013639743, worksheet.intermediate_output_k266, 0.001); end
  def test_intermediate_output_l266; assert_in_delta(-0.025470324686243693, worksheet.intermediate_output_l266, 0.001); end
  def test_intermediate_output_m266; assert_in_delta(-0.022566619668576187, worksheet.intermediate_output_m266, 0.001); end
  def test_intermediate_output_n266; assert_in_delta(-0.02073632257733289, worksheet.intermediate_output_n266, 0.001); end
  def test_intermediate_output_o266; assert_in_delta(-0.01948005375616046, worksheet.intermediate_output_o266, 0.001); end
  def test_intermediate_output_p266; assert_in_delta(-0.018410872992821417, worksheet.intermediate_output_p266, 0.001); end
  def test_intermediate_output_q266; assert_in_delta(-0.0177015379566364, worksheet.intermediate_output_q266, 0.001); end
  def test_intermediate_output_c267; assert_equal("Total Emissions from Power", worksheet.intermediate_output_c267); end
  def test_intermediate_output_h267; assert_in_epsilon(193.8188080977856, worksheet.intermediate_output_h267, 0.001); end
  def test_intermediate_output_i267; assert_in_epsilon(194.4444490901169, worksheet.intermediate_output_i267, 0.001); end
  def test_intermediate_output_j267; assert_in_epsilon(181.61755436276127, worksheet.intermediate_output_j267, 0.001); end
  def test_intermediate_output_k267; assert_in_epsilon(168.450376485758, worksheet.intermediate_output_k267, 0.001); end
  def test_intermediate_output_l267; assert_in_epsilon(154.10471608379297, worksheet.intermediate_output_l267, 0.001); end
  def test_intermediate_output_m267; assert_in_epsilon(148.54117209755046, worksheet.intermediate_output_m267, 0.001); end
  def test_intermediate_output_n267; assert_in_epsilon(164.98133432067118, worksheet.intermediate_output_n267, 0.001); end
  def test_intermediate_output_o267; assert_in_epsilon(181.9201892209123, worksheet.intermediate_output_o267, 0.001); end
  def test_intermediate_output_p267; assert_in_epsilon(198.80366634422683, worksheet.intermediate_output_p267, 0.001); end
  def test_intermediate_output_q267; assert_in_epsilon(211.04374823000032, worksheet.intermediate_output_q267, 0.001); end
  def test_intermediate_output_c269; assert_equal("Emissions reclassified", worksheet.intermediate_output_c269); end
  def test_intermediate_output_h269; assert_equal("2007", worksheet.intermediate_output_h269); end
  def test_intermediate_output_i269; assert_equal("2010", worksheet.intermediate_output_i269); end
  def test_intermediate_output_j269; assert_equal("2015", worksheet.intermediate_output_j269); end
  def test_intermediate_output_k269; assert_equal("2020", worksheet.intermediate_output_k269); end
  def test_intermediate_output_l269; assert_equal("2025", worksheet.intermediate_output_l269); end
  def test_intermediate_output_m269; assert_equal("2030", worksheet.intermediate_output_m269); end
  def test_intermediate_output_n269; assert_equal("2035", worksheet.intermediate_output_n269); end
  def test_intermediate_output_o269; assert_equal("2040", worksheet.intermediate_output_o269); end
  def test_intermediate_output_p269; assert_equal("2045", worksheet.intermediate_output_p269); end
  def test_intermediate_output_q269; assert_equal("2050", worksheet.intermediate_output_q269); end
  def test_intermediate_output_c270; assert_in_delta(1, worksheet.intermediate_output_c270, 0.001); end
  def test_intermediate_output_d270; assert_equal("Fuel Combustion", worksheet.intermediate_output_d270); end
  def test_intermediate_output_h270; assert_in_epsilon(200.1293411589495, worksheet.intermediate_output_h270, 0.001); end
  def test_intermediate_output_i270; assert_in_epsilon(200.9000332315603, worksheet.intermediate_output_i270, 0.001); end
  def test_intermediate_output_j270; assert_in_epsilon(191.1836078506969, worksheet.intermediate_output_j270, 0.001); end
  def test_intermediate_output_k270; assert_in_epsilon(182.68837621368507, worksheet.intermediate_output_k270, 0.001); end
  def test_intermediate_output_l270; assert_in_epsilon(168.5638636133278, worksheet.intermediate_output_l270, 0.001); end
  def test_intermediate_output_m270; assert_in_epsilon(161.30060167807008, worksheet.intermediate_output_m270, 0.001); end
  def test_intermediate_output_n270; assert_in_epsilon(177.02403852228605, worksheet.intermediate_output_n270, 0.001); end
  def test_intermediate_output_o270; assert_in_epsilon(194.11501011726418, worksheet.intermediate_output_o270, 0.001); end
  def test_intermediate_output_p270; assert_in_epsilon(211.01259346336113, worksheet.intermediate_output_p270, 0.001); end
  def test_intermediate_output_q270; assert_in_epsilon(223.2271988093521, worksheet.intermediate_output_q270, 0.001); end
  def test_intermediate_output_c271; assert_equal("X2", worksheet.intermediate_output_c271); end
  def test_intermediate_output_d271; assert_equal("Bioenergy credit", worksheet.intermediate_output_d271); end
  def test_intermediate_output_h271; assert_in_epsilon(-6.310533061163905, worksheet.intermediate_output_h271, 0.001); end
  def test_intermediate_output_i271; assert_in_epsilon(-6.455584141443369, worksheet.intermediate_output_i271, 0.001); end
  def test_intermediate_output_j271; assert_in_epsilon(-6.731038405177015, worksheet.intermediate_output_j271, 0.001); end
  def test_intermediate_output_k271; assert_in_epsilon(-7.559540910977904, worksheet.intermediate_output_k271, 0.001); end
  def test_intermediate_output_l271; assert_in_epsilon(-7.921098844317442, worksheet.intermediate_output_l271, 0.001); end
  def test_intermediate_output_m271; assert_in_epsilon(-6.355969314248267, worksheet.intermediate_output_m271, 0.001); end
  def test_intermediate_output_n271; assert_in_epsilon(-5.768367240727786, worksheet.intermediate_output_n271, 0.001); end
  def test_intermediate_output_o271; assert_in_epsilon(-5.93469939813757, worksheet.intermediate_output_o271, 0.001); end
  def test_intermediate_output_p271; assert_in_epsilon(-6.0723475200271695, worksheet.intermediate_output_p271, 0.001); end
  def test_intermediate_output_q271; assert_in_epsilon(-6.165598322428692, worksheet.intermediate_output_q271, 0.001); end
  def test_intermediate_output_c272; assert_equal("X3", worksheet.intermediate_output_c272); end
  def test_intermediate_output_d272; assert_equal("Carbon capture", worksheet.intermediate_output_d272); end
  def test_intermediate_output_h272; assert_in_delta(0, (worksheet.intermediate_output_h272||0), 0.001); end
  def test_intermediate_output_i272; assert_in_delta(0, (worksheet.intermediate_output_i272||0), 0.001); end
  def test_intermediate_output_j272; assert_in_epsilon(-2.8350150827586207, worksheet.intermediate_output_j272, 0.001); end
  def test_intermediate_output_k272; assert_in_epsilon(-6.678458816949153, worksheet.intermediate_output_k272, 0.001); end
  def test_intermediate_output_l272; assert_in_epsilon(-6.538048685217391, worksheet.intermediate_output_l272, 0.001); end
  def test_intermediate_output_m272; assert_in_epsilon(-6.403460266271363, worksheet.intermediate_output_m272, 0.001); end
  def test_intermediate_output_n272; assert_in_epsilon(-6.274336960887095, worksheet.intermediate_output_n272, 0.001); end
  def test_intermediate_output_o272; assert_in_epsilon(-6.260121498214285, worksheet.intermediate_output_o272, 0.001); end
  def test_intermediate_output_p272; assert_in_epsilon(-6.136579599107142, worksheet.intermediate_output_p272, 0.001); end
  def test_intermediate_output_q272; assert_in_epsilon(-6.017852256923077, worksheet.intermediate_output_q272, 0.001); end
  def test_intermediate_output_d273; assert_equal("Total", worksheet.intermediate_output_d273); end
  def test_intermediate_output_h273; assert_in_epsilon(193.8188080977856, worksheet.intermediate_output_h273, 0.001); end
  def test_intermediate_output_i273; assert_in_epsilon(194.4444490901169, worksheet.intermediate_output_i273, 0.001); end
  def test_intermediate_output_j273; assert_in_epsilon(181.61755436276127, worksheet.intermediate_output_j273, 0.001); end
  def test_intermediate_output_k273; assert_in_epsilon(168.450376485758, worksheet.intermediate_output_k273, 0.001); end
  def test_intermediate_output_l273; assert_in_epsilon(154.10471608379297, worksheet.intermediate_output_l273, 0.001); end
  def test_intermediate_output_m273; assert_in_epsilon(148.54117209755046, worksheet.intermediate_output_m273, 0.001); end
  def test_intermediate_output_n273; assert_in_epsilon(164.98133432067118, worksheet.intermediate_output_n273, 0.001); end
  def test_intermediate_output_o273; assert_in_epsilon(181.9201892209123, worksheet.intermediate_output_o273, 0.001); end
  def test_intermediate_output_p273; assert_in_epsilon(198.80366634422683, worksheet.intermediate_output_p273, 0.001); end
  def test_intermediate_output_q273; assert_in_epsilon(211.04374823000032, worksheet.intermediate_output_q273, 0.001); end
  def test_intermediate_output_c275; assert_equal("Emissions intensity", worksheet.intermediate_output_c275); end
  def test_intermediate_output_e275; assert_equal("MtCO2e/TWh", worksheet.intermediate_output_e275); end
  def test_intermediate_output_h275; assert_in_delta(0.5068501590997587, worksheet.intermediate_output_h275, 0.001); end
  def test_intermediate_output_i275; assert_in_delta(0.501745785012277, worksheet.intermediate_output_i275, 0.001); end
  def test_intermediate_output_j275; assert_in_delta(0.4562592451582826, worksheet.intermediate_output_j275, 0.001); end
  def test_intermediate_output_k275; assert_in_delta(0.4043107429060427, worksheet.intermediate_output_k275, 0.001); end
  def test_intermediate_output_l275; assert_in_delta(0.3493016466186846, worksheet.intermediate_output_l275, 0.001); end
  def test_intermediate_output_m275; assert_in_delta(0.31884248784262964, worksheet.intermediate_output_m275, 0.001); end
  def test_intermediate_output_n275; assert_in_delta(0.3349610913966166, worksheet.intermediate_output_n275, 0.001); end
  def test_intermediate_output_o275; assert_in_delta(0.3492737579350389, worksheet.intermediate_output_o275, 0.001); end
  def test_intermediate_output_p275; assert_in_delta(0.3608305230344585, worksheet.intermediate_output_p275, 0.001); end
  def test_intermediate_output_q275; assert_in_delta(0.36152685679630525, worksheet.intermediate_output_q275, 0.001); end
  def test_intermediate_output_e276; assert_equal("gCO2e/KWh", worksheet.intermediate_output_e276); end
  def test_intermediate_output_h276; assert_in_epsilon(506.85015909975874, worksheet.intermediate_output_h276, 0.001); end
  def test_intermediate_output_i276; assert_in_epsilon(501.74578501227694, worksheet.intermediate_output_i276, 0.001); end
  def test_intermediate_output_j276; assert_in_epsilon(456.25924515828257, worksheet.intermediate_output_j276, 0.001); end
  def test_intermediate_output_k276; assert_in_epsilon(404.31074290604266, worksheet.intermediate_output_k276, 0.001); end
  def test_intermediate_output_l276; assert_in_epsilon(349.30164661868463, worksheet.intermediate_output_l276, 0.001); end
  def test_intermediate_output_m276; assert_in_epsilon(318.8424878426296, worksheet.intermediate_output_m276, 0.001); end
  def test_intermediate_output_n276; assert_in_epsilon(334.9610913966166, worksheet.intermediate_output_n276, 0.001); end
  def test_intermediate_output_o276; assert_in_epsilon(349.2737579350389, worksheet.intermediate_output_o276, 0.001); end
  def test_intermediate_output_p276; assert_in_epsilon(360.8305230344585, worksheet.intermediate_output_p276, 0.001); end
  def test_intermediate_output_q276; assert_in_epsilon(361.52685679630525, worksheet.intermediate_output_q276, 0.001); end
  def test_intermediate_output_c278; assert_equal("Note: Emissions from CHP are excluded, while emissions from district heating are included.", worksheet.intermediate_output_c278); end
  def test_intermediate_output_b281; assert_equal("Primary supply, format for web-based interface", worksheet.intermediate_output_b281); end
  def test_intermediate_output_c283; assert_equal("N.01", worksheet.intermediate_output_c283); end
  def test_intermediate_output_d283; assert_equal("Nuclear fission", worksheet.intermediate_output_d283); end
  def test_intermediate_output_e283; assert_in_delta(0, (worksheet.intermediate_output_e283||0), 0.001); end
  def test_intermediate_output_f283; assert_in_epsilon(163.24447683045062, worksheet.intermediate_output_f283, 0.001); end
  def test_intermediate_output_h283; assert_in_epsilon(163.91620313701554, worksheet.intermediate_output_h283, 0.001); end
  def test_intermediate_output_i283; assert_in_epsilon(160.70999999999998, worksheet.intermediate_output_i283, 0.001); end
  def test_intermediate_output_j283; assert_in_epsilon(134.9964, worksheet.intermediate_output_j283, 0.001); end
  def test_intermediate_output_k283; assert_in_epsilon(77.14080000000003, worksheet.intermediate_output_k283, 0.001); end
  def test_intermediate_output_l283; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_l283, 0.001); end
  def test_intermediate_output_m283; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_m283, 0.001); end
  def test_intermediate_output_n283; assert_in_delta(0, (worksheet.intermediate_output_n283||0), 0.001); end
  def test_intermediate_output_o283; assert_in_delta(0, (worksheet.intermediate_output_o283||0), 0.001); end
  def test_intermediate_output_p283; assert_in_delta(0, (worksheet.intermediate_output_p283||0), 0.001); end
  def test_intermediate_output_q283; assert_in_delta(0, (worksheet.intermediate_output_q283||0), 0.001); end
  def test_intermediate_output_c284; assert_equal("R.01", worksheet.intermediate_output_c284); end
  def test_intermediate_output_d284; assert_equal("Solar", worksheet.intermediate_output_d284); end
  def test_intermediate_output_e284; assert_in_delta(0, (worksheet.intermediate_output_e284||0), 0.001); end
  def test_intermediate_output_f284; assert_in_delta(0.5360591477000001, worksheet.intermediate_output_f284, 0.001); end
  def test_intermediate_output_h284; assert_in_delta(0.01700604, worksheet.intermediate_output_h284, 0.001); end
  def test_intermediate_output_i284; assert_in_delta(0.028059966000000006, worksheet.intermediate_output_i284, 0.001); end
  def test_intermediate_output_j284; assert_in_delta(0.013604831999999999, worksheet.intermediate_output_j284, 0.001); end
  def test_intermediate_output_k284; assert_in_delta(0, (worksheet.intermediate_output_k284||0), 0.001); end
  def test_intermediate_output_l284; assert_in_delta(0, (worksheet.intermediate_output_l284||0), 0.001); end
  def test_intermediate_output_m284; assert_in_delta(0, (worksheet.intermediate_output_m284||0), 0.001); end
  def test_intermediate_output_n284; assert_in_delta(0, (worksheet.intermediate_output_n284||0), 0.001); end
  def test_intermediate_output_o284; assert_in_delta(0, (worksheet.intermediate_output_o284||0), 0.001); end
  def test_intermediate_output_p284; assert_in_delta(0, (worksheet.intermediate_output_p284||0), 0.001); end
  def test_intermediate_output_q284; assert_in_delta(0, (worksheet.intermediate_output_q284||0), 0.001); end
  def test_intermediate_output_c285; assert_equal("R.02", worksheet.intermediate_output_c285); end
  def test_intermediate_output_d285; assert_equal("Wind", worksheet.intermediate_output_d285); end
  def test_intermediate_output_e285; assert_in_delta(0, (worksheet.intermediate_output_e285||0), 0.001); end
  def test_intermediate_output_f285; assert_in_epsilon(6.978861884782586, worksheet.intermediate_output_f285, 0.001); end
  def test_intermediate_output_h285; assert_in_epsilon(5.962752417600001, worksheet.intermediate_output_h285, 0.001); end
  def test_intermediate_output_i285; assert_in_epsilon(14.440670099999998, worksheet.intermediate_output_i285, 0.001); end
  def test_intermediate_output_j285; assert_in_epsilon(29.3428701, worksheet.intermediate_output_j285, 0.001); end
  def test_intermediate_output_k285; assert_in_epsilon(45.35726511600001, worksheet.intermediate_output_k285, 0.001); end
  def test_intermediate_output_l285; assert_in_epsilon(57.69377964, worksheet.intermediate_output_l285, 0.001); end
  def test_intermediate_output_m285; assert_in_epsilon(48.16934531999999, worksheet.intermediate_output_m285, 0.001); end
  def test_intermediate_output_n285; assert_in_epsilon(32.302885319999994, worksheet.intermediate_output_n285, 0.001); end
  def test_intermediate_output_o285; assert_in_epsilon(15.209185319999996, worksheet.intermediate_output_o285, 0.001); end
  def test_intermediate_output_p285; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_p285, 0.001); end
  def test_intermediate_output_q285; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_q285, 0.001); end
  def test_intermediate_output_c286; assert_equal("R.03", worksheet.intermediate_output_c286); end
  def test_intermediate_output_d286; assert_equal("Tidal", worksheet.intermediate_output_d286); end
  def test_intermediate_output_e286; assert_in_delta(0, (worksheet.intermediate_output_e286||0), 0.001); end
  def test_intermediate_output_f286; assert_in_delta(0, (worksheet.intermediate_output_f286||0), 0.001); end
  def test_intermediate_output_h286; assert_in_delta(0, (worksheet.intermediate_output_h286||0), 0.001); end
  def test_intermediate_output_i286; assert_in_delta(0.0050034246575342495, worksheet.intermediate_output_i286, 0.001); end
  def test_intermediate_output_j286; assert_in_delta(0.020013698630136998, worksheet.intermediate_output_j286, 0.001); end
  def test_intermediate_output_k286; assert_in_delta(0.050034246575342486, worksheet.intermediate_output_k286, 0.001); end
  def test_intermediate_output_l286; assert_in_delta(0.12508561643835608, worksheet.intermediate_output_l286, 0.001); end
  def test_intermediate_output_m286; assert_in_delta(0.12508561643835608, worksheet.intermediate_output_m286, 0.001); end
  def test_intermediate_output_n286; assert_in_delta(0, (worksheet.intermediate_output_n286||0), 0.001); end
  def test_intermediate_output_o286; assert_in_delta(0, (worksheet.intermediate_output_o286||0), 0.001); end
  def test_intermediate_output_p286; assert_in_delta(0, (worksheet.intermediate_output_p286||0), 0.001); end
  def test_intermediate_output_q286; assert_in_delta(0, (worksheet.intermediate_output_q286||0), 0.001); end
  def test_intermediate_output_c287; assert_equal("R.04", worksheet.intermediate_output_c287); end
  def test_intermediate_output_d287; assert_equal("Wave", worksheet.intermediate_output_d287); end
  def test_intermediate_output_e287; assert_in_delta(0, (worksheet.intermediate_output_e287||0), 0.001); end
  def test_intermediate_output_f287; assert_in_delta(0, (worksheet.intermediate_output_f287||0), 0.001); end
  def test_intermediate_output_h287; assert_in_delta(0, (worksheet.intermediate_output_h287||0), 0.001); end
  def test_intermediate_output_i287; assert_in_delta(0, (worksheet.intermediate_output_i287||0), 0.001); end
  def test_intermediate_output_j287; assert_in_delta(0.0030020547945205484, worksheet.intermediate_output_j287, 0.001); end
  def test_intermediate_output_k287; assert_in_delta(0.1584417808219177, worksheet.intermediate_output_k287, 0.001); end
  def test_intermediate_output_l287; assert_in_delta(0.39610445205479383, worksheet.intermediate_output_l287, 0.001); end
  def test_intermediate_output_m287; assert_in_delta(0.39610445205479383, worksheet.intermediate_output_m287, 0.001); end
  def test_intermediate_output_n287; assert_in_delta(0, (worksheet.intermediate_output_n287||0), 0.001); end
  def test_intermediate_output_o287; assert_in_delta(0, (worksheet.intermediate_output_o287||0), 0.001); end
  def test_intermediate_output_p287; assert_in_delta(0, (worksheet.intermediate_output_p287||0), 0.001); end
  def test_intermediate_output_q287; assert_in_delta(0, (worksheet.intermediate_output_q287||0), 0.001); end
  def test_intermediate_output_c288; assert_equal("R.05", worksheet.intermediate_output_c288); end
  def test_intermediate_output_d288; assert_equal("Geothermal", worksheet.intermediate_output_d288); end
  def test_intermediate_output_e288; assert_in_delta(0, (worksheet.intermediate_output_e288||0), 0.001); end
  def test_intermediate_output_f288; assert_in_delta(0, (worksheet.intermediate_output_f288||0), 0.001); end
  def test_intermediate_output_h288; assert_in_delta(0, (worksheet.intermediate_output_h288||0), 0.001); end
  def test_intermediate_output_i288; assert_in_delta(0, (worksheet.intermediate_output_i288||0), 0.001); end
  def test_intermediate_output_j288; assert_in_delta(0, (worksheet.intermediate_output_j288||0), 0.001); end
  def test_intermediate_output_k288; assert_in_delta(0, (worksheet.intermediate_output_k288||0), 0.001); end
  def test_intermediate_output_l288; assert_in_delta(0, (worksheet.intermediate_output_l288||0), 0.001); end
  def test_intermediate_output_m288; assert_in_delta(0, (worksheet.intermediate_output_m288||0), 0.001); end
  def test_intermediate_output_n288; assert_in_delta(0, (worksheet.intermediate_output_n288||0), 0.001); end
  def test_intermediate_output_o288; assert_in_delta(0, (worksheet.intermediate_output_o288||0), 0.001); end
  def test_intermediate_output_p288; assert_in_delta(0, (worksheet.intermediate_output_p288||0), 0.001); end
  def test_intermediate_output_q288; assert_in_delta(0, (worksheet.intermediate_output_q288||0), 0.001); end
  def test_intermediate_output_c289; assert_equal("R.06", worksheet.intermediate_output_c289); end
  def test_intermediate_output_d289; assert_equal("Hydro", worksheet.intermediate_output_d289); end
  def test_intermediate_output_e289; assert_in_delta(0, (worksheet.intermediate_output_e289||0), 0.001); end
  def test_intermediate_output_f289; assert_in_epsilon(5.088394340000001, worksheet.intermediate_output_f289, 0.001); end
  def test_intermediate_output_h289; assert_in_epsilon(4.114400994, worksheet.intermediate_output_h289, 0.001); end
  def test_intermediate_output_i289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_i289, 0.001); end
  def test_intermediate_output_j289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_j289, 0.001); end
  def test_intermediate_output_k289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_k289, 0.001); end
  def test_intermediate_output_l289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_l289, 0.001); end
  def test_intermediate_output_m289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_m289, 0.001); end
  def test_intermediate_output_n289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_n289, 0.001); end
  def test_intermediate_output_o289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_o289, 0.001); end
  def test_intermediate_output_p289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_p289, 0.001); end
  def test_intermediate_output_q289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_q289, 0.001); end
  def test_intermediate_output_c290; assert_equal("Y.02", worksheet.intermediate_output_c290); end
  def test_intermediate_output_d290; assert_equal("Electricity oversupply (imports)", worksheet.intermediate_output_d290); end
  def test_intermediate_output_e290; assert_in_delta(0, (worksheet.intermediate_output_e290||0), 0.001); end
  def test_intermediate_output_f290; assert_in_epsilon(5.21452425, worksheet.intermediate_output_f290, 0.001); end
  def test_intermediate_output_h290; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_h290, 0.001); end
  def test_intermediate_output_i290; assert_in_delta(0, (worksheet.intermediate_output_i290||0), 0.001); end
  def test_intermediate_output_j290; assert_in_delta(0, (worksheet.intermediate_output_j290||0), 0.001); end
  def test_intermediate_output_k290; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_k290, 0.001); end
  def test_intermediate_output_l290; assert_in_delta(0, (worksheet.intermediate_output_l290||0), 0.001); end
  def test_intermediate_output_m290; assert_in_delta(0, (worksheet.intermediate_output_m290||0), 0.001); end
  def test_intermediate_output_n290; assert_in_delta(5.684341886080802e-14, worksheet.intermediate_output_n290, 0.001); end
  def test_intermediate_output_o290; assert_in_delta(0, (worksheet.intermediate_output_o290||0), 0.001); end
  def test_intermediate_output_p290; assert_in_delta(0, (worksheet.intermediate_output_p290||0), 0.001); end
  def test_intermediate_output_q290; assert_in_delta(1.1368683772161603e-13, worksheet.intermediate_output_q290, 0.001); end
  def test_intermediate_output_c291; assert_equal("R.07", worksheet.intermediate_output_c291); end
  def test_intermediate_output_d291; assert_equal("Environmental heat", worksheet.intermediate_output_d291); end
  def test_intermediate_output_e291; assert_in_delta(0, (worksheet.intermediate_output_e291||0), 0.001); end
  def test_intermediate_output_f291; assert_in_delta(0, (worksheet.intermediate_output_f291||0), 0.001); end
  def test_intermediate_output_h291; assert_in_delta(0, (worksheet.intermediate_output_h291||0), 0.001); end
  def test_intermediate_output_i291; assert_in_delta(0, (worksheet.intermediate_output_i291||0), 0.001); end
  def test_intermediate_output_j291; assert_in_delta(0, (worksheet.intermediate_output_j291||0), 0.001); end
  def test_intermediate_output_k291; assert_in_delta(0, (worksheet.intermediate_output_k291||0), 0.001); end
  def test_intermediate_output_l291; assert_in_delta(0, (worksheet.intermediate_output_l291||0), 0.001); end
  def test_intermediate_output_m291; assert_in_delta(0, (worksheet.intermediate_output_m291||0), 0.001); end
  def test_intermediate_output_n291; assert_in_delta(0, (worksheet.intermediate_output_n291||0), 0.001); end
  def test_intermediate_output_o291; assert_in_delta(0, (worksheet.intermediate_output_o291||0), 0.001); end
  def test_intermediate_output_p291; assert_in_delta(0, (worksheet.intermediate_output_p291||0), 0.001); end
  def test_intermediate_output_q291; assert_in_delta(0, (worksheet.intermediate_output_q291||0), 0.001); end
  def test_intermediate_output_d292; assert_equal("Bioenergy", worksheet.intermediate_output_d292); end
  def test_intermediate_output_e292; assert_in_delta(0, (worksheet.intermediate_output_e292||0), 0.001); end
  def test_intermediate_output_f292; assert_in_epsilon(98.50879965682326, worksheet.intermediate_output_f292, 0.001); end
  def test_intermediate_output_h292; assert_in_epsilon(54.80017770149263, worksheet.intermediate_output_h292, 0.001); end
  def test_intermediate_output_i292; assert_in_epsilon(51.86701468515299, worksheet.intermediate_output_i292, 0.001); end
  def test_intermediate_output_j292; assert_in_epsilon(58.78980840380536, worksheet.intermediate_output_j292, 0.001); end
  def test_intermediate_output_k292; assert_in_epsilon(76.59273739822123, worksheet.intermediate_output_k292, 0.001); end
  def test_intermediate_output_l292; assert_in_epsilon(82.32349558678314, worksheet.intermediate_output_l292, 0.001); end
  def test_intermediate_output_m292; assert_in_epsilon(88.6250681927008, worksheet.intermediate_output_m292, 0.001); end
  def test_intermediate_output_n292; assert_in_epsilon(93.44163245057696, worksheet.intermediate_output_n292, 0.001); end
  def test_intermediate_output_o292; assert_in_epsilon(98.55180843129864, worksheet.intermediate_output_o292, 0.001); end
  def test_intermediate_output_p292; assert_in_epsilon(103.96477952879691, worksheet.intermediate_output_p292, 0.001); end
  def test_intermediate_output_q292; assert_in_epsilon(109.6862941839934, worksheet.intermediate_output_q292, 0.001); end
  def test_intermediate_output_d293; assert_equal("Coal", worksheet.intermediate_output_d293); end
  def test_intermediate_output_e293; assert_in_delta(0, (worksheet.intermediate_output_e293||0), 0.001); end
  def test_intermediate_output_f293; assert_in_epsilon(475.4021773117744, worksheet.intermediate_output_f293, 0.001); end
  def test_intermediate_output_h293; assert_in_epsilon(470.98728375500406, worksheet.intermediate_output_h293, 0.001); end
  def test_intermediate_output_i293; assert_in_epsilon(477.7179707863396, worksheet.intermediate_output_i293, 0.001); end
  def test_intermediate_output_j293; assert_in_epsilon(424.29321857088854, worksheet.intermediate_output_j293, 0.001); end
  def test_intermediate_output_k293; assert_in_epsilon(339.1461187019778, worksheet.intermediate_output_k293, 0.001); end
  def test_intermediate_output_l293; assert_in_epsilon(205.75581145406315, worksheet.intermediate_output_l293, 0.001); end
  def test_intermediate_output_m293; assert_in_epsilon(99.17138476620721, worksheet.intermediate_output_m293, 0.001); end
  def test_intermediate_output_n293; assert_in_epsilon(83.07342822723695, worksheet.intermediate_output_n293, 0.001); end
  def test_intermediate_output_o293; assert_in_epsilon(86.83099313468412, worksheet.intermediate_output_o293, 0.001); end
  def test_intermediate_output_p293; assert_in_epsilon(90.76203902923795, worksheet.intermediate_output_p293, 0.001); end
  def test_intermediate_output_q293; assert_in_epsilon(95.3418044831494, worksheet.intermediate_output_q293, 0.001); end
  def test_intermediate_output_d294; assert_equal("Oil", worksheet.intermediate_output_d294); end
  def test_intermediate_output_e294; assert_in_delta(0, (worksheet.intermediate_output_e294||0), 0.001); end
  def test_intermediate_output_f294; assert_in_epsilon(906.622998738918, worksheet.intermediate_output_f294, 0.001); end
  def test_intermediate_output_h294; assert_in_epsilon(901.0089098264583, worksheet.intermediate_output_h294, 0.001); end
  def test_intermediate_output_i294; assert_in_epsilon(868.1911081134084, worksheet.intermediate_output_i294, 0.001); end
  def test_intermediate_output_j294; assert_in_epsilon(855.1870235798388, worksheet.intermediate_output_j294, 0.001); end
  def test_intermediate_output_k294; assert_in_epsilon(859.5939643444532, worksheet.intermediate_output_k294, 0.001); end
  def test_intermediate_output_l294; assert_in_epsilon(845.7983560433511, worksheet.intermediate_output_l294, 0.001); end
  def test_intermediate_output_m294; assert_in_epsilon(828.4897394075546, worksheet.intermediate_output_m294, 0.001); end
  def test_intermediate_output_n294; assert_in_epsilon(847.4223190112918, worksheet.intermediate_output_n294, 0.001); end
  def test_intermediate_output_o294; assert_in_epsilon(858.3068752198818, worksheet.intermediate_output_o294, 0.001); end
  def test_intermediate_output_p294; assert_in_epsilon(872.8766716322104, worksheet.intermediate_output_p294, 0.001); end
  def test_intermediate_output_q294; assert_in_epsilon(880.0818093454258, worksheet.intermediate_output_q294, 0.001); end
  def test_intermediate_output_d295; assert_equal("Natural gas", worksheet.intermediate_output_d295); end
  def test_intermediate_output_e295; assert_in_delta(0, (worksheet.intermediate_output_e295||0), 0.001); end
  def test_intermediate_output_f295; assert_in_epsilon(1048.9298032969484, worksheet.intermediate_output_f295, 0.001); end
  def test_intermediate_output_h295; assert_in_epsilon(978.0856143179448, worksheet.intermediate_output_h295, 0.001); end
  def test_intermediate_output_i295; assert_in_epsilon(1001.4318635490304, worksheet.intermediate_output_i295, 0.001); end
  def test_intermediate_output_j295; assert_in_epsilon(1080.1732409505273, worksheet.intermediate_output_j295, 0.001); end
  def test_intermediate_output_k295; assert_in_epsilon(1202.7184729043995, worksheet.intermediate_output_k295, 0.001); end
  def test_intermediate_output_l295; assert_in_epsilon(1389.160504918114, worksheet.intermediate_output_l295, 0.001); end
  def test_intermediate_output_m295; assert_in_epsilon(1575.1707290298787, worksheet.intermediate_output_m295, 0.001); end
  def test_intermediate_output_n295; assert_in_epsilon(1728.4313689906198, worksheet.intermediate_output_n295, 0.001); end
  def test_intermediate_output_o295; assert_in_epsilon(1861.115383171855, worksheet.intermediate_output_o295, 0.001); end
  def test_intermediate_output_p295; assert_in_epsilon(1998.803224690223, worksheet.intermediate_output_p295, 0.001); end
  def test_intermediate_output_q295; assert_in_epsilon(2116.5585654929237, worksheet.intermediate_output_q295, 0.001); end
  def test_intermediate_output_d296; assert_equal("Total Primary Supply", worksheet.intermediate_output_d296); end
  def test_intermediate_output_e296; assert_in_delta(0, (worksheet.intermediate_output_e296||0), 0.001); end
  def test_intermediate_output_f296; assert_in_epsilon(2710.526095457397, worksheet.intermediate_output_f296, 0.001); end
  def test_intermediate_output_h296; assert_in_epsilon(2578.8923481895154, worksheet.intermediate_output_h296, 0.001); end
  def test_intermediate_output_i296; assert_in_epsilon(2579.7214186245888, worksheet.intermediate_output_i296, 0.001); end
  def test_intermediate_output_j296; assert_in_epsilon(2588.1489101904845, worksheet.intermediate_output_j296, 0.001); end
  def test_intermediate_output_k296; assert_in_epsilon(2606.0875624924493, worksheet.intermediate_output_k296, 0.001); end
  def test_intermediate_output_l296; assert_in_epsilon(2612.2964657108046, worksheet.intermediate_output_l296, 0.001); end
  def test_intermediate_output_m296; assert_in_epsilon(2671.1907847848342, worksheet.intermediate_output_m296, 0.001); end
  def test_intermediate_output_n296; assert_in_epsilon(2790.0013619997258, worksheet.intermediate_output_n296, 0.001); end
  def test_intermediate_output_o296; assert_in_epsilon(2925.3439732777197, worksheet.intermediate_output_o296, 0.001); end
  def test_intermediate_output_p296; assert_in_epsilon(3071.824278200468, worksheet.intermediate_output_p296, 0.001); end
  def test_intermediate_output_q296; assert_in_epsilon(3207.0860368254926, worksheet.intermediate_output_q296, 0.001); end
  def test_intermediate_output_d297; assert_equal("Imported energy", worksheet.intermediate_output_d297); end
  def test_intermediate_output_f297; assert_in_epsilon(818.936866535737, worksheet.intermediate_output_f297, 0.001); end
  def test_intermediate_output_h297; assert_in_epsilon(761.5941198157466, worksheet.intermediate_output_h297, 0.001); end
  def test_intermediate_output_i297; assert_in_epsilon(935.5216937274517, worksheet.intermediate_output_i297, 0.001); end
  def test_intermediate_output_j297; assert_in_epsilon(1227.2598564445884, worksheet.intermediate_output_j297, 0.001); end
  def test_intermediate_output_k297; assert_in_epsilon(1468.5509599395214, worksheet.intermediate_output_k297, 0.001); end
  def test_intermediate_output_l297; assert_in_epsilon(1656.0980956111512, worksheet.intermediate_output_l297, 0.001); end
  def test_intermediate_output_m297; assert_in_epsilon(1936.613190185159, worksheet.intermediate_output_m297, 0.001); end
  def test_intermediate_output_n297; assert_in_epsilon(2186.386860912899, worksheet.intermediate_output_n297, 0.001); end
  def test_intermediate_output_o297; assert_in_epsilon(2425.9910187521364, worksheet.intermediate_output_o297, 0.001); end
  def test_intermediate_output_p297; assert_in_epsilon(2653.47744026268, worksheet.intermediate_output_p297, 0.001); end
  def test_intermediate_output_q297; assert_in_epsilon(2838.0812774323877, worksheet.intermediate_output_q297, 0.001); end
  def test_intermediate_output_p298; assert_equal("% imported", worksheet.intermediate_output_p298); end
  def test_intermediate_output_q298; assert_in_delta(0.8849407982336635, worksheet.intermediate_output_q298, 0.001); end
  def test_intermediate_output_d299; assert_equal("Primary demand", worksheet.intermediate_output_d299); end
  def test_intermediate_output_f299; assert_in_epsilon(2707.9903243745525, worksheet.intermediate_output_f299, 0.001); end
  def test_intermediate_output_h299; assert_in_epsilon(2578.8923481895154, worksheet.intermediate_output_h299, 0.001); end
  def test_intermediate_output_i299; assert_in_epsilon(2579.7214186245888, worksheet.intermediate_output_i299, 0.001); end
  def test_intermediate_output_j299; assert_in_epsilon(2588.1489101904845, worksheet.intermediate_output_j299, 0.001); end
  def test_intermediate_output_k299; assert_in_epsilon(2606.0875624924497, worksheet.intermediate_output_k299, 0.001); end
  def test_intermediate_output_l299; assert_in_epsilon(2612.296465710804, worksheet.intermediate_output_l299, 0.001); end
  def test_intermediate_output_m299; assert_in_epsilon(2671.1907847848347, worksheet.intermediate_output_m299, 0.001); end
  def test_intermediate_output_n299; assert_in_epsilon(2790.001361999726, worksheet.intermediate_output_n299, 0.001); end
  def test_intermediate_output_o299; assert_in_epsilon(2925.34397327772, worksheet.intermediate_output_o299, 0.001); end
  def test_intermediate_output_p299; assert_in_epsilon(3071.8242782004686, worksheet.intermediate_output_p299, 0.001); end
  def test_intermediate_output_q299; assert_in_epsilon(3207.0860368254916, worksheet.intermediate_output_q299, 0.001); end
  def test_intermediate_output_b302; assert_equal("Electricity, format for web-based interface", worksheet.intermediate_output_b302); end
  def test_intermediate_output_c304; assert_equal("V.01", worksheet.intermediate_output_c304); end
  def test_intermediate_output_h304; assert_in_epsilon(2007, worksheet.intermediate_output_h304, 0.001); end
  def test_intermediate_output_i304; assert_in_epsilon(2010, worksheet.intermediate_output_i304, 0.001); end
  def test_intermediate_output_j304; assert_in_epsilon(2015, worksheet.intermediate_output_j304, 0.001); end
  def test_intermediate_output_k304; assert_in_epsilon(2020, worksheet.intermediate_output_k304, 0.001); end
  def test_intermediate_output_l304; assert_in_epsilon(2025, worksheet.intermediate_output_l304, 0.001); end
  def test_intermediate_output_m304; assert_in_epsilon(2030, worksheet.intermediate_output_m304, 0.001); end
  def test_intermediate_output_n304; assert_in_epsilon(2035, worksheet.intermediate_output_n304, 0.001); end
  def test_intermediate_output_o304; assert_in_epsilon(2040, worksheet.intermediate_output_o304, 0.001); end
  def test_intermediate_output_p304; assert_in_epsilon(2045, worksheet.intermediate_output_p304, 0.001); end
  def test_intermediate_output_q304; assert_in_epsilon(2050, worksheet.intermediate_output_q304, 0.001); end
  def test_intermediate_output_r304; assert_equal("TWh", worksheet.intermediate_output_r304); end
  def test_intermediate_output_c306; assert_equal("VIII.a", worksheet.intermediate_output_c306); end
  def test_intermediate_output_d306; assert_equal("H2 Production for Transport", worksheet.intermediate_output_d306); end
  def test_intermediate_output_h306; assert_in_delta(0, (worksheet.intermediate_output_h306||0), 0.001); end
  def test_intermediate_output_i306; assert_in_delta(0, (worksheet.intermediate_output_i306||0), 0.001); end
  def test_intermediate_output_j306; assert_in_delta(0, (worksheet.intermediate_output_j306||0), 0.001); end
  def test_intermediate_output_k306; assert_in_delta(0, (worksheet.intermediate_output_k306||0), 0.001); end
  def test_intermediate_output_l306; assert_in_delta(0, (worksheet.intermediate_output_l306||0), 0.001); end
  def test_intermediate_output_m306; assert_in_delta(0, (worksheet.intermediate_output_m306||0), 0.001); end
  def test_intermediate_output_n306; assert_in_delta(0, (worksheet.intermediate_output_n306||0), 0.001); end
  def test_intermediate_output_o306; assert_in_delta(0, (worksheet.intermediate_output_o306||0), 0.001); end
  def test_intermediate_output_p306; assert_in_delta(0, (worksheet.intermediate_output_p306||0), 0.001); end
  def test_intermediate_output_q306; assert_in_delta(0, (worksheet.intermediate_output_q306||0), 0.001); end
  def test_intermediate_output_c307; assert_equal("VI.a", worksheet.intermediate_output_c307); end
  def test_intermediate_output_d307; assert_equal("Agriculture and land use", worksheet.intermediate_output_d307); end
  def test_intermediate_output_h307; assert_in_epsilon(4.172844, worksheet.intermediate_output_h307, 0.001); end
  def test_intermediate_output_i307; assert_in_epsilon(4.259002503628829, worksheet.intermediate_output_i307, 0.001); end
  def test_intermediate_output_j307; assert_in_epsilon(4.285606783827001, worksheet.intermediate_output_j307, 0.001); end
  def test_intermediate_output_k307; assert_in_epsilon(4.312393687431538, worksheet.intermediate_output_k307, 0.001); end
  def test_intermediate_output_l307; assert_in_epsilon(4.339365249637551, worksheet.intermediate_output_l307, 0.001); end
  def test_intermediate_output_m307; assert_in_epsilon(4.366523528320811, worksheet.intermediate_output_m307, 0.001); end
  def test_intermediate_output_n307; assert_in_epsilon(4.3938706042905045, worksheet.intermediate_output_n307, 0.001); end
  def test_intermediate_output_o307; assert_in_epsilon(4.421408581544809, worksheet.intermediate_output_o307, 0.001); end
  def test_intermediate_output_p307; assert_in_epsilon(4.449139587529321, worksheet.intermediate_output_p307, 0.001); end
  def test_intermediate_output_q307; assert_in_epsilon(4.47706577339835, worksheet.intermediate_output_q307, 0.001); end
  def test_intermediate_output_c308; assert_equal("IV.b", worksheet.intermediate_output_c308); end
  def test_intermediate_output_d308; assert_equal("Solar thermal", worksheet.intermediate_output_d308); end
  def test_intermediate_output_h308; assert_in_delta(0, (worksheet.intermediate_output_h308||0), 0.001); end
  def test_intermediate_output_i308; assert_in_delta(0, (worksheet.intermediate_output_i308||0), 0.001); end
  def test_intermediate_output_j308; assert_in_delta(0, (worksheet.intermediate_output_j308||0), 0.001); end
  def test_intermediate_output_k308; assert_in_delta(0, (worksheet.intermediate_output_k308||0), 0.001); end
  def test_intermediate_output_l308; assert_in_delta(0, (worksheet.intermediate_output_l308||0), 0.001); end
  def test_intermediate_output_m308; assert_in_delta(0, (worksheet.intermediate_output_m308||0), 0.001); end
  def test_intermediate_output_n308; assert_in_delta(0, (worksheet.intermediate_output_n308||0), 0.001); end
  def test_intermediate_output_o308; assert_in_delta(0, (worksheet.intermediate_output_o308||0), 0.001); end
  def test_intermediate_output_p308; assert_in_delta(0, (worksheet.intermediate_output_p308||0), 0.001); end
  def test_intermediate_output_q308; assert_in_delta(0, (worksheet.intermediate_output_q308||0), 0.001); end
  def test_intermediate_output_c309; assert_equal("IX.a", worksheet.intermediate_output_c309); end
  def test_intermediate_output_d309; assert_equal("Domestic space heating and hot water", worksheet.intermediate_output_d309); end
  def test_intermediate_output_h309; assert_in_epsilon(31.008546529888466, worksheet.intermediate_output_h309, 0.001); end
  def test_intermediate_output_i309; assert_in_epsilon(28.776774904604437, worksheet.intermediate_output_i309, 0.001); end
  def test_intermediate_output_j309; assert_in_epsilon(23.943250737912486, worksheet.intermediate_output_j309, 0.001); end
  def test_intermediate_output_k309; assert_in_epsilon(28.18933662099497, worksheet.intermediate_output_k309, 0.001); end
  def test_intermediate_output_l309; assert_in_epsilon(32.847057573486566, worksheet.intermediate_output_l309, 0.001); end
  def test_intermediate_output_m309; assert_in_epsilon(37.922473900258154, worksheet.intermediate_output_m309, 0.001); end
  def test_intermediate_output_n309; assert_in_epsilon(42.61889890941194, worksheet.intermediate_output_n309, 0.001); end
  def test_intermediate_output_o309; assert_in_epsilon(47.891185568066064, worksheet.intermediate_output_o309, 0.001); end
  def test_intermediate_output_p309; assert_in_epsilon(53.84879586918063, worksheet.intermediate_output_p309, 0.001); end
  def test_intermediate_output_q309; assert_in_epsilon(60.658172984497035, worksheet.intermediate_output_q309, 0.001); end
  def test_intermediate_output_c310; assert_equal("IX.c", worksheet.intermediate_output_c310); end
  def test_intermediate_output_d310; assert_equal("Commercial heating and cooling", worksheet.intermediate_output_d310); end
  def test_intermediate_output_h310; assert_in_epsilon(28.551697890247862, worksheet.intermediate_output_h310, 0.001); end
  def test_intermediate_output_i310; assert_in_epsilon(31.40903797859884, worksheet.intermediate_output_i310, 0.001); end
  def test_intermediate_output_j310; assert_in_epsilon(35.16946485012258, worksheet.intermediate_output_j310, 0.001); end
  def test_intermediate_output_k310; assert_in_epsilon(36.74416002679409, worksheet.intermediate_output_k310, 0.001); end
  def test_intermediate_output_l310; assert_in_epsilon(37.59493963027826, worksheet.intermediate_output_l310, 0.001); end
  def test_intermediate_output_m310; assert_in_epsilon(37.73848109426944, worksheet.intermediate_output_m310, 0.001); end
  def test_intermediate_output_n310; assert_in_epsilon(37.186936739885184, worksheet.intermediate_output_n310, 0.001); end
  def test_intermediate_output_o310; assert_in_epsilon(35.947741102135936, worksheet.intermediate_output_o310, 0.001); end
  def test_intermediate_output_p310; assert_in_epsilon(34.02338938595468, worksheet.intermediate_output_p310, 0.001); end
  def test_intermediate_output_q310; assert_in_epsilon(31.41118473825011, worksheet.intermediate_output_q310, 0.001); end
  def test_intermediate_output_c311; assert_equal("X.a", worksheet.intermediate_output_c311); end
  def test_intermediate_output_d311; assert_equal("Domestic lighting, appliances, and cooking", worksheet.intermediate_output_d311); end
  def test_intermediate_output_h311; assert_in_epsilon(86.7250002380565, worksheet.intermediate_output_h311, 0.001); end
  def test_intermediate_output_i311; assert_in_epsilon(87.37770781750622, worksheet.intermediate_output_i311, 0.001); end
  def test_intermediate_output_j311; assert_in_epsilon(89.4785198583305, worksheet.intermediate_output_j311, 0.001); end
  def test_intermediate_output_k311; assert_in_epsilon(91.46434104552873, worksheet.intermediate_output_k311, 0.001); end
  def test_intermediate_output_l311; assert_in_epsilon(93.1641125929225, worksheet.intermediate_output_l311, 0.001); end
  def test_intermediate_output_m311; assert_in_epsilon(94.56743589111149, worksheet.intermediate_output_m311, 0.001); end
  def test_intermediate_output_n311; assert_in_epsilon(96.68001200867188, worksheet.intermediate_output_n311, 0.001); end
  def test_intermediate_output_o311; assert_in_epsilon(98.82343859522426, worksheet.intermediate_output_o311, 0.001); end
  def test_intermediate_output_p311; assert_in_epsilon(101.062380337744, worksheet.intermediate_output_p311, 0.001); end
  def test_intermediate_output_q311; assert_in_epsilon(103.40155946528074, worksheet.intermediate_output_q311, 0.001); end
  def test_intermediate_output_c312; assert_equal("X.b", worksheet.intermediate_output_c312); end
  def test_intermediate_output_d312; assert_equal("Commercial lighting, appliances, and catering", worksheet.intermediate_output_d312); end
  def test_intermediate_output_h312; assert_in_epsilon(72.6348790796996, worksheet.intermediate_output_h312, 0.001); end
  def test_intermediate_output_i312; assert_in_epsilon(73.0477408893982, worksheet.intermediate_output_i312, 0.001); end
  def test_intermediate_output_j312; assert_in_epsilon(75.15818753192958, worksheet.intermediate_output_j312, 0.001); end
  def test_intermediate_output_k312; assert_in_epsilon(77.34780373251103, worksheet.intermediate_output_k312, 0.001); end
  def test_intermediate_output_l312; assert_in_epsilon(79.61979665666068, worksheet.intermediate_output_l312, 0.001); end
  def test_intermediate_output_m312; assert_in_epsilon(81.97751212457892, worksheet.intermediate_output_m312, 0.001); end
  def test_intermediate_output_n312; assert_in_epsilon(84.42444092846185, worksheet.intermediate_output_n312, 0.001); end
  def test_intermediate_output_o312; assert_in_epsilon(86.96422544894558, worksheet.intermediate_output_o312, 0.001); end
  def test_intermediate_output_p312; assert_in_epsilon(89.6006665852183, worksheet.intermediate_output_p312, 0.001); end
  def test_intermediate_output_q312; assert_in_epsilon(92.33773101406193, worksheet.intermediate_output_q312, 0.001); end
  def test_intermediate_output_c313; assert_equal("XI.a", worksheet.intermediate_output_c313); end
  def test_intermediate_output_d313; assert_equal("Industrial processes", worksheet.intermediate_output_d313); end
  def test_intermediate_output_h313; assert_in_epsilon(114.37233546157294, worksheet.intermediate_output_h313, 0.001); end
  def test_intermediate_output_i313; assert_in_epsilon(118.31124004032155, worksheet.intermediate_output_i313, 0.001); end
  def test_intermediate_output_j313; assert_in_epsilon(125.23778251461906, worksheet.intermediate_output_j313, 0.001); end
  def test_intermediate_output_k313; assert_in_epsilon(132.64428543810925, worksheet.intermediate_output_k313, 0.001); end
  def test_intermediate_output_l313; assert_in_epsilon(144.04040616949953, worksheet.intermediate_output_l313, 0.001); end
  def test_intermediate_output_m313; assert_in_epsilon(156.6557539796009, worksheet.intermediate_output_m313, 0.001); end
  def test_intermediate_output_n313; assert_in_epsilon(170.62764524743605, worksheet.intermediate_output_n313, 0.001); end
  def test_intermediate_output_o313; assert_in_epsilon(186.10920889300192, worksheet.intermediate_output_o313, 0.001); end
  def test_intermediate_output_p313; assert_in_epsilon(203.27122721289845, worksheet.intermediate_output_p313, 0.001); end
  def test_intermediate_output_q313; assert_in_epsilon(222.30419216814937, worksheet.intermediate_output_q313, 0.001); end
  def test_intermediate_output_c314; assert_equal("XII.a", worksheet.intermediate_output_c314); end
  def test_intermediate_output_d314; assert_equal("Domestic passenger transport", worksheet.intermediate_output_d314); end
  def test_intermediate_output_h314; assert_in_epsilon(8.580392457134547, worksheet.intermediate_output_h314, 0.001); end
  def test_intermediate_output_i314; assert_in_epsilon(8.081440121990916, worksheet.intermediate_output_i314, 0.001); end
  def test_intermediate_output_j314; assert_in_epsilon(8.141373974862617, worksheet.intermediate_output_j314, 0.001); end
  def test_intermediate_output_k314; assert_in_epsilon(8.323096485047898, worksheet.intermediate_output_k314, 0.001); end
  def test_intermediate_output_l314; assert_in_epsilon(10.455458229294567, worksheet.intermediate_output_l314, 0.001); end
  def test_intermediate_output_m314; assert_in_epsilon(12.433952472985883, worksheet.intermediate_output_m314, 0.001); end
  def test_intermediate_output_n314; assert_in_epsilon(14.586405934010916, worksheet.intermediate_output_n314, 0.001); end
  def test_intermediate_output_o314; assert_in_epsilon(16.696515393396112, worksheet.intermediate_output_o314, 0.001); end
  def test_intermediate_output_p314; assert_in_epsilon(18.554390850868224, worksheet.intermediate_output_p314, 0.001); end
  def test_intermediate_output_q314; assert_in_epsilon(20.632736892106443, worksheet.intermediate_output_q314, 0.001); end
  def test_intermediate_output_c315; assert_equal("XII.b", worksheet.intermediate_output_c315); end
  def test_intermediate_output_d315; assert_equal("Domestic freight", worksheet.intermediate_output_d315); end
  def test_intermediate_output_h315; assert_in_delta(0.10120000000000001, worksheet.intermediate_output_h315, 0.001); end
  def test_intermediate_output_i315; assert_in_delta(0.10259599185085001, worksheet.intermediate_output_i315, 0.001); end
  def test_intermediate_output_j315; assert_in_delta(0.10846245968266201, worksheet.intermediate_output_j315, 0.001); end
  def test_intermediate_output_k315; assert_in_delta(0.11432892751447502, worksheet.intermediate_output_k315, 0.001); end
  def test_intermediate_output_l315; assert_in_delta(0.12019539534628801, worksheet.intermediate_output_l315, 0.001); end
  def test_intermediate_output_m315; assert_in_delta(0.1260618631781, worksheet.intermediate_output_m315, 0.001); end
  def test_intermediate_output_n315; assert_in_delta(0.131928331009913, worksheet.intermediate_output_n315, 0.001); end
  def test_intermediate_output_o315; assert_in_delta(0.137794798841725, worksheet.intermediate_output_o315, 0.001); end
  def test_intermediate_output_p315; assert_in_delta(0.143661266673538, worksheet.intermediate_output_p315, 0.001); end
  def test_intermediate_output_q315; assert_in_delta(0.149527734505351, worksheet.intermediate_output_q315, 0.001); end
  def test_intermediate_output_c316; assert_equal("XIV.a", worksheet.intermediate_output_c316); end
  def test_intermediate_output_d316; assert_equal("Geosequestration", worksheet.intermediate_output_d316); end
  def test_intermediate_output_h316; assert_in_delta(0, (worksheet.intermediate_output_h316||0), 0.001); end
  def test_intermediate_output_i316; assert_in_delta(0, (worksheet.intermediate_output_i316||0), 0.001); end
  def test_intermediate_output_j316; assert_in_delta(0, (worksheet.intermediate_output_j316||0), 0.001); end
  def test_intermediate_output_k316; assert_in_delta(0, (worksheet.intermediate_output_k316||0), 0.001); end
  def test_intermediate_output_l316; assert_in_delta(0, (worksheet.intermediate_output_l316||0), 0.001); end
  def test_intermediate_output_m316; assert_in_delta(0, (worksheet.intermediate_output_m316||0), 0.001); end
  def test_intermediate_output_n316; assert_in_delta(0, (worksheet.intermediate_output_n316||0), 0.001); end
  def test_intermediate_output_o316; assert_in_delta(0, (worksheet.intermediate_output_o316||0), 0.001); end
  def test_intermediate_output_p316; assert_in_delta(0, (worksheet.intermediate_output_p316||0), 0.001); end
  def test_intermediate_output_q316; assert_in_delta(0, (worksheet.intermediate_output_q316||0), 0.001); end
  def test_intermediate_output_c317; assert_equal("XV.a", worksheet.intermediate_output_c317); end
  def test_intermediate_output_d317; assert_equal("Petroleum refineries", worksheet.intermediate_output_d317); end
  def test_intermediate_output_h317; assert_in_epsilon(6.864816135126634, worksheet.intermediate_output_h317, 0.001); end
  def test_intermediate_output_i317; assert_in_epsilon(6.4661951652320635, worksheet.intermediate_output_i317, 0.001); end
  def test_intermediate_output_j317; assert_in_epsilon(6.127455410129975, worksheet.intermediate_output_j317, 0.001); end
  def test_intermediate_output_k317; assert_in_epsilon(5.811946425969375, worksheet.intermediate_output_k317, 0.001); end
  def test_intermediate_output_l317; assert_in_epsilon(5.5650160316218935, worksheet.intermediate_output_l317, 0.001); end
  def test_intermediate_output_m317; assert_in_epsilon(5.3739459995864545, worksheet.intermediate_output_m317, 0.001); end
  def test_intermediate_output_n317; assert_in_epsilon(5.226099651069918, worksheet.intermediate_output_n317, 0.001); end
  def test_intermediate_output_o317; assert_in_epsilon(5.1116989649088405, worksheet.intermediate_output_o317, 0.001); end
  def test_intermediate_output_p317; assert_in_epsilon(5.0231778947204795, worksheet.intermediate_output_p317, 0.001); end
  def test_intermediate_output_q317; assert_in_epsilon(4.954681978041625, worksheet.intermediate_output_q317, 0.001); end
  def test_intermediate_output_c318; assert_equal("XV.b", worksheet.intermediate_output_c318); end
  def test_intermediate_output_d318; assert_equal("Indigenous fossil-fuel production", worksheet.intermediate_output_d318); end
  def test_intermediate_output_h318; assert_in_epsilon(1.5434122188034558, worksheet.intermediate_output_h318, 0.001); end
  def test_intermediate_output_i318; assert_in_epsilon(1.4718031885075522, worksheet.intermediate_output_i318, 0.001); end
  def test_intermediate_output_j318; assert_in_epsilon(1.382384898664516, worksheet.intermediate_output_j318, 0.001); end
  def test_intermediate_output_k318; assert_in_epsilon(1.2990989147526133, worksheet.intermediate_output_k318, 0.001); end
  def test_intermediate_output_l318; assert_in_epsilon(1.233915855367795, worksheet.intermediate_output_l318, 0.001); end
  def test_intermediate_output_m318; assert_in_delta(0.6779996494278735, worksheet.intermediate_output_m318, 0.001); end
  def test_intermediate_output_n318; assert_in_delta(0.638972143961614, worksheet.intermediate_output_n318, 0.001); end
  def test_intermediate_output_o318; assert_in_delta(0.6087734041936452, worksheet.intermediate_output_o318, 0.001); end
  def test_intermediate_output_p318; assert_in_delta(0.585406195024668, worksheet.intermediate_output_p318, 0.001); end
  def test_intermediate_output_q318; assert_in_delta(0.567325094007138, worksheet.intermediate_output_q318, 0.001); end
  def test_intermediate_output_c319; assert_equal("XVII.a", worksheet.intermediate_output_c319); end
  def test_intermediate_output_d319; assert_equal("District heating effective demand", worksheet.intermediate_output_d319); end
  def test_intermediate_output_h319; assert_in_epsilon(1.2590275909415456, worksheet.intermediate_output_h319, 0.001); end
  def test_intermediate_output_i319; assert_in_epsilon(1.2917342901248294, worksheet.intermediate_output_i319, 0.001); end
  def test_intermediate_output_j319; assert_in_epsilon(1.3553256124931699, worksheet.intermediate_output_j319, 0.001); end
  def test_intermediate_output_k319; assert_in_epsilon(1.4241068474422023, worksheet.intermediate_output_k319, 0.001); end
  def test_intermediate_output_l319; assert_in_epsilon(1.5339396467223014, worksheet.intermediate_output_l319, 0.001); end
  def test_intermediate_output_m319; assert_in_epsilon(1.6569033260887653, worksheet.intermediate_output_m319, 0.001); end
  def test_intermediate_output_n319; assert_in_epsilon(1.794159227697514, worksheet.intermediate_output_n319, 0.001); end
  def test_intermediate_output_o319; assert_in_epsilon(1.947074795037317, worksheet.intermediate_output_o319, 0.001); end
  def test_intermediate_output_p319; assert_in_epsilon(2.117231134901898, worksheet.intermediate_output_p319, 0.001); end
  def test_intermediate_output_q319; assert_in_epsilon(2.306435188322379, worksheet.intermediate_output_q319, 0.001); end
  def test_intermediate_output_d320; assert_equal("Total", worksheet.intermediate_output_d320); end
  def test_intermediate_output_h320; assert_in_epsilon(355.8141516014716, worksheet.intermediate_output_h320, 0.001); end
  def test_intermediate_output_i320; assert_in_epsilon(360.59527289176435, worksheet.intermediate_output_i320, 0.001); end
  def test_intermediate_output_j320; assert_in_epsilon(370.38781463257413, worksheet.intermediate_output_j320, 0.001); end
  def test_intermediate_output_k320; assert_in_epsilon(387.67489815209615, worksheet.intermediate_output_k320, 0.001); end
  def test_intermediate_output_l320; assert_in_epsilon(410.5142030308379, worksheet.intermediate_output_l320, 0.001); end
  def test_intermediate_output_m320; assert_in_epsilon(433.4970438294068, worksheet.intermediate_output_m320, 0.001); end
  def test_intermediate_output_n320; assert_in_epsilon(458.30936972590735, worksheet.intermediate_output_n320, 0.001); end
  def test_intermediate_output_o320; assert_in_epsilon(484.6590655452963, worksheet.intermediate_output_o320, 0.001); end
  def test_intermediate_output_p320; assert_in_epsilon(512.6794663207143, worksheet.intermediate_output_p320, 0.001); end
  def test_intermediate_output_q320; assert_in_epsilon(543.2006130306205, worksheet.intermediate_output_q320, 0.001); end
  def test_intermediate_output_d322; assert_equal("Transport", worksheet.intermediate_output_d322); end
  def test_intermediate_output_h322; assert_in_epsilon(8.681592457134547, worksheet.intermediate_output_h322, 0.001); end
  def test_intermediate_output_i322; assert_in_epsilon(8.184036113841765, worksheet.intermediate_output_i322, 0.001); end
  def test_intermediate_output_j322; assert_in_epsilon(8.24983643454528, worksheet.intermediate_output_j322, 0.001); end
  def test_intermediate_output_k322; assert_in_epsilon(8.437425412562373, worksheet.intermediate_output_k322, 0.001); end
  def test_intermediate_output_l322; assert_in_epsilon(10.575653624640855, worksheet.intermediate_output_l322, 0.001); end
  def test_intermediate_output_m322; assert_in_epsilon(12.560014336163983, worksheet.intermediate_output_m322, 0.001); end
  def test_intermediate_output_n322; assert_in_epsilon(14.718334265020829, worksheet.intermediate_output_n322, 0.001); end
  def test_intermediate_output_o322; assert_in_epsilon(16.834310192237837, worksheet.intermediate_output_o322, 0.001); end
  def test_intermediate_output_p322; assert_in_epsilon(18.69805211754176, worksheet.intermediate_output_p322, 0.001); end
  def test_intermediate_output_q322; assert_in_epsilon(20.782264626611795, worksheet.intermediate_output_q322, 0.001); end
  def test_intermediate_output_d323; assert_equal("Industry", worksheet.intermediate_output_d323); end
  def test_intermediate_output_h323; assert_in_epsilon(126.95340781550303, worksheet.intermediate_output_h323, 0.001); end
  def test_intermediate_output_i323; assert_in_epsilon(130.50824089769, worksheet.intermediate_output_i323, 0.001); end
  def test_intermediate_output_j323; assert_in_epsilon(137.03322960724054, worksheet.intermediate_output_j323, 0.001); end
  def test_intermediate_output_k323; assert_in_epsilon(144.0677244662628, worksheet.intermediate_output_k323, 0.001); end
  def test_intermediate_output_l323; assert_in_epsilon(155.17870330612678, worksheet.intermediate_output_l323, 0.001); end
  def test_intermediate_output_m323; assert_in_epsilon(167.07422315693603, worksheet.intermediate_output_m323, 0.001); end
  def test_intermediate_output_n323; assert_in_epsilon(180.88658764675807, worksheet.intermediate_output_n323, 0.001); end
  def test_intermediate_output_o323; assert_in_epsilon(196.2510898436492, worksheet.intermediate_output_o323, 0.001); end
  def test_intermediate_output_p323; assert_in_epsilon(213.3289508901729, worksheet.intermediate_output_p323, 0.001); end
  def test_intermediate_output_q323; assert_in_epsilon(232.30326501359647, worksheet.intermediate_output_q323, 0.001); end
  def test_intermediate_output_d324; assert_equal("Heating and cooling", worksheet.intermediate_output_d324); end
  def test_intermediate_output_h324; assert_in_epsilon(60.81927201107787, worksheet.intermediate_output_h324, 0.001); end
  def test_intermediate_output_i324; assert_in_epsilon(61.477547173328105, worksheet.intermediate_output_i324, 0.001); end
  def test_intermediate_output_j324; assert_in_epsilon(60.46804120052823, worksheet.intermediate_output_j324, 0.001); end
  def test_intermediate_output_k324; assert_in_epsilon(66.35760349523126, worksheet.intermediate_output_k324, 0.001); end
  def test_intermediate_output_l324; assert_in_epsilon(71.97593685048713, worksheet.intermediate_output_l324, 0.001); end
  def test_intermediate_output_m324; assert_in_epsilon(77.31785832061637, worksheet.intermediate_output_m324, 0.001); end
  def test_intermediate_output_n324; assert_in_epsilon(81.59999487699464, worksheet.intermediate_output_n324, 0.001); end
  def test_intermediate_output_o324; assert_in_epsilon(85.78600146523932, worksheet.intermediate_output_o324, 0.001); end
  def test_intermediate_output_p324; assert_in_epsilon(89.9894163900372, worksheet.intermediate_output_p324, 0.001); end
  def test_intermediate_output_q324; assert_in_epsilon(94.37579291106952, worksheet.intermediate_output_q324, 0.001); end
  def test_intermediate_output_d325; assert_equal("Lighting & appliances", worksheet.intermediate_output_d325); end
  def test_intermediate_output_h325; assert_in_epsilon(159.3598793177561, worksheet.intermediate_output_h325, 0.001); end
  def test_intermediate_output_i325; assert_in_epsilon(160.42544870690443, worksheet.intermediate_output_i325, 0.001); end
  def test_intermediate_output_j325; assert_in_epsilon(164.63670739026009, worksheet.intermediate_output_j325, 0.001); end
  def test_intermediate_output_k325; assert_in_epsilon(168.81214477803974, worksheet.intermediate_output_k325, 0.001); end
  def test_intermediate_output_l325; assert_in_epsilon(172.7839092495832, worksheet.intermediate_output_l325, 0.001); end
  def test_intermediate_output_m325; assert_in_epsilon(176.5449480156904, worksheet.intermediate_output_m325, 0.001); end
  def test_intermediate_output_n325; assert_in_epsilon(181.10445293713371, worksheet.intermediate_output_n325, 0.001); end
  def test_intermediate_output_o325; assert_in_epsilon(185.78766404416984, worksheet.intermediate_output_o325, 0.001); end
  def test_intermediate_output_p325; assert_in_epsilon(190.6630469229623, worksheet.intermediate_output_p325, 0.001); end
  def test_intermediate_output_q325; assert_in_epsilon(195.73929047934269, worksheet.intermediate_output_q325, 0.001); end
  def test_intermediate_output_d326; assert_equal("Total", worksheet.intermediate_output_d326); end
  def test_intermediate_output_h326; assert_in_epsilon(355.81415160147156, worksheet.intermediate_output_h326, 0.001); end
  def test_intermediate_output_i326; assert_in_epsilon(360.5952728917643, worksheet.intermediate_output_i326, 0.001); end
  def test_intermediate_output_j326; assert_in_epsilon(370.38781463257413, worksheet.intermediate_output_j326, 0.001); end
  def test_intermediate_output_k326; assert_in_epsilon(387.67489815209615, worksheet.intermediate_output_k326, 0.001); end
  def test_intermediate_output_l326; assert_in_epsilon(410.51420303083796, worksheet.intermediate_output_l326, 0.001); end
  def test_intermediate_output_m326; assert_in_epsilon(433.4970438294068, worksheet.intermediate_output_m326, 0.001); end
  def test_intermediate_output_n326; assert_in_epsilon(458.30936972590723, worksheet.intermediate_output_n326, 0.001); end
  def test_intermediate_output_o326; assert_in_epsilon(484.6590655452962, worksheet.intermediate_output_o326, 0.001); end
  def test_intermediate_output_p326; assert_in_epsilon(512.6794663207141, worksheet.intermediate_output_p326, 0.001); end
  def test_intermediate_output_q326; assert_in_epsilon(543.2006130306205, worksheet.intermediate_output_q326, 0.001); end
  def test_intermediate_output_i368; assert_in_epsilon(2050, worksheet.intermediate_output_i368, 0.001); end
  def test_intermediate_output_d369; assert_equal("This is the data used for the sankey diagram in the web tool", worksheet.intermediate_output_d369); end
  def test_intermediate_output_h369; assert_equal("From", worksheet.intermediate_output_h369); end
  def test_intermediate_output_i369; assert_equal("TWh", worksheet.intermediate_output_i369); end
  def test_intermediate_output_j369; assert_equal("To", worksheet.intermediate_output_j369); end
  def test_intermediate_output_n369; assert_equal("Box", worksheet.intermediate_output_n369); end
  def test_intermediate_output_o369; assert_equal("Out", worksheet.intermediate_output_o369); end
  def test_intermediate_output_p369; assert_equal("In", worksheet.intermediate_output_p369); end
  def test_intermediate_output_q369; assert_equal("Delta", worksheet.intermediate_output_q369); end
  def test_intermediate_output_r369; assert_equal("Problem", worksheet.intermediate_output_r369); end
  def test_intermediate_output_h370; assert_equal("Coal reserves", worksheet.intermediate_output_h370); end
  def test_intermediate_output_i370; assert_in_epsilon(63.965, worksheet.intermediate_output_i370, 0.001); end
  def test_intermediate_output_j370; assert_equal("Coal", worksheet.intermediate_output_j370); end
  def test_intermediate_output_n370; assert_equal("Agricultural 'waste'", worksheet.intermediate_output_n370); end
  def test_intermediate_output_o370; assert_in_epsilon(37.42321810680604, worksheet.intermediate_output_o370, 0.001); end
  def test_intermediate_output_p370; assert_in_delta(0, (worksheet.intermediate_output_p370||0), 0.001); end
  def test_intermediate_output_q370; assert_in_epsilon(37.42321810680604, worksheet.intermediate_output_q370, 0.001); end
  def test_intermediate_output_r370; assert_equal("ok", worksheet.intermediate_output_r370); end
  def test_intermediate_output_s370; assert_in_epsilon(129.49638743214874, worksheet.intermediate_output_s370, 0.001); end
  def test_intermediate_output_t370; assert_in_delta(0, (worksheet.intermediate_output_t370||0), 0.001); end
  def test_intermediate_output_u370; assert_in_epsilon(129.49638743214874, worksheet.intermediate_output_u370, 0.001); end
  def test_intermediate_output_h371; assert_equal("Coal imports", worksheet.intermediate_output_h371); end
  def test_intermediate_output_i371; assert_in_epsilon(31.3768044831494, worksheet.intermediate_output_i371, 0.001); end
  def test_intermediate_output_j371; assert_equal("Coal", worksheet.intermediate_output_j371); end
  def test_intermediate_output_n371; assert_equal("Agriculture", worksheet.intermediate_output_n371); end
  def test_intermediate_output_o371; assert_in_delta(0, (worksheet.intermediate_output_o371||0), 0.001); end
  def test_intermediate_output_p371; assert_in_epsilon(11.192664433495876, worksheet.intermediate_output_p371, 0.001); end
  def test_intermediate_output_q371; assert_in_epsilon(-11.192664433495876, worksheet.intermediate_output_q371, 0.001); end
  def test_intermediate_output_r371; assert_equal("ok", worksheet.intermediate_output_r371); end
  def test_intermediate_output_s371; assert_in_delta(0, (worksheet.intermediate_output_s371||0), 0.001); end
  def test_intermediate_output_t371; assert_in_epsilon(11.394396627131044, worksheet.intermediate_output_t371, 0.001); end
  def test_intermediate_output_u371; assert_in_epsilon(-11.394396627131044, worksheet.intermediate_output_u371, 0.001); end
  def test_intermediate_output_h372; assert_equal("Oil reserves", worksheet.intermediate_output_h372); end
  def test_intermediate_output_i372; assert_in_epsilon(107.70336000383915, worksheet.intermediate_output_i372, 0.001); end
  def test_intermediate_output_j372; assert_equal("Oil", worksheet.intermediate_output_j372); end
  def test_intermediate_output_n372; assert_equal("Bio-conversion", worksheet.intermediate_output_n372); end
  def test_intermediate_output_o372; assert_in_epsilon(95.43830434399338, worksheet.intermediate_output_o372, 0.001); end
  def test_intermediate_output_p372; assert_in_epsilon(95.4383043439934, worksheet.intermediate_output_p372, 0.001); end
  def test_intermediate_output_q372; assert_in_delta(0, (worksheet.intermediate_output_q372||0), 0.001); end
  def test_intermediate_output_r372; assert_equal("ok", worksheet.intermediate_output_r372); end
  def test_intermediate_output_s372; assert_in_epsilon(355.4319179503946, worksheet.intermediate_output_s372, 0.001); end
  def test_intermediate_output_t372; assert_in_epsilon(355.43191795039456, worksheet.intermediate_output_t372, 0.001); end
  def test_intermediate_output_u372; assert_in_delta(0, (worksheet.intermediate_output_u372||0), 0.001); end
  def test_intermediate_output_h373; assert_equal("Oil imports", worksheet.intermediate_output_h373); end
  def test_intermediate_output_i373; assert_in_epsilon(772.3784493415866, worksheet.intermediate_output_i373, 0.001); end
  def test_intermediate_output_j373; assert_equal("Oil", worksheet.intermediate_output_j373); end
  def test_intermediate_output_n373; assert_equal("Biofuel imports", worksheet.intermediate_output_n373); end
  def test_intermediate_output_o373; assert_in_delta(0, (worksheet.intermediate_output_o373||0), 0.001); end
  def test_intermediate_output_p373; assert_in_delta(0, (worksheet.intermediate_output_p373||0), 0.001); end
  def test_intermediate_output_q373; assert_in_delta(0, (worksheet.intermediate_output_q373||0), 0.001); end
  def test_intermediate_output_r373; assert_equal("ok", worksheet.intermediate_output_r373); end
  def test_intermediate_output_s373; assert_in_epsilon(70, worksheet.intermediate_output_s373, 0.001); end
  def test_intermediate_output_t373; assert_in_delta(0, (worksheet.intermediate_output_t373||0), 0.001); end
  def test_intermediate_output_u373; assert_in_epsilon(70, worksheet.intermediate_output_u373, 0.001); end
  def test_intermediate_output_h374; assert_equal("Gas reserves", worksheet.intermediate_output_h374); end
  def test_intermediate_output_i374; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_i374, 0.001); end
  def test_intermediate_output_j374; assert_equal("Ngas", worksheet.intermediate_output_j374); end
  def test_intermediate_output_n374; assert_equal("Biomass imports", worksheet.intermediate_output_n374); end
  def test_intermediate_output_o374; assert_in_delta(0, (worksheet.intermediate_output_o374||0), 0.001); end
  def test_intermediate_output_p374; assert_in_delta(0, (worksheet.intermediate_output_p374||0), 0.001); end
  def test_intermediate_output_q374; assert_in_delta(0, (worksheet.intermediate_output_q374||0), 0.001); end
  def test_intermediate_output_r374; assert_equal("ok", worksheet.intermediate_output_r374); end
  def test_intermediate_output_s374; assert_in_epsilon(70, worksheet.intermediate_output_s374, 0.001); end
  def test_intermediate_output_t374; assert_in_delta(0, (worksheet.intermediate_output_t374||0), 0.001); end
  def test_intermediate_output_u374; assert_in_epsilon(70, worksheet.intermediate_output_u374, 0.001); end
  def test_intermediate_output_h375; assert_equal("Gas imports", worksheet.intermediate_output_h375); end
  def test_intermediate_output_i375; assert_in_epsilon(2034.3260236076515, worksheet.intermediate_output_i375, 0.001); end
  def test_intermediate_output_j375; assert_equal("Ngas", worksheet.intermediate_output_j375); end
  def test_intermediate_output_n375; assert_equal("CHP", worksheet.intermediate_output_n375); end
  def test_intermediate_output_o375; assert_in_delta(0, (worksheet.intermediate_output_o375||0), 0.001); end
  def test_intermediate_output_p375; assert_in_delta(0, (worksheet.intermediate_output_p375||0), 0.001); end
  def test_intermediate_output_q375; assert_in_delta(0, (worksheet.intermediate_output_q375||0), 0.001); end
  def test_intermediate_output_r375; assert_equal("ok", worksheet.intermediate_output_r375); end
  def test_intermediate_output_s375; assert_in_epsilon(210.8480139335702, worksheet.intermediate_output_s375, 0.001); end
  def test_intermediate_output_t375; assert_in_epsilon(210.8480139335702, worksheet.intermediate_output_t375, 0.001); end
  def test_intermediate_output_u375; assert_in_delta(0, (worksheet.intermediate_output_u375||0), 0.001); end
  def test_intermediate_output_h376; assert_equal("UK land based bioenergy", worksheet.intermediate_output_h376); end
  def test_intermediate_output_i376; assert_in_epsilon(17.667299613344547, worksheet.intermediate_output_i376, 0.001); end
  def test_intermediate_output_j376; assert_equal("Bio-conversion", worksheet.intermediate_output_j376); end
  def test_intermediate_output_n376; assert_equal("Coal", worksheet.intermediate_output_n376); end
  def test_intermediate_output_o376; assert_in_epsilon(95.3418044831494, worksheet.intermediate_output_o376, 0.001); end
  def test_intermediate_output_p376; assert_in_epsilon(95.3418044831494, worksheet.intermediate_output_p376, 0.001); end
  def test_intermediate_output_q376; assert_in_delta(0, (worksheet.intermediate_output_q376||0), 0.001); end
  def test_intermediate_output_r376; assert_equal("ok", worksheet.intermediate_output_r376); end
  def test_intermediate_output_s376; assert_in_epsilon(86.55506943339304, worksheet.intermediate_output_s376, 0.001); end
  def test_intermediate_output_t376; assert_in_epsilon(86.55506943339304, worksheet.intermediate_output_t376, 0.001); end
  def test_intermediate_output_u376; assert_in_delta(0, (worksheet.intermediate_output_u376||0), 0.001); end
  def test_intermediate_output_h377; assert_equal("Marine algae", worksheet.intermediate_output_h377); end
  def test_intermediate_output_i377; assert_in_delta(0, (worksheet.intermediate_output_i377||0), 0.001); end
  def test_intermediate_output_j377; assert_equal("Bio-conversion", worksheet.intermediate_output_j377); end
  def test_intermediate_output_n377; assert_equal("Coal imports", worksheet.intermediate_output_n377); end
  def test_intermediate_output_o377; assert_in_epsilon(31.3768044831494, worksheet.intermediate_output_o377, 0.001); end
  def test_intermediate_output_p377; assert_in_delta(0, (worksheet.intermediate_output_p377||0), 0.001); end
  def test_intermediate_output_q377; assert_in_epsilon(31.3768044831494, worksheet.intermediate_output_q377, 0.001); end
  def test_intermediate_output_r377; assert_equal("ok", worksheet.intermediate_output_r377); end
  def test_intermediate_output_s377; assert_in_epsilon(22.59006943339304, worksheet.intermediate_output_s377, 0.001); end
  def test_intermediate_output_t377; assert_in_delta(0, (worksheet.intermediate_output_t377||0), 0.001); end
  def test_intermediate_output_u377; assert_in_epsilon(22.59006943339304, worksheet.intermediate_output_u377, 0.001); end
  def test_intermediate_output_h378; assert_equal("Agricultural 'waste'", worksheet.intermediate_output_h378); end
  def test_intermediate_output_i378; assert_in_epsilon(37.42321810680604, worksheet.intermediate_output_i378, 0.001); end
  def test_intermediate_output_j378; assert_equal("Bio-conversion", worksheet.intermediate_output_j378); end
  def test_intermediate_output_n378; assert_equal("Coal reserves", worksheet.intermediate_output_n378); end
  def test_intermediate_output_o378; assert_in_epsilon(63.965, worksheet.intermediate_output_o378, 0.001); end
  def test_intermediate_output_p378; assert_in_delta(0, (worksheet.intermediate_output_p378||0), 0.001); end
  def test_intermediate_output_q378; assert_in_epsilon(63.965, worksheet.intermediate_output_q378, 0.001); end
  def test_intermediate_output_r378; assert_equal("ok", worksheet.intermediate_output_r378); end
  def test_intermediate_output_s378; assert_in_epsilon(63.965, worksheet.intermediate_output_s378, 0.001); end
  def test_intermediate_output_t378; assert_in_delta(0, (worksheet.intermediate_output_t378||0), 0.001); end
  def test_intermediate_output_u378; assert_in_epsilon(63.965, worksheet.intermediate_output_u378, 0.001); end
  def test_intermediate_output_h379; assert_equal("Other waste", worksheet.intermediate_output_h379); end
  def test_intermediate_output_i379; assert_in_epsilon(40.347786623842815, worksheet.intermediate_output_i379, 0.001); end
  def test_intermediate_output_j379; assert_equal("Bio-conversion", worksheet.intermediate_output_j379); end
  def test_intermediate_output_n379; assert_equal("District heating", worksheet.intermediate_output_n379); end
  def test_intermediate_output_o379; assert_in_epsilon(16.145046318256654, worksheet.intermediate_output_o379, 0.001); end
  def test_intermediate_output_p379; assert_in_epsilon(16.145046318256654, worksheet.intermediate_output_p379, 0.001); end
  def test_intermediate_output_q379; assert_in_delta(0, (worksheet.intermediate_output_q379||0), 0.001); end
  def test_intermediate_output_r379; assert_equal("ok", worksheet.intermediate_output_r379); end
  def test_intermediate_output_s379; assert_in_epsilon(32.947704428248294, worksheet.intermediate_output_s379, 0.001); end
  def test_intermediate_output_t379; assert_in_epsilon(32.947704428248294, worksheet.intermediate_output_t379, 0.001); end
  def test_intermediate_output_u379; assert_in_delta(0, (worksheet.intermediate_output_u379||0), 0.001); end
  def test_intermediate_output_h380; assert_equal("Other waste", worksheet.intermediate_output_h380); end
  def test_intermediate_output_i380; assert_in_epsilon(14.247989840000002, worksheet.intermediate_output_i380, 0.001); end
  def test_intermediate_output_j380; assert_equal("Solid", worksheet.intermediate_output_j380); end
  def test_intermediate_output_n380; assert_equal("Domestic aviation", worksheet.intermediate_output_n380); end
  def test_intermediate_output_o380; assert_in_delta(0, (worksheet.intermediate_output_o380||0), 0.001); end
  def test_intermediate_output_p380; assert_in_delta(-0.06603376625031618, worksheet.intermediate_output_p380, 0.001); end
  def test_intermediate_output_q380; assert_in_delta(0.06603376625031618, worksheet.intermediate_output_q380, 0.001); end
  def test_intermediate_output_r380; assert_equal("error", worksheet.intermediate_output_r380); end
  def test_intermediate_output_s380; assert_in_delta(0, (worksheet.intermediate_output_s380||0), 0.001); end
  def test_intermediate_output_t380; assert_in_epsilon(14.45823092617519, worksheet.intermediate_output_t380, 0.001); end
  def test_intermediate_output_u380; assert_in_epsilon(-14.45823092617519, worksheet.intermediate_output_u380, 0.001); end
  def test_intermediate_output_h381; assert_equal("Biomass imports", worksheet.intermediate_output_h381); end
  def test_intermediate_output_i381; assert_in_delta(0, (worksheet.intermediate_output_i381||0), 0.001); end
  def test_intermediate_output_j381; assert_equal("Solid", worksheet.intermediate_output_j381); end
  def test_intermediate_output_n381; assert_equal("Electricity grid", worksheet.intermediate_output_n381); end
  def test_intermediate_output_o381; assert_in_epsilon(588.5021128913104, worksheet.intermediate_output_o381, 0.001); end
  def test_intermediate_output_p381; assert_in_epsilon(581.4503293856261, worksheet.intermediate_output_p381, 0.001); end
  def test_intermediate_output_q381; assert_in_epsilon(7.051783505684284, worksheet.intermediate_output_q381, 0.001); end
  def test_intermediate_output_r381; assert_equal("error", worksheet.intermediate_output_r381); end
  def test_intermediate_output_s381; assert_in_epsilon(551.5637593526618, worksheet.intermediate_output_s381, 0.001); end
  def test_intermediate_output_t381; assert_in_epsilon(551.5637593526618, worksheet.intermediate_output_t381, 0.001); end
  def test_intermediate_output_u381; assert_in_delta(0, (worksheet.intermediate_output_u381||0), 0.001); end
  def test_intermediate_output_h382; assert_equal("Biofuel imports", worksheet.intermediate_output_h382); end
  def test_intermediate_output_i382; assert_in_delta(0, (worksheet.intermediate_output_i382||0), 0.001); end
  def test_intermediate_output_j382; assert_equal("Liquid", worksheet.intermediate_output_j382); end
  def test_intermediate_output_n382; assert_equal("Electricity imports", worksheet.intermediate_output_n382); end
  def test_intermediate_output_o382; assert_in_delta(0, (worksheet.intermediate_output_o382||0), 0.001); end
  def test_intermediate_output_p382; assert_in_delta(0, (worksheet.intermediate_output_p382||0), 0.001); end
  def test_intermediate_output_q382; assert_in_delta(0, (worksheet.intermediate_output_q382||0), 0.001); end
  def test_intermediate_output_r382; assert_equal("ok", worksheet.intermediate_output_r382); end
  def test_intermediate_output_s382; assert_in_epsilon(15, worksheet.intermediate_output_s382, 0.001); end
  def test_intermediate_output_t382; assert_in_delta(0, (worksheet.intermediate_output_t382||0), 0.001); end
  def test_intermediate_output_u382; assert_in_epsilon(15, worksheet.intermediate_output_u382, 0.001); end
  def test_intermediate_output_h383; assert_equal("Coal", worksheet.intermediate_output_h383); end
  def test_intermediate_output_i383; assert_in_epsilon(95.3418044831494, worksheet.intermediate_output_i383, 0.001); end
  def test_intermediate_output_j383; assert_equal("Solid", worksheet.intermediate_output_j383); end
  def test_intermediate_output_n383; assert_equal("Gas", worksheet.intermediate_output_n383); end
  def test_intermediate_output_o383; assert_in_epsilon(2156.1558887756587, worksheet.intermediate_output_o383, 0.001); end
  def test_intermediate_output_p383; assert_in_epsilon(2156.155888775659, worksheet.intermediate_output_p383, 0.001); end
  def test_intermediate_output_q383; assert_in_delta(0, (worksheet.intermediate_output_q383||0), 0.001); end
  def test_intermediate_output_r383; assert_equal("ok", worksheet.intermediate_output_r383); end
  def test_intermediate_output_s383; assert_in_epsilon(350.6393702891703, worksheet.intermediate_output_s383, 0.001); end
  def test_intermediate_output_t383; assert_in_epsilon(350.63937028917024, worksheet.intermediate_output_t383, 0.001); end
  def test_intermediate_output_u383; assert_in_delta(0, (worksheet.intermediate_output_u383||0), 0.001); end
  def test_intermediate_output_h384; assert_equal("Oil", worksheet.intermediate_output_h384); end
  def test_intermediate_output_i384; assert_in_epsilon(880.0818093454258, worksheet.intermediate_output_i384, 0.001); end
  def test_intermediate_output_j384; assert_equal("Liquid", worksheet.intermediate_output_j384); end
  def test_intermediate_output_n384; assert_equal("Gas imports", worksheet.intermediate_output_n384); end
  def test_intermediate_output_o384; assert_in_epsilon(2034.3260236076515, worksheet.intermediate_output_o384, 0.001); end
  def test_intermediate_output_p384; assert_in_delta(0, (worksheet.intermediate_output_p384||0), 0.001); end
  def test_intermediate_output_q384; assert_in_epsilon(2034.3260236076515, worksheet.intermediate_output_q384, 0.001); end
  def test_intermediate_output_r384; assert_equal("ok", worksheet.intermediate_output_r384); end
  def test_intermediate_output_s384; assert_in_epsilon(214.91648830119163, worksheet.intermediate_output_s384, 0.001); end
  def test_intermediate_output_t384; assert_in_delta(0, (worksheet.intermediate_output_t384||0), 0.001); end
  def test_intermediate_output_u384; assert_in_epsilon(214.91648830119163, worksheet.intermediate_output_u384, 0.001); end
  def test_intermediate_output_h385; assert_equal("Ngas", worksheet.intermediate_output_h385); end
  def test_intermediate_output_i385; assert_in_epsilon(2116.5585654929237, worksheet.intermediate_output_i385, 0.001); end
  def test_intermediate_output_j385; assert_equal("Gas", worksheet.intermediate_output_j385); end
  def test_intermediate_output_n385; assert_equal("Gas reserves", worksheet.intermediate_output_n385); end
  def test_intermediate_output_o385; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_o385, 0.001); end
  def test_intermediate_output_p385; assert_in_delta(0, (worksheet.intermediate_output_p385||0), 0.001); end
  def test_intermediate_output_q385; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_q385, 0.001); end
  def test_intermediate_output_r385; assert_equal("ok", worksheet.intermediate_output_r385); end
  def test_intermediate_output_s385; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_s385, 0.001); end
  def test_intermediate_output_t385; assert_in_delta(0, (worksheet.intermediate_output_t385||0), 0.001); end
  def test_intermediate_output_u385; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_u385, 0.001); end
  def test_intermediate_output_h386; assert_equal("Solar", worksheet.intermediate_output_h386); end
  def test_intermediate_output_i386; assert_in_delta(0, (worksheet.intermediate_output_i386||0), 0.001); end
  def test_intermediate_output_j386; assert_equal("Solar PV", worksheet.intermediate_output_j386); end
  def test_intermediate_output_n386; assert_equal("Geosequestration", worksheet.intermediate_output_n386); end
  def test_intermediate_output_o386; assert_in_delta(0, (worksheet.intermediate_output_o386||0), 0.001); end
  def test_intermediate_output_p386; assert_in_delta(0, (worksheet.intermediate_output_p386||0), 0.001); end
  def test_intermediate_output_q386; assert_in_delta(0, (worksheet.intermediate_output_q386||0), 0.001); end
  def test_intermediate_output_r386; assert_equal("ok", worksheet.intermediate_output_r386); end
  def test_intermediate_output_s386; assert_in_delta(0, (worksheet.intermediate_output_s386||0), 0.001); end
  def test_intermediate_output_t386; assert_in_delta(0, (worksheet.intermediate_output_t386||0), 0.001); end
  def test_intermediate_output_u386; assert_in_delta(0, (worksheet.intermediate_output_u386||0), 0.001); end
  def test_intermediate_output_h387; assert_equal("Solar PV", worksheet.intermediate_output_h387); end
  def test_intermediate_output_i387; assert_in_delta(0, (worksheet.intermediate_output_i387||0), 0.001); end
  def test_intermediate_output_j387; assert_equal("Electricity grid", worksheet.intermediate_output_j387); end
  def test_intermediate_output_n387; assert_equal("Geothermal", worksheet.intermediate_output_n387); end
  def test_intermediate_output_o387; assert_in_delta(0, (worksheet.intermediate_output_o387||0), 0.001); end
  def test_intermediate_output_p387; assert_in_delta(0, (worksheet.intermediate_output_p387||0), 0.001); end
  def test_intermediate_output_q387; assert_in_delta(0, (worksheet.intermediate_output_q387||0), 0.001); end
  def test_intermediate_output_r387; assert_equal("ok", worksheet.intermediate_output_r387); end
  def test_intermediate_output_s387; assert_in_delta(0, (worksheet.intermediate_output_s387||0), 0.001); end
  def test_intermediate_output_t387; assert_in_delta(0, (worksheet.intermediate_output_t387||0), 0.001); end
  def test_intermediate_output_u387; assert_in_delta(0, (worksheet.intermediate_output_u387||0), 0.001); end
  def test_intermediate_output_h388; assert_equal("Solar", worksheet.intermediate_output_h388); end
  def test_intermediate_output_i388; assert_in_delta(0, (worksheet.intermediate_output_i388||0), 0.001); end
  def test_intermediate_output_j388; assert_equal("Solar Thermal", worksheet.intermediate_output_j388); end
  def test_intermediate_output_n388; assert_equal("H2", worksheet.intermediate_output_n388); end
  def test_intermediate_output_o388; assert_in_delta(0, (worksheet.intermediate_output_o388||0), 0.001); end
  def test_intermediate_output_p388; assert_in_delta(0, (worksheet.intermediate_output_p388||0), 0.001); end
  def test_intermediate_output_q388; assert_in_delta(0, (worksheet.intermediate_output_q388||0), 0.001); end
  def test_intermediate_output_r388; assert_equal("ok", worksheet.intermediate_output_r388); end
  def test_intermediate_output_s388; assert_in_epsilon(1.7012811485283734, worksheet.intermediate_output_s388, 0.001); end
  def test_intermediate_output_t388; assert_in_epsilon(1.7012811485283734, worksheet.intermediate_output_t388, 0.001); end
  def test_intermediate_output_u388; assert_in_delta(0, (worksheet.intermediate_output_u388||0), 0.001); end
  def test_intermediate_output_n389; assert_equal("H2 conversion", worksheet.intermediate_output_n389); end
  def test_intermediate_output_o389; assert_in_delta(0, (worksheet.intermediate_output_o389||0), 0.001); end
  def test_intermediate_output_p389; assert_in_delta(0, (worksheet.intermediate_output_p389||0), 0.001); end
  def test_intermediate_output_q389; assert_in_delta(0, (worksheet.intermediate_output_q389||0), 0.001); end
  def test_intermediate_output_r389; assert_equal("ok", worksheet.intermediate_output_r389); end
  def test_intermediate_output_s389; assert_in_epsilon(2.2094560370498355, worksheet.intermediate_output_s389, 0.001); end
  def test_intermediate_output_t389; assert_in_epsilon(2.2094560370498355, worksheet.intermediate_output_t389, 0.001); end
  def test_intermediate_output_u389; assert_in_delta(0, (worksheet.intermediate_output_u389||0), 0.001); end
  def test_intermediate_output_h390; assert_equal("Bio-conversion", worksheet.intermediate_output_h390); end
  def test_intermediate_output_i390; assert_in_epsilon(30.19183129961111, worksheet.intermediate_output_i390, 0.001); end
  def test_intermediate_output_j390; assert_equal("Solid", worksheet.intermediate_output_j390); end
  def test_intermediate_output_n390; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_n390); end
  def test_intermediate_output_o390; assert_in_delta(0, (worksheet.intermediate_output_o390||0), 0.001); end
  def test_intermediate_output_p390; assert_in_epsilon(172.90030737883308, worksheet.intermediate_output_p390, 0.001); end
  def test_intermediate_output_q390; assert_in_epsilon(-172.90030737883308, worksheet.intermediate_output_q390, 0.001); end
  def test_intermediate_output_r390; assert_equal("ok", worksheet.intermediate_output_r390); end
  def test_intermediate_output_s390; assert_in_delta(0, (worksheet.intermediate_output_s390||0), 0.001); end
  def test_intermediate_output_t390; assert_in_epsilon(100.66839811374751, worksheet.intermediate_output_t390, 0.001); end
  def test_intermediate_output_u390; assert_in_epsilon(-100.66839811374751, worksheet.intermediate_output_u390, 0.001); end
  def test_intermediate_output_h391; assert_equal("Bio-conversion", worksheet.intermediate_output_h391); end
  def test_intermediate_output_i391; assert_in_epsilon(7.744845969984378, worksheet.intermediate_output_i391, 0.001); end
  def test_intermediate_output_j391; assert_equal("Liquid", worksheet.intermediate_output_j391); end
  def test_intermediate_output_n391; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_n391); end
  def test_intermediate_output_o391; assert_in_delta(0, (worksheet.intermediate_output_o391||0), 0.001); end
  def test_intermediate_output_p391; assert_in_epsilon(578.6016420619402, worksheet.intermediate_output_p391, 0.001); end
  def test_intermediate_output_q391; assert_in_epsilon(-578.6016420619402, worksheet.intermediate_output_q391, 0.001); end
  def test_intermediate_output_r391; assert_equal("ok", worksheet.intermediate_output_r391); end
  def test_intermediate_output_s391; assert_in_delta(0, (worksheet.intermediate_output_s391||0), 0.001); end
  def test_intermediate_output_t391; assert_in_epsilon(272.59644437905297, worksheet.intermediate_output_t391, 0.001); end
  def test_intermediate_output_u391; assert_in_epsilon(-272.59644437905297, worksheet.intermediate_output_u391, 0.001); end
  def test_intermediate_output_h392; assert_equal("Bio-conversion", worksheet.intermediate_output_h392); end
  def test_intermediate_output_i392; assert_in_epsilon(39.597323282735694, worksheet.intermediate_output_i392, 0.001); end
  def test_intermediate_output_j392; assert_equal("Gas", worksheet.intermediate_output_j392); end
  def test_intermediate_output_n392; assert_equal("Hydro", worksheet.intermediate_output_n392); end
  def test_intermediate_output_o392; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_o392, 0.001); end
  def test_intermediate_output_p392; assert_in_delta(0, (worksheet.intermediate_output_p392||0), 0.001); end
  def test_intermediate_output_q392; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_q392, 0.001); end
  def test_intermediate_output_r392; assert_equal("ok", worksheet.intermediate_output_r392); end
  def test_intermediate_output_s392; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_s392, 0.001); end
  def test_intermediate_output_t392; assert_in_delta(0, (worksheet.intermediate_output_t392||0), 0.001); end
  def test_intermediate_output_u392; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_u392, 0.001); end
  def test_intermediate_output_h393; assert_equal("Bio-conversion", worksheet.intermediate_output_h393); end
  def test_intermediate_output_i393; assert_in_epsilon(17.9043037916622, worksheet.intermediate_output_i393, 0.001); end
  def test_intermediate_output_j393; assert_equal("Losses", worksheet.intermediate_output_j393); end
  def test_intermediate_output_n393; assert_equal("Industry", worksheet.intermediate_output_n393); end
  def test_intermediate_output_o393; assert_in_delta(0, (worksheet.intermediate_output_o393||0), 0.001); end
  def test_intermediate_output_p393; assert_in_epsilon(849.8873476967058, worksheet.intermediate_output_p393, 0.001); end
  def test_intermediate_output_q393; assert_in_epsilon(-849.8873476967058, worksheet.intermediate_output_q393, 0.001); end
  def test_intermediate_output_r393; assert_equal("ok", worksheet.intermediate_output_r393); end
  def test_intermediate_output_s393; assert_in_delta(0, (worksheet.intermediate_output_s393||0), 0.001); end
  def test_intermediate_output_t393; assert_in_epsilon(355.9804755886297, worksheet.intermediate_output_t393, 0.001); end
  def test_intermediate_output_u393; assert_in_epsilon(-355.9804755886297, worksheet.intermediate_output_u393, 0.001); end
  def test_intermediate_output_h394; assert_equal("Solid", worksheet.intermediate_output_h394); end
  def test_intermediate_output_i394; assert_in_delta(0, (worksheet.intermediate_output_i394||0), 0.001); end
  def test_intermediate_output_j394; assert_equal("Over generation / exports", worksheet.intermediate_output_j394); end
  def test_intermediate_output_n394; assert_equal("International aviation", worksheet.intermediate_output_n394); end
  def test_intermediate_output_o394; assert_in_delta(0, (worksheet.intermediate_output_o394||0), 0.001); end
  def test_intermediate_output_p394; assert_in_epsilon(188.58168305622323, worksheet.intermediate_output_p394, 0.001); end
  def test_intermediate_output_q394; assert_in_epsilon(-188.58168305622323, worksheet.intermediate_output_q394, 0.001); end
  def test_intermediate_output_r394; assert_equal("ok", worksheet.intermediate_output_r394); end
  def test_intermediate_output_s394; assert_in_delta(0, (worksheet.intermediate_output_s394||0), 0.001); end
  def test_intermediate_output_t394; assert_in_epsilon(186.3002024926071, worksheet.intermediate_output_t394, 0.001); end
  def test_intermediate_output_u394; assert_in_epsilon(-186.3002024926071, worksheet.intermediate_output_u394, 0.001); end
  def test_intermediate_output_h395; assert_equal("Liquid", worksheet.intermediate_output_h395); end
  def test_intermediate_output_i395; assert_in_delta(0, (worksheet.intermediate_output_i395||0), 0.001); end
  def test_intermediate_output_j395; assert_equal("Over generation / exports", worksheet.intermediate_output_j395); end
  def test_intermediate_output_n395; assert_equal("International shipping", worksheet.intermediate_output_n395); end
  def test_intermediate_output_o395; assert_in_delta(0, (worksheet.intermediate_output_o395||0), 0.001); end
  def test_intermediate_output_p395; assert_in_epsilon(129.50863651300597, worksheet.intermediate_output_p395, 0.001); end
  def test_intermediate_output_q395; assert_in_epsilon(-129.50863651300597, worksheet.intermediate_output_q395, 0.001); end
  def test_intermediate_output_r395; assert_equal("ok", worksheet.intermediate_output_r395); end
  def test_intermediate_output_s395; assert_in_delta(0, (worksheet.intermediate_output_s395||0), 0.001); end
  def test_intermediate_output_t395; assert_in_epsilon(96.15035135056532, worksheet.intermediate_output_t395, 0.001); end
  def test_intermediate_output_u395; assert_in_epsilon(-96.15035135056532, worksheet.intermediate_output_u395, 0.001); end
  def test_intermediate_output_h396; assert_equal("Gas", worksheet.intermediate_output_h396); end
  def test_intermediate_output_i396; assert_in_delta(0, (worksheet.intermediate_output_i396||0), 0.001); end
  def test_intermediate_output_j396; assert_equal("Over generation / exports", worksheet.intermediate_output_j396); end
  def test_intermediate_output_n396; assert_equal("Lighting & appliances - commercial", worksheet.intermediate_output_n396); end
  def test_intermediate_output_o396; assert_in_delta(0, (worksheet.intermediate_output_o396||0), 0.001); end
  def test_intermediate_output_p396; assert_in_epsilon(101.39066503541156, worksheet.intermediate_output_p396, 0.001); end
  def test_intermediate_output_q396; assert_in_epsilon(-101.39066503541156, worksheet.intermediate_output_q396, 0.001); end
  def test_intermediate_output_r396; assert_equal("ok", worksheet.intermediate_output_r396); end
  def test_intermediate_output_s396; assert_in_delta(0, (worksheet.intermediate_output_s396||0), 0.001); end
  def test_intermediate_output_t396; assert_in_epsilon(72.90673211164959, worksheet.intermediate_output_t396, 0.001); end
  def test_intermediate_output_u396; assert_in_epsilon(-72.90673211164959, worksheet.intermediate_output_u396, 0.001); end
  def test_intermediate_output_h397; assert_equal("Solid", worksheet.intermediate_output_h397); end
  def test_intermediate_output_i397; assert_in_epsilon(32.82867, worksheet.intermediate_output_i397, 0.001); end
  def test_intermediate_output_j397; assert_equal("Thermal generation", worksheet.intermediate_output_j397); end
  def test_intermediate_output_n397; assert_equal("Lighting & appliances - homes", worksheet.intermediate_output_n397); end
  def test_intermediate_output_o397; assert_in_delta(0, (worksheet.intermediate_output_o397||0), 0.001); end
  def test_intermediate_output_p397; assert_in_epsilon(111.43620774985737, worksheet.intermediate_output_p397, 0.001); end
  def test_intermediate_output_q397; assert_in_epsilon(-111.43620774985737, worksheet.intermediate_output_q397, 0.001); end
  def test_intermediate_output_r397; assert_equal("ok", worksheet.intermediate_output_r397); end
  def test_intermediate_output_s397; assert_in_delta(0, (worksheet.intermediate_output_s397||0), 0.001); end
  def test_intermediate_output_t397; assert_in_epsilon(62.70002002556289, worksheet.intermediate_output_t397, 0.001); end
  def test_intermediate_output_u397; assert_in_epsilon(-62.70002002556289, worksheet.intermediate_output_u397, 0.001); end
  def test_intermediate_output_h398; assert_equal("Liquid", worksheet.intermediate_output_h398); end
  def test_intermediate_output_i398; assert_in_delta(0, (worksheet.intermediate_output_i398||0), 0.001); end
  def test_intermediate_output_j398; assert_equal("Thermal generation", worksheet.intermediate_output_j398); end
  def test_intermediate_output_n398; assert_equal("Liquid", worksheet.intermediate_output_n398); end
  def test_intermediate_output_o398; assert_in_epsilon(868.9041728789264, worksheet.intermediate_output_o398, 0.001); end
  def test_intermediate_output_p398; assert_in_epsilon(887.8266553154101, worksheet.intermediate_output_p398, 0.001); end
  def test_intermediate_output_q398; assert_in_epsilon(-18.922482436483733, worksheet.intermediate_output_q398, 0.001); end
  def test_intermediate_output_r398; assert_equal("error", worksheet.intermediate_output_r398); end
  def test_intermediate_output_s398; assert_in_epsilon(552.1736401050265, worksheet.intermediate_output_s398, 0.001); end
  def test_intermediate_output_t398; assert_in_epsilon(552.1736401050266, worksheet.intermediate_output_t398, 0.001); end
  def test_intermediate_output_u398; assert_in_delta(0, (worksheet.intermediate_output_u398||0), 0.001); end
  def test_intermediate_output_h399; assert_equal("Gas", worksheet.intermediate_output_h399); end
  def test_intermediate_output_i399; assert_in_epsilon(1152.7946373182087, worksheet.intermediate_output_i399, 0.001); end
  def test_intermediate_output_j399; assert_equal("Thermal generation", worksheet.intermediate_output_j399); end
  def test_intermediate_output_n399; assert_equal("Losses", worksheet.intermediate_output_n399); end
  def test_intermediate_output_o399; assert_in_delta(0, (worksheet.intermediate_output_o399||0), 0.001); end
  def test_intermediate_output_p399; assert_in_epsilon(676.0221029604164, worksheet.intermediate_output_p399, 0.001); end
  def test_intermediate_output_q399; assert_in_epsilon(-676.0221029604164, worksheet.intermediate_output_q399, 0.001); end
  def test_intermediate_output_r399; assert_equal("ok", worksheet.intermediate_output_r399); end
  def test_intermediate_output_s399; assert_in_delta(0, (worksheet.intermediate_output_s399||0), 0.001); end
  def test_intermediate_output_t399; assert_in_epsilon(614.6504645311538, worksheet.intermediate_output_t399, 0.001); end
  def test_intermediate_output_u399; assert_in_epsilon(-614.6504645311538, worksheet.intermediate_output_u399, 0.001); end
  def test_intermediate_output_h400; assert_equal("Nuclear", worksheet.intermediate_output_h400); end
  def test_intermediate_output_i400; assert_in_delta(0, (worksheet.intermediate_output_i400||0), 0.001); end
  def test_intermediate_output_j400; assert_equal("Thermal generation", worksheet.intermediate_output_j400); end
  def test_intermediate_output_n400; assert_equal("Marine algae", worksheet.intermediate_output_n400); end
  def test_intermediate_output_o400; assert_in_delta(0, (worksheet.intermediate_output_o400||0), 0.001); end
  def test_intermediate_output_p400; assert_in_delta(0, (worksheet.intermediate_output_p400||0), 0.001); end
  def test_intermediate_output_q400; assert_in_delta(0, (worksheet.intermediate_output_q400||0), 0.001); end
  def test_intermediate_output_r400; assert_equal("ok", worksheet.intermediate_output_r400); end
  def test_intermediate_output_s400; assert_in_delta(0, (worksheet.intermediate_output_s400||0), 0.001); end
  def test_intermediate_output_t400; assert_in_delta(0, (worksheet.intermediate_output_t400||0), 0.001); end
  def test_intermediate_output_u400; assert_in_delta(0, (worksheet.intermediate_output_u400||0), 0.001); end
  def test_intermediate_output_h401; assert_equal("Thermal generation", worksheet.intermediate_output_h401); end
  def test_intermediate_output_i401; assert_in_epsilon(16.145046318256654, worksheet.intermediate_output_i401, 0.001); end
  def test_intermediate_output_j401; assert_equal("District heating", worksheet.intermediate_output_j401); end
  def test_intermediate_output_n401; assert_equal("National navigation", worksheet.intermediate_output_n401); end
  def test_intermediate_output_o401; assert_in_delta(0, (worksheet.intermediate_output_o401||0), 0.001); end
  def test_intermediate_output_p401; assert_in_epsilon(22.49614487028552, worksheet.intermediate_output_p401, 0.001); end
  def test_intermediate_output_q401; assert_in_epsilon(-22.49614487028552, worksheet.intermediate_output_q401, 0.001); end
  def test_intermediate_output_r401; assert_equal("ok", worksheet.intermediate_output_r401); end
  def test_intermediate_output_s401; assert_in_delta(0, (worksheet.intermediate_output_s401||0), 0.001); end
  def test_intermediate_output_t401; assert_in_epsilon(28.046644936214143, worksheet.intermediate_output_t401, 0.001); end
  def test_intermediate_output_u401; assert_in_epsilon(-28.046644936214143, worksheet.intermediate_output_u401, 0.001); end
  def test_intermediate_output_h402; assert_equal("Thermal generation", worksheet.intermediate_output_h402); end
  def test_intermediate_output_i402; assert_in_epsilon(576.0327660656261, worksheet.intermediate_output_i402, 0.001); end
  def test_intermediate_output_j402; assert_equal("Electricity grid", worksheet.intermediate_output_j402); end
  def test_intermediate_output_n402; assert_equal("Ngas", worksheet.intermediate_output_n402); end
  def test_intermediate_output_o402; assert_in_epsilon(2116.5585654929237, worksheet.intermediate_output_o402, 0.001); end
  def test_intermediate_output_p402; assert_in_epsilon(2116.5585654929237, worksheet.intermediate_output_p402, 0.001); end
  def test_intermediate_output_q402; assert_in_delta(0, (worksheet.intermediate_output_q402||0), 0.001); end
  def test_intermediate_output_r402; assert_equal("ok", worksheet.intermediate_output_r402); end
  def test_intermediate_output_s402; assert_in_epsilon(297.14903018646385, worksheet.intermediate_output_s402, 0.001); end
  def test_intermediate_output_t402; assert_in_epsilon(297.14903018646385, worksheet.intermediate_output_t402, 0.001); end
  def test_intermediate_output_u402; assert_in_delta(0, (worksheet.intermediate_output_u402||0), 0.001); end
  def test_intermediate_output_h403; assert_equal("Thermal generation", worksheet.intermediate_output_h403); end
  def test_intermediate_output_i403; assert_in_epsilon(593.445494934326, worksheet.intermediate_output_i403, 0.001); end
  def test_intermediate_output_j403; assert_equal("Losses", worksheet.intermediate_output_j403); end
  def test_intermediate_output_n403; assert_equal("Nuclear", worksheet.intermediate_output_n403); end
  def test_intermediate_output_o403; assert_in_delta(0, (worksheet.intermediate_output_o403||0), 0.001); end
  def test_intermediate_output_p403; assert_in_delta(0, (worksheet.intermediate_output_p403||0), 0.001); end
  def test_intermediate_output_q403; assert_in_delta(0, (worksheet.intermediate_output_q403||0), 0.001); end
  def test_intermediate_output_r403; assert_equal("ok", worksheet.intermediate_output_r403); end
  def test_intermediate_output_s403; assert_in_epsilon(419.9888000000001, worksheet.intermediate_output_s403, 0.001); end
  def test_intermediate_output_t403; assert_in_delta(0, (worksheet.intermediate_output_t403||0), 0.001); end
  def test_intermediate_output_u403; assert_in_epsilon(419.9888000000001, worksheet.intermediate_output_u403, 0.001); end
  def test_intermediate_output_h404; assert_equal("Solid", worksheet.intermediate_output_h404); end
  def test_intermediate_output_i404; assert_in_delta(0, (worksheet.intermediate_output_i404||0), 0.001); end
  def test_intermediate_output_j404; assert_equal("CHP", worksheet.intermediate_output_j404); end
  def test_intermediate_output_n404; assert_equal("Oil", worksheet.intermediate_output_n404); end
  def test_intermediate_output_o404; assert_in_epsilon(880.0818093454258, worksheet.intermediate_output_o404, 0.001); end
  def test_intermediate_output_p404; assert_in_epsilon(880.0818093454258, worksheet.intermediate_output_p404, 0.001); end
  def test_intermediate_output_q404; assert_in_delta(0, (worksheet.intermediate_output_q404||0), 0.001); end
  def test_intermediate_output_r404; assert_equal("ok", worksheet.intermediate_output_r404); end
  def test_intermediate_output_s404; assert_in_epsilon(481.5771354262274, worksheet.intermediate_output_s404, 0.001); end
  def test_intermediate_output_t404; assert_in_epsilon(481.5771354262274, worksheet.intermediate_output_t404, 0.001); end
  def test_intermediate_output_u404; assert_in_delta(0, (worksheet.intermediate_output_u404||0), 0.001); end
  def test_intermediate_output_h405; assert_equal("Liquid", worksheet.intermediate_output_h405); end
  def test_intermediate_output_i405; assert_in_delta(0, (worksheet.intermediate_output_i405||0), 0.001); end
  def test_intermediate_output_j405; assert_equal("CHP", worksheet.intermediate_output_j405); end
  def test_intermediate_output_n405; assert_equal("Oil imports", worksheet.intermediate_output_n405); end
  def test_intermediate_output_o405; assert_in_epsilon(772.3784493415866, worksheet.intermediate_output_o405, 0.001); end
  def test_intermediate_output_p405; assert_in_delta(0, (worksheet.intermediate_output_p405||0), 0.001); end
  def test_intermediate_output_q405; assert_in_epsilon(772.3784493415866, worksheet.intermediate_output_q405, 0.001); end
  def test_intermediate_output_r405; assert_equal("ok", worksheet.intermediate_output_r405); end
  def test_intermediate_output_s405; assert_in_epsilon(373.87377542238823, worksheet.intermediate_output_s405, 0.001); end
  def test_intermediate_output_t405; assert_in_delta(0, (worksheet.intermediate_output_t405||0), 0.001); end
  def test_intermediate_output_u405; assert_in_epsilon(373.87377542238823, worksheet.intermediate_output_u405, 0.001); end
  def test_intermediate_output_h406; assert_equal("Gas", worksheet.intermediate_output_h406); end
  def test_intermediate_output_i406; assert_in_delta(0, (worksheet.intermediate_output_i406||0), 0.001); end
  def test_intermediate_output_j406; assert_equal("CHP", worksheet.intermediate_output_j406); end
  def test_intermediate_output_n406; assert_equal("Oil reserves", worksheet.intermediate_output_n406); end
  def test_intermediate_output_o406; assert_in_epsilon(107.70336000383915, worksheet.intermediate_output_o406, 0.001); end
  def test_intermediate_output_p406; assert_in_delta(0, (worksheet.intermediate_output_p406||0), 0.001); end
  def test_intermediate_output_q406; assert_in_epsilon(107.70336000383915, worksheet.intermediate_output_q406, 0.001); end
  def test_intermediate_output_r406; assert_equal("ok", worksheet.intermediate_output_r406); end
  def test_intermediate_output_s406; assert_in_epsilon(107.70336000383915, worksheet.intermediate_output_s406, 0.001); end
  def test_intermediate_output_t406; assert_in_delta(0, (worksheet.intermediate_output_t406||0), 0.001); end
  def test_intermediate_output_u406; assert_in_epsilon(107.70336000383915, worksheet.intermediate_output_u406, 0.001); end
  def test_intermediate_output_h407; assert_equal("CHP", worksheet.intermediate_output_h407); end
  def test_intermediate_output_i407; assert_in_delta(0, (worksheet.intermediate_output_i407||0), 0.001); end
  def test_intermediate_output_j407; assert_equal("Electricity grid", worksheet.intermediate_output_j407); end
  def test_intermediate_output_n407; assert_equal("Other waste", worksheet.intermediate_output_n407); end
  def test_intermediate_output_o407; assert_in_epsilon(54.59577646384282, worksheet.intermediate_output_o407, 0.001); end
  def test_intermediate_output_p407; assert_in_delta(0, (worksheet.intermediate_output_p407||0), 0.001); end
  def test_intermediate_output_q407; assert_in_epsilon(54.59577646384282, worksheet.intermediate_output_q407, 0.001); end
  def test_intermediate_output_r407; assert_equal("ok", worksheet.intermediate_output_r407); end
  def test_intermediate_output_s407; assert_in_epsilon(59.072098478484804, worksheet.intermediate_output_s407, 0.001); end
  def test_intermediate_output_t407; assert_in_delta(0, (worksheet.intermediate_output_t407||0), 0.001); end
  def test_intermediate_output_u407; assert_in_epsilon(59.072098478484804, worksheet.intermediate_output_u407, 0.001); end
  def test_intermediate_output_h408; assert_equal("CHP", worksheet.intermediate_output_h408); end
  def test_intermediate_output_i408; assert_in_delta(0, (worksheet.intermediate_output_i408||0), 0.001); end
  def test_intermediate_output_j408; assert_equal("Losses", worksheet.intermediate_output_j408); end
  def test_intermediate_output_n408; assert_equal("Over generation / exports", worksheet.intermediate_output_n408); end
  def test_intermediate_output_o408; assert_in_delta(0, (worksheet.intermediate_output_o408||0), 0.001); end
  def test_intermediate_output_p408; assert_in_delta(0, (worksheet.intermediate_output_p408||0), 0.001); end
  def test_intermediate_output_q408; assert_in_delta(0, (worksheet.intermediate_output_q408||0), 0.001); end
  def test_intermediate_output_r408; assert_equal("ok", worksheet.intermediate_output_r408); end
  def test_intermediate_output_s408; assert_in_delta(0, (worksheet.intermediate_output_s408||0), 0.001); end
  def test_intermediate_output_t408; assert_in_epsilon(61.288314718968195, worksheet.intermediate_output_t408, 0.001); end
  def test_intermediate_output_u408; assert_in_epsilon(-61.288314718968195, worksheet.intermediate_output_u408, 0.001); end
  def test_intermediate_output_h409; assert_equal("Electricity imports", worksheet.intermediate_output_h409); end
  def test_intermediate_output_i409; assert_in_delta(0, (worksheet.intermediate_output_i409||0), 0.001); end
  def test_intermediate_output_j409; assert_equal("Electricity grid", worksheet.intermediate_output_j409); end
  def test_intermediate_output_n409; assert_equal("Pumped heat", worksheet.intermediate_output_n409); end
  def test_intermediate_output_o409; assert_in_delta(0, (worksheet.intermediate_output_o409||0), 0.001); end
  def test_intermediate_output_p409; assert_in_delta(0, (worksheet.intermediate_output_p409||0), 0.001); end
  def test_intermediate_output_q409; assert_in_delta(0, (worksheet.intermediate_output_q409||0), 0.001); end
  def test_intermediate_output_r409; assert_equal("ok", worksheet.intermediate_output_r409); end
  def test_intermediate_output_s409; assert_in_epsilon(142.41553252431277, worksheet.intermediate_output_s409, 0.001); end
  def test_intermediate_output_t409; assert_in_delta(0, (worksheet.intermediate_output_t409||0), 0.001); end
  def test_intermediate_output_u409; assert_in_epsilon(142.41553252431277, worksheet.intermediate_output_u409, 0.001); end
  def test_intermediate_output_h410; assert_equal("Wind", worksheet.intermediate_output_h410); end
  def test_intermediate_output_i410; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_i410, 0.001); end
  def test_intermediate_output_j410; assert_equal("Electricity grid", worksheet.intermediate_output_j410); end
  def test_intermediate_output_n410; assert_equal("Rail transport", worksheet.intermediate_output_n410); end
  def test_intermediate_output_o410; assert_in_delta(0, (worksheet.intermediate_output_o410||0), 0.001); end
  def test_intermediate_output_p410; assert_in_epsilon(17.403379009572024, worksheet.intermediate_output_p410, 0.001); end
  def test_intermediate_output_q410; assert_in_epsilon(-17.403379009572024, worksheet.intermediate_output_q410, 0.001); end
  def test_intermediate_output_r410; assert_equal("ok", worksheet.intermediate_output_r410); end
  def test_intermediate_output_s410; assert_in_delta(0, (worksheet.intermediate_output_s410||0), 0.001); end
  def test_intermediate_output_t410; assert_in_epsilon(14.302960702035355, worksheet.intermediate_output_t410, 0.001); end
  def test_intermediate_output_u410; assert_in_epsilon(-14.302960702035355, worksheet.intermediate_output_u410, 0.001); end
  def test_intermediate_output_h411; assert_equal("Tidal", worksheet.intermediate_output_h411); end
  def test_intermediate_output_i411; assert_in_delta(0, (worksheet.intermediate_output_i411||0), 0.001); end
  def test_intermediate_output_j411; assert_equal("Electricity grid", worksheet.intermediate_output_j411); end
  def test_intermediate_output_n411; assert_equal("Road transport", worksheet.intermediate_output_n411); end
  def test_intermediate_output_o411; assert_in_delta(0, (worksheet.intermediate_output_o411||0), 0.001); end
  def test_intermediate_output_p411; assert_in_epsilon(335.86059089519557, worksheet.intermediate_output_p411, 0.001); end
  def test_intermediate_output_q411; assert_in_epsilon(-335.86059089519557, worksheet.intermediate_output_q411, 0.001); end
  def test_intermediate_output_r411; assert_equal("ok", worksheet.intermediate_output_r411); end
  def test_intermediate_output_s411; assert_in_delta(0, (worksheet.intermediate_output_s411||0), 0.001); end
  def test_intermediate_output_t411; assert_in_epsilon(164.54009825396582, worksheet.intermediate_output_t411, 0.001); end
  def test_intermediate_output_u411; assert_in_epsilon(-164.54009825396582, worksheet.intermediate_output_u411, 0.001); end
  def test_intermediate_output_h412; assert_equal("Wave", worksheet.intermediate_output_h412); end
  def test_intermediate_output_i412; assert_in_delta(0, (worksheet.intermediate_output_i412||0), 0.001); end
  def test_intermediate_output_j412; assert_equal("Electricity grid", worksheet.intermediate_output_j412); end
  def test_intermediate_output_n412; assert_equal("Solar", worksheet.intermediate_output_n412); end
  def test_intermediate_output_o412; assert_in_delta(0, (worksheet.intermediate_output_o412||0), 0.001); end
  def test_intermediate_output_p412; assert_in_delta(0, (worksheet.intermediate_output_p412||0), 0.001); end
  def test_intermediate_output_q412; assert_in_delta(0, (worksheet.intermediate_output_q412||0), 0.001); end
  def test_intermediate_output_r412; assert_equal("ok", worksheet.intermediate_output_r412); end
  def test_intermediate_output_s412; assert_in_delta(0, (worksheet.intermediate_output_s412||0), 0.001); end
  def test_intermediate_output_t412; assert_in_delta(0, (worksheet.intermediate_output_t412||0), 0.001); end
  def test_intermediate_output_u412; assert_in_delta(0, (worksheet.intermediate_output_u412||0), 0.001); end
  def test_intermediate_output_h413; assert_equal("Geothermal", worksheet.intermediate_output_h413); end
  def test_intermediate_output_i413; assert_in_delta(0, (worksheet.intermediate_output_i413||0), 0.001); end
  def test_intermediate_output_j413; assert_equal("Electricity grid", worksheet.intermediate_output_j413); end
  def test_intermediate_output_n413; assert_equal("Solar PV", worksheet.intermediate_output_n413); end
  def test_intermediate_output_o413; assert_in_delta(0, (worksheet.intermediate_output_o413||0), 0.001); end
  def test_intermediate_output_p413; assert_in_delta(0, (worksheet.intermediate_output_p413||0), 0.001); end
  def test_intermediate_output_q413; assert_in_delta(0, (worksheet.intermediate_output_q413||0), 0.001); end
  def test_intermediate_output_r413; assert_equal("ok", worksheet.intermediate_output_r413); end
  def test_intermediate_output_s413; assert_in_delta(0, (worksheet.intermediate_output_s413||0), 0.001); end
  def test_intermediate_output_t413; assert_in_delta(0, (worksheet.intermediate_output_t413||0), 0.001); end
  def test_intermediate_output_u413; assert_in_delta(0, (worksheet.intermediate_output_u413||0), 0.001); end
  def test_intermediate_output_h414; assert_equal("Hydro", worksheet.intermediate_output_h414); end
  def test_intermediate_output_i414; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_i414, 0.001); end
  def test_intermediate_output_j414; assert_equal("Electricity grid", worksheet.intermediate_output_j414); end
  def test_intermediate_output_n414; assert_equal("Solar Thermal", worksheet.intermediate_output_n414); end
  def test_intermediate_output_o414; assert_in_delta(0, (worksheet.intermediate_output_o414||0), 0.001); end
  def test_intermediate_output_p414; assert_in_delta(0, (worksheet.intermediate_output_p414||0), 0.001); end
  def test_intermediate_output_q414; assert_in_delta(0, (worksheet.intermediate_output_q414||0), 0.001); end
  def test_intermediate_output_r414; assert_equal("ok", worksheet.intermediate_output_r414); end
  def test_intermediate_output_s414; assert_in_delta(0, (worksheet.intermediate_output_s414||0), 0.001); end
  def test_intermediate_output_t414; assert_in_delta(0, (worksheet.intermediate_output_t414||0), 0.001); end
  def test_intermediate_output_u414; assert_in_delta(0, (worksheet.intermediate_output_u414||0), 0.001); end
  def test_intermediate_output_h415; assert_equal("Electricity grid", worksheet.intermediate_output_h415); end
  def test_intermediate_output_i415; assert_in_delta(0, (worksheet.intermediate_output_i415||0), 0.001); end
  def test_intermediate_output_j415; assert_equal("H2 conversion", worksheet.intermediate_output_j415); end
  def test_intermediate_output_n415; assert_equal("Solid", worksheet.intermediate_output_n415); end
  def test_intermediate_output_o415; assert_in_epsilon(139.78162562276052, worksheet.intermediate_output_o415, 0.001); end
  def test_intermediate_output_p415; assert_in_epsilon(139.78162562276052, worksheet.intermediate_output_p415, 0.001); end
  def test_intermediate_output_q415; assert_in_delta(0, (worksheet.intermediate_output_q415||0), 0.001); end
  def test_intermediate_output_r415; assert_equal("ok", worksheet.intermediate_output_r415); end
  def test_intermediate_output_s415; assert_in_epsilon(448.3424689522869, worksheet.intermediate_output_s415, 0.001); end
  def test_intermediate_output_t415; assert_in_epsilon(448.34246895228694, worksheet.intermediate_output_t415, 0.001); end
  def test_intermediate_output_u415; assert_in_delta(0, (worksheet.intermediate_output_u415||0), 0.001); end
  def test_intermediate_output_h416; assert_equal("Electricity grid", worksheet.intermediate_output_h416); end
  def test_intermediate_output_i416; assert_in_delta(0, (worksheet.intermediate_output_i416||0), 0.001); end
  def test_intermediate_output_j416; assert_equal("Over generation / exports", worksheet.intermediate_output_j416); end
  def test_intermediate_output_n416; assert_equal("Thermal generation", worksheet.intermediate_output_n416); end
  def test_intermediate_output_o416; assert_in_epsilon(1185.6233073182088, worksheet.intermediate_output_o416, 0.001); end
  def test_intermediate_output_p416; assert_in_epsilon(1185.6233073182088, worksheet.intermediate_output_p416, 0.001); end
  def test_intermediate_output_q416; assert_in_delta(0, (worksheet.intermediate_output_q416||0), 0.001); end
  def test_intermediate_output_r416; assert_equal("ok", worksheet.intermediate_output_r416); end
  def test_intermediate_output_s416; assert_in_epsilon(927.9827519145847, worksheet.intermediate_output_s416, 0.001); end
  def test_intermediate_output_t416; assert_in_epsilon(927.9827519145847, worksheet.intermediate_output_t416, 0.001); end
  def test_intermediate_output_u416; assert_in_delta(0, (worksheet.intermediate_output_u416||0), 0.001); end
  def test_intermediate_output_h417; assert_equal("Electricity grid", worksheet.intermediate_output_h417); end
  def test_intermediate_output_i417; assert_in_epsilon(40.556151543328035, worksheet.intermediate_output_i417, 0.001); end
  def test_intermediate_output_j417; assert_equal("Losses", worksheet.intermediate_output_j417); end
  def test_intermediate_output_n417; assert_equal("Tidal", worksheet.intermediate_output_n417); end
  def test_intermediate_output_o417; assert_in_delta(0, (worksheet.intermediate_output_o417||0), 0.001); end
  def test_intermediate_output_p417; assert_in_delta(0, (worksheet.intermediate_output_p417||0), 0.001); end
  def test_intermediate_output_q417; assert_in_delta(0, (worksheet.intermediate_output_q417||0), 0.001); end
  def test_intermediate_output_r417; assert_equal("ok", worksheet.intermediate_output_r417); end
  def test_intermediate_output_s417; assert_in_delta(0, (worksheet.intermediate_output_s417||0), 0.001); end
  def test_intermediate_output_t417; assert_in_delta(0, (worksheet.intermediate_output_t417||0), 0.001); end
  def test_intermediate_output_u417; assert_in_delta(0, (worksheet.intermediate_output_u417||0), 0.001); end
  def test_intermediate_output_h418; assert_equal("Gas", worksheet.intermediate_output_h418); end
  def test_intermediate_output_i418; assert_in_delta(0, (worksheet.intermediate_output_i418||0), 0.001); end
  def test_intermediate_output_j418; assert_equal("H2 conversion", worksheet.intermediate_output_j418); end
  def test_intermediate_output_n418; assert_equal("UK land based bioenergy", worksheet.intermediate_output_n418); end
  def test_intermediate_output_o418; assert_in_epsilon(17.667299613344547, worksheet.intermediate_output_o418, 0.001); end
  def test_intermediate_output_p418; assert_in_delta(0, (worksheet.intermediate_output_p418||0), 0.001); end
  def test_intermediate_output_q418; assert_in_epsilon(17.667299613344547, worksheet.intermediate_output_q418, 0.001); end
  def test_intermediate_output_r418; assert_equal("ok", worksheet.intermediate_output_r418); end
  def test_intermediate_output_s418; assert_in_epsilon(182.0095179564277, worksheet.intermediate_output_s418, 0.001); end
  def test_intermediate_output_t418; assert_in_delta(0, (worksheet.intermediate_output_t418||0), 0.001); end
  def test_intermediate_output_u418; assert_in_epsilon(182.0095179564277, worksheet.intermediate_output_u418, 0.001); end
  def test_intermediate_output_h419; assert_equal("H2 conversion", worksheet.intermediate_output_h419); end
  def test_intermediate_output_i419; assert_in_delta(0, (worksheet.intermediate_output_i419||0), 0.001); end
  def test_intermediate_output_j419; assert_equal("H2", worksheet.intermediate_output_j419); end
  def test_intermediate_output_n419; assert_equal("Wave", worksheet.intermediate_output_n419); end
  def test_intermediate_output_o419; assert_in_delta(0, (worksheet.intermediate_output_o419||0), 0.001); end
  def test_intermediate_output_p419; assert_in_delta(0, (worksheet.intermediate_output_p419||0), 0.001); end
  def test_intermediate_output_q419; assert_in_delta(0, (worksheet.intermediate_output_q419||0), 0.001); end
  def test_intermediate_output_r419; assert_equal("ok", worksheet.intermediate_output_r419); end
  def test_intermediate_output_s419; assert_in_delta(0, (worksheet.intermediate_output_s419||0), 0.001); end
  def test_intermediate_output_t419; assert_in_delta(0, (worksheet.intermediate_output_t419||0), 0.001); end
  def test_intermediate_output_u419; assert_in_delta(0, (worksheet.intermediate_output_u419||0), 0.001); end
  def test_intermediate_output_h420; assert_equal("H2 conversion", worksheet.intermediate_output_h420); end
  def test_intermediate_output_i420; assert_in_delta(0, (worksheet.intermediate_output_i420||0), 0.001); end
  def test_intermediate_output_j420; assert_equal("Losses", worksheet.intermediate_output_j420); end
  def test_intermediate_output_n420; assert_equal("Wind", worksheet.intermediate_output_n420); end
  def test_intermediate_output_o420; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_o420, 0.001); end
  def test_intermediate_output_p420; assert_in_delta(0, (worksheet.intermediate_output_p420||0), 0.001); end
  def test_intermediate_output_q420; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_q420, 0.001); end
  def test_intermediate_output_r420; assert_equal("ok", worksheet.intermediate_output_r420); end
  def test_intermediate_output_s420; assert_in_epsilon(97.39043532000001, worksheet.intermediate_output_s420, 0.001); end
  def test_intermediate_output_t420; assert_in_delta(0, (worksheet.intermediate_output_t420||0), 0.001); end
  def test_intermediate_output_u420; assert_in_epsilon(97.39043532000001, worksheet.intermediate_output_u420, 0.001); end
  def test_intermediate_output_h421; assert_equal("Solar Thermal", worksheet.intermediate_output_h421); end
  def test_intermediate_output_i421; assert_in_delta(0, (worksheet.intermediate_output_i421||0), 0.001); end
  def test_intermediate_output_j421; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j421); end
  def test_intermediate_output_h422; assert_equal("H2", worksheet.intermediate_output_h422); end
  def test_intermediate_output_i422; assert_in_delta(0, (worksheet.intermediate_output_i422||0), 0.001); end
  def test_intermediate_output_j422; assert_equal("Road transport", worksheet.intermediate_output_j422); end
  def test_intermediate_output_h423; assert_equal("Pumped heat", worksheet.intermediate_output_h423); end
  def test_intermediate_output_i423; assert_in_delta(0, (worksheet.intermediate_output_i423||0), 0.001); end
  def test_intermediate_output_j423; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j423); end
  def test_intermediate_output_h424; assert_equal("Pumped heat", worksheet.intermediate_output_h424); end
  def test_intermediate_output_i424; assert_in_delta(0, (worksheet.intermediate_output_i424||0), 0.001); end
  def test_intermediate_output_j424; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j424); end
  def test_intermediate_output_h425; assert_equal("CHP", worksheet.intermediate_output_h425); end
  def test_intermediate_output_i425; assert_in_delta(0, (worksheet.intermediate_output_i425||0), 0.001); end
  def test_intermediate_output_j425; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j425); end
  def test_intermediate_output_h426; assert_equal("CHP", worksheet.intermediate_output_h426); end
  def test_intermediate_output_i426; assert_in_delta(0, (worksheet.intermediate_output_i426||0), 0.001); end
  def test_intermediate_output_j426; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j426); end
  def test_intermediate_output_h427; assert_equal("District heating", worksheet.intermediate_output_h427); end
  def test_intermediate_output_i427; assert_in_delta(0, (worksheet.intermediate_output_i427||0), 0.001); end
  def test_intermediate_output_j427; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j427); end
  def test_intermediate_output_h428; assert_equal("District heating", worksheet.intermediate_output_h428); end
  def test_intermediate_output_i428; assert_in_delta(0, (worksheet.intermediate_output_i428||0), 0.001); end
  def test_intermediate_output_j428; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j428); end
  def test_intermediate_output_h429; assert_equal("District heating", worksheet.intermediate_output_h429); end
  def test_intermediate_output_i429; assert_in_epsilon(16.145046318256654, worksheet.intermediate_output_i429, 0.001); end
  def test_intermediate_output_j429; assert_equal("Industry", worksheet.intermediate_output_j429); end
  def test_intermediate_output_h430; assert_equal("District heating", worksheet.intermediate_output_h430); end
  def test_intermediate_output_i430; assert_in_delta(0, (worksheet.intermediate_output_i430||0), 0.001); end
  def test_intermediate_output_j430; assert_equal("Losses", worksheet.intermediate_output_j430); end
  def test_intermediate_output_h431; assert_equal("Electricity grid", worksheet.intermediate_output_h431); end
  def test_intermediate_output_i431; assert_in_epsilon(60.658172984497035, worksheet.intermediate_output_i431, 0.001); end
  def test_intermediate_output_j431; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j431); end
  def test_intermediate_output_h432; assert_equal("Solid", worksheet.intermediate_output_h432); end
  def test_intermediate_output_i432; assert_in_delta(0, (worksheet.intermediate_output_i432||0), 0.001); end
  def test_intermediate_output_j432; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j432); end
  def test_intermediate_output_h433; assert_equal("Liquid", worksheet.intermediate_output_h433); end
  def test_intermediate_output_i433; assert_in_delta(0, (worksheet.intermediate_output_i433||0), 0.001); end
  def test_intermediate_output_j433; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j433); end
  def test_intermediate_output_h434; assert_equal("Gas", worksheet.intermediate_output_h434); end
  def test_intermediate_output_i434; assert_in_epsilon(517.9434690774432, worksheet.intermediate_output_i434, 0.001); end
  def test_intermediate_output_j434; assert_equal("Heating and cooling - homes", worksheet.intermediate_output_j434); end
  def test_intermediate_output_h435; assert_equal("Electricity grid", worksheet.intermediate_output_h435); end
  def test_intermediate_output_i435; assert_in_epsilon(31.41118473825011, worksheet.intermediate_output_i435, 0.001); end
  def test_intermediate_output_j435; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j435); end
  def test_intermediate_output_h436; assert_equal("Solid", worksheet.intermediate_output_h436); end
  def test_intermediate_output_i436; assert_in_delta(0, (worksheet.intermediate_output_i436||0), 0.001); end
  def test_intermediate_output_j436; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j436); end
  def test_intermediate_output_h437; assert_equal("Liquid", worksheet.intermediate_output_h437); end
  def test_intermediate_output_i437; assert_in_delta(0, (worksheet.intermediate_output_i437||0), 0.001); end
  def test_intermediate_output_j437; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j437); end
  def test_intermediate_output_h438; assert_equal("Gas", worksheet.intermediate_output_h438); end
  def test_intermediate_output_i438; assert_in_epsilon(141.48912264058296, worksheet.intermediate_output_i438, 0.001); end
  def test_intermediate_output_j438; assert_equal("Heating and cooling - commercial", worksheet.intermediate_output_j438); end
  def test_intermediate_output_h439; assert_equal("Electricity grid", worksheet.intermediate_output_h439); end
  def test_intermediate_output_i439; assert_in_epsilon(103.40155946528074, worksheet.intermediate_output_i439, 0.001); end
  def test_intermediate_output_j439; assert_equal("Lighting & appliances - homes", worksheet.intermediate_output_j439); end
  def test_intermediate_output_h440; assert_equal("Gas", worksheet.intermediate_output_h440); end
  def test_intermediate_output_i440; assert_in_epsilon(8.034648284576637, worksheet.intermediate_output_i440, 0.001); end
  def test_intermediate_output_j440; assert_equal("Lighting & appliances - homes", worksheet.intermediate_output_j440); end
  def test_intermediate_output_h441; assert_equal("Electricity grid", worksheet.intermediate_output_h441); end
  def test_intermediate_output_i441; assert_in_epsilon(92.33773101406193, worksheet.intermediate_output_i441, 0.001); end
  def test_intermediate_output_j441; assert_equal("Lighting & appliances - commercial", worksheet.intermediate_output_j441); end
  def test_intermediate_output_h442; assert_equal("Gas", worksheet.intermediate_output_h442); end
  def test_intermediate_output_i442; assert_in_epsilon(9.052934021349623, worksheet.intermediate_output_i442, 0.001); end
  def test_intermediate_output_j442; assert_equal("Lighting & appliances - commercial", worksheet.intermediate_output_j442); end
  def test_intermediate_output_h443; assert_equal("Electricity grid", worksheet.intermediate_output_h443); end
  def test_intermediate_output_i443; assert_in_epsilon(227.82619924019815, worksheet.intermediate_output_i443, 0.001); end
  def test_intermediate_output_j443; assert_equal("Industry", worksheet.intermediate_output_j443); end
  def test_intermediate_output_h444; assert_equal("Solid", worksheet.intermediate_output_h444); end
  def test_intermediate_output_i444; assert_in_epsilon(106.05754246808085, worksheet.intermediate_output_i444, 0.001); end
  def test_intermediate_output_j444; assert_equal("Industry", worksheet.intermediate_output_j444); end
  def test_intermediate_output_h445; assert_equal("Liquid", worksheet.intermediate_output_h445); end
  def test_intermediate_output_i445; assert_in_epsilon(199.2602411701368, worksheet.intermediate_output_i445, 0.001); end
  def test_intermediate_output_j445; assert_equal("Industry", worksheet.intermediate_output_j445); end
  def test_intermediate_output_h446; assert_equal("Gas", worksheet.intermediate_output_h446); end
  def test_intermediate_output_i446; assert_in_epsilon(300.59831850003326, worksheet.intermediate_output_i446, 0.001); end
  def test_intermediate_output_j446; assert_equal("Industry", worksheet.intermediate_output_j446); end
  def test_intermediate_output_h447; assert_equal("Electricity grid", worksheet.intermediate_output_h447); end
  def test_intermediate_output_i447; assert_in_epsilon(4.47706577339835, worksheet.intermediate_output_i447, 0.001); end
  def test_intermediate_output_j447; assert_equal("Agriculture", worksheet.intermediate_output_j447); end
  def test_intermediate_output_h448; assert_equal("Solid", worksheet.intermediate_output_h448); end
  def test_intermediate_output_i448; assert_in_delta(0.89541315467967, worksheet.intermediate_output_i448, 0.001); end
  def test_intermediate_output_j448; assert_equal("Agriculture", worksheet.intermediate_output_j448); end
  def test_intermediate_output_h449; assert_equal("Liquid", worksheet.intermediate_output_h449); end
  def test_intermediate_output_i449; assert_in_epsilon(3.6935792630536386, worksheet.intermediate_output_i449, 0.001); end
  def test_intermediate_output_j449; assert_equal("Agriculture", worksheet.intermediate_output_j449); end
  def test_intermediate_output_h450; assert_equal("Gas", worksheet.intermediate_output_h450); end
  def test_intermediate_output_i450; assert_in_epsilon(2.126606242364216, worksheet.intermediate_output_i450, 0.001); end
  def test_intermediate_output_j450; assert_equal("Agriculture", worksheet.intermediate_output_j450); end
  def test_intermediate_output_h451; assert_equal("Electricity grid", worksheet.intermediate_output_h451); end
  def test_intermediate_output_i451; assert_in_epsilon(13.84226019889534, worksheet.intermediate_output_i451, 0.001); end
  def test_intermediate_output_j451; assert_equal("Road transport", worksheet.intermediate_output_j451); end
  def test_intermediate_output_h452; assert_equal("Liquid", worksheet.intermediate_output_h452); end
  def test_intermediate_output_i452; assert_in_epsilon(322.0183306963002, worksheet.intermediate_output_i452, 0.001); end
  def test_intermediate_output_j452; assert_equal("Road transport", worksheet.intermediate_output_j452); end
  def test_intermediate_output_h453; assert_equal("Electricity grid", worksheet.intermediate_output_h453); end
  def test_intermediate_output_i453; assert_in_epsilon(13.991787933400692, worksheet.intermediate_output_i453, 0.001); end
  def test_intermediate_output_j453; assert_equal("Rail transport", worksheet.intermediate_output_j453); end
  def test_intermediate_output_h454; assert_equal("Liquid", worksheet.intermediate_output_h454); end
  def test_intermediate_output_i454; assert_in_epsilon(3.411591076171332, worksheet.intermediate_output_i454, 0.001); end
  def test_intermediate_output_j454; assert_equal("Rail transport", worksheet.intermediate_output_j454); end
  def test_intermediate_output_h455; assert_equal("Liquid", worksheet.intermediate_output_h455); end
  def test_intermediate_output_i455; assert_in_delta(-0.06603376625031618, worksheet.intermediate_output_i455, 0.001); end
  def test_intermediate_output_j455; assert_equal("Domestic aviation", worksheet.intermediate_output_j455); end
  def test_intermediate_output_h456; assert_equal("Liquid", worksheet.intermediate_output_h456); end
  def test_intermediate_output_i456; assert_in_epsilon(22.49614487028552, worksheet.intermediate_output_i456, 0.001); end
  def test_intermediate_output_j456; assert_equal("National navigation", worksheet.intermediate_output_j456); end
  def test_intermediate_output_h457; assert_equal("Liquid", worksheet.intermediate_output_h457); end
  def test_intermediate_output_i457; assert_in_epsilon(188.58168305622323, worksheet.intermediate_output_i457, 0.001); end
  def test_intermediate_output_j457; assert_equal("International aviation", worksheet.intermediate_output_j457); end
  def test_intermediate_output_h458; assert_equal("Liquid", worksheet.intermediate_output_h458); end
  def test_intermediate_output_i458; assert_in_epsilon(129.50863651300597, worksheet.intermediate_output_i458, 0.001); end
  def test_intermediate_output_j458; assert_equal("International shipping", worksheet.intermediate_output_j458); end
  def test_intermediate_output_h459; assert_equal("Electricity grid", worksheet.intermediate_output_h459); end
  def test_intermediate_output_i459; assert_in_delta(0, (worksheet.intermediate_output_i459||0), 0.001); end
  def test_intermediate_output_j459; assert_equal("Geosequestration", worksheet.intermediate_output_j459); end
  def test_intermediate_output_h460; assert_equal("Gas", worksheet.intermediate_output_h460); end
  def test_intermediate_output_i460; assert_in_epsilon(24.116152691100137, worksheet.intermediate_output_i460, 0.001); end
  def test_intermediate_output_j460; assert_equal("Losses", worksheet.intermediate_output_j460); end

  # start of Land Use
  def test_land_use_b2; assert_equal("Land use implications", worksheet.land_use_b2); end
  def test_land_use_c4; assert_equal("B.01", worksheet.land_use_c4); end
  def test_land_use_d4; assert_equal("UK Land area", worksheet.land_use_d4); end
  def test_land_use_h4; assert_in_epsilon(2007, worksheet.land_use_h4, 0.001); end
  def test_land_use_i4; assert_in_epsilon(2010, worksheet.land_use_i4, 0.001); end
  def test_land_use_j4; assert_in_epsilon(2015, worksheet.land_use_j4, 0.001); end
  def test_land_use_k4; assert_in_epsilon(2020, worksheet.land_use_k4, 0.001); end
  def test_land_use_l4; assert_in_epsilon(2025, worksheet.land_use_l4, 0.001); end
  def test_land_use_m4; assert_in_epsilon(2030, worksheet.land_use_m4, 0.001); end
  def test_land_use_n4; assert_in_epsilon(2035, worksheet.land_use_n4, 0.001); end
  def test_land_use_o4; assert_in_epsilon(2040, worksheet.land_use_o4, 0.001); end
  def test_land_use_p4; assert_in_epsilon(2045, worksheet.land_use_p4, 0.001); end
  def test_land_use_q4; assert_in_epsilon(2050, worksheet.land_use_q4, 0.001); end
  def test_land_use_r4; assert_equal("km^2", worksheet.land_use_r4); end
  def test_land_use_c6; assert_equal("III.a.1", worksheet.land_use_c6); end
  def test_land_use_d6; assert_equal("onshore wind if 2.5 W/m2", worksheet.land_use_d6); end
  def test_land_use_h6; assert_in_epsilon(227.50727999999998, worksheet.land_use_h6, 0.001); end
  def test_land_use_i6; assert_in_epsilon(470.80799999999977, worksheet.land_use_i6, 0.001); end
  def test_land_use_j6; assert_in_epsilon(800.8079999999997, worksheet.land_use_j6, 0.001); end
  def test_land_use_k6; assert_in_epsilon(1130.8079999999998, worksheet.land_use_k6, 0.001); end
  def test_land_use_l6; assert_in_epsilon(1321.6079999999995, worksheet.land_use_l6, 0.001); end
  def test_land_use_m6; assert_in_epsilon(994.0079999999995, worksheet.land_use_m6, 0.001); end
  def test_land_use_n6; assert_in_epsilon(664.0079999999997, worksheet.land_use_n6, 0.001); end
  def test_land_use_o6; assert_in_epsilon(334.00799999999975, worksheet.land_use_o6, 0.001); end
  def test_land_use_p6; assert_in_epsilon(4.007999999999824, worksheet.land_use_p6, 0.001); end
  def test_land_use_q6; assert_in_epsilon(4.007999999999824, worksheet.land_use_q6, 0.001); end
  def test_land_use_c7; assert_equal("III.b", worksheet.land_use_c7); end
  def test_land_use_d7; assert_equal("hydroelectric resevoir assuming similar to Loch Sloy", worksheet.land_use_d7); end
  def test_land_use_h7; assert_in_epsilon(42.31636363636362, worksheet.land_use_h7, 0.001); end
  def test_land_use_i7; assert_in_epsilon(52.36363636363635, worksheet.land_use_i7, 0.001); end
  def test_land_use_j7; assert_in_epsilon(52.36363636363635, worksheet.land_use_j7, 0.001); end
  def test_land_use_k7; assert_in_epsilon(52.36363636363635, worksheet.land_use_k7, 0.001); end
  def test_land_use_l7; assert_in_epsilon(52.36363636363635, worksheet.land_use_l7, 0.001); end
  def test_land_use_m7; assert_in_epsilon(52.36363636363635, worksheet.land_use_m7, 0.001); end
  def test_land_use_n7; assert_in_epsilon(52.36363636363635, worksheet.land_use_n7, 0.001); end
  def test_land_use_o7; assert_in_epsilon(52.36363636363635, worksheet.land_use_o7, 0.001); end
  def test_land_use_p7; assert_in_epsilon(52.36363636363635, worksheet.land_use_p7, 0.001); end
  def test_land_use_q7; assert_in_epsilon(52.36363636363635, worksheet.land_use_q7, 0.001); end
  def test_land_use_c8; assert_equal("IV.a", worksheet.land_use_c8); end
  def test_land_use_d8; assert_equal("solar PV if 20% efficient", worksheet.land_use_d8); end
  def test_land_use_h8; assert_in_delta(0.08818181818181817, worksheet.land_use_h8, 0.001); end
  def test_land_use_i8; assert_in_delta(0.1455, worksheet.land_use_i8, 0.001); end
  def test_land_use_j8; assert_in_delta(0.07054545454545454, worksheet.land_use_j8, 0.001); end
  def test_land_use_k8; assert_in_delta(0, (worksheet.land_use_k8||0), 0.001); end
  def test_land_use_l8; assert_in_delta(0, (worksheet.land_use_l8||0), 0.001); end
  def test_land_use_m8; assert_in_delta(0, (worksheet.land_use_m8||0), 0.001); end
  def test_land_use_n8; assert_in_delta(0, (worksheet.land_use_n8||0), 0.001); end
  def test_land_use_o8; assert_in_delta(0, (worksheet.land_use_o8||0), 0.001); end
  def test_land_use_p8; assert_in_delta(0, (worksheet.land_use_p8||0), 0.001); end
  def test_land_use_q8; assert_in_delta(0, (worksheet.land_use_q8||0), 0.001); end
  def test_land_use_c9; assert_equal("IV.b", worksheet.land_use_c9); end
  def test_land_use_d9; assert_equal("solar thermal panels if 50% efficient", worksheet.land_use_d9); end
  def test_land_use_h9; assert_in_delta(0, (worksheet.land_use_h9||0), 0.001); end
  def test_land_use_i9; assert_in_delta(0, (worksheet.land_use_i9||0), 0.001); end
  def test_land_use_j9; assert_in_delta(0, (worksheet.land_use_j9||0), 0.001); end
  def test_land_use_k9; assert_in_delta(0, (worksheet.land_use_k9||0), 0.001); end
  def test_land_use_l9; assert_in_delta(0, (worksheet.land_use_l9||0), 0.001); end
  def test_land_use_m9; assert_in_delta(0, (worksheet.land_use_m9||0), 0.001); end
  def test_land_use_n9; assert_in_delta(0, (worksheet.land_use_n9||0), 0.001); end
  def test_land_use_o9; assert_in_delta(0, (worksheet.land_use_o9||0), 0.001); end
  def test_land_use_p9; assert_in_delta(0, (worksheet.land_use_p9||0), 0.001); end
  def test_land_use_q9; assert_in_delta(0, (worksheet.land_use_q9||0), 0.001); end
  def test_land_use_c10; assert_equal("IV.c", worksheet.land_use_c10); end
  def test_land_use_d10; assert_equal("micro wind if 2 Wpeak/m2", worksheet.land_use_d10); end
  def test_land_use_h10; assert_in_delta(0, (worksheet.land_use_h10||0), 0.001); end
  def test_land_use_i10; assert_in_delta(0, (worksheet.land_use_i10||0), 0.001); end
  def test_land_use_j10; assert_in_delta(0, (worksheet.land_use_j10||0), 0.001); end
  def test_land_use_k10; assert_in_delta(0, (worksheet.land_use_k10||0), 0.001); end
  def test_land_use_l10; assert_in_delta(0, (worksheet.land_use_l10||0), 0.001); end
  def test_land_use_m10; assert_in_delta(0, (worksheet.land_use_m10||0), 0.001); end
  def test_land_use_n10; assert_in_delta(0, (worksheet.land_use_n10||0), 0.001); end
  def test_land_use_o10; assert_in_delta(0, (worksheet.land_use_o10||0), 0.001); end
  def test_land_use_p10; assert_in_delta(0, (worksheet.land_use_p10||0), 0.001); end
  def test_land_use_q10; assert_in_delta(0, (worksheet.land_use_q10||0), 0.001); end
  def test_land_use_c11; assert_equal("VI.a.Biocrop", worksheet.land_use_c11); end
  def test_land_use_d11; assert_equal("Area of biocrops", worksheet.land_use_d11); end
  def test_land_use_h11; assert_in_epsilon(3639.4, worksheet.land_use_h11, 0.001); end
  def test_land_use_i11; assert_in_epsilon(1120, worksheet.land_use_i11, 0.001); end
  def test_land_use_j11; assert_in_epsilon(1420, worksheet.land_use_j11, 0.001); end
  def test_land_use_k11; assert_in_epsilon(1720, worksheet.land_use_k11, 0.001); end
  def test_land_use_l11; assert_in_epsilon(2020, worksheet.land_use_l11, 0.001); end
  def test_land_use_m11; assert_in_epsilon(2320, worksheet.land_use_m11, 0.001); end
  def test_land_use_n11; assert_in_epsilon(2620, worksheet.land_use_n11, 0.001); end
  def test_land_use_o11; assert_in_epsilon(2920, worksheet.land_use_o11, 0.001); end
  def test_land_use_p11; assert_in_epsilon(3220, worksheet.land_use_p11, 0.001); end
  def test_land_use_q11; assert_in_epsilon(3520, worksheet.land_use_q11, 0.001); end
  def test_land_use_c12; assert_equal("VI.a.Forestry", worksheet.land_use_c12); end
  def test_land_use_d12; assert_equal("Area of forest", worksheet.land_use_d12); end
  def test_land_use_h12; assert_in_epsilon(24369.699999999997, worksheet.land_use_h12, 0.001); end
  def test_land_use_i12; assert_in_epsilon(24414.64, worksheet.land_use_i12, 0.001); end
  def test_land_use_j12; assert_in_epsilon(24776.239999999998, worksheet.land_use_j12, 0.001); end
  def test_land_use_k12; assert_in_epsilon(25137.84, worksheet.land_use_k12, 0.001); end
  def test_land_use_l12; assert_in_epsilon(25499.44, worksheet.land_use_l12, 0.001); end
  def test_land_use_m12; assert_in_epsilon(25861.039999999997, worksheet.land_use_m12, 0.001); end
  def test_land_use_n12; assert_in_epsilon(26222.64, worksheet.land_use_n12, 0.001); end
  def test_land_use_o12; assert_in_epsilon(26584.239999999998, worksheet.land_use_o12, 0.001); end
  def test_land_use_p12; assert_in_epsilon(26945.839999999997, worksheet.land_use_p12, 0.001); end
  def test_land_use_q12; assert_in_epsilon(27307.440000000002, worksheet.land_use_q12, 0.001); end
  def test_land_use_c14; assert_equal("B.04", worksheet.land_use_c14); end
  def test_land_use_d14; assert_equal("UK Sea area", worksheet.land_use_d14); end
  def test_land_use_h14; assert_in_epsilon(2007, worksheet.land_use_h14, 0.001); end
  def test_land_use_i14; assert_in_epsilon(2010, worksheet.land_use_i14, 0.001); end
  def test_land_use_j14; assert_in_epsilon(2015, worksheet.land_use_j14, 0.001); end
  def test_land_use_k14; assert_in_epsilon(2020, worksheet.land_use_k14, 0.001); end
  def test_land_use_l14; assert_in_epsilon(2025, worksheet.land_use_l14, 0.001); end
  def test_land_use_m14; assert_in_epsilon(2030, worksheet.land_use_m14, 0.001); end
  def test_land_use_n14; assert_in_epsilon(2035, worksheet.land_use_n14, 0.001); end
  def test_land_use_o14; assert_in_epsilon(2040, worksheet.land_use_o14, 0.001); end
  def test_land_use_p14; assert_in_epsilon(2045, worksheet.land_use_p14, 0.001); end
  def test_land_use_q14; assert_in_epsilon(2050, worksheet.land_use_q14, 0.001); end
  def test_land_use_r14; assert_equal("km^2", worksheet.land_use_r14); end
  def test_land_use_c16; assert_equal("III.a.2", worksheet.land_use_c16); end
  def test_land_use_d16; assert_equal("offshore wind area if 2.5 W/m2", worksheet.land_use_d16); end
  def test_land_use_h16; assert_in_epsilon(44.57815999999999, worksheet.land_use_h16, 0.001); end
  def test_land_use_i16; assert_in_epsilon(188.1320000000001, worksheet.land_use_i16, 0.001); end
  def test_land_use_j16; assert_in_epsilon(538.132, worksheet.land_use_j16, 0.001); end
  def test_land_use_k16; assert_in_epsilon(938.8824, worksheet.land_use_k16, 0.001); end
  def test_land_use_l16; assert_in_epsilon(1311.0080000000003, worksheet.land_use_l16, 0.001); end
  def test_land_use_m16; assert_in_epsilon(1203.9999999999998, worksheet.land_use_m16, 0.001); end
  def test_land_use_n16; assert_in_epsilon(809.9999999999998, worksheet.land_use_n16, 0.001); end
  def test_land_use_o16; assert_in_epsilon(359.99999999999994, worksheet.land_use_o16, 0.001); end
  def test_land_use_p16; assert_in_delta(0, (worksheet.land_use_p16||0), 0.001); end
  def test_land_use_q16; assert_in_delta(0, (worksheet.land_use_q16||0), 0.001); end
  def test_land_use_c17; assert_equal("III.c.TidalStream", worksheet.land_use_c17); end
  def test_land_use_d17; assert_equal("tidal stream devices if >1m/s tides", worksheet.land_use_d17); end
  def test_land_use_h17; assert_in_delta(0, (worksheet.land_use_h17||0), 0.001); end
  def test_land_use_i17; assert_in_delta(0.10569930661254866, worksheet.land_use_i17, 0.001); end
  def test_land_use_j17; assert_in_delta(0.42279722645019463, worksheet.land_use_j17, 0.001); end
  def test_land_use_k17; assert_in_epsilon(1.0569930661254865, worksheet.land_use_k17, 0.001); end
  def test_land_use_l17; assert_in_epsilon(2.6424826653137132, worksheet.land_use_l17, 0.001); end
  def test_land_use_m17; assert_in_epsilon(2.6424826653137132, worksheet.land_use_m17, 0.001); end
  def test_land_use_n17; assert_in_delta(0, (worksheet.land_use_n17||0), 0.001); end
  def test_land_use_o17; assert_in_delta(0, (worksheet.land_use_o17||0), 0.001); end
  def test_land_use_p17; assert_in_delta(0, (worksheet.land_use_p17||0), 0.001); end
  def test_land_use_q17; assert_in_delta(0, (worksheet.land_use_q17||0), 0.001); end
  def test_land_use_c18; assert_equal("III.c.TidalRange", worksheet.land_use_c18); end
  def test_land_use_d18; assert_equal("tidal impoundment if >Xm tidal range", worksheet.land_use_d18); end
  def test_land_use_h18; assert_in_delta(0, (worksheet.land_use_h18||0), 0.001); end
  def test_land_use_i18; assert_in_delta(0, (worksheet.land_use_i18||0), 0.001); end
  def test_land_use_j18; assert_in_delta(0, (worksheet.land_use_j18||0), 0.001); end
  def test_land_use_k18; assert_in_delta(0, (worksheet.land_use_k18||0), 0.001); end
  def test_land_use_l18; assert_in_delta(0, (worksheet.land_use_l18||0), 0.001); end
  def test_land_use_m18; assert_in_delta(0, (worksheet.land_use_m18||0), 0.001); end
  def test_land_use_n18; assert_in_delta(0, (worksheet.land_use_n18||0), 0.001); end
  def test_land_use_o18; assert_in_delta(0, (worksheet.land_use_o18||0), 0.001); end
  def test_land_use_p18; assert_in_delta(0, (worksheet.land_use_p18||0), 0.001); end
  def test_land_use_q18; assert_in_delta(0, (worksheet.land_use_q18||0), 0.001); end
  def test_land_use_c19; assert_equal("VI.c", worksheet.land_use_c19); end
  def test_land_use_d19; assert_equal("algae if 0.9W/m2 efficient", worksheet.land_use_d19); end
  def test_land_use_h19; assert_in_delta(0, (worksheet.land_use_h19||0), 0.001); end
  def test_land_use_i19; assert_in_delta(0, (worksheet.land_use_i19||0), 0.001); end
  def test_land_use_j19; assert_in_delta(0, (worksheet.land_use_j19||0), 0.001); end
  def test_land_use_k19; assert_in_delta(0, (worksheet.land_use_k19||0), 0.001); end
  def test_land_use_l19; assert_in_delta(0, (worksheet.land_use_l19||0), 0.001); end
  def test_land_use_m19; assert_in_delta(0, (worksheet.land_use_m19||0), 0.001); end
  def test_land_use_n19; assert_in_delta(0, (worksheet.land_use_n19||0), 0.001); end
  def test_land_use_o19; assert_in_delta(0, (worksheet.land_use_o19||0), 0.001); end
  def test_land_use_p19; assert_in_delta(0, (worksheet.land_use_p19||0), 0.001); end
  def test_land_use_q19; assert_in_delta(0, (worksheet.land_use_q19||0), 0.001); end
  def test_land_use_c21; assert_equal("B.05", worksheet.land_use_c21); end
  def test_land_use_d21; assert_equal("Land area overseas", worksheet.land_use_d21); end
  def test_land_use_h21; assert_in_epsilon(2007, worksheet.land_use_h21, 0.001); end
  def test_land_use_i21; assert_in_epsilon(2010, worksheet.land_use_i21, 0.001); end
  def test_land_use_j21; assert_in_epsilon(2015, worksheet.land_use_j21, 0.001); end
  def test_land_use_k21; assert_in_epsilon(2020, worksheet.land_use_k21, 0.001); end
  def test_land_use_l21; assert_in_epsilon(2025, worksheet.land_use_l21, 0.001); end
  def test_land_use_m21; assert_in_epsilon(2030, worksheet.land_use_m21, 0.001); end
  def test_land_use_n21; assert_in_epsilon(2035, worksheet.land_use_n21, 0.001); end
  def test_land_use_o21; assert_in_epsilon(2040, worksheet.land_use_o21, 0.001); end
  def test_land_use_p21; assert_in_epsilon(2045, worksheet.land_use_p21, 0.001); end
  def test_land_use_q21; assert_in_epsilon(2050, worksheet.land_use_q21, 0.001); end
  def test_land_use_r21; assert_equal("km^2", worksheet.land_use_r21); end
  def test_land_use_c23; assert_equal("V.b", worksheet.land_use_c23); end
  def test_land_use_d23; assert_equal("biocrops overseas if 0.6W/m2 productivity", worksheet.land_use_d23); end
  def test_land_use_h23; assert_in_epsilon(760.6510000760512, worksheet.land_use_h23, 0.001); end
  def test_land_use_i23; assert_in_epsilon(707.5823256521406, worksheet.land_use_i23, 0.001); end
  def test_land_use_j23; assert_in_epsilon(619.134534945623, worksheet.land_use_j23, 0.001); end
  def test_land_use_k23; assert_in_epsilon(530.6867442391055, worksheet.land_use_k23, 0.001); end
  def test_land_use_l23; assert_in_epsilon(442.2389535325879, worksheet.land_use_l23, 0.001); end
  def test_land_use_m23; assert_in_epsilon(353.7911628260703, worksheet.land_use_m23, 0.001); end
  def test_land_use_n23; assert_in_epsilon(265.3433721195527, worksheet.land_use_n23, 0.001); end
  def test_land_use_o23; assert_in_epsilon(176.89558141303516, worksheet.land_use_o23, 0.001); end
  def test_land_use_p23; assert_in_epsilon(88.44779070651758, worksheet.land_use_p23, 0.001); end
  def test_land_use_q23; assert_in_delta(0, (worksheet.land_use_q23||0), 0.001); end
  def test_land_use_c24; assert_equal("VII.a", worksheet.land_use_c24); end
  def test_land_use_d24; assert_equal("solar devices overseas assuming 15W/m2 ", worksheet.land_use_d24); end
  def test_land_use_h24; assert_in_delta(0, (worksheet.land_use_h24||0), 0.001); end
  def test_land_use_i24; assert_in_delta(0, (worksheet.land_use_i24||0), 0.001); end
  def test_land_use_j24; assert_in_delta(0, (worksheet.land_use_j24||0), 0.001); end
  def test_land_use_k24; assert_in_delta(0, (worksheet.land_use_k24||0), 0.001); end
  def test_land_use_l24; assert_in_delta(0, (worksheet.land_use_l24||0), 0.001); end
  def test_land_use_m24; assert_in_delta(0, (worksheet.land_use_m24||0), 0.001); end
  def test_land_use_n24; assert_in_delta(0, (worksheet.land_use_n24||0), 0.001); end
  def test_land_use_o24; assert_in_delta(0, (worksheet.land_use_o24||0), 0.001); end
  def test_land_use_p24; assert_in_delta(0, (worksheet.land_use_p24||0), 0.001); end
  def test_land_use_q24; assert_in_delta(0, (worksheet.land_use_q24||0), 0.001); end
  def test_land_use_c26; assert_equal("B.06", worksheet.land_use_c26); end
  def test_land_use_d26; assert_equal("Length of wave front", worksheet.land_use_d26); end
  def test_land_use_h26; assert_in_epsilon(2007, worksheet.land_use_h26, 0.001); end
  def test_land_use_i26; assert_in_epsilon(2010, worksheet.land_use_i26, 0.001); end
  def test_land_use_j26; assert_in_epsilon(2015, worksheet.land_use_j26, 0.001); end
  def test_land_use_k26; assert_in_epsilon(2020, worksheet.land_use_k26, 0.001); end
  def test_land_use_l26; assert_in_epsilon(2025, worksheet.land_use_l26, 0.001); end
  def test_land_use_m26; assert_in_epsilon(2030, worksheet.land_use_m26, 0.001); end
  def test_land_use_n26; assert_in_epsilon(2035, worksheet.land_use_n26, 0.001); end
  def test_land_use_o26; assert_in_epsilon(2040, worksheet.land_use_o26, 0.001); end
  def test_land_use_p26; assert_in_epsilon(2045, worksheet.land_use_p26, 0.001); end
  def test_land_use_q26; assert_in_epsilon(2050, worksheet.land_use_q26, 0.001); end
  def test_land_use_r26; assert_equal("km", worksheet.land_use_r26); end
  def test_land_use_c28; assert_equal("III.c.Wave", worksheet.land_use_c28); end
  def test_land_use_d28; assert_equal("wave energy convertors if 25% efficient", worksheet.land_use_d28); end
  def test_land_use_h28; assert_in_delta(0, (worksheet.land_use_h28||0), 0.001); end
  def test_land_use_i28; assert_in_delta(0, (worksheet.land_use_i28||0), 0.001); end
  def test_land_use_j28; assert_in_delta(0.03805175038051751, worksheet.land_use_j28, 0.001); end
  def test_land_use_k28; assert_in_epsilon(2.0082868256384225, worksheet.land_use_k28, 0.001); end
  def test_land_use_l28; assert_in_epsilon(5.020717064096051, worksheet.land_use_l28, 0.001); end
  def test_land_use_m28; assert_in_epsilon(5.020717064096051, worksheet.land_use_m28, 0.001); end
  def test_land_use_n28; assert_in_delta(0, (worksheet.land_use_n28||0), 0.001); end
  def test_land_use_o28; assert_in_delta(0, (worksheet.land_use_o28||0), 0.001); end
  def test_land_use_p28; assert_in_delta(0, (worksheet.land_use_p28||0), 0.001); end
  def test_land_use_q28; assert_in_delta(0, (worksheet.land_use_q28||0), 0.001); end
  def test_land_use_c30; assert_equal("B.03", worksheet.land_use_c30); end
  def test_land_use_d30; assert_equal("Number of units", worksheet.land_use_d30); end
  def test_land_use_h30; assert_in_epsilon(2007, worksheet.land_use_h30, 0.001); end
  def test_land_use_i30; assert_in_epsilon(2010, worksheet.land_use_i30, 0.001); end
  def test_land_use_j30; assert_in_epsilon(2015, worksheet.land_use_j30, 0.001); end
  def test_land_use_k30; assert_in_epsilon(2020, worksheet.land_use_k30, 0.001); end
  def test_land_use_l30; assert_in_epsilon(2025, worksheet.land_use_l30, 0.001); end
  def test_land_use_m30; assert_in_epsilon(2030, worksheet.land_use_m30, 0.001); end
  def test_land_use_n30; assert_in_epsilon(2035, worksheet.land_use_n30, 0.001); end
  def test_land_use_o30; assert_in_epsilon(2040, worksheet.land_use_o30, 0.001); end
  def test_land_use_p30; assert_in_epsilon(2045, worksheet.land_use_p30, 0.001); end
  def test_land_use_q30; assert_in_epsilon(2050, worksheet.land_use_q30, 0.001); end
  def test_land_use_r30; assert_equal("#", worksheet.land_use_r30); end
  def test_land_use_c32; assert_equal("I.a", worksheet.land_use_c32); end
  def test_land_use_d32; assert_equal("2 GW thermal power stations", worksheet.land_use_d32); end
  def test_land_use_h32; assert_in_epsilon(31.290833849434243, worksheet.land_use_h32, 0.001); end
  def test_land_use_i32; assert_in_epsilon(29.810086092455084, worksheet.land_use_i32, 0.001); end
  def test_land_use_j32; assert_in_epsilon(27.137479684218917, worksheet.land_use_j32, 0.001); end
  def test_land_use_k32; assert_in_epsilon(27.95152168842067, worksheet.land_use_k32, 0.001); end
  def test_land_use_l32; assert_in_epsilon(29.685641800934988, worksheet.land_use_l32, 0.001); end
  def test_land_use_m32; assert_in_epsilon(31.98335805415216, worksheet.land_use_m32, 0.001); end
  def test_land_use_n32; assert_in_epsilon(36.08944713893333, worksheet.land_use_n32, 0.001); end
  def test_land_use_o32; assert_in_epsilon(39.78763535878784, worksheet.land_use_o32, 0.001); end
  def test_land_use_p32; assert_in_epsilon(43.47058756436885, worksheet.land_use_p32, 0.001); end
  def test_land_use_q32; assert_in_epsilon(46.13999516019266, worksheet.land_use_q32, 0.001); end
  def test_land_use_c33; assert_equal("I.b", worksheet.land_use_c33); end
  def test_land_use_d33; assert_equal("1.2 GW CCS power stations", worksheet.land_use_d33); end
  def test_land_use_h33; assert_in_delta(0, (worksheet.land_use_h33||0), 0.001); end
  def test_land_use_i33; assert_in_delta(0, (worksheet.land_use_i33||0), 0.001); end
  def test_land_use_j33; assert_in_delta(0.7083333333333335, worksheet.land_use_j33, 0.001); end
  def test_land_use_k33; assert_in_epsilon(1.416666666666667, worksheet.land_use_k33, 0.001); end
  def test_land_use_l33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_l33, 0.001); end
  def test_land_use_m33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_m33, 0.001); end
  def test_land_use_n33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_n33, 0.001); end
  def test_land_use_o33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_o33, 0.001); end
  def test_land_use_p33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_p33, 0.001); end
  def test_land_use_q33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_q33, 0.001); end
  def test_land_use_c34; assert_equal("II.a", worksheet.land_use_c34); end
  def test_land_use_d34; assert_equal("3 GW nuclear power station complexes", worksheet.land_use_d34); end
  def test_land_use_h34; assert_in_epsilon(3.6666666666666665, worksheet.land_use_h34, 0.001); end
  def test_land_use_i34; assert_in_epsilon(3.3333333333333335, worksheet.land_use_i34, 0.001); end
  def test_land_use_j34; assert_in_epsilon(2.4, worksheet.land_use_j34, 0.001); end
  def test_land_use_k34; assert_in_epsilon(1.2000000000000002, worksheet.land_use_k34, 0.001); end
  def test_land_use_l34; assert_in_delta(0.4000000000000002, worksheet.land_use_l34, 0.001); end
  def test_land_use_m34; assert_in_delta(0.4000000000000002, worksheet.land_use_m34, 0.001); end
  def test_land_use_n34; assert_in_delta(0, (worksheet.land_use_n34||0), 0.001); end
  def test_land_use_o34; assert_in_delta(0, (worksheet.land_use_o34||0), 0.001); end
  def test_land_use_p34; assert_in_delta(0, (worksheet.land_use_p34||0), 0.001); end
  def test_land_use_q34; assert_in_delta(0, (worksheet.land_use_q34||0), 0.001); end
  def test_land_use_c35; assert_equal("III.d", worksheet.land_use_c35); end
  def test_land_use_d35; assert_equal("0.01 GW geothermal power stations", worksheet.land_use_d35); end
  def test_land_use_h35; assert_in_delta(0, (worksheet.land_use_h35||0), 0.001); end
  def test_land_use_i35; assert_in_delta(0, (worksheet.land_use_i35||0), 0.001); end
  def test_land_use_j35; assert_in_delta(0, (worksheet.land_use_j35||0), 0.001); end
  def test_land_use_k35; assert_in_delta(0, (worksheet.land_use_k35||0), 0.001); end
  def test_land_use_l35; assert_in_delta(0, (worksheet.land_use_l35||0), 0.001); end
  def test_land_use_m35; assert_in_delta(0, (worksheet.land_use_m35||0), 0.001); end
  def test_land_use_n35; assert_in_delta(0, (worksheet.land_use_n35||0), 0.001); end
  def test_land_use_o35; assert_in_delta(0, (worksheet.land_use_o35||0), 0.001); end
  def test_land_use_p35; assert_in_delta(0, (worksheet.land_use_p35||0), 0.001); end
  def test_land_use_q35; assert_in_delta(0, (worksheet.land_use_q35||0), 0.001); end
  def test_land_use_c36; assert_equal("VII.c", worksheet.land_use_c36); end
  def test_land_use_d36; assert_equal("1 GW standby generators", worksheet.land_use_d36); end
  def test_land_use_h36; assert_in_delta(0, (worksheet.land_use_h36||0), 0.001); end
  def test_land_use_i36; assert_in_delta(0, (worksheet.land_use_i36||0), 0.001); end
  def test_land_use_j36; assert_in_delta(0, (worksheet.land_use_j36||0), 0.001); end
  def test_land_use_k36; assert_in_delta(0, (worksheet.land_use_k36||0), 0.001); end
  def test_land_use_l36; assert_in_delta(0, (worksheet.land_use_l36||0), 0.001); end
  def test_land_use_m36; assert_in_delta(0, (worksheet.land_use_m36||0), 0.001); end
  def test_land_use_n36; assert_in_delta(0, (worksheet.land_use_n36||0), 0.001); end
  def test_land_use_o36; assert_in_delta(0, (worksheet.land_use_o36||0), 0.001); end
  def test_land_use_p36; assert_in_delta(0, (worksheet.land_use_p36||0), 0.001); end
  def test_land_use_q36; assert_in_delta(0, (worksheet.land_use_q36||0), 0.001); end
  def test_land_use_c37; assert_equal("VI.b", worksheet.land_use_c37); end
  def test_land_use_d37; assert_equal("Number of Household, C&I and CDW to energy facilities", worksheet.land_use_d37); end
  def test_land_use_h37; assert_in_epsilon(43.99784119293418, worksheet.land_use_h37, 0.001); end
  def test_land_use_i37; assert_in_epsilon(45.70304186046512, worksheet.land_use_i37, 0.001); end
  def test_land_use_j37; assert_in_epsilon(50.03595044186047, worksheet.land_use_j37, 0.001); end
  def test_land_use_k37; assert_in_epsilon(54.52010037209303, worksheet.land_use_k37, 0.001); end
  def test_land_use_l37; assert_in_epsilon(63.652986837209305, worksheet.land_use_l37, 0.001); end
  def test_land_use_m37; assert_in_epsilon(73.48816744186045, worksheet.land_use_m37, 0.001); end
  def test_land_use_n37; assert_in_epsilon(79.15112520930234, worksheet.land_use_n37, 0.001); end
  def test_land_use_o37; assert_in_epsilon(85.00559665116278, worksheet.land_use_o37, 0.001); end
  def test_land_use_p37; assert_in_epsilon(91.05158176744186, worksheet.land_use_p37, 0.001); end
  def test_land_use_q37; assert_in_epsilon(97.28908055813953, worksheet.land_use_q37, 0.001); end

  # start of Flows
  def test_flows_b2; assert_equal("Flows through the energy system (for producing an energy flow diagram)", worksheet.flows_b2); end
  def test_flows_q2; assert_equal("Cross check of flows through the energy system (based on the idea that energy is transformed, but not destroyed)", worksheet.flows_q2); end
  def test_flows_n4; assert_equal("TWh", worksheet.flows_n4); end
  def test_flows_s4; assert_equal("Values flowing from the transformation", worksheet.flows_s4); end
  def test_flows_ad4; assert_equal("Values flowing to the transformation", worksheet.flows_ad4); end
  def test_flows_ao4; assert_equal("Check that flows in equal flows out", worksheet.flows_ao4); end
  def test_flows_c5; assert_equal("From", worksheet.flows_c5); end
  def test_flows_d5; assert_equal("To", worksheet.flows_d5); end
  def test_flows_e5; assert_in_epsilon(2007, worksheet.flows_e5, 0.001); end
  def test_flows_f5; assert_in_epsilon(2010, worksheet.flows_f5, 0.001); end
  def test_flows_g5; assert_in_epsilon(2015, worksheet.flows_g5, 0.001); end
  def test_flows_h5; assert_in_epsilon(2020, worksheet.flows_h5, 0.001); end
  def test_flows_i5; assert_in_epsilon(2025, worksheet.flows_i5, 0.001); end
  def test_flows_j5; assert_in_epsilon(2030, worksheet.flows_j5, 0.001); end
  def test_flows_k5; assert_in_epsilon(2035, worksheet.flows_k5, 0.001); end
  def test_flows_l5; assert_in_epsilon(2040, worksheet.flows_l5, 0.001); end
  def test_flows_m5; assert_in_epsilon(2045, worksheet.flows_m5, 0.001); end
  def test_flows_n5; assert_in_epsilon(2050, worksheet.flows_n5, 0.001); end
  def test_flows_r5; assert_equal("Transformation", worksheet.flows_r5); end
  def test_flows_s5; assert_in_epsilon(2007, worksheet.flows_s5, 0.001); end
  def test_flows_t5; assert_in_epsilon(2010, worksheet.flows_t5, 0.001); end
  def test_flows_u5; assert_in_epsilon(2015, worksheet.flows_u5, 0.001); end
  def test_flows_v5; assert_in_epsilon(2020, worksheet.flows_v5, 0.001); end
  def test_flows_w5; assert_in_epsilon(2025, worksheet.flows_w5, 0.001); end
  def test_flows_x5; assert_in_epsilon(2030, worksheet.flows_x5, 0.001); end
  def test_flows_y5; assert_in_epsilon(2035, worksheet.flows_y5, 0.001); end
  def test_flows_z5; assert_in_epsilon(2040, worksheet.flows_z5, 0.001); end
  def test_flows_aa5; assert_in_epsilon(2045, worksheet.flows_aa5, 0.001); end
  def test_flows_ab5; assert_in_epsilon(2050, worksheet.flows_ab5, 0.001); end
  def test_flows_ad5; assert_in_epsilon(2007, worksheet.flows_ad5, 0.001); end
  def test_flows_ae5; assert_in_epsilon(2010, worksheet.flows_ae5, 0.001); end
  def test_flows_af5; assert_in_epsilon(2015, worksheet.flows_af5, 0.001); end
  def test_flows_ag5; assert_in_epsilon(2020, worksheet.flows_ag5, 0.001); end
  def test_flows_ah5; assert_in_epsilon(2025, worksheet.flows_ah5, 0.001); end
  def test_flows_ai5; assert_in_epsilon(2030, worksheet.flows_ai5, 0.001); end
  def test_flows_aj5; assert_in_epsilon(2035, worksheet.flows_aj5, 0.001); end
  def test_flows_ak5; assert_in_epsilon(2040, worksheet.flows_ak5, 0.001); end
  def test_flows_al5; assert_in_epsilon(2045, worksheet.flows_al5, 0.001); end
  def test_flows_am5; assert_in_epsilon(2050, worksheet.flows_am5, 0.001); end
  def test_flows_ao5; assert_in_epsilon(2007, worksheet.flows_ao5, 0.001); end
  def test_flows_ap5; assert_in_epsilon(2010, worksheet.flows_ap5, 0.001); end
  def test_flows_aq5; assert_in_epsilon(2015, worksheet.flows_aq5, 0.001); end
  def test_flows_ar5; assert_in_epsilon(2020, worksheet.flows_ar5, 0.001); end
  def test_flows_as5; assert_in_epsilon(2025, worksheet.flows_as5, 0.001); end
  def test_flows_at5; assert_in_epsilon(2030, worksheet.flows_at5, 0.001); end
  def test_flows_au5; assert_in_epsilon(2035, worksheet.flows_au5, 0.001); end
  def test_flows_av5; assert_in_epsilon(2040, worksheet.flows_av5, 0.001); end
  def test_flows_aw5; assert_in_epsilon(2045, worksheet.flows_aw5, 0.001); end
  def test_flows_ax5; assert_in_epsilon(2050, worksheet.flows_ax5, 0.001); end
  def test_flows_c6; assert_equal("Coal reserves", worksheet.flows_c6); end
  def test_flows_d6; assert_equal("Coal", worksheet.flows_d6); end
  def test_flows_e6; assert_in_epsilon(124.3957013942179, worksheet.flows_e6, 0.001); end
  def test_flows_f6; assert_in_epsilon(127.93, worksheet.flows_f6, 0.001); end
  def test_flows_g6; assert_in_epsilon(127.93, worksheet.flows_g6, 0.001); end
  def test_flows_h6; assert_in_epsilon(127.93, worksheet.flows_h6, 0.001); end
  def test_flows_i6; assert_in_epsilon(127.93, worksheet.flows_i6, 0.001); end
  def test_flows_j6; assert_in_epsilon(63.965, worksheet.flows_j6, 0.001); end
  def test_flows_k6; assert_in_epsilon(63.965, worksheet.flows_k6, 0.001); end
  def test_flows_l6; assert_in_epsilon(63.965, worksheet.flows_l6, 0.001); end
  def test_flows_m6; assert_in_epsilon(63.965, worksheet.flows_m6, 0.001); end
  def test_flows_n6; assert_in_epsilon(63.965, worksheet.flows_n6, 0.001); end
  def test_flows_r6; assert_equal("Agricultural 'waste'", worksheet.flows_r6); end
  def test_flows_s6; assert_in_epsilon(3.4811481886666664, worksheet.flows_s6, 0.001); end
  def test_flows_t6; assert_in_epsilon(9.282517755325008, worksheet.flows_t6, 0.001); end
  def test_flows_u6; assert_in_epsilon(14.611077707602018, worksheet.flows_u6, 0.001); end
  def test_flows_v6; assert_in_epsilon(30.999504568609865, worksheet.flows_v6, 0.001); end
  def test_flows_w6; assert_in_epsilon(31.975858016813987, worksheet.flows_w6, 0.001); end
  def test_flows_x6; assert_in_epsilon(32.988112973997794, worksheet.flows_x6, 0.001); end
  def test_flows_y6; assert_in_epsilon(34.03758619538769, worksheet.flows_y6, 0.001); end
  def test_flows_z6; assert_in_epsilon(35.12564273067945, worksheet.flows_z6, 0.001); end
  def test_flows_aa6; assert_in_epsilon(36.25369769532861, worksheet.flows_aa6, 0.001); end
  def test_flows_ab6; assert_in_epsilon(37.42321810680604, worksheet.flows_ab6, 0.001); end
  def test_flows_ad6; assert_in_delta(0, (worksheet.flows_ad6||0), 0.001); end
  def test_flows_ae6; assert_in_delta(0, (worksheet.flows_ae6||0), 0.001); end
  def test_flows_af6; assert_in_delta(0, (worksheet.flows_af6||0), 0.001); end
  def test_flows_ag6; assert_in_delta(0, (worksheet.flows_ag6||0), 0.001); end
  def test_flows_ah6; assert_in_delta(0, (worksheet.flows_ah6||0), 0.001); end
  def test_flows_ai6; assert_in_delta(0, (worksheet.flows_ai6||0), 0.001); end
  def test_flows_aj6; assert_in_delta(0, (worksheet.flows_aj6||0), 0.001); end
  def test_flows_ak6; assert_in_delta(0, (worksheet.flows_ak6||0), 0.001); end
  def test_flows_al6; assert_in_delta(0, (worksheet.flows_al6||0), 0.001); end
  def test_flows_am6; assert_in_delta(0, (worksheet.flows_am6||0), 0.001); end
  def test_flows_c7; assert_equal("Coal imports", worksheet.flows_c7); end
  def test_flows_d7; assert_equal("Coal", worksheet.flows_d7); end
  def test_flows_e7; assert_in_epsilon(346.59158236078616, worksheet.flows_e7, 0.001); end
  def test_flows_f7; assert_in_epsilon(349.7879707863396, worksheet.flows_f7, 0.001); end
  def test_flows_g7; assert_in_epsilon(296.36321857088853, worksheet.flows_g7, 0.001); end
  def test_flows_h7; assert_in_epsilon(211.2161187019778, worksheet.flows_h7, 0.001); end
  def test_flows_i7; assert_in_epsilon(77.82581145406314, worksheet.flows_i7, 0.001); end
  def test_flows_j7; assert_in_epsilon(35.20638476620721, worksheet.flows_j7, 0.001); end
  def test_flows_k7; assert_in_epsilon(19.108428227236942, worksheet.flows_k7, 0.001); end
  def test_flows_l7; assert_in_epsilon(22.865993134684118, worksheet.flows_l7, 0.001); end
  def test_flows_m7; assert_in_epsilon(26.79703902923795, worksheet.flows_m7, 0.001); end
  def test_flows_n7; assert_in_epsilon(31.3768044831494, worksheet.flows_n7, 0.001); end
  def test_flows_r7; assert_equal("Agriculture", worksheet.flows_r7); end
  def test_flows_s7; assert_in_delta(0, (worksheet.flows_s7||0), 0.001); end
  def test_flows_t7; assert_in_delta(0, (worksheet.flows_t7||0), 0.001); end
  def test_flows_u7; assert_in_delta(0, (worksheet.flows_u7||0), 0.001); end
  def test_flows_v7; assert_in_delta(0, (worksheet.flows_v7||0), 0.001); end
  def test_flows_w7; assert_in_delta(0, (worksheet.flows_w7||0), 0.001); end
  def test_flows_x7; assert_in_delta(0, (worksheet.flows_x7||0), 0.001); end
  def test_flows_y7; assert_in_delta(0, (worksheet.flows_y7||0), 0.001); end
  def test_flows_z7; assert_in_delta(0, (worksheet.flows_z7||0), 0.001); end
  def test_flows_aa7; assert_in_delta(0, (worksheet.flows_aa7||0), 0.001); end
  def test_flows_ab7; assert_in_delta(0, (worksheet.flows_ab7||0), 0.001); end
  def test_flows_ad7; assert_in_epsilon(10.432110000000002, worksheet.flows_ad7, 0.001); end
  def test_flows_ae7; assert_in_epsilon(10.647506259072072, worksheet.flows_ae7, 0.001); end
  def test_flows_af7; assert_in_epsilon(10.714016959567504, worksheet.flows_af7, 0.001); end
  def test_flows_ag7; assert_in_epsilon(10.780984218578844, worksheet.flows_ag7, 0.001); end
  def test_flows_ah7; assert_in_epsilon(10.848413124093879, worksheet.flows_ah7, 0.001); end
  def test_flows_ai7; assert_in_epsilon(10.916308820802026, worksheet.flows_ai7, 0.001); end
  def test_flows_aj7; assert_in_epsilon(10.98467651072626, worksheet.flows_aj7, 0.001); end
  def test_flows_ak7; assert_in_epsilon(11.053521453862023, worksheet.flows_ak7, 0.001); end
  def test_flows_al7; assert_in_epsilon(11.122848968823302, worksheet.flows_al7, 0.001); end
  def test_flows_am7; assert_in_epsilon(11.192664433495876, worksheet.flows_am7, 0.001); end
  def test_flows_c8; assert_equal("Oil reserves", worksheet.flows_c8); end
  def test_flows_d8; assert_equal("Oil", worksheet.flows_d8); end
  def test_flows_e8; assert_in_epsilon(975.8912083497981, worksheet.flows_e8, 0.001); end
  def test_flows_f8; assert_in_epsilon(802.547952837212, worksheet.flows_f8, 0.001); end
  def test_flows_g8; assert_in_epsilon(646.8288435333163, worksheet.flows_g8, 0.001); end
  def test_flows_h8; assert_in_epsilon(501.7889500727494, worksheet.flows_h8, 0.001); end
  def test_flows_i8; assert_in_epsilon(388.27472421443264, worksheet.flows_i8, 0.001); end
  def test_flows_j8; assert_in_epsilon(300.43958011019754, worksheet.flows_j8, 0.001); end
  def test_flows_k8; assert_in_epsilon(232.47441995977493, worksheet.flows_k8, 0.001); end
  def test_flows_l8; assert_in_epsilon(179.88427462124332, worksheet.flows_l8, 0.001); end
  def test_flows_m8; assert_in_epsilon(139.19102265793308, worksheet.flows_m8, 0.001); end
  def test_flows_n8; assert_in_epsilon(107.70336000383915, worksheet.flows_n8, 0.001); end
  def test_flows_r8; assert_equal("Bio-conversion", worksheet.flows_r8); end
  def test_flows_s8; assert_in_epsilon(43.62827234750997, worksheet.flows_s8, 0.001); end
  def test_flows_t8; assert_in_epsilon(41.02515935181965, worksheet.flows_t8, 0.001); end
  def test_flows_u8; assert_in_epsilon(47.7447217408887, worksheet.flows_u8, 0.001); end
  def test_flows_v8; assert_in_epsilon(65.32170696322123, worksheet.flows_v8, 0.001); end
  def test_flows_w8; assert_in_epsilon(70.25938711553314, worksheet.flows_w8, 0.001); end
  def test_flows_x8; assert_in_epsilon(75.68094619270077, worksheet.flows_x8, 0.001); end
  def test_flows_y8; assert_in_epsilon(80.20694141057695, worksheet.flows_y8, 0.001); end
  def test_flows_z8; assert_in_epsilon(85.00294973796528, worksheet.flows_z8, 0.001); end
  def test_flows_aa8; assert_in_epsilon(90.0781545687969, worksheet.flows_aa8, 0.001); end
  def test_flows_ab8; assert_in_epsilon(95.43830434399338, worksheet.flows_ab8, 0.001); end
  def test_flows_ad8; assert_in_epsilon(43.62827234750998, worksheet.flows_ad8, 0.001); end
  def test_flows_ae8; assert_in_epsilon(41.02515935181965, worksheet.flows_ae8, 0.001); end
  def test_flows_af8; assert_in_epsilon(47.7447217408887, worksheet.flows_af8, 0.001); end
  def test_flows_ag8; assert_in_epsilon(65.32170696322122, worksheet.flows_ag8, 0.001); end
  def test_flows_ah8; assert_in_epsilon(70.25938711553314, worksheet.flows_ah8, 0.001); end
  def test_flows_ai8; assert_in_epsilon(75.68094619270079, worksheet.flows_ai8, 0.001); end
  def test_flows_aj8; assert_in_epsilon(80.20694141057695, worksheet.flows_aj8, 0.001); end
  def test_flows_ak8; assert_in_epsilon(85.00294973796531, worksheet.flows_ak8, 0.001); end
  def test_flows_al8; assert_in_epsilon(90.07815456879692, worksheet.flows_al8, 0.001); end
  def test_flows_am8; assert_in_epsilon(95.4383043439934, worksheet.flows_am8, 0.001); end
  def test_flows_ao8; assert_in_delta(0, (worksheet.flows_ao8||0), 0.001); end
  def test_flows_ap8; assert_in_delta(0, (worksheet.flows_ap8||0), 0.001); end
  def test_flows_aq8; assert_in_delta(0, (worksheet.flows_aq8||0), 0.001); end
  def test_flows_ar8; assert_in_delta(0, (worksheet.flows_ar8||0), 0.001); end
  def test_flows_as8; assert_in_delta(0, (worksheet.flows_as8||0), 0.001); end
  def test_flows_at8; assert_in_delta(0, (worksheet.flows_at8||0), 0.001); end
  def test_flows_au8; assert_in_delta(0, (worksheet.flows_au8||0), 0.001); end
  def test_flows_av8; assert_in_delta(0, (worksheet.flows_av8||0), 0.001); end
  def test_flows_aw8; assert_in_delta(0, (worksheet.flows_aw8||0), 0.001); end
  def test_flows_ax8; assert_in_delta(0, (worksheet.flows_ax8||0), 0.001); end
  def test_flows_c9; assert_equal("Oil imports", worksheet.flows_c9); end
  def test_flows_d9; assert_equal("Oil", worksheet.flows_d9); end
  def test_flows_e9; assert_in_delta(0, (worksheet.flows_e9||0), 0.001); end
  def test_flows_f9; assert_in_epsilon(65.64315527619635, worksheet.flows_f9, 0.001); end
  def test_flows_g9; assert_in_epsilon(208.35818004652242, worksheet.flows_g9, 0.001); end
  def test_flows_h9; assert_in_epsilon(357.8050142717038, worksheet.flows_h9, 0.001); end
  def test_flows_i9; assert_in_epsilon(457.52363182891844, worksheet.flows_i9, 0.001); end
  def test_flows_j9; assert_in_epsilon(528.050159297357, worksheet.flows_j9, 0.001); end
  def test_flows_k9; assert_in_epsilon(614.947899051517, worksheet.flows_k9, 0.001); end
  def test_flows_l9; assert_in_epsilon(678.4226005986385, worksheet.flows_l9, 0.001); end
  def test_flows_m9; assert_in_epsilon(733.6856489742773, worksheet.flows_m9, 0.001); end
  def test_flows_n9; assert_in_epsilon(772.3784493415866, worksheet.flows_n9, 0.001); end
  def test_flows_r9; assert_equal("Biofuel imports", worksheet.flows_r9); end
  def test_flows_s9; assert_in_delta(0, (worksheet.flows_s9||0), 0.001); end
  def test_flows_t9; assert_in_delta(0, (worksheet.flows_t9||0), 0.001); end
  def test_flows_u9; assert_in_delta(0, (worksheet.flows_u9||0), 0.001); end
  def test_flows_v9; assert_in_delta(0, (worksheet.flows_v9||0), 0.001); end
  def test_flows_w9; assert_in_delta(0, (worksheet.flows_w9||0), 0.001); end
  def test_flows_x9; assert_in_delta(0, (worksheet.flows_x9||0), 0.001); end
  def test_flows_y9; assert_in_delta(0, (worksheet.flows_y9||0), 0.001); end
  def test_flows_z9; assert_in_delta(0, (worksheet.flows_z9||0), 0.001); end
  def test_flows_aa9; assert_in_delta(0, (worksheet.flows_aa9||0), 0.001); end
  def test_flows_ab9; assert_in_delta(0, (worksheet.flows_ab9||0), 0.001); end
  def test_flows_ad9; assert_in_delta(0, (worksheet.flows_ad9||0), 0.001); end
  def test_flows_ae9; assert_in_delta(0, (worksheet.flows_ae9||0), 0.001); end
  def test_flows_af9; assert_in_delta(0, (worksheet.flows_af9||0), 0.001); end
  def test_flows_ag9; assert_in_delta(0, (worksheet.flows_ag9||0), 0.001); end
  def test_flows_ah9; assert_in_delta(0, (worksheet.flows_ah9||0), 0.001); end
  def test_flows_ai9; assert_in_delta(0, (worksheet.flows_ai9||0), 0.001); end
  def test_flows_aj9; assert_in_delta(0, (worksheet.flows_aj9||0), 0.001); end
  def test_flows_ak9; assert_in_delta(0, (worksheet.flows_ak9||0), 0.001); end
  def test_flows_al9; assert_in_delta(0, (worksheet.flows_al9||0), 0.001); end
  def test_flows_am9; assert_in_delta(0, (worksheet.flows_am9||0), 0.001); end
  def test_flows_c10; assert_equal("Gas reserves", worksheet.flows_c10); end
  def test_flows_d10; assert_equal("Natural Gas", worksheet.flows_d10); end
  def test_flows_e10; assert_in_epsilon(731, worksheet.flows_e10, 0.001); end
  def test_flows_f10; assert_in_epsilon(645.7728958841146, worksheet.flows_f10, 0.001); end
  def test_flows_g10; assert_in_epsilon(495.88758312334966, worksheet.flows_g10, 0.001); end
  def test_flows_h10; assert_in_epsilon(383.12064593855996, worksheet.flows_h10, 0.001); end
  def test_flows_i10; assert_in_epsilon(296.45145258994444, worksheet.flows_i10, 0.001); end
  def test_flows_j10; assert_in_epsilon(229.38848290828395, worksheet.flows_j10, 0.001); end
  def test_flows_k10; assert_in_epsilon(177.49643535647462, worksheet.flows_k10, 0.001); end
  def test_flows_l10; assert_in_epsilon(137.343358153041, worksheet.flows_l10, 0.001); end
  def test_flows_m10; assert_in_epsilon(106.27367243105833, worksheet.flows_m10, 0.001); end
  def test_flows_n10; assert_in_epsilon(82.2325418852722, worksheet.flows_n10, 0.001); end
  def test_flows_r10; assert_equal("Biomass imports", worksheet.flows_r10); end
  def test_flows_s10; assert_in_epsilon(4.39614, worksheet.flows_s10, 0.001); end
  def test_flows_t10; assert_in_epsilon(4.089432558139535, worksheet.flows_t10, 0.001); end
  def test_flows_u10; assert_in_epsilon(3.578253488372093, worksheet.flows_u10, 0.001); end
  def test_flows_v10; assert_in_epsilon(3.0670744186046512, worksheet.flows_v10, 0.001); end
  def test_flows_w10; assert_in_epsilon(2.5558953488372094, worksheet.flows_w10, 0.001); end
  def test_flows_x10; assert_in_epsilon(2.0447162790697675, worksheet.flows_x10, 0.001); end
  def test_flows_y10; assert_in_epsilon(1.5335372093023256, worksheet.flows_y10, 0.001); end
  def test_flows_z10; assert_in_epsilon(1.0223581395348837, worksheet.flows_z10, 0.001); end
  def test_flows_aa10; assert_in_delta(0.5111790697674419, worksheet.flows_aa10, 0.001); end
  def test_flows_ab10; assert_in_delta(0, (worksheet.flows_ab10||0), 0.001); end
  def test_flows_ad10; assert_in_delta(0, (worksheet.flows_ad10||0), 0.001); end
  def test_flows_ae10; assert_in_delta(0, (worksheet.flows_ae10||0), 0.001); end
  def test_flows_af10; assert_in_delta(0, (worksheet.flows_af10||0), 0.001); end
  def test_flows_ag10; assert_in_delta(0, (worksheet.flows_ag10||0), 0.001); end
  def test_flows_ah10; assert_in_delta(0, (worksheet.flows_ah10||0), 0.001); end
  def test_flows_ai10; assert_in_delta(0, (worksheet.flows_ai10||0), 0.001); end
  def test_flows_aj10; assert_in_delta(0, (worksheet.flows_aj10||0), 0.001); end
  def test_flows_ak10; assert_in_delta(0, (worksheet.flows_ak10||0), 0.001); end
  def test_flows_al10; assert_in_delta(0, (worksheet.flows_al10||0), 0.001); end
  def test_flows_am10; assert_in_delta(0, (worksheet.flows_am10||0), 0.001); end
  def test_flows_c11; assert_equal("Gas imports", worksheet.flows_c11); end
  def test_flows_d11; assert_equal("Natural Gas", worksheet.flows_d11); end
  def test_flows_e11; assert_in_epsilon(247.08561431794476, worksheet.flows_e11, 0.001); end
  def test_flows_f11; assert_in_epsilon(355.65896766491574, worksheet.flows_f11, 0.001); end
  def test_flows_g11; assert_in_epsilon(584.2856578271776, worksheet.flows_g11, 0.001); end
  def test_flows_h11; assert_in_epsilon(819.5978269658395, worksheet.flows_h11, 0.001); end
  def test_flows_i11; assert_in_epsilon(1092.7090523281695, worksheet.flows_i11, 0.001); end
  def test_flows_j11; assert_in_epsilon(1345.7822461215947, worksheet.flows_j11, 0.001); end
  def test_flows_k11; assert_in_epsilon(1550.9349336341452, worksheet.flows_k11, 0.001); end
  def test_flows_l11; assert_in_epsilon(1723.772025018814, worksheet.flows_l11, 0.001); end
  def test_flows_m11; assert_in_epsilon(1892.5295522591648, worksheet.flows_m11, 0.001); end
  def test_flows_n11; assert_in_epsilon(2034.3260236076515, worksheet.flows_n11, 0.001); end
  def test_flows_r11; assert_equal("CHP", worksheet.flows_r11); end
  def test_flows_s11; assert_in_delta(0, (worksheet.flows_s11||0), 0.001); end
  def test_flows_t11; assert_in_delta(0, (worksheet.flows_t11||0), 0.001); end
  def test_flows_u11; assert_in_delta(0, (worksheet.flows_u11||0), 0.001); end
  def test_flows_v11; assert_in_delta(0, (worksheet.flows_v11||0), 0.001); end
  def test_flows_w11; assert_in_delta(0, (worksheet.flows_w11||0), 0.001); end
  def test_flows_x11; assert_in_delta(0, (worksheet.flows_x11||0), 0.001); end
  def test_flows_y11; assert_in_delta(0, (worksheet.flows_y11||0), 0.001); end
  def test_flows_z11; assert_in_delta(0, (worksheet.flows_z11||0), 0.001); end
  def test_flows_aa11; assert_in_delta(0, (worksheet.flows_aa11||0), 0.001); end
  def test_flows_ab11; assert_in_delta(0, (worksheet.flows_ab11||0), 0.001); end
  def test_flows_ad11; assert_in_delta(0, (worksheet.flows_ad11||0), 0.001); end
  def test_flows_ae11; assert_in_delta(0, (worksheet.flows_ae11||0), 0.001); end
  def test_flows_af11; assert_in_delta(0, (worksheet.flows_af11||0), 0.001); end
  def test_flows_ag11; assert_in_delta(0, (worksheet.flows_ag11||0), 0.001); end
  def test_flows_ah11; assert_in_delta(0, (worksheet.flows_ah11||0), 0.001); end
  def test_flows_ai11; assert_in_delta(0, (worksheet.flows_ai11||0), 0.001); end
  def test_flows_aj11; assert_in_delta(0, (worksheet.flows_aj11||0), 0.001); end
  def test_flows_ak11; assert_in_delta(0, (worksheet.flows_ak11||0), 0.001); end
  def test_flows_al11; assert_in_delta(0, (worksheet.flows_al11||0), 0.001); end
  def test_flows_am11; assert_in_delta(0, (worksheet.flows_am11||0), 0.001); end
  def test_flows_ao11; assert_in_delta(0, (worksheet.flows_ao11||0), 0.001); end
  def test_flows_ap11; assert_in_delta(0, (worksheet.flows_ap11||0), 0.001); end
  def test_flows_aq11; assert_in_delta(0, (worksheet.flows_aq11||0), 0.001); end
  def test_flows_ar11; assert_in_delta(0, (worksheet.flows_ar11||0), 0.001); end
  def test_flows_as11; assert_in_delta(0, (worksheet.flows_as11||0), 0.001); end
  def test_flows_at11; assert_in_delta(0, (worksheet.flows_at11||0), 0.001); end
  def test_flows_au11; assert_in_delta(0, (worksheet.flows_au11||0), 0.001); end
  def test_flows_av11; assert_in_delta(0, (worksheet.flows_av11||0), 0.001); end
  def test_flows_aw11; assert_in_delta(0, (worksheet.flows_aw11||0), 0.001); end
  def test_flows_ax11; assert_in_delta(0, (worksheet.flows_ax11||0), 0.001); end
  def test_flows_c12; assert_equal("UK land based bioenergy", worksheet.flows_c12); end
  def test_flows_d12; assert_equal("Bio-conversion", worksheet.flows_d12); end
  def test_flows_e12; assert_in_epsilon(4.881522222222221, worksheet.flows_e12, 0.001); end
  def test_flows_f12; assert_in_epsilon(3.0279139524977032, worksheet.flows_f12, 0.001); end
  def test_flows_g12; assert_in_epsilon(4.692845238477029, worksheet.flows_g12, 0.001); end
  def test_flows_h12; assert_in_epsilon(6.402563081931533, worksheet.flows_h12, 0.001); end
  def test_flows_i12; assert_in_epsilon(8.158190817458818, worksheet.flows_i12, 0.001); end
  def test_flows_j12; assert_in_epsilon(9.96089275380401, worksheet.flows_j12, 0.001); end
  def test_flows_k12; assert_in_epsilon(11.811876531949348, worksheet.flows_k12, 0.001); end
  def test_flows_l12; assert_in_epsilon(13.712395650409537, worksheet.flows_l12, 0.001); end
  def test_flows_m12; assert_in_epsilon(15.663752170256295, worksheet.flows_m12, 0.001); end
  def test_flows_n12; assert_in_epsilon(17.667299613344547, worksheet.flows_n12, 0.001); end
  def test_flows_r12; assert_equal("Coal", worksheet.flows_r12); end
  def test_flows_s12; assert_in_epsilon(470.98728375500406, worksheet.flows_s12, 0.001); end
  def test_flows_t12; assert_in_epsilon(477.7179707863396, worksheet.flows_t12, 0.001); end
  def test_flows_u12; assert_in_epsilon(424.29321857088854, worksheet.flows_u12, 0.001); end
  def test_flows_v12; assert_in_epsilon(339.1461187019778, worksheet.flows_v12, 0.001); end
  def test_flows_w12; assert_in_epsilon(205.75581145406315, worksheet.flows_w12, 0.001); end
  def test_flows_x12; assert_in_epsilon(99.17138476620721, worksheet.flows_x12, 0.001); end
  def test_flows_y12; assert_in_epsilon(83.07342822723695, worksheet.flows_y12, 0.001); end
  def test_flows_z12; assert_in_epsilon(86.83099313468412, worksheet.flows_z12, 0.001); end
  def test_flows_aa12; assert_in_epsilon(90.76203902923795, worksheet.flows_aa12, 0.001); end
  def test_flows_ab12; assert_in_epsilon(95.3418044831494, worksheet.flows_ab12, 0.001); end
  def test_flows_ad12; assert_in_epsilon(470.98728375500406, worksheet.flows_ad12, 0.001); end
  def test_flows_ae12; assert_in_epsilon(477.7179707863396, worksheet.flows_ae12, 0.001); end
  def test_flows_af12; assert_in_epsilon(424.29321857088854, worksheet.flows_af12, 0.001); end
  def test_flows_ag12; assert_in_epsilon(339.1461187019778, worksheet.flows_ag12, 0.001); end
  def test_flows_ah12; assert_in_epsilon(205.75581145406315, worksheet.flows_ah12, 0.001); end
  def test_flows_ai12; assert_in_epsilon(99.17138476620721, worksheet.flows_ai12, 0.001); end
  def test_flows_aj12; assert_in_epsilon(83.07342822723695, worksheet.flows_aj12, 0.001); end
  def test_flows_ak12; assert_in_epsilon(86.83099313468412, worksheet.flows_ak12, 0.001); end
  def test_flows_al12; assert_in_epsilon(90.76203902923795, worksheet.flows_al12, 0.001); end
  def test_flows_am12; assert_in_epsilon(95.3418044831494, worksheet.flows_am12, 0.001); end
  def test_flows_ao12; assert_in_delta(0, (worksheet.flows_ao12||0), 0.001); end
  def test_flows_ap12; assert_in_delta(0, (worksheet.flows_ap12||0), 0.001); end
  def test_flows_aq12; assert_in_delta(0, (worksheet.flows_aq12||0), 0.001); end
  def test_flows_ar12; assert_in_delta(0, (worksheet.flows_ar12||0), 0.001); end
  def test_flows_as12; assert_in_delta(0, (worksheet.flows_as12||0), 0.001); end
  def test_flows_at12; assert_in_delta(0, (worksheet.flows_at12||0), 0.001); end
  def test_flows_au12; assert_in_delta(0, (worksheet.flows_au12||0), 0.001); end
  def test_flows_av12; assert_in_delta(0, (worksheet.flows_av12||0), 0.001); end
  def test_flows_aw12; assert_in_delta(0, (worksheet.flows_aw12||0), 0.001); end
  def test_flows_ax12; assert_in_delta(0, (worksheet.flows_ax12||0), 0.001); end
  def test_flows_c13; assert_equal("Marine algae", worksheet.flows_c13); end
  def test_flows_d13; assert_equal("Bio-conversion", worksheet.flows_d13); end
  def test_flows_e13; assert_in_delta(0, (worksheet.flows_e13||0), 0.001); end
  def test_flows_f13; assert_in_delta(0, (worksheet.flows_f13||0), 0.001); end
  def test_flows_g13; assert_in_delta(0, (worksheet.flows_g13||0), 0.001); end
  def test_flows_h13; assert_in_delta(0, (worksheet.flows_h13||0), 0.001); end
  def test_flows_i13; assert_in_delta(0, (worksheet.flows_i13||0), 0.001); end
  def test_flows_j13; assert_in_delta(0, (worksheet.flows_j13||0), 0.001); end
  def test_flows_k13; assert_in_delta(0, (worksheet.flows_k13||0), 0.001); end
  def test_flows_l13; assert_in_delta(0, (worksheet.flows_l13||0), 0.001); end
  def test_flows_m13; assert_in_delta(0, (worksheet.flows_m13||0), 0.001); end
  def test_flows_n13; assert_in_delta(0, (worksheet.flows_n13||0), 0.001); end
  def test_flows_r13; assert_equal("Coal imports", worksheet.flows_r13); end
  def test_flows_s13; assert_in_epsilon(346.59158236078616, worksheet.flows_s13, 0.001); end
  def test_flows_t13; assert_in_epsilon(349.7879707863396, worksheet.flows_t13, 0.001); end
  def test_flows_u13; assert_in_epsilon(296.36321857088853, worksheet.flows_u13, 0.001); end
  def test_flows_v13; assert_in_epsilon(211.2161187019778, worksheet.flows_v13, 0.001); end
  def test_flows_w13; assert_in_epsilon(77.82581145406314, worksheet.flows_w13, 0.001); end
  def test_flows_x13; assert_in_epsilon(35.20638476620721, worksheet.flows_x13, 0.001); end
  def test_flows_y13; assert_in_epsilon(19.108428227236942, worksheet.flows_y13, 0.001); end
  def test_flows_z13; assert_in_epsilon(22.865993134684118, worksheet.flows_z13, 0.001); end
  def test_flows_aa13; assert_in_epsilon(26.79703902923795, worksheet.flows_aa13, 0.001); end
  def test_flows_ab13; assert_in_epsilon(31.3768044831494, worksheet.flows_ab13, 0.001); end
  def test_flows_ad13; assert_in_delta(0, (worksheet.flows_ad13||0), 0.001); end
  def test_flows_ae13; assert_in_delta(0, (worksheet.flows_ae13||0), 0.001); end
  def test_flows_af13; assert_in_delta(0, (worksheet.flows_af13||0), 0.001); end
  def test_flows_ag13; assert_in_delta(0, (worksheet.flows_ag13||0), 0.001); end
  def test_flows_ah13; assert_in_delta(0, (worksheet.flows_ah13||0), 0.001); end
  def test_flows_ai13; assert_in_delta(0, (worksheet.flows_ai13||0), 0.001); end
  def test_flows_aj13; assert_in_delta(0, (worksheet.flows_aj13||0), 0.001); end
  def test_flows_ak13; assert_in_delta(0, (worksheet.flows_ak13||0), 0.001); end
  def test_flows_al13; assert_in_delta(0, (worksheet.flows_al13||0), 0.001); end
  def test_flows_am13; assert_in_delta(0, (worksheet.flows_am13||0), 0.001); end
  def test_flows_c14; assert_equal("Agricultural 'waste'", worksheet.flows_c14); end
  def test_flows_d14; assert_equal("Bio-conversion", worksheet.flows_d14); end
  def test_flows_e14; assert_in_epsilon(3.4811481886666664, worksheet.flows_e14, 0.001); end
  def test_flows_f14; assert_in_epsilon(9.282517755325008, worksheet.flows_f14, 0.001); end
  def test_flows_g14; assert_in_epsilon(14.611077707602018, worksheet.flows_g14, 0.001); end
  def test_flows_h14; assert_in_epsilon(30.999504568609865, worksheet.flows_h14, 0.001); end
  def test_flows_i14; assert_in_epsilon(31.975858016813987, worksheet.flows_i14, 0.001); end
  def test_flows_j14; assert_in_epsilon(32.988112973997794, worksheet.flows_j14, 0.001); end
  def test_flows_k14; assert_in_epsilon(34.03758619538769, worksheet.flows_k14, 0.001); end
  def test_flows_l14; assert_in_epsilon(35.12564273067945, worksheet.flows_l14, 0.001); end
  def test_flows_m14; assert_in_epsilon(36.25369769532861, worksheet.flows_m14, 0.001); end
  def test_flows_n14; assert_in_epsilon(37.42321810680604, worksheet.flows_n14, 0.001); end
  def test_flows_r14; assert_equal("Coal reserves", worksheet.flows_r14); end
  def test_flows_s14; assert_in_epsilon(124.3957013942179, worksheet.flows_s14, 0.001); end
  def test_flows_t14; assert_in_epsilon(127.93, worksheet.flows_t14, 0.001); end
  def test_flows_u14; assert_in_epsilon(127.93, worksheet.flows_u14, 0.001); end
  def test_flows_v14; assert_in_epsilon(127.93, worksheet.flows_v14, 0.001); end
  def test_flows_w14; assert_in_epsilon(127.93, worksheet.flows_w14, 0.001); end
  def test_flows_x14; assert_in_epsilon(63.965, worksheet.flows_x14, 0.001); end
  def test_flows_y14; assert_in_epsilon(63.965, worksheet.flows_y14, 0.001); end
  def test_flows_z14; assert_in_epsilon(63.965, worksheet.flows_z14, 0.001); end
  def test_flows_aa14; assert_in_epsilon(63.965, worksheet.flows_aa14, 0.001); end
  def test_flows_ab14; assert_in_epsilon(63.965, worksheet.flows_ab14, 0.001); end
  def test_flows_ad14; assert_in_delta(0, (worksheet.flows_ad14||0), 0.001); end
  def test_flows_ae14; assert_in_delta(0, (worksheet.flows_ae14||0), 0.001); end
  def test_flows_af14; assert_in_delta(0, (worksheet.flows_af14||0), 0.001); end
  def test_flows_ag14; assert_in_delta(0, (worksheet.flows_ag14||0), 0.001); end
  def test_flows_ah14; assert_in_delta(0, (worksheet.flows_ah14||0), 0.001); end
  def test_flows_ai14; assert_in_delta(0, (worksheet.flows_ai14||0), 0.001); end
  def test_flows_aj14; assert_in_delta(0, (worksheet.flows_aj14||0), 0.001); end
  def test_flows_ak14; assert_in_delta(0, (worksheet.flows_ak14||0), 0.001); end
  def test_flows_al14; assert_in_delta(0, (worksheet.flows_al14||0), 0.001); end
  def test_flows_am14; assert_in_delta(0, (worksheet.flows_am14||0), 0.001); end
  def test_flows_c15; assert_equal("Other waste", worksheet.flows_c15); end
  def test_flows_d15; assert_equal("Bio-conversion", worksheet.flows_d15); end
  def test_flows_e15; assert_in_epsilon(35.26560193662109, worksheet.flows_e15, 0.001); end
  def test_flows_f15; assert_in_epsilon(28.714727643996937, worksheet.flows_f15, 0.001); end
  def test_flows_g15; assert_in_epsilon(28.440798794809652, worksheet.flows_g15, 0.001); end
  def test_flows_h15; assert_in_epsilon(27.91963931267982, worksheet.flows_h15, 0.001); end
  def test_flows_i15; assert_in_epsilon(30.12533828126034, worksheet.flows_i15, 0.001); end
  def test_flows_j15; assert_in_epsilon(32.73194046489898, worksheet.flows_j15, 0.001); end
  def test_flows_k15; assert_in_epsilon(34.35747868323991, worksheet.flows_k15, 0.001); end
  def test_flows_l15; assert_in_epsilon(36.16491135687631, worksheet.flows_l15, 0.001); end
  def test_flows_m15; assert_in_epsilon(38.160704703212005, worksheet.flows_m15, 0.001); end
  def test_flows_n15; assert_in_epsilon(40.347786623842815, worksheet.flows_n15, 0.001); end
  def test_flows_r15; assert_equal("District heating", worksheet.flows_r15); end
  def test_flows_s15; assert_in_epsilon(8.813193136590819, worksheet.flows_s15, 0.001); end
  def test_flows_t15; assert_in_epsilon(9.042140030873806, worksheet.flows_t15, 0.001); end
  def test_flows_u15; assert_in_epsilon(9.48727928745219, worksheet.flows_u15, 0.001); end
  def test_flows_v15; assert_in_epsilon(9.968747932095416, worksheet.flows_v15, 0.001); end
  def test_flows_w15; assert_in_epsilon(10.73757752705611, worksheet.flows_w15, 0.001); end
  def test_flows_x15; assert_in_epsilon(11.598323282621358, worksheet.flows_x15, 0.001); end
  def test_flows_y15; assert_in_epsilon(12.559114593882597, worksheet.flows_y15, 0.001); end
  def test_flows_z15; assert_in_epsilon(13.62952356526122, worksheet.flows_z15, 0.001); end
  def test_flows_aa15; assert_in_epsilon(14.820617944313286, worksheet.flows_aa15, 0.001); end
  def test_flows_ab15; assert_in_epsilon(16.145046318256654, worksheet.flows_ab15, 0.001); end
  def test_flows_ad15; assert_in_epsilon(8.813193136590819, worksheet.flows_ad15, 0.001); end
  def test_flows_ae15; assert_in_epsilon(9.042140030873806, worksheet.flows_ae15, 0.001); end
  def test_flows_af15; assert_in_epsilon(9.48727928745219, worksheet.flows_af15, 0.001); end
  def test_flows_ag15; assert_in_epsilon(9.968747932095416, worksheet.flows_ag15, 0.001); end
  def test_flows_ah15; assert_in_epsilon(10.73757752705611, worksheet.flows_ah15, 0.001); end
  def test_flows_ai15; assert_in_epsilon(11.598323282621358, worksheet.flows_ai15, 0.001); end
  def test_flows_aj15; assert_in_epsilon(12.559114593882597, worksheet.flows_aj15, 0.001); end
  def test_flows_ak15; assert_in_epsilon(13.62952356526122, worksheet.flows_ak15, 0.001); end
  def test_flows_al15; assert_in_epsilon(14.820617944313286, worksheet.flows_al15, 0.001); end
  def test_flows_am15; assert_in_epsilon(16.145046318256654, worksheet.flows_am15, 0.001); end
  def test_flows_ao15; assert_in_delta(0, (worksheet.flows_ao15||0), 0.001); end
  def test_flows_ap15; assert_in_delta(0, (worksheet.flows_ap15||0), 0.001); end
  def test_flows_aq15; assert_in_delta(0, (worksheet.flows_aq15||0), 0.001); end
  def test_flows_ar15; assert_in_delta(0, (worksheet.flows_ar15||0), 0.001); end
  def test_flows_as15; assert_in_delta(0, (worksheet.flows_as15||0), 0.001); end
  def test_flows_at15; assert_in_delta(0, (worksheet.flows_at15||0), 0.001); end
  def test_flows_au15; assert_in_delta(0, (worksheet.flows_au15||0), 0.001); end
  def test_flows_av15; assert_in_delta(0, (worksheet.flows_av15||0), 0.001); end
  def test_flows_aw15; assert_in_delta(0, (worksheet.flows_aw15||0), 0.001); end
  def test_flows_ax15; assert_in_delta(0, (worksheet.flows_ax15||0), 0.001); end
  def test_flows_c16; assert_equal("Other waste", worksheet.flows_c16); end
  def test_flows_d16; assert_equal("Solid", worksheet.flows_d16); end
  def test_flows_e16; assert_in_epsilon(7.1711853539826516, worksheet.flows_e16, 0.001); end
  def test_flows_f16; assert_in_epsilon(7.120255333333333, worksheet.flows_f16, 0.001); end
  def test_flows_g16; assert_in_epsilon(7.788686662916667, worksheet.flows_g16, 0.001); end
  def test_flows_h16; assert_in_epsilon(8.479830435000002, worksheet.flows_h16, 0.001); end
  def test_flows_i16; assert_in_epsilon(9.738108471250001, worksheet.flows_i16, 0.001); end
  def test_flows_j16; assert_in_epsilon(11.083322, worksheet.flows_j16, 0.001); end
  def test_flows_k16; assert_in_epsilon(11.839091040000001, worksheet.flows_k16, 0.001); end
  def test_flows_l16; assert_in_epsilon(12.618458693333332, worksheet.flows_l16, 0.001); end
  def test_flows_m16; assert_in_epsilon(13.42142496, worksheet.flows_m16, 0.001); end
  def test_flows_n16; assert_in_epsilon(14.247989840000002, worksheet.flows_n16, 0.001); end
  def test_flows_r16; assert_equal("Domestic aviation", worksheet.flows_r16); end
  def test_flows_s16; assert_in_delta(0, (worksheet.flows_s16||0), 0.001); end
  def test_flows_t16; assert_in_delta(0, (worksheet.flows_t16||0), 0.001); end
  def test_flows_u16; assert_in_delta(0, (worksheet.flows_u16||0), 0.001); end
  def test_flows_v16; assert_in_delta(0, (worksheet.flows_v16||0), 0.001); end
  def test_flows_w16; assert_in_delta(0, (worksheet.flows_w16||0), 0.001); end
  def test_flows_x16; assert_in_delta(0, (worksheet.flows_x16||0), 0.001); end
  def test_flows_y16; assert_in_delta(0, (worksheet.flows_y16||0), 0.001); end
  def test_flows_z16; assert_in_delta(0, (worksheet.flows_z16||0), 0.001); end
  def test_flows_aa16; assert_in_delta(0, (worksheet.flows_aa16||0), 0.001); end
  def test_flows_ab16; assert_in_delta(0, (worksheet.flows_ab16||0), 0.001); end
  def test_flows_ad16; assert_in_epsilon(9.019834608709552, worksheet.flows_ad16, 0.001); end
  def test_flows_ae16; assert_in_epsilon(9.551097329516901, worksheet.flows_ae16, 0.001); end
  def test_flows_af16; assert_in_epsilon(10.163716423089292, worksheet.flows_af16, 0.001); end
  def test_flows_ag16; assert_in_epsilon(11.078742052970153, worksheet.flows_ag16, 0.001); end
  def test_flows_ah16; assert_in_epsilon(11.927979753386868, worksheet.flows_ah16, 0.001); end
  def test_flows_ai16; assert_in_epsilon(12.657847240047854, worksheet.flows_ai16, 0.001); end
  def test_flows_aj16; assert_in_epsilon(13.331077116581312, worksheet.flows_aj16, 0.001); end
  def test_flows_ak16; assert_in_epsilon(13.860251279239513, worksheet.flows_ak16, 0.001); end
  def test_flows_al16; assert_in_epsilon(14.344409418627478, worksheet.flows_al16, 0.001); end
  def test_flows_am16; assert_in_epsilon(14.785449092646568, worksheet.flows_am16, 0.001); end
  def test_flows_c17; assert_equal("Biomass imports", worksheet.flows_c17); end
  def test_flows_d17; assert_equal("Solid", worksheet.flows_d17); end
  def test_flows_e17; assert_in_epsilon(4.39614, worksheet.flows_e17, 0.001); end
  def test_flows_f17; assert_in_epsilon(4.089432558139535, worksheet.flows_f17, 0.001); end
  def test_flows_g17; assert_in_epsilon(3.578253488372093, worksheet.flows_g17, 0.001); end
  def test_flows_h17; assert_in_epsilon(3.0670744186046512, worksheet.flows_h17, 0.001); end
  def test_flows_i17; assert_in_epsilon(2.5558953488372094, worksheet.flows_i17, 0.001); end
  def test_flows_j17; assert_in_epsilon(2.0447162790697675, worksheet.flows_j17, 0.001); end
  def test_flows_k17; assert_in_epsilon(1.5335372093023256, worksheet.flows_k17, 0.001); end
  def test_flows_l17; assert_in_epsilon(1.0223581395348837, worksheet.flows_l17, 0.001); end
  def test_flows_m17; assert_in_delta(0.5111790697674419, worksheet.flows_m17, 0.001); end
  def test_flows_n17; assert_in_delta(0, (worksheet.flows_n17||0), 0.001); end
  def test_flows_r17; assert_equal("Electricity grid", worksheet.flows_r17); end
  def test_flows_s17; assert_in_epsilon(381.13960565016595, worksheet.flows_s17, 0.001); end
  def test_flows_t17; assert_in_epsilon(386.24405554288626, worksheet.flows_t17, 0.001); end
  def test_flows_u17; assert_in_epsilon(396.7024809745397, worksheet.flows_u17, 0.001); end
  def test_flows_v17; assert_in_epsilon(415.21180857492885, worksheet.flows_v17, 0.001); end
  def test_flows_w17; assert_in_epsilon(439.64553252456545, worksheet.flows_w17, 0.001); end
  def test_flows_x17; assert_in_epsilon(464.2194392611814, worksheet.flows_x17, 0.001); end
  def test_flows_y17; assert_in_epsilon(490.7446417201478, worksheet.flows_y17, 0.001); end
  def test_flows_z17; assert_in_epsilon(518.9056520071506, worksheet.flows_z17, 0.001); end
  def test_flows_aa17; assert_in_epsilon(548.8441029350583, worksheet.flows_aa17, 0.001); end
  def test_flows_ab17; assert_in_epsilon(581.4503293856261, worksheet.flows_ab17, 0.001); end
  def test_flows_ad17; assert_in_epsilon(381.1396056501659, worksheet.flows_ad17, 0.001); end
  def test_flows_ae17; assert_in_epsilon(386.2440555428862, worksheet.flows_ae17, 0.001); end
  def test_flows_af17; assert_in_epsilon(396.70248097453964, worksheet.flows_af17, 0.001); end
  def test_flows_ag17; assert_in_epsilon(415.21180857492885, worksheet.flows_ag17, 0.001); end
  def test_flows_ah17; assert_in_epsilon(439.6455325245654, worksheet.flows_ah17, 0.001); end
  def test_flows_ai17; assert_in_epsilon(464.2194392611814, worksheet.flows_ai17, 0.001); end
  def test_flows_aj17; assert_in_epsilon(490.7446417201478, worksheet.flows_aj17, 0.001); end
  def test_flows_ak17; assert_in_epsilon(518.9056520071506, worksheet.flows_ak17, 0.001); end
  def test_flows_al17; assert_in_epsilon(548.8441029350585, worksheet.flows_al17, 0.001); end
  def test_flows_am17; assert_in_epsilon(581.4503293856261, worksheet.flows_am17, 0.001); end
  def test_flows_ao17; assert_in_delta(0, (worksheet.flows_ao17||0), 0.001); end
  def test_flows_ap17; assert_in_delta(0, (worksheet.flows_ap17||0), 0.001); end
  def test_flows_aq17; assert_in_delta(0, (worksheet.flows_aq17||0), 0.001); end
  def test_flows_ar17; assert_in_delta(0, (worksheet.flows_ar17||0), 0.001); end
  def test_flows_as17; assert_in_delta(0, (worksheet.flows_as17||0), 0.001); end
  def test_flows_at17; assert_in_delta(0, (worksheet.flows_at17||0), 0.001); end
  def test_flows_au17; assert_in_delta(0, (worksheet.flows_au17||0), 0.001); end
  def test_flows_av17; assert_in_delta(0, (worksheet.flows_av17||0), 0.001); end
  def test_flows_aw17; assert_in_delta(0, (worksheet.flows_aw17||0), 0.001); end
  def test_flows_ax17; assert_in_delta(0, (worksheet.flows_ax17||0), 0.001); end
  def test_flows_c18; assert_equal("Biofuel imports", worksheet.flows_c18); end
  def test_flows_d18; assert_equal("Liquid", worksheet.flows_d18); end
  def test_flows_e18; assert_in_delta(0, (worksheet.flows_e18||0), 0.001); end
  def test_flows_f18; assert_in_delta(0, (worksheet.flows_f18||0), 0.001); end
  def test_flows_g18; assert_in_delta(0, (worksheet.flows_g18||0), 0.001); end
  def test_flows_h18; assert_in_delta(0, (worksheet.flows_h18||0), 0.001); end
  def test_flows_i18; assert_in_delta(0, (worksheet.flows_i18||0), 0.001); end
  def test_flows_j18; assert_in_delta(0, (worksheet.flows_j18||0), 0.001); end
  def test_flows_k18; assert_in_delta(0, (worksheet.flows_k18||0), 0.001); end
  def test_flows_l18; assert_in_delta(0, (worksheet.flows_l18||0), 0.001); end
  def test_flows_m18; assert_in_delta(0, (worksheet.flows_m18||0), 0.001); end
  def test_flows_n18; assert_in_delta(0, (worksheet.flows_n18||0), 0.001); end
  def test_flows_r18; assert_equal("Electricity imports", worksheet.flows_r18); end
  def test_flows_s18; assert_in_delta(0, (worksheet.flows_s18||0), 0.001); end
  def test_flows_t18; assert_in_delta(0, (worksheet.flows_t18||0), 0.001); end
  def test_flows_u18; assert_in_delta(0, (worksheet.flows_u18||0), 0.001); end
  def test_flows_v18; assert_in_delta(0, (worksheet.flows_v18||0), 0.001); end
  def test_flows_w18; assert_in_delta(0, (worksheet.flows_w18||0), 0.001); end
  def test_flows_x18; assert_in_delta(0, (worksheet.flows_x18||0), 0.001); end
  def test_flows_y18; assert_in_delta(0, (worksheet.flows_y18||0), 0.001); end
  def test_flows_z18; assert_in_delta(0, (worksheet.flows_z18||0), 0.001); end
  def test_flows_aa18; assert_in_delta(0, (worksheet.flows_aa18||0), 0.001); end
  def test_flows_ab18; assert_in_delta(0, (worksheet.flows_ab18||0), 0.001); end
  def test_flows_ad18; assert_in_delta(0, (worksheet.flows_ad18||0), 0.001); end
  def test_flows_ae18; assert_in_delta(0, (worksheet.flows_ae18||0), 0.001); end
  def test_flows_af18; assert_in_delta(0, (worksheet.flows_af18||0), 0.001); end
  def test_flows_ag18; assert_in_delta(0, (worksheet.flows_ag18||0), 0.001); end
  def test_flows_ah18; assert_in_delta(0, (worksheet.flows_ah18||0), 0.001); end
  def test_flows_ai18; assert_in_delta(0, (worksheet.flows_ai18||0), 0.001); end
  def test_flows_aj18; assert_in_delta(0, (worksheet.flows_aj18||0), 0.001); end
  def test_flows_ak18; assert_in_delta(0, (worksheet.flows_ak18||0), 0.001); end
  def test_flows_al18; assert_in_delta(0, (worksheet.flows_al18||0), 0.001); end
  def test_flows_am18; assert_in_delta(0, (worksheet.flows_am18||0), 0.001); end
  def test_flows_c19; assert_equal("Coal", worksheet.flows_c19); end
  def test_flows_d19; assert_equal("Solid", worksheet.flows_d19); end
  def test_flows_e19; assert_in_epsilon(470.98728375500406, worksheet.flows_e19, 0.001); end
  def test_flows_f19; assert_in_epsilon(477.7179707863396, worksheet.flows_f19, 0.001); end
  def test_flows_g19; assert_in_epsilon(424.29321857088854, worksheet.flows_g19, 0.001); end
  def test_flows_h19; assert_in_epsilon(339.1461187019778, worksheet.flows_h19, 0.001); end
  def test_flows_i19; assert_in_epsilon(205.75581145406315, worksheet.flows_i19, 0.001); end
  def test_flows_j19; assert_in_epsilon(99.17138476620721, worksheet.flows_j19, 0.001); end
  def test_flows_k19; assert_in_epsilon(83.07342822723695, worksheet.flows_k19, 0.001); end
  def test_flows_l19; assert_in_epsilon(86.83099313468412, worksheet.flows_l19, 0.001); end
  def test_flows_m19; assert_in_epsilon(90.76203902923795, worksheet.flows_m19, 0.001); end
  def test_flows_n19; assert_in_epsilon(95.3418044831494, worksheet.flows_n19, 0.001); end
  def test_flows_r19; assert_equal("Gas", worksheet.flows_r19); end
  def test_flows_s19; assert_in_epsilon(1000.3156231400121, worksheet.flows_s19, 0.001); end
  def test_flows_t19; assert_in_epsilon(1019.7306136585273, worksheet.flows_t19, 0.001); end
  def test_flows_u19; assert_in_epsilon(1100.9234457571922, worksheet.flows_u19, 0.001); end
  def test_flows_v19; assert_in_epsilon(1233.924254724952, worksheet.flows_v19, 0.001); end
  def test_flows_w19; assert_in_epsilon(1423.8945238032977, worksheet.flows_w19, 0.001); end
  def test_flows_x19; assert_in_epsilon(1610.5584174305968, worksheet.flows_x19, 0.001); end
  def test_flows_y19; assert_in_epsilon(1764.643366543118, worksheet.flows_y19, 0.001); end
  def test_flows_z19; assert_in_epsilon(1898.2999716931974, worksheet.flows_z19, 0.001); end
  def test_flows_aa19; assert_in_epsilon(2037.1151037035324, worksheet.flows_aa19, 0.001); end
  def test_flows_ab19; assert_in_epsilon(2156.1558887756587, worksheet.flows_ab19, 0.001); end
  def test_flows_ad19; assert_in_epsilon(1000.3156231400123, worksheet.flows_ad19, 0.001); end
  def test_flows_ae19; assert_in_epsilon(1019.7306136585272, worksheet.flows_ae19, 0.001); end
  def test_flows_af19; assert_in_epsilon(1100.9234457571922, worksheet.flows_af19, 0.001); end
  def test_flows_ag19; assert_in_epsilon(1233.9242547249519, worksheet.flows_ag19, 0.001); end
  def test_flows_ah19; assert_in_epsilon(1423.8945238032977, worksheet.flows_ah19, 0.001); end
  def test_flows_ai19; assert_in_epsilon(1610.5584174305966, worksheet.flows_ai19, 0.001); end
  def test_flows_aj19; assert_in_epsilon(1764.643366543118, worksheet.flows_aj19, 0.001); end
  def test_flows_ak19; assert_in_epsilon(1898.2999716931972, worksheet.flows_ak19, 0.001); end
  def test_flows_al19; assert_in_epsilon(2037.1151037035324, worksheet.flows_al19, 0.001); end
  def test_flows_am19; assert_in_epsilon(2156.155888775659, worksheet.flows_am19, 0.001); end
  def test_flows_ao19; assert_in_delta(0, (worksheet.flows_ao19||0), 0.001); end
  def test_flows_ap19; assert_in_delta(0, (worksheet.flows_ap19||0), 0.001); end
  def test_flows_aq19; assert_in_delta(0, (worksheet.flows_aq19||0), 0.001); end
  def test_flows_ar19; assert_in_delta(0, (worksheet.flows_ar19||0), 0.001); end
  def test_flows_as19; assert_in_delta(0, (worksheet.flows_as19||0), 0.001); end
  def test_flows_at19; assert_in_delta(0, (worksheet.flows_at19||0), 0.001); end
  def test_flows_au19; assert_in_delta(0, (worksheet.flows_au19||0), 0.001); end
  def test_flows_av19; assert_in_delta(0, (worksheet.flows_av19||0), 0.001); end
  def test_flows_aw19; assert_in_delta(0, (worksheet.flows_aw19||0), 0.001); end
  def test_flows_ax19; assert_in_delta(0, (worksheet.flows_ax19||0), 0.001); end
  def test_flows_c20; assert_equal("Oil", worksheet.flows_c20); end
  def test_flows_d20; assert_equal("Liquid", worksheet.flows_d20); end
  def test_flows_e20; assert_in_epsilon(975.8912083497981, worksheet.flows_e20, 0.001); end
  def test_flows_f20; assert_in_epsilon(868.1911081134084, worksheet.flows_f20, 0.001); end
  def test_flows_g20; assert_in_epsilon(855.1870235798388, worksheet.flows_g20, 0.001); end
  def test_flows_h20; assert_in_epsilon(859.5939643444532, worksheet.flows_h20, 0.001); end
  def test_flows_i20; assert_in_epsilon(845.7983560433511, worksheet.flows_i20, 0.001); end
  def test_flows_j20; assert_in_epsilon(828.4897394075546, worksheet.flows_j20, 0.001); end
  def test_flows_k20; assert_in_epsilon(847.4223190112918, worksheet.flows_k20, 0.001); end
  def test_flows_l20; assert_in_epsilon(858.3068752198818, worksheet.flows_l20, 0.001); end
  def test_flows_m20; assert_in_epsilon(872.8766716322104, worksheet.flows_m20, 0.001); end
  def test_flows_n20; assert_in_epsilon(880.0818093454258, worksheet.flows_n20, 0.001); end
  def test_flows_r20; assert_equal("Gas imports", worksheet.flows_r20); end
  def test_flows_s20; assert_in_epsilon(247.08561431794476, worksheet.flows_s20, 0.001); end
  def test_flows_t20; assert_in_epsilon(355.65896766491574, worksheet.flows_t20, 0.001); end
  def test_flows_u20; assert_in_epsilon(584.2856578271776, worksheet.flows_u20, 0.001); end
  def test_flows_v20; assert_in_epsilon(819.5978269658395, worksheet.flows_v20, 0.001); end
  def test_flows_w20; assert_in_epsilon(1092.7090523281695, worksheet.flows_w20, 0.001); end
  def test_flows_x20; assert_in_epsilon(1345.7822461215947, worksheet.flows_x20, 0.001); end
  def test_flows_y20; assert_in_epsilon(1550.9349336341452, worksheet.flows_y20, 0.001); end
  def test_flows_z20; assert_in_epsilon(1723.772025018814, worksheet.flows_z20, 0.001); end
  def test_flows_aa20; assert_in_epsilon(1892.5295522591648, worksheet.flows_aa20, 0.001); end
  def test_flows_ab20; assert_in_epsilon(2034.3260236076515, worksheet.flows_ab20, 0.001); end
  def test_flows_ad20; assert_in_delta(0, (worksheet.flows_ad20||0), 0.001); end
  def test_flows_ae20; assert_in_delta(0, (worksheet.flows_ae20||0), 0.001); end
  def test_flows_af20; assert_in_delta(0, (worksheet.flows_af20||0), 0.001); end
  def test_flows_ag20; assert_in_delta(0, (worksheet.flows_ag20||0), 0.001); end
  def test_flows_ah20; assert_in_delta(0, (worksheet.flows_ah20||0), 0.001); end
  def test_flows_ai20; assert_in_delta(0, (worksheet.flows_ai20||0), 0.001); end
  def test_flows_aj20; assert_in_delta(0, (worksheet.flows_aj20||0), 0.001); end
  def test_flows_ak20; assert_in_delta(0, (worksheet.flows_ak20||0), 0.001); end
  def test_flows_al20; assert_in_delta(0, (worksheet.flows_al20||0), 0.001); end
  def test_flows_am20; assert_in_delta(0, (worksheet.flows_am20||0), 0.001); end
  def test_flows_c21; assert_equal("Natural Gas", worksheet.flows_c21); end
  def test_flows_d21; assert_equal("Gas", worksheet.flows_d21); end
  def test_flows_e21; assert_in_epsilon(978.0856143179448, worksheet.flows_e21, 0.001); end
  def test_flows_f21; assert_in_epsilon(1001.4318635490304, worksheet.flows_f21, 0.001); end
  def test_flows_g21; assert_in_epsilon(1080.1732409505273, worksheet.flows_g21, 0.001); end
  def test_flows_h21; assert_in_epsilon(1202.7184729043995, worksheet.flows_h21, 0.001); end
  def test_flows_i21; assert_in_epsilon(1389.160504918114, worksheet.flows_i21, 0.001); end
  def test_flows_j21; assert_in_epsilon(1575.1707290298787, worksheet.flows_j21, 0.001); end
  def test_flows_k21; assert_in_epsilon(1728.4313689906198, worksheet.flows_k21, 0.001); end
  def test_flows_l21; assert_in_epsilon(1861.115383171855, worksheet.flows_l21, 0.001); end
  def test_flows_m21; assert_in_epsilon(1998.803224690223, worksheet.flows_m21, 0.001); end
  def test_flows_n21; assert_in_epsilon(2116.5585654929237, worksheet.flows_n21, 0.001); end
  def test_flows_r21; assert_equal("Gas reserves", worksheet.flows_r21); end
  def test_flows_s21; assert_in_epsilon(731, worksheet.flows_s21, 0.001); end
  def test_flows_t21; assert_in_epsilon(645.7728958841146, worksheet.flows_t21, 0.001); end
  def test_flows_u21; assert_in_epsilon(495.88758312334966, worksheet.flows_u21, 0.001); end
  def test_flows_v21; assert_in_epsilon(383.12064593855996, worksheet.flows_v21, 0.001); end
  def test_flows_w21; assert_in_epsilon(296.45145258994444, worksheet.flows_w21, 0.001); end
  def test_flows_x21; assert_in_epsilon(229.38848290828395, worksheet.flows_x21, 0.001); end
  def test_flows_y21; assert_in_epsilon(177.49643535647462, worksheet.flows_y21, 0.001); end
  def test_flows_z21; assert_in_epsilon(137.343358153041, worksheet.flows_z21, 0.001); end
  def test_flows_aa21; assert_in_epsilon(106.27367243105833, worksheet.flows_aa21, 0.001); end
  def test_flows_ab21; assert_in_epsilon(82.2325418852722, worksheet.flows_ab21, 0.001); end
  def test_flows_ad21; assert_in_delta(0, (worksheet.flows_ad21||0), 0.001); end
  def test_flows_ae21; assert_in_delta(0, (worksheet.flows_ae21||0), 0.001); end
  def test_flows_af21; assert_in_delta(0, (worksheet.flows_af21||0), 0.001); end
  def test_flows_ag21; assert_in_delta(0, (worksheet.flows_ag21||0), 0.001); end
  def test_flows_ah21; assert_in_delta(0, (worksheet.flows_ah21||0), 0.001); end
  def test_flows_ai21; assert_in_delta(0, (worksheet.flows_ai21||0), 0.001); end
  def test_flows_aj21; assert_in_delta(0, (worksheet.flows_aj21||0), 0.001); end
  def test_flows_ak21; assert_in_delta(0, (worksheet.flows_ak21||0), 0.001); end
  def test_flows_al21; assert_in_delta(0, (worksheet.flows_al21||0), 0.001); end
  def test_flows_am21; assert_in_delta(0, (worksheet.flows_am21||0), 0.001); end
  def test_flows_c22; assert_equal("Solar", worksheet.flows_c22); end
  def test_flows_d22; assert_equal("Solar PV", worksheet.flows_d22); end
  def test_flows_e22; assert_in_delta(0.01700604, worksheet.flows_e22, 0.001); end
  def test_flows_f22; assert_in_delta(0.028059966000000006, worksheet.flows_f22, 0.001); end
  def test_flows_g22; assert_in_delta(0.013604831999999999, worksheet.flows_g22, 0.001); end
  def test_flows_h22; assert_in_delta(0, (worksheet.flows_h22||0), 0.001); end
  def test_flows_i22; assert_in_delta(0, (worksheet.flows_i22||0), 0.001); end
  def test_flows_j22; assert_in_delta(0, (worksheet.flows_j22||0), 0.001); end
  def test_flows_k22; assert_in_delta(0, (worksheet.flows_k22||0), 0.001); end
  def test_flows_l22; assert_in_delta(0, (worksheet.flows_l22||0), 0.001); end
  def test_flows_m22; assert_in_delta(0, (worksheet.flows_m22||0), 0.001); end
  def test_flows_n22; assert_in_delta(0, (worksheet.flows_n22||0), 0.001); end
  def test_flows_r22; assert_equal("Geosequestration", worksheet.flows_r22); end
  def test_flows_s22; assert_in_delta(0, (worksheet.flows_s22||0), 0.001); end
  def test_flows_t22; assert_in_delta(0, (worksheet.flows_t22||0), 0.001); end
  def test_flows_u22; assert_in_delta(0, (worksheet.flows_u22||0), 0.001); end
  def test_flows_v22; assert_in_delta(0, (worksheet.flows_v22||0), 0.001); end
  def test_flows_w22; assert_in_delta(0, (worksheet.flows_w22||0), 0.001); end
  def test_flows_x22; assert_in_delta(0, (worksheet.flows_x22||0), 0.001); end
  def test_flows_y22; assert_in_delta(0, (worksheet.flows_y22||0), 0.001); end
  def test_flows_z22; assert_in_delta(0, (worksheet.flows_z22||0), 0.001); end
  def test_flows_aa22; assert_in_delta(0, (worksheet.flows_aa22||0), 0.001); end
  def test_flows_ab22; assert_in_delta(0, (worksheet.flows_ab22||0), 0.001); end
  def test_flows_ad22; assert_in_delta(0, (worksheet.flows_ad22||0), 0.001); end
  def test_flows_ae22; assert_in_delta(0, (worksheet.flows_ae22||0), 0.001); end
  def test_flows_af22; assert_in_delta(0, (worksheet.flows_af22||0), 0.001); end
  def test_flows_ag22; assert_in_delta(0, (worksheet.flows_ag22||0), 0.001); end
  def test_flows_ah22; assert_in_delta(0, (worksheet.flows_ah22||0), 0.001); end
  def test_flows_ai22; assert_in_delta(0, (worksheet.flows_ai22||0), 0.001); end
  def test_flows_aj22; assert_in_delta(0, (worksheet.flows_aj22||0), 0.001); end
  def test_flows_ak22; assert_in_delta(0, (worksheet.flows_ak22||0), 0.001); end
  def test_flows_al22; assert_in_delta(0, (worksheet.flows_al22||0), 0.001); end
  def test_flows_am22; assert_in_delta(0, (worksheet.flows_am22||0), 0.001); end
  def test_flows_c23; assert_equal("Solar PV", worksheet.flows_c23); end
  def test_flows_d23; assert_equal("Electricity grid", worksheet.flows_d23); end
  def test_flows_e23; assert_in_delta(0.01700604, worksheet.flows_e23, 0.001); end
  def test_flows_f23; assert_in_delta(0.028059966000000006, worksheet.flows_f23, 0.001); end
  def test_flows_g23; assert_in_delta(0.013604831999999999, worksheet.flows_g23, 0.001); end
  def test_flows_h23; assert_in_delta(0, (worksheet.flows_h23||0), 0.001); end
  def test_flows_i23; assert_in_delta(0, (worksheet.flows_i23||0), 0.001); end
  def test_flows_j23; assert_in_delta(0, (worksheet.flows_j23||0), 0.001); end
  def test_flows_k23; assert_in_delta(0, (worksheet.flows_k23||0), 0.001); end
  def test_flows_l23; assert_in_delta(0, (worksheet.flows_l23||0), 0.001); end
  def test_flows_m23; assert_in_delta(0, (worksheet.flows_m23||0), 0.001); end
  def test_flows_n23; assert_in_delta(0, (worksheet.flows_n23||0), 0.001); end
  def test_flows_r23; assert_equal("Geothermal", worksheet.flows_r23); end
  def test_flows_s23; assert_in_delta(0, (worksheet.flows_s23||0), 0.001); end
  def test_flows_t23; assert_in_delta(0, (worksheet.flows_t23||0), 0.001); end
  def test_flows_u23; assert_in_delta(0, (worksheet.flows_u23||0), 0.001); end
  def test_flows_v23; assert_in_delta(0, (worksheet.flows_v23||0), 0.001); end
  def test_flows_w23; assert_in_delta(0, (worksheet.flows_w23||0), 0.001); end
  def test_flows_x23; assert_in_delta(0, (worksheet.flows_x23||0), 0.001); end
  def test_flows_y23; assert_in_delta(0, (worksheet.flows_y23||0), 0.001); end
  def test_flows_z23; assert_in_delta(0, (worksheet.flows_z23||0), 0.001); end
  def test_flows_aa23; assert_in_delta(0, (worksheet.flows_aa23||0), 0.001); end
  def test_flows_ab23; assert_in_delta(0, (worksheet.flows_ab23||0), 0.001); end
  def test_flows_ad23; assert_in_delta(0, (worksheet.flows_ad23||0), 0.001); end
  def test_flows_ae23; assert_in_delta(0, (worksheet.flows_ae23||0), 0.001); end
  def test_flows_af23; assert_in_delta(0, (worksheet.flows_af23||0), 0.001); end
  def test_flows_ag23; assert_in_delta(0, (worksheet.flows_ag23||0), 0.001); end
  def test_flows_ah23; assert_in_delta(0, (worksheet.flows_ah23||0), 0.001); end
  def test_flows_ai23; assert_in_delta(0, (worksheet.flows_ai23||0), 0.001); end
  def test_flows_aj23; assert_in_delta(0, (worksheet.flows_aj23||0), 0.001); end
  def test_flows_ak23; assert_in_delta(0, (worksheet.flows_ak23||0), 0.001); end
  def test_flows_al23; assert_in_delta(0, (worksheet.flows_al23||0), 0.001); end
  def test_flows_am23; assert_in_delta(0, (worksheet.flows_am23||0), 0.001); end
  def test_flows_c24; assert_equal("Solar", worksheet.flows_c24); end
  def test_flows_d24; assert_equal("Solar Thermal", worksheet.flows_d24); end
  def test_flows_e24; assert_in_delta(0, (worksheet.flows_e24||0), 0.001); end
  def test_flows_f24; assert_in_delta(0, (worksheet.flows_f24||0), 0.001); end
  def test_flows_g24; assert_in_delta(0, (worksheet.flows_g24||0), 0.001); end
  def test_flows_h24; assert_in_delta(0, (worksheet.flows_h24||0), 0.001); end
  def test_flows_i24; assert_in_delta(0, (worksheet.flows_i24||0), 0.001); end
  def test_flows_j24; assert_in_delta(0, (worksheet.flows_j24||0), 0.001); end
  def test_flows_k24; assert_in_delta(0, (worksheet.flows_k24||0), 0.001); end
  def test_flows_l24; assert_in_delta(0, (worksheet.flows_l24||0), 0.001); end
  def test_flows_m24; assert_in_delta(0, (worksheet.flows_m24||0), 0.001); end
  def test_flows_n24; assert_in_delta(0, (worksheet.flows_n24||0), 0.001); end
  def test_flows_r24; assert_equal("H2", worksheet.flows_r24); end
  def test_flows_s24; assert_in_delta(0, (worksheet.flows_s24||0), 0.001); end
  def test_flows_t24; assert_in_delta(0, (worksheet.flows_t24||0), 0.001); end
  def test_flows_u24; assert_in_delta(0, (worksheet.flows_u24||0), 0.001); end
  def test_flows_v24; assert_in_delta(0, (worksheet.flows_v24||0), 0.001); end
  def test_flows_w24; assert_in_delta(0, (worksheet.flows_w24||0), 0.001); end
  def test_flows_x24; assert_in_delta(0, (worksheet.flows_x24||0), 0.001); end
  def test_flows_y24; assert_in_delta(0, (worksheet.flows_y24||0), 0.001); end
  def test_flows_z24; assert_in_delta(0, (worksheet.flows_z24||0), 0.001); end
  def test_flows_aa24; assert_in_delta(0, (worksheet.flows_aa24||0), 0.001); end
  def test_flows_ab24; assert_in_delta(0, (worksheet.flows_ab24||0), 0.001); end
  def test_flows_ad24; assert_in_delta(0, (worksheet.flows_ad24||0), 0.001); end
  def test_flows_ae24; assert_in_delta(0, (worksheet.flows_ae24||0), 0.001); end
  def test_flows_af24; assert_in_delta(0, (worksheet.flows_af24||0), 0.001); end
  def test_flows_ag24; assert_in_delta(0, (worksheet.flows_ag24||0), 0.001); end
  def test_flows_ah24; assert_in_delta(0, (worksheet.flows_ah24||0), 0.001); end
  def test_flows_ai24; assert_in_delta(0, (worksheet.flows_ai24||0), 0.001); end
  def test_flows_aj24; assert_in_delta(0, (worksheet.flows_aj24||0), 0.001); end
  def test_flows_ak24; assert_in_delta(0, (worksheet.flows_ak24||0), 0.001); end
  def test_flows_al24; assert_in_delta(0, (worksheet.flows_al24||0), 0.001); end
  def test_flows_am24; assert_in_delta(0, (worksheet.flows_am24||0), 0.001); end
  def test_flows_ao24; assert_in_delta(0, (worksheet.flows_ao24||0), 0.001); end
  def test_flows_ap24; assert_in_delta(0, (worksheet.flows_ap24||0), 0.001); end
  def test_flows_aq24; assert_in_delta(0, (worksheet.flows_aq24||0), 0.001); end
  def test_flows_ar24; assert_in_delta(0, (worksheet.flows_ar24||0), 0.001); end
  def test_flows_as24; assert_in_delta(0, (worksheet.flows_as24||0), 0.001); end
  def test_flows_at24; assert_in_delta(0, (worksheet.flows_at24||0), 0.001); end
  def test_flows_au24; assert_in_delta(0, (worksheet.flows_au24||0), 0.001); end
  def test_flows_av24; assert_in_delta(0, (worksheet.flows_av24||0), 0.001); end
  def test_flows_aw24; assert_in_delta(0, (worksheet.flows_aw24||0), 0.001); end
  def test_flows_ax24; assert_in_delta(0, (worksheet.flows_ax24||0), 0.001); end
  def test_flows_c25; assert_equal("Bio-conversion", worksheet.flows_c25); end
  def test_flows_d25; assert_equal("Solid", worksheet.flows_d25); end
  def test_flows_e25; assert_in_epsilon(13.727592565398165, worksheet.flows_e25, 0.001); end
  def test_flows_f25; assert_in_epsilon(15.6952277934, worksheet.flows_f25, 0.001); end
  def test_flows_g25; assert_in_epsilon(16.807364904225004, worksheet.flows_g25, 0.001); end
  def test_flows_h25; assert_in_epsilon(17.9578694341, worksheet.flows_h25, 0.001); end
  def test_flows_i25; assert_in_epsilon(21.31595716513819, worksheet.flows_i25, 0.001); end
  def test_flows_j25; assert_in_epsilon(23.850401876699994, worksheet.flows_j25, 0.001); end
  def test_flows_k25; assert_in_epsilon(25.35724666577778, worksheet.flows_k25, 0.001); end
  def test_flows_l25; assert_in_epsilon(26.916433165955553, worksheet.flows_l25, 0.001); end
  def test_flows_m25; assert_in_epsilon(28.527961377233332, worksheet.flows_m25, 0.001); end
  def test_flows_n25; assert_in_epsilon(30.19183129961111, worksheet.flows_n25, 0.001); end
  def test_flows_r25; assert_equal("H2 conversion", worksheet.flows_r25); end
  def test_flows_s25; assert_in_delta(0, (worksheet.flows_s25||0), 0.001); end
  def test_flows_t25; assert_in_delta(0, (worksheet.flows_t25||0), 0.001); end
  def test_flows_u25; assert_in_delta(0, (worksheet.flows_u25||0), 0.001); end
  def test_flows_v25; assert_in_delta(0, (worksheet.flows_v25||0), 0.001); end
  def test_flows_w25; assert_in_delta(0, (worksheet.flows_w25||0), 0.001); end
  def test_flows_x25; assert_in_delta(0, (worksheet.flows_x25||0), 0.001); end
  def test_flows_y25; assert_in_delta(0, (worksheet.flows_y25||0), 0.001); end
  def test_flows_z25; assert_in_delta(0, (worksheet.flows_z25||0), 0.001); end
  def test_flows_aa25; assert_in_delta(0, (worksheet.flows_aa25||0), 0.001); end
  def test_flows_ab25; assert_in_delta(0, (worksheet.flows_ab25||0), 0.001); end
  def test_flows_ad25; assert_in_delta(0, (worksheet.flows_ad25||0), 0.001); end
  def test_flows_ae25; assert_in_delta(0, (worksheet.flows_ae25||0), 0.001); end
  def test_flows_af25; assert_in_delta(0, (worksheet.flows_af25||0), 0.001); end
  def test_flows_ag25; assert_in_delta(0, (worksheet.flows_ag25||0), 0.001); end
  def test_flows_ah25; assert_in_delta(0, (worksheet.flows_ah25||0), 0.001); end
  def test_flows_ai25; assert_in_delta(0, (worksheet.flows_ai25||0), 0.001); end
  def test_flows_aj25; assert_in_delta(0, (worksheet.flows_aj25||0), 0.001); end
  def test_flows_ak25; assert_in_delta(0, (worksheet.flows_ak25||0), 0.001); end
  def test_flows_al25; assert_in_delta(0, (worksheet.flows_al25||0), 0.001); end
  def test_flows_am25; assert_in_delta(0, (worksheet.flows_am25||0), 0.001); end
  def test_flows_ao25; assert_in_delta(0, (worksheet.flows_ao25||0), 0.001); end
  def test_flows_ap25; assert_in_delta(0, (worksheet.flows_ap25||0), 0.001); end
  def test_flows_aq25; assert_in_delta(0, (worksheet.flows_aq25||0), 0.001); end
  def test_flows_ar25; assert_in_delta(0, (worksheet.flows_ar25||0), 0.001); end
  def test_flows_as25; assert_in_delta(0, (worksheet.flows_as25||0), 0.001); end
  def test_flows_at25; assert_in_delta(0, (worksheet.flows_at25||0), 0.001); end
  def test_flows_au25; assert_in_delta(0, (worksheet.flows_au25||0), 0.001); end
  def test_flows_av25; assert_in_delta(0, (worksheet.flows_av25||0), 0.001); end
  def test_flows_aw25; assert_in_delta(0, (worksheet.flows_aw25||0), 0.001); end
  def test_flows_ax25; assert_in_delta(0, (worksheet.flows_ax25||0), 0.001); end
  def test_flows_c26; assert_equal("Bio-conversion", worksheet.flows_c26); end
  def test_flows_d26; assert_equal("Liquid", worksheet.flows_d26); end
  def test_flows_e26; assert_in_epsilon(1.562605222222222, worksheet.flows_e26, 0.001); end
  def test_flows_f26; assert_in_epsilon(1.0691270054227253, worksheet.flows_f26, 0.001); end
  def test_flows_g26; assert_in_epsilon(1.6812610687861258, worksheet.flows_g26, 0.001); end
  def test_flows_h26; assert_in_epsilon(2.3096705383941964, worksheet.flows_h26, 0.001); end
  def test_flows_i26; assert_in_epsilon(3.528739363098261, worksheet.flows_i26, 0.001); end
  def test_flows_j26; assert_in_epsilon(4.329131457560122, worksheet.flows_j26, 0.001); end
  def test_flows_k26; assert_in_epsilon(5.1504279377230455, worksheet.flows_k26, 0.001); end
  def test_flows_l26; assert_in_epsilon(5.993130384698937, worksheet.flows_l26, 0.001); end
  def test_flows_m26; assert_in_epsilon(6.857757484212166, worksheet.flows_m26, 0.001); end
  def test_flows_n26; assert_in_epsilon(7.744845969984378, worksheet.flows_n26, 0.001); end
  def test_flows_r26; assert_equal("Heating and cooling - commercial", worksheet.flows_r26); end
  def test_flows_s26; assert_in_delta(0, (worksheet.flows_s26||0), 0.001); end
  def test_flows_t26; assert_in_delta(0, (worksheet.flows_t26||0), 0.001); end
  def test_flows_u26; assert_in_delta(0, (worksheet.flows_u26||0), 0.001); end
  def test_flows_v26; assert_in_delta(0, (worksheet.flows_v26||0), 0.001); end
  def test_flows_w26; assert_in_delta(0, (worksheet.flows_w26||0), 0.001); end
  def test_flows_x26; assert_in_delta(0, (worksheet.flows_x26||0), 0.001); end
  def test_flows_y26; assert_in_delta(0, (worksheet.flows_y26||0), 0.001); end
  def test_flows_z26; assert_in_delta(0, (worksheet.flows_z26||0), 0.001); end
  def test_flows_aa26; assert_in_delta(0, (worksheet.flows_aa26||0), 0.001); end
  def test_flows_ab26; assert_in_delta(0, (worksheet.flows_ab26||0), 0.001); end
  def test_flows_ad26; assert_in_epsilon(115.89465262742715, worksheet.flows_ad26, 0.001); end
  def test_flows_ae26; assert_in_epsilon(121.41835476651738, worksheet.flows_ae26, 0.001); end
  def test_flows_af26; assert_in_epsilon(129.92787034452687, worksheet.flows_af26, 0.001); end
  def test_flows_ag26; assert_in_epsilon(136.65013259470194, worksheet.flows_ag26, 0.001); end
  def test_flows_ah26; assert_in_epsilon(143.0980116417422, worksheet.flows_ah26, 0.001); end
  def test_flows_ai26; assert_in_epsilon(149.32140518305744, worksheet.flows_ai26, 0.001); end
  def test_flows_aj26; assert_in_epsilon(155.36827406259067, worksheet.flows_aj26, 0.001); end
  def test_flows_ak26; assert_in_epsilon(161.2846477676672, worksheet.flows_ak26, 0.001); end
  def test_flows_al26; assert_in_epsilon(167.11461631411763, worksheet.flows_al26, 0.001); end
  def test_flows_am26; assert_in_epsilon(172.90030737883308, worksheet.flows_am26, 0.001); end
  def test_flows_c27; assert_equal("Bio-conversion", worksheet.flows_c27); end
  def test_flows_d27; assert_equal("Gas", worksheet.flows_d27); end
  def test_flows_e27; assert_in_epsilon(22.230008822067568, worksheet.flows_e27, 0.001); end
  def test_flows_f27; assert_in_epsilon(18.298750109496886, worksheet.flows_f27, 0.001); end
  def test_flows_g27; assert_in_epsilon(20.750204806664975, worksheet.flows_g27, 0.001); end
  def test_flows_h27; assert_in_epsilon(31.205781820552314, worksheet.flows_h27, 0.001); end
  def test_flows_i27; assert_in_epsilon(34.73401888518371, worksheet.flows_i27, 0.001); end
  def test_flows_j27; assert_in_epsilon(35.3876884007179, worksheet.flows_j27, 0.001); end
  def test_flows_k27; assert_in_epsilon(36.21199755249822, worksheet.flows_k27, 0.001); end
  def test_flows_l27; assert_in_epsilon(37.18458852134214, worksheet.flows_l27, 0.001); end
  def test_flows_m27; assert_in_epsilon(38.31187901330933, worksheet.flows_m27, 0.001); end
  def test_flows_n27; assert_in_epsilon(39.597323282735694, worksheet.flows_n27, 0.001); end
  def test_flows_r27; assert_equal("Heating and cooling - homes", worksheet.flows_r27); end
  def test_flows_s27; assert_in_delta(0, (worksheet.flows_s27||0), 0.001); end
  def test_flows_t27; assert_in_delta(0, (worksheet.flows_t27||0), 0.001); end
  def test_flows_u27; assert_in_delta(0, (worksheet.flows_u27||0), 0.001); end
  def test_flows_v27; assert_in_delta(0, (worksheet.flows_v27||0), 0.001); end
  def test_flows_w27; assert_in_delta(0, (worksheet.flows_w27||0), 0.001); end
  def test_flows_x27; assert_in_delta(0, (worksheet.flows_x27||0), 0.001); end
  def test_flows_y27; assert_in_delta(0, (worksheet.flows_y27||0), 0.001); end
  def test_flows_z27; assert_in_delta(0, (worksheet.flows_z27||0), 0.001); end
  def test_flows_aa27; assert_in_delta(0, (worksheet.flows_aa27||0), 0.001); end
  def test_flows_ab27; assert_in_delta(0, (worksheet.flows_ab27||0), 0.001); end
  def test_flows_ad27; assert_in_epsilon(382.5301859069655, worksheet.flows_ad27, 0.001); end
  def test_flows_ae27; assert_in_epsilon(408.56077567983954, worksheet.flows_ae27, 0.001); end
  def test_flows_af27; assert_in_epsilon(427.30484676275967, worksheet.flows_af27, 0.001); end
  def test_flows_ag27; assert_in_epsilon(455.5038705890163, worksheet.flows_ag27, 0.001); end
  def test_flows_ah27; assert_in_epsilon(482.97569615270857, worksheet.flows_ah27, 0.001); end
  def test_flows_ai27; assert_in_epsilon(509.52699578892293, worksheet.flows_ai27, 0.001); end
  def test_flows_aj27; assert_in_epsilon(523.9298814829477, worksheet.flows_aj27, 0.001); end
  def test_flows_ak27; assert_in_epsilon(539.9693992241246, worksheet.flows_ak27, 0.001); end
  def test_flows_al27; assert_in_epsilon(558.0873256944161, worksheet.flows_al27, 0.001); end
  def test_flows_am27; assert_in_epsilon(578.6016420619402, worksheet.flows_am27, 0.001); end
  def test_flows_c28; assert_equal("Bio-conversion", worksheet.flows_c28); end
  def test_flows_d28; assert_equal("Losses", worksheet.flows_d28); end
  def test_flows_e28; assert_in_epsilon(6.108065737822017, worksheet.flows_e28, 0.001); end
  def test_flows_f28; assert_in_epsilon(5.962054443500037, worksheet.flows_f28, 0.001); end
  def test_flows_g28; assert_in_epsilon(8.505890961212593, worksheet.flows_g28, 0.001); end
  def test_flows_h28; assert_in_epsilon(13.848385170174723, worksheet.flows_h28, 0.001); end
  def test_flows_i28; assert_in_epsilon(10.680671702112988, worksheet.flows_i28, 0.001); end
  def test_flows_j28; assert_in_epsilon(12.11372445772276, worksheet.flows_j28, 0.001); end
  def test_flows_k28; assert_in_epsilon(13.48726925457791, worksheet.flows_k28, 0.001); end
  def test_flows_l28; assert_in_epsilon(14.908797665968649, worksheet.flows_l28, 0.001); end
  def test_flows_m28; assert_in_epsilon(16.380556694042085, worksheet.flows_m28, 0.001); end
  def test_flows_n28; assert_in_epsilon(17.9043037916622, worksheet.flows_n28, 0.001); end
  def test_flows_r28; assert_equal("Hydro", worksheet.flows_r28); end
  def test_flows_s28; assert_in_epsilon(4.114400994, worksheet.flows_s28, 0.001); end
  def test_flows_t28; assert_in_epsilon(5.329728000000001, worksheet.flows_t28, 0.001); end
  def test_flows_u28; assert_in_epsilon(5.329728000000001, worksheet.flows_u28, 0.001); end
  def test_flows_v28; assert_in_epsilon(5.329728000000001, worksheet.flows_v28, 0.001); end
  def test_flows_w28; assert_in_epsilon(5.329728000000001, worksheet.flows_w28, 0.001); end
  def test_flows_x28; assert_in_epsilon(5.329728000000001, worksheet.flows_x28, 0.001); end
  def test_flows_y28; assert_in_epsilon(5.329728000000001, worksheet.flows_y28, 0.001); end
  def test_flows_z28; assert_in_epsilon(5.329728000000001, worksheet.flows_z28, 0.001); end
  def test_flows_aa28; assert_in_epsilon(5.329728000000001, worksheet.flows_aa28, 0.001); end
  def test_flows_ab28; assert_in_epsilon(5.329728000000001, worksheet.flows_ab28, 0.001); end
  def test_flows_ad28; assert_in_delta(0, (worksheet.flows_ad28||0), 0.001); end
  def test_flows_ae28; assert_in_delta(0, (worksheet.flows_ae28||0), 0.001); end
  def test_flows_af28; assert_in_delta(0, (worksheet.flows_af28||0), 0.001); end
  def test_flows_ag28; assert_in_delta(0, (worksheet.flows_ag28||0), 0.001); end
  def test_flows_ah28; assert_in_delta(0, (worksheet.flows_ah28||0), 0.001); end
  def test_flows_ai28; assert_in_delta(0, (worksheet.flows_ai28||0), 0.001); end
  def test_flows_aj28; assert_in_delta(0, (worksheet.flows_aj28||0), 0.001); end
  def test_flows_ak28; assert_in_delta(0, (worksheet.flows_ak28||0), 0.001); end
  def test_flows_al28; assert_in_delta(0, (worksheet.flows_al28||0), 0.001); end
  def test_flows_am28; assert_in_delta(0, (worksheet.flows_am28||0), 0.001); end
  def test_flows_c29; assert_equal("Solid", worksheet.flows_c29); end
  def test_flows_d29; assert_equal("Over generation / exports", worksheet.flows_d29); end
  def test_flows_e29; assert_in_delta(0, (worksheet.flows_e29||0), 0.001); end
  def test_flows_f29; assert_in_delta(0, (worksheet.flows_f29||0), 0.001); end
  def test_flows_g29; assert_in_delta(0, (worksheet.flows_g29||0), 0.001); end
  def test_flows_h29; assert_in_delta(0, (worksheet.flows_h29||0), 0.001); end
  def test_flows_i29; assert_in_delta(0, (worksheet.flows_i29||0), 0.001); end
  def test_flows_j29; assert_in_delta(0, (worksheet.flows_j29||0), 0.001); end
  def test_flows_k29; assert_in_delta(0, (worksheet.flows_k29||0), 0.001); end
  def test_flows_l29; assert_in_delta(0, (worksheet.flows_l29||0), 0.001); end
  def test_flows_m29; assert_in_delta(0, (worksheet.flows_m29||0), 0.001); end
  def test_flows_n29; assert_in_delta(0, (worksheet.flows_n29||0), 0.001); end
  def test_flows_r29; assert_equal("Industry", worksheet.flows_r29); end
  def test_flows_s29; assert_in_delta(0, (worksheet.flows_s29||0), 0.001); end
  def test_flows_t29; assert_in_delta(0, (worksheet.flows_t29||0), 0.001); end
  def test_flows_u29; assert_in_delta(0, (worksheet.flows_u29||0), 0.001); end
  def test_flows_v29; assert_in_delta(0, (worksheet.flows_v29||0), 0.001); end
  def test_flows_w29; assert_in_delta(0, (worksheet.flows_w29||0), 0.001); end
  def test_flows_x29; assert_in_delta(0, (worksheet.flows_x29||0), 0.001); end
  def test_flows_y29; assert_in_delta(0, (worksheet.flows_y29||0), 0.001); end
  def test_flows_z29; assert_in_delta(0, (worksheet.flows_z29||0), 0.001); end
  def test_flows_aa29; assert_in_delta(0, (worksheet.flows_aa29||0), 0.001); end
  def test_flows_ab29; assert_in_delta(0, (worksheet.flows_ab29||0), 0.001); end
  def test_flows_ad29; assert_in_epsilon(540.9583199339212, worksheet.flows_ad29, 0.001); end
  def test_flows_ae29; assert_in_epsilon(539.6958806772302, worksheet.flows_ae29, 0.001); end
  def test_flows_af29; assert_in_epsilon(550.824983482747, worksheet.flows_af29, 0.001); end
  def test_flows_ag29; assert_in_epsilon(564.6026408589114, worksheet.flows_ag29, 0.001); end
  def test_flows_ah29; assert_in_epsilon(595.3904264699028, worksheet.flows_ah29, 0.001); end
  def test_flows_ai29; assert_in_epsilon(632.2042877897919, worksheet.flows_ai29, 0.001); end
  def test_flows_aj29; assert_in_epsilon(676.1773351667725, worksheet.flows_aj29, 0.001); end
  def test_flows_ak29; assert_in_epsilon(726.888326517133, worksheet.flows_ak29, 0.001); end
  def test_flows_al29; assert_in_epsilon(784.6432589822314, worksheet.flows_al29, 0.001); end
  def test_flows_am29; assert_in_epsilon(849.8873476967058, worksheet.flows_am29, 0.001); end
  def test_flows_c30; assert_equal("Liquid", worksheet.flows_c30); end
  def test_flows_d30; assert_equal("Over generation / exports", worksheet.flows_d30); end
  def test_flows_e30; assert_in_epsilon(74.88229852333984, worksheet.flows_e30, 0.001); end
  def test_flows_f30; assert_in_delta(0, (worksheet.flows_f30||0), 0.001); end
  def test_flows_g30; assert_in_delta(0, (worksheet.flows_g30||0), 0.001); end
  def test_flows_h30; assert_in_delta(0, (worksheet.flows_h30||0), 0.001); end
  def test_flows_i30; assert_in_delta(0, (worksheet.flows_i30||0), 0.001); end
  def test_flows_j30; assert_in_delta(0, (worksheet.flows_j30||0), 0.001); end
  def test_flows_k30; assert_in_delta(0, (worksheet.flows_k30||0), 0.001); end
  def test_flows_l30; assert_in_delta(0, (worksheet.flows_l30||0), 0.001); end
  def test_flows_m30; assert_in_delta(0, (worksheet.flows_m30||0), 0.001); end
  def test_flows_n30; assert_in_delta(0, (worksheet.flows_n30||0), 0.001); end
  def test_flows_r30; assert_equal("International aviation", worksheet.flows_r30); end
  def test_flows_s30; assert_in_delta(0, (worksheet.flows_s30||0), 0.001); end
  def test_flows_t30; assert_in_delta(0, (worksheet.flows_t30||0), 0.001); end
  def test_flows_u30; assert_in_delta(0, (worksheet.flows_u30||0), 0.001); end
  def test_flows_v30; assert_in_delta(0, (worksheet.flows_v30||0), 0.001); end
  def test_flows_w30; assert_in_delta(0, (worksheet.flows_w30||0), 0.001); end
  def test_flows_x30; assert_in_delta(0, (worksheet.flows_x30||0), 0.001); end
  def test_flows_y30; assert_in_delta(0, (worksheet.flows_y30||0), 0.001); end
  def test_flows_z30; assert_in_delta(0, (worksheet.flows_z30||0), 0.001); end
  def test_flows_aa30; assert_in_delta(0, (worksheet.flows_aa30||0), 0.001); end
  def test_flows_ab30; assert_in_delta(0, (worksheet.flows_ab30||0), 0.001); end
  def test_flows_ad30; assert_in_epsilon(152.8, worksheet.flows_ad30, 0.001); end
  def test_flows_ae30; assert_in_epsilon(125.0236041697801, worksheet.flows_ae30, 0.001); end
  def test_flows_af30; assert_in_epsilon(141.92775040162394, worksheet.flows_af30, 0.001); end
  def test_flows_ag30; assert_in_epsilon(160.72464692710642, worksheet.flows_ag30, 0.001); end
  def test_flows_ah30; assert_in_epsilon(170.5797951758127, worksheet.flows_ah30, 0.001); end
  def test_flows_ai30; assert_in_epsilon(178.72784123896676, worksheet.flows_ai30, 0.001); end
  def test_flows_aj30; assert_in_epsilon(190.58889075870331, worksheet.flows_aj30, 0.001); end
  def test_flows_ak30; assert_in_epsilon(194.9306323392334, worksheet.flows_ak30, 0.001); end
  def test_flows_al30; assert_in_epsilon(196.4187558423291, worksheet.flows_al30, 0.001); end
  def test_flows_am30; assert_in_epsilon(188.58168305622323, worksheet.flows_am30, 0.001); end
  def test_flows_c31; assert_equal("Gas", worksheet.flows_c31); end
  def test_flows_d31; assert_equal("Over generation / exports", worksheet.flows_d31); end
  def test_flows_e31; assert_in_delta(0, (worksheet.flows_e31||0), 0.001); end
  def test_flows_f31; assert_in_delta(0, (worksheet.flows_f31||0), 0.001); end
  def test_flows_g31; assert_in_delta(0, (worksheet.flows_g31||0), 0.001); end
  def test_flows_h31; assert_in_delta(0, (worksheet.flows_h31||0), 0.001); end
  def test_flows_i31; assert_in_delta(0, (worksheet.flows_i31||0), 0.001); end
  def test_flows_j31; assert_in_delta(0, (worksheet.flows_j31||0), 0.001); end
  def test_flows_k31; assert_in_delta(0, (worksheet.flows_k31||0), 0.001); end
  def test_flows_l31; assert_in_delta(0, (worksheet.flows_l31||0), 0.001); end
  def test_flows_m31; assert_in_delta(0, (worksheet.flows_m31||0), 0.001); end
  def test_flows_n31; assert_in_delta(0, (worksheet.flows_n31||0), 0.001); end
  def test_flows_r31; assert_equal("International shipping", worksheet.flows_r31); end
  def test_flows_s31; assert_in_delta(0, (worksheet.flows_s31||0), 0.001); end
  def test_flows_t31; assert_in_delta(0, (worksheet.flows_t31||0), 0.001); end
  def test_flows_u31; assert_in_delta(0, (worksheet.flows_u31||0), 0.001); end
  def test_flows_v31; assert_in_delta(0, (worksheet.flows_v31||0), 0.001); end
  def test_flows_w31; assert_in_delta(0, (worksheet.flows_w31||0), 0.001); end
  def test_flows_x31; assert_in_delta(0, (worksheet.flows_x31||0), 0.001); end
  def test_flows_y31; assert_in_delta(0, (worksheet.flows_y31||0), 0.001); end
  def test_flows_z31; assert_in_delta(0, (worksheet.flows_z31||0), 0.001); end
  def test_flows_aa31; assert_in_delta(0, (worksheet.flows_aa31||0), 0.001); end
  def test_flows_ab31; assert_in_delta(0, (worksheet.flows_ab31||0), 0.001); end
  def test_flows_ad31; assert_in_epsilon(54.1581570872572, worksheet.flows_ad31, 0.001); end
  def test_flows_ae31; assert_in_epsilon(57.28499215184298, worksheet.flows_ae31, 0.001); end
  def test_flows_af31; assert_in_epsilon(62.90268134716652, worksheet.flows_af31, 0.001); end
  def test_flows_ag31; assert_in_epsilon(69.07127280693672, worksheet.flows_ag31, 0.001); end
  def test_flows_ah31; assert_in_epsilon(76.70040745020478, worksheet.flows_ah31, 0.001); end
  def test_flows_ai31; assert_in_epsilon(85.17220349292045, worksheet.flows_ai31, 0.001); end
  def test_flows_aj31; assert_in_epsilon(94.57973547988082, worksheet.flows_aj31, 0.001); end
  def test_flows_ak31; assert_in_epsilon(105.02635832578606, worksheet.flows_ak31, 0.001); end
  def test_flows_al31; assert_in_epsilon(116.62684281373198, worksheet.flows_al31, 0.001); end
  def test_flows_am31; assert_in_epsilon(129.50863651300597, worksheet.flows_am31, 0.001); end
  def test_flows_c32; assert_equal("Solid", worksheet.flows_c32); end
  def test_flows_d32; assert_equal("Thermal generation", worksheet.flows_d32); end
  def test_flows_e32; assert_in_epsilon(426.5928682890119, worksheet.flows_e32, 0.001); end
  def test_flows_f32; assert_in_epsilon(434.1451350399233, worksheet.flows_f32, 0.001); end
  def test_flows_g32; assert_in_epsilon(381.07842087272735, worksheet.flows_g32, 0.001); end
  def test_flows_h32; assert_in_epsilon(294.538574, worksheet.flows_h32, 0.001); end
  def test_flows_i32; assert_in_epsilon(160.86821994782608, worksheet.flows_i32, 0.001); end
  def test_flows_j32; assert_in_epsilon(52.95223531914894, worksheet.flows_j32, 0.001); end
  def test_flows_k32; assert_in_epsilon(33.60482625, worksheet.flows_k32, 0.001); end
  def test_flows_l32; assert_in_epsilon(33.60482625, worksheet.flows_l32, 0.001); end
  def test_flows_m32; assert_in_epsilon(33.20882816326531, worksheet.flows_m32, 0.001); end
  def test_flows_n32; assert_in_epsilon(32.82867, worksheet.flows_n32, 0.001); end
  def test_flows_r32; assert_equal("Lighting & appliances - commercial", worksheet.flows_r32); end
  def test_flows_s32; assert_in_delta(0, (worksheet.flows_s32||0), 0.001); end
  def test_flows_t32; assert_in_delta(0, (worksheet.flows_t32||0), 0.001); end
  def test_flows_u32; assert_in_delta(0, (worksheet.flows_u32||0), 0.001); end
  def test_flows_v32; assert_in_delta(0, (worksheet.flows_v32||0), 0.001); end
  def test_flows_w32; assert_in_delta(0, (worksheet.flows_w32||0), 0.001); end
  def test_flows_x32; assert_in_delta(0, (worksheet.flows_x32||0), 0.001); end
  def test_flows_y32; assert_in_delta(0, (worksheet.flows_y32||0), 0.001); end
  def test_flows_z32; assert_in_delta(0, (worksheet.flows_z32||0), 0.001); end
  def test_flows_aa32; assert_in_delta(0, (worksheet.flows_aa32||0), 0.001); end
  def test_flows_ab32; assert_in_delta(0, (worksheet.flows_ab32||0), 0.001); end
  def test_flows_ad32; assert_in_epsilon(81.62029588380175, worksheet.flows_ad32, 0.001); end
  def test_flows_ae32; assert_in_epsilon(82.03479844854478, worksheet.flows_ae32, 0.001); end
  def test_flows_af32; assert_in_epsilon(84.15345336146986, worksheet.flows_af32, 0.001); end
  def test_flows_ag32; assert_in_epsilon(86.35128532941522, worksheet.flows_ag32, 0.001); end
  def test_flows_ah32; assert_in_epsilon(88.63150152474631, worksheet.flows_ah32, 0.001); end
  def test_flows_ai32; assert_in_epsilon(90.99744777451708, worksheet.flows_ai32, 0.001); end
  def test_flows_aj32; assert_in_epsilon(93.45261487778345, worksheet.flows_aj32, 0.001); end
  def test_flows_ak32; assert_in_epsilon(96.00064522204762, worksheet.flows_ak32, 0.001); end
  def test_flows_al32; assert_in_epsilon(98.64533971337013, worksheet.flows_al32, 0.001); end
  def test_flows_am32; assert_in_epsilon(101.39066503541156, worksheet.flows_am32, 0.001); end
  def test_flows_c33; assert_equal("Liquid", worksheet.flows_c33); end
  def test_flows_d33; assert_equal("Thermal generation", worksheet.flows_d33); end
  def test_flows_e33; assert_in_epsilon(9.479109818726624, worksheet.flows_e33, 0.001); end
  def test_flows_f33; assert_in_epsilon(8.534858112, worksheet.flows_f33, 0.001); end
  def test_flows_g33; assert_in_delta(0, (worksheet.flows_g33||0), 0.001); end
  def test_flows_h33; assert_in_delta(0, (worksheet.flows_h33||0), 0.001); end
  def test_flows_i33; assert_in_delta(0, (worksheet.flows_i33||0), 0.001); end
  def test_flows_j33; assert_in_delta(0, (worksheet.flows_j33||0), 0.001); end
  def test_flows_k33; assert_in_delta(0, (worksheet.flows_k33||0), 0.001); end
  def test_flows_l33; assert_in_delta(0, (worksheet.flows_l33||0), 0.001); end
  def test_flows_m33; assert_in_delta(0, (worksheet.flows_m33||0), 0.001); end
  def test_flows_n33; assert_in_delta(0, (worksheet.flows_n33||0), 0.001); end
  def test_flows_r33; assert_equal("Lighting & appliances - homes", worksheet.flows_r33); end
  def test_flows_s33; assert_in_delta(0, (worksheet.flows_s33||0), 0.001); end
  def test_flows_t33; assert_in_delta(0, (worksheet.flows_t33||0), 0.001); end
  def test_flows_u33; assert_in_delta(0, (worksheet.flows_u33||0), 0.001); end
  def test_flows_v33; assert_in_delta(0, (worksheet.flows_v33||0), 0.001); end
  def test_flows_w33; assert_in_delta(0, (worksheet.flows_w33||0), 0.001); end
  def test_flows_x33; assert_in_delta(0, (worksheet.flows_x33||0), 0.001); end
  def test_flows_y33; assert_in_delta(0, (worksheet.flows_y33||0), 0.001); end
  def test_flows_z33; assert_in_delta(0, (worksheet.flows_z33||0), 0.001); end
  def test_flows_aa33; assert_in_delta(0, (worksheet.flows_aa33||0), 0.001); end
  def test_flows_ab33; assert_in_delta(0, (worksheet.flows_ab33||0), 0.001); end
  def test_flows_ad33; assert_in_epsilon(94.7405061758441, worksheet.flows_ad33, 0.001); end
  def test_flows_ae33; assert_in_epsilon(95.39317091355828, worksheet.flows_ae33, 0.001); end
  def test_flows_af33; assert_in_epsilon(97.49406703210153, worksheet.flows_af33, 0.001); end
  def test_flows_ag33; assert_in_epsilon(99.47957406840723, worksheet.flows_ag33, 0.001); end
  def test_flows_ah33; assert_in_epsilon(101.17895858855188, worksheet.flows_ah33, 0.001); end
  def test_flows_ai33; assert_in_epsilon(102.58198044023743, worksheet.flows_ai33, 0.001); end
  def test_flows_aj33; assert_in_epsilon(104.71146201375916, worksheet.flows_aj33, 0.001); end
  def test_flows_ak33; assert_in_epsilon(106.85595455199297, worksheet.flows_ak33, 0.001); end
  def test_flows_al33; assert_in_epsilon(109.09596238766956, worksheet.flows_al33, 0.001); end
  def test_flows_am33; assert_in_epsilon(111.43620774985737, worksheet.flows_am33, 0.001); end
  def test_flows_c34; assert_equal("Gas", worksheet.flows_c34); end
  def test_flows_d34; assert_equal("Thermal generation", worksheet.flows_d34); end
  def test_flows_e34; assert_in_epsilon(350.57120492669185, worksheet.flows_e34, 0.001); end
  def test_flows_f34; assert_in_epsilon(343.3066403541333, worksheet.flows_f34, 0.001); end
  def test_flows_g34; assert_in_epsilon(391.99368158634974, worksheet.flows_g34, 0.001); end
  def test_flows_h34; assert_in_epsilon(491.9769444615879, worksheet.flows_h34, 0.001); end
  def test_flows_i34; assert_in_epsilon(640.985321717101, worksheet.flows_i34, 0.001); end
  def test_flows_j34; assert_in_epsilon(783.6902160176592, worksheet.flows_j34, 0.001); end
  def test_flows_k34; assert_in_epsilon(901.4217750300174, worksheet.flows_k34, 0.001); end
  def test_flows_l34; assert_in_epsilon(993.9226488871776, worksheet.flows_l34, 0.001); end
  def test_flows_m34; assert_in_epsilon(1086.044761090419, worksheet.flows_m34, 0.001); end
  def test_flows_n34; assert_in_epsilon(1152.7946373182087, worksheet.flows_n34, 0.001); end
  def test_flows_r34; assert_equal("Liquid", worksheet.flows_r34); end
  def test_flows_s34; assert_in_epsilon(980.3815848915083, worksheet.flows_s34, 0.001); end
  def test_flows_t34; assert_in_epsilon(868.8924025606916, worksheet.flows_t34, 0.001); end
  def test_flows_u34; assert_in_epsilon(856.5464311602528, worksheet.flows_u34, 0.001); end
  def test_flows_v34; assert_in_epsilon(861.6277604642428, worksheet.flows_v34, 0.001); end
  def test_flows_w34; assert_in_epsilon(849.0972000576121, worksheet.flows_w34, 0.001); end
  def test_flows_x34; assert_in_epsilon(832.634954586045, worksheet.flows_x34, 0.001); end
  def test_flows_y34; assert_in_epsilon(852.4348097397128, worksheet.flows_y34, 0.001); end
  def test_flows_z34; assert_in_epsilon(864.2080474650459, worksheet.flows_z34, 0.001); end
  def test_flows_aa34; assert_in_epsilon(879.6884500466551, worksheet.flows_aa34, 0.001); end
  def test_flows_ab34; assert_in_epsilon(887.8266553154101, worksheet.flows_ab34, 0.001); end
  def test_flows_ad34; assert_in_epsilon(977.4538135720204, worksheet.flows_ad34, 0.001); end
  def test_flows_ae34; assert_in_epsilon(869.2602351188311, worksheet.flows_ae34, 0.001); end
  def test_flows_af34; assert_in_epsilon(856.8682846486249, worksheet.flows_af34, 0.001); end
  def test_flows_ag34; assert_in_epsilon(861.9036348828474, worksheet.flows_ag34, 0.001); end
  def test_flows_ah34; assert_in_epsilon(849.3270954064493, worksheet.flows_ah34, 0.001); end
  def test_flows_ai34; assert_in_epsilon(832.8188708651147, worksheet.flows_ai34, 0.001); end
  def test_flows_aj34; assert_in_epsilon(852.5727469490149, worksheet.flows_aj34, 0.001); end
  def test_flows_ak34; assert_in_epsilon(864.3000056045807, worksheet.flows_ak34, 0.001); end
  def test_flows_al34; assert_in_epsilon(879.7344291164226, worksheet.flows_al34, 0.001); end
  def test_flows_am34; assert_in_epsilon(887.8266553154101, worksheet.flows_am34, 0.001); end
  def test_flows_ao34; assert_in_epsilon(2.9277713194878743, worksheet.flows_ao34, 0.001); end
  def test_flows_ap34; assert_in_delta(-0.36783255813952564, worksheet.flows_ap34, 0.001); end
  def test_flows_aq34; assert_in_delta(-0.32185348837208494, worksheet.flows_aq34, 0.001); end
  def test_flows_ar34; assert_in_delta(-0.27587441860464423, worksheet.flows_ar34, 0.001); end
  def test_flows_as34; assert_in_delta(-0.22989534883720353, worksheet.flows_as34, 0.001); end
  def test_flows_at34; assert_in_delta(-0.18391627906976282, worksheet.flows_at34, 0.001); end
  def test_flows_au34; assert_in_delta(-0.13793720930209474, worksheet.flows_au34, 0.001); end
  def test_flows_av34; assert_in_delta(-0.09195813953488141, worksheet.flows_av34, 0.001); end
  def test_flows_aw34; assert_in_delta(-0.045979069767440706, worksheet.flows_aw34, 0.001); end
  def test_flows_ax34; assert_in_delta(0, (worksheet.flows_ax34||0), 0.001); end
  def test_flows_c35; assert_equal("Nuclear", worksheet.flows_c35); end
  def test_flows_d35; assert_equal("Thermal generation", worksheet.flows_d35); end
  def test_flows_e35; assert_in_epsilon(163.91620313701554, worksheet.flows_e35, 0.001); end
  def test_flows_f35; assert_in_epsilon(160.70999999999998, worksheet.flows_f35, 0.001); end
  def test_flows_g35; assert_in_epsilon(134.9964, worksheet.flows_g35, 0.001); end
  def test_flows_h35; assert_in_epsilon(77.14080000000003, worksheet.flows_h35, 0.001); end
  def test_flows_i35; assert_in_epsilon(25.713600000000014, worksheet.flows_i35, 0.001); end
  def test_flows_j35; assert_in_epsilon(25.713600000000014, worksheet.flows_j35, 0.001); end
  def test_flows_k35; assert_in_delta(0, (worksheet.flows_k35||0), 0.001); end
  def test_flows_l35; assert_in_delta(0, (worksheet.flows_l35||0), 0.001); end
  def test_flows_m35; assert_in_delta(0, (worksheet.flows_m35||0), 0.001); end
  def test_flows_n35; assert_in_delta(0, (worksheet.flows_n35||0), 0.001); end
  def test_flows_r35; assert_equal("Losses", worksheet.flows_r35); end
  def test_flows_s35; assert_in_delta(0, (worksheet.flows_s35||0), 0.001); end
  def test_flows_t35; assert_in_delta(0, (worksheet.flows_t35||0), 0.001); end
  def test_flows_u35; assert_in_delta(0, (worksheet.flows_u35||0), 0.001); end
  def test_flows_v35; assert_in_delta(0, (worksheet.flows_v35||0), 0.001); end
  def test_flows_w35; assert_in_delta(0, (worksheet.flows_w35||0), 0.001); end
  def test_flows_x35; assert_in_delta(0, (worksheet.flows_x35||0), 0.001); end
  def test_flows_y35; assert_in_delta(0, (worksheet.flows_y35||0), 0.001); end
  def test_flows_z35; assert_in_delta(0, (worksheet.flows_z35||0), 0.001); end
  def test_flows_aa35; assert_in_delta(0, (worksheet.flows_aa35||0), 0.001); end
  def test_flows_ab35; assert_in_delta(0, (worksheet.flows_ab35||0), 0.001); end
  def test_flows_ad35; assert_in_epsilon(614.5376407035722, worksheet.flows_ad35, 0.001); end
  def test_flows_ae35; assert_in_epsilon(615.5268253921754, worksheet.flows_ae35, 0.001); end
  def test_flows_af35; assert_in_epsilon(585.0713807765101, worksheet.flows_af35, 0.001); end
  def test_flows_ag35; assert_in_epsilon(545.8844557760032, worksheet.flows_ag35, 0.001); end
  def test_flows_ah35; assert_in_epsilon(497.90282034892726, worksheet.flows_ah35, 0.001); end
  def test_flows_ai35; assert_in_epsilon(502.99913349217064, worksheet.flows_ai35, 0.001); end
  def test_flows_aj35; assert_in_epsilon(536.765974700432, worksheet.flows_aj35, 0.001); end
  def test_flows_ak35; assert_in_epsilon(587.8392946937925, worksheet.flows_ak35, 0.001); end
  def test_flows_al35; assert_in_epsilon(638.4432997802064, worksheet.flows_al35, 0.001); end
  def test_flows_am35; assert_in_epsilon(676.0221029604164, worksheet.flows_am35, 0.001); end
  def test_flows_c36; assert_equal("Thermal generation", worksheet.flows_c36); end
  def test_flows_d36; assert_equal("District heating", worksheet.flows_d36); end
  def test_flows_e36; assert_in_epsilon(8.813193136590819, worksheet.flows_e36, 0.001); end
  def test_flows_f36; assert_in_epsilon(9.042140030873806, worksheet.flows_f36, 0.001); end
  def test_flows_g36; assert_in_epsilon(9.48727928745219, worksheet.flows_g36, 0.001); end
  def test_flows_h36; assert_in_epsilon(9.968747932095416, worksheet.flows_h36, 0.001); end
  def test_flows_i36; assert_in_epsilon(10.73757752705611, worksheet.flows_i36, 0.001); end
  def test_flows_j36; assert_in_epsilon(11.598323282621358, worksheet.flows_j36, 0.001); end
  def test_flows_k36; assert_in_epsilon(12.559114593882597, worksheet.flows_k36, 0.001); end
  def test_flows_l36; assert_in_epsilon(13.62952356526122, worksheet.flows_l36, 0.001); end
  def test_flows_m36; assert_in_epsilon(14.820617944313286, worksheet.flows_m36, 0.001); end
  def test_flows_n36; assert_in_epsilon(16.145046318256654, worksheet.flows_n36, 0.001); end
  def test_flows_r36; assert_equal("Marine algae", worksheet.flows_r36); end
  def test_flows_s36; assert_in_delta(0, (worksheet.flows_s36||0), 0.001); end
  def test_flows_t36; assert_in_delta(0, (worksheet.flows_t36||0), 0.001); end
  def test_flows_u36; assert_in_delta(0, (worksheet.flows_u36||0), 0.001); end
  def test_flows_v36; assert_in_delta(0, (worksheet.flows_v36||0), 0.001); end
  def test_flows_w36; assert_in_delta(0, (worksheet.flows_w36||0), 0.001); end
  def test_flows_x36; assert_in_delta(0, (worksheet.flows_x36||0), 0.001); end
  def test_flows_y36; assert_in_delta(0, (worksheet.flows_y36||0), 0.001); end
  def test_flows_z36; assert_in_delta(0, (worksheet.flows_z36||0), 0.001); end
  def test_flows_aa36; assert_in_delta(0, (worksheet.flows_aa36||0), 0.001); end
  def test_flows_ab36; assert_in_delta(0, (worksheet.flows_ab36||0), 0.001); end
  def test_flows_ad36; assert_in_delta(0, (worksheet.flows_ad36||0), 0.001); end
  def test_flows_ae36; assert_in_delta(0, (worksheet.flows_ae36||0), 0.001); end
  def test_flows_af36; assert_in_delta(0, (worksheet.flows_af36||0), 0.001); end
  def test_flows_ag36; assert_in_delta(0, (worksheet.flows_ag36||0), 0.001); end
  def test_flows_ah36; assert_in_delta(0, (worksheet.flows_ah36||0), 0.001); end
  def test_flows_ai36; assert_in_delta(0, (worksheet.flows_ai36||0), 0.001); end
  def test_flows_aj36; assert_in_delta(0, (worksheet.flows_aj36||0), 0.001); end
  def test_flows_ak36; assert_in_delta(0, (worksheet.flows_ak36||0), 0.001); end
  def test_flows_al36; assert_in_delta(0, (worksheet.flows_al36||0), 0.001); end
  def test_flows_am36; assert_in_delta(0, (worksheet.flows_am36||0), 0.001); end
  def test_flows_c37; assert_equal("Thermal generation", worksheet.flows_c37); end
  def test_flows_d37; assert_equal("Electricity grid", worksheet.flows_d37); end
  def test_flows_e37; assert_in_epsilon(371.04544619856586, worksheet.flows_e37, 0.001); end
  def test_flows_f37; assert_in_epsilon(366.4405940522287, worksheet.flows_f37, 0.001); end
  def test_flows_g37; assert_in_epsilon(361.993262289115, worksheet.flows_g37, 0.001); end
  def test_flows_h37; assert_in_epsilon(364.31633943153156, worksheet.flows_h37, 0.001); end
  def test_flows_i37; assert_in_epsilon(376.1008348160723, worksheet.flows_i37, 0.001); end
  def test_flows_j37; assert_in_epsilon(410.1991758726883, worksheet.flows_j37, 0.001); end
  def test_flows_k37; assert_in_epsilon(453.11202840014784, worksheet.flows_k37, 0.001); end
  def test_flows_l37; assert_in_epsilon(498.36673868715053, worksheet.flows_l37, 0.001); end
  def test_flows_m37; assert_in_epsilon(543.4265396150585, worksheet.flows_m37, 0.001); end
  def test_flows_n37; assert_in_epsilon(576.0327660656261, worksheet.flows_n37, 0.001); end
  def test_flows_r37; assert_equal("National navigation", worksheet.flows_r37); end
  def test_flows_s37; assert_in_delta(0, (worksheet.flows_s37||0), 0.001); end
  def test_flows_t37; assert_in_delta(0, (worksheet.flows_t37||0), 0.001); end
  def test_flows_u37; assert_in_delta(0, (worksheet.flows_u37||0), 0.001); end
  def test_flows_v37; assert_in_delta(0, (worksheet.flows_v37||0), 0.001); end
  def test_flows_w37; assert_in_delta(0, (worksheet.flows_w37||0), 0.001); end
  def test_flows_x37; assert_in_delta(0, (worksheet.flows_x37||0), 0.001); end
  def test_flows_y37; assert_in_delta(0, (worksheet.flows_y37||0), 0.001); end
  def test_flows_z37; assert_in_delta(0, (worksheet.flows_z37||0), 0.001); end
  def test_flows_aa37; assert_in_delta(0, (worksheet.flows_aa37||0), 0.001); end
  def test_flows_ab37; assert_in_delta(0, (worksheet.flows_ab37||0), 0.001); end
  def test_flows_ad37; assert_in_epsilon(18.817339999999998, worksheet.flows_ad37, 0.001); end
  def test_flows_ae37; assert_in_epsilon(26.572895707388618, worksheet.flows_ae37, 0.001); end
  def test_flows_af37; assert_in_epsilon(25.383064556311584, worksheet.flows_af37, 0.001); end
  def test_flows_ag37; assert_in_epsilon(24.58984378892685, worksheet.flows_ag37, 0.001); end
  def test_flows_ah37; assert_in_epsilon(23.99670495670838, worksheet.flows_ah37, 0.001); end
  def test_flows_ai37; assert_in_epsilon(23.688791719453825, worksheet.flows_ai37, 0.001); end
  def test_flows_aj37; assert_in_epsilon(23.384829464713203, worksheet.flows_aj37, 0.001); end
  def test_flows_ak37; assert_in_epsilon(23.084767495533725, worksheet.flows_ak37, 0.001); end
  def test_flows_al37; assert_in_epsilon(22.788555765479813, worksheet.flows_al37, 0.001); end
  def test_flows_am37; assert_in_epsilon(22.49614487028552, worksheet.flows_am37, 0.001); end
  def test_flows_c38; assert_equal("Thermal generation", worksheet.flows_c38); end
  def test_flows_d38; assert_equal("Losses", worksheet.flows_d38); end
  def test_flows_e38; assert_in_epsilon(570.7007468362892, worksheet.flows_e38, 0.001); end
  def test_flows_f38; assert_in_epsilon(571.213899422954, worksheet.flows_f38, 0.001); end
  def test_flows_g38; assert_in_epsilon(536.5879608825096, worksheet.flows_g38, 0.001); end
  def test_flows_h38; assert_in_epsilon(489.37123109796084, worksheet.flows_h38, 0.001); end
  def test_flows_i38; assert_in_epsilon(440.7287293217987, worksheet.flows_i38, 0.001); end
  def test_flows_j38; assert_in_epsilon(440.55855218149856, worksheet.flows_j38, 0.001); end
  def test_flows_k38; assert_in_epsilon(469.35545828598697, worksheet.flows_k38, 0.001); end
  def test_flows_l38; assert_in_epsilon(515.5312128847659, worksheet.flows_l38, 0.001); end
  def test_flows_m38; assert_in_epsilon(561.0064316943125, worksheet.flows_m38, 0.001); end
  def test_flows_n38; assert_in_epsilon(593.445494934326, worksheet.flows_n38, 0.001); end
  def test_flows_r38; assert_equal("Natural Gas", worksheet.flows_r38); end
  def test_flows_s38; assert_in_epsilon(978.0856143179448, worksheet.flows_s38, 0.001); end
  def test_flows_t38; assert_in_epsilon(1001.4318635490304, worksheet.flows_t38, 0.001); end
  def test_flows_u38; assert_in_epsilon(1080.1732409505273, worksheet.flows_u38, 0.001); end
  def test_flows_v38; assert_in_epsilon(1202.7184729043995, worksheet.flows_v38, 0.001); end
  def test_flows_w38; assert_in_epsilon(1389.160504918114, worksheet.flows_w38, 0.001); end
  def test_flows_x38; assert_in_epsilon(1575.1707290298787, worksheet.flows_x38, 0.001); end
  def test_flows_y38; assert_in_epsilon(1728.4313689906198, worksheet.flows_y38, 0.001); end
  def test_flows_z38; assert_in_epsilon(1861.115383171855, worksheet.flows_z38, 0.001); end
  def test_flows_aa38; assert_in_epsilon(1998.803224690223, worksheet.flows_aa38, 0.001); end
  def test_flows_ab38; assert_in_epsilon(2116.5585654929237, worksheet.flows_ab38, 0.001); end
  def test_flows_ad38; assert_in_epsilon(978.0856143179448, worksheet.flows_ad38, 0.001); end
  def test_flows_ae38; assert_in_epsilon(1001.4318635490304, worksheet.flows_ae38, 0.001); end
  def test_flows_af38; assert_in_epsilon(1080.1732409505273, worksheet.flows_af38, 0.001); end
  def test_flows_ag38; assert_in_epsilon(1202.7184729043995, worksheet.flows_ag38, 0.001); end
  def test_flows_ah38; assert_in_epsilon(1389.160504918114, worksheet.flows_ah38, 0.001); end
  def test_flows_ai38; assert_in_epsilon(1575.1707290298787, worksheet.flows_ai38, 0.001); end
  def test_flows_aj38; assert_in_epsilon(1728.4313689906198, worksheet.flows_aj38, 0.001); end
  def test_flows_ak38; assert_in_epsilon(1861.115383171855, worksheet.flows_ak38, 0.001); end
  def test_flows_al38; assert_in_epsilon(1998.803224690223, worksheet.flows_al38, 0.001); end
  def test_flows_am38; assert_in_epsilon(2116.5585654929237, worksheet.flows_am38, 0.001); end
  def test_flows_ao38; assert_in_delta(0, (worksheet.flows_ao38||0), 0.001); end
  def test_flows_ap38; assert_in_delta(0, (worksheet.flows_ap38||0), 0.001); end
  def test_flows_aq38; assert_in_delta(0, (worksheet.flows_aq38||0), 0.001); end
  def test_flows_ar38; assert_in_delta(0, (worksheet.flows_ar38||0), 0.001); end
  def test_flows_as38; assert_in_delta(0, (worksheet.flows_as38||0), 0.001); end
  def test_flows_at38; assert_in_delta(0, (worksheet.flows_at38||0), 0.001); end
  def test_flows_au38; assert_in_delta(0, (worksheet.flows_au38||0), 0.001); end
  def test_flows_av38; assert_in_delta(0, (worksheet.flows_av38||0), 0.001); end
  def test_flows_aw38; assert_in_delta(0, (worksheet.flows_aw38||0), 0.001); end
  def test_flows_ax38; assert_in_delta(0, (worksheet.flows_ax38||0), 0.001); end
  def test_flows_c39; assert_equal("Solid", worksheet.flows_c39); end
  def test_flows_d39; assert_equal("CHP", worksheet.flows_d39); end
  def test_flows_e39; assert_in_delta(0, (worksheet.flows_e39||0), 0.001); end
  def test_flows_f39; assert_in_delta(0, (worksheet.flows_f39||0), 0.001); end
  def test_flows_g39; assert_in_delta(0, (worksheet.flows_g39||0), 0.001); end
  def test_flows_h39; assert_in_delta(0, (worksheet.flows_h39||0), 0.001); end
  def test_flows_i39; assert_in_delta(0, (worksheet.flows_i39||0), 0.001); end
  def test_flows_j39; assert_in_delta(0, (worksheet.flows_j39||0), 0.001); end
  def test_flows_k39; assert_in_delta(0, (worksheet.flows_k39||0), 0.001); end
  def test_flows_l39; assert_in_delta(0, (worksheet.flows_l39||0), 0.001); end
  def test_flows_m39; assert_in_delta(0, (worksheet.flows_m39||0), 0.001); end
  def test_flows_n39; assert_in_delta(0, (worksheet.flows_n39||0), 0.001); end
  def test_flows_r39; assert_equal("Nuclear", worksheet.flows_r39); end
  def test_flows_s39; assert_in_epsilon(163.91620313701554, worksheet.flows_s39, 0.001); end
  def test_flows_t39; assert_in_epsilon(160.70999999999998, worksheet.flows_t39, 0.001); end
  def test_flows_u39; assert_in_epsilon(134.9964, worksheet.flows_u39, 0.001); end
  def test_flows_v39; assert_in_epsilon(77.14080000000003, worksheet.flows_v39, 0.001); end
  def test_flows_w39; assert_in_epsilon(25.713600000000014, worksheet.flows_w39, 0.001); end
  def test_flows_x39; assert_in_epsilon(25.713600000000014, worksheet.flows_x39, 0.001); end
  def test_flows_y39; assert_in_delta(0, (worksheet.flows_y39||0), 0.001); end
  def test_flows_z39; assert_in_delta(0, (worksheet.flows_z39||0), 0.001); end
  def test_flows_aa39; assert_in_delta(0, (worksheet.flows_aa39||0), 0.001); end
  def test_flows_ab39; assert_in_delta(0, (worksheet.flows_ab39||0), 0.001); end
  def test_flows_ad39; assert_in_delta(0, (worksheet.flows_ad39||0), 0.001); end
  def test_flows_ae39; assert_in_delta(0, (worksheet.flows_ae39||0), 0.001); end
  def test_flows_af39; assert_in_delta(0, (worksheet.flows_af39||0), 0.001); end
  def test_flows_ag39; assert_in_delta(0, (worksheet.flows_ag39||0), 0.001); end
  def test_flows_ah39; assert_in_delta(0, (worksheet.flows_ah39||0), 0.001); end
  def test_flows_ai39; assert_in_delta(0, (worksheet.flows_ai39||0), 0.001); end
  def test_flows_aj39; assert_in_delta(0, (worksheet.flows_aj39||0), 0.001); end
  def test_flows_ak39; assert_in_delta(0, (worksheet.flows_ak39||0), 0.001); end
  def test_flows_al39; assert_in_delta(0, (worksheet.flows_al39||0), 0.001); end
  def test_flows_am39; assert_in_delta(0, (worksheet.flows_am39||0), 0.001); end
  def test_flows_c40; assert_equal("Liquid", worksheet.flows_c40); end
  def test_flows_d40; assert_equal("CHP", worksheet.flows_d40); end
  def test_flows_e40; assert_in_delta(0, (worksheet.flows_e40||0), 0.001); end
  def test_flows_f40; assert_in_delta(0, (worksheet.flows_f40||0), 0.001); end
  def test_flows_g40; assert_in_delta(0, (worksheet.flows_g40||0), 0.001); end
  def test_flows_h40; assert_in_delta(0, (worksheet.flows_h40||0), 0.001); end
  def test_flows_i40; assert_in_delta(0, (worksheet.flows_i40||0), 0.001); end
  def test_flows_j40; assert_in_delta(0, (worksheet.flows_j40||0), 0.001); end
  def test_flows_k40; assert_in_delta(0, (worksheet.flows_k40||0), 0.001); end
  def test_flows_l40; assert_in_delta(0, (worksheet.flows_l40||0), 0.001); end
  def test_flows_m40; assert_in_delta(0, (worksheet.flows_m40||0), 0.001); end
  def test_flows_n40; assert_in_delta(0, (worksheet.flows_n40||0), 0.001); end
  def test_flows_r40; assert_equal("Oil", worksheet.flows_r40); end
  def test_flows_s40; assert_in_epsilon(975.8912083497981, worksheet.flows_s40, 0.001); end
  def test_flows_t40; assert_in_epsilon(868.1911081134084, worksheet.flows_t40, 0.001); end
  def test_flows_u40; assert_in_epsilon(855.1870235798388, worksheet.flows_u40, 0.001); end
  def test_flows_v40; assert_in_epsilon(859.5939643444532, worksheet.flows_v40, 0.001); end
  def test_flows_w40; assert_in_epsilon(845.7983560433511, worksheet.flows_w40, 0.001); end
  def test_flows_x40; assert_in_epsilon(828.4897394075546, worksheet.flows_x40, 0.001); end
  def test_flows_y40; assert_in_epsilon(847.4223190112918, worksheet.flows_y40, 0.001); end
  def test_flows_z40; assert_in_epsilon(858.3068752198818, worksheet.flows_z40, 0.001); end
  def test_flows_aa40; assert_in_epsilon(872.8766716322104, worksheet.flows_aa40, 0.001); end
  def test_flows_ab40; assert_in_epsilon(880.0818093454258, worksheet.flows_ab40, 0.001); end
  def test_flows_ad40; assert_in_epsilon(975.8912083497981, worksheet.flows_ad40, 0.001); end
  def test_flows_ae40; assert_in_epsilon(868.1911081134084, worksheet.flows_ae40, 0.001); end
  def test_flows_af40; assert_in_epsilon(855.1870235798388, worksheet.flows_af40, 0.001); end
  def test_flows_ag40; assert_in_epsilon(859.5939643444532, worksheet.flows_ag40, 0.001); end
  def test_flows_ah40; assert_in_epsilon(845.7983560433511, worksheet.flows_ah40, 0.001); end
  def test_flows_ai40; assert_in_epsilon(828.4897394075546, worksheet.flows_ai40, 0.001); end
  def test_flows_aj40; assert_in_epsilon(847.4223190112918, worksheet.flows_aj40, 0.001); end
  def test_flows_ak40; assert_in_epsilon(858.3068752198818, worksheet.flows_ak40, 0.001); end
  def test_flows_al40; assert_in_epsilon(872.8766716322104, worksheet.flows_al40, 0.001); end
  def test_flows_am40; assert_in_epsilon(880.0818093454258, worksheet.flows_am40, 0.001); end
  def test_flows_ao40; assert_in_delta(0, (worksheet.flows_ao40||0), 0.001); end
  def test_flows_ap40; assert_in_delta(0, (worksheet.flows_ap40||0), 0.001); end
  def test_flows_aq40; assert_in_delta(0, (worksheet.flows_aq40||0), 0.001); end
  def test_flows_ar40; assert_in_delta(0, (worksheet.flows_ar40||0), 0.001); end
  def test_flows_as40; assert_in_delta(0, (worksheet.flows_as40||0), 0.001); end
  def test_flows_at40; assert_in_delta(0, (worksheet.flows_at40||0), 0.001); end
  def test_flows_au40; assert_in_delta(0, (worksheet.flows_au40||0), 0.001); end
  def test_flows_av40; assert_in_delta(0, (worksheet.flows_av40||0), 0.001); end
  def test_flows_aw40; assert_in_delta(0, (worksheet.flows_aw40||0), 0.001); end
  def test_flows_ax40; assert_in_delta(0, (worksheet.flows_ax40||0), 0.001); end
  def test_flows_c41; assert_equal("Gas", worksheet.flows_c41); end
  def test_flows_d41; assert_equal("CHP", worksheet.flows_d41); end
  def test_flows_e41; assert_in_delta(0, (worksheet.flows_e41||0), 0.001); end
  def test_flows_f41; assert_in_delta(0, (worksheet.flows_f41||0), 0.001); end
  def test_flows_g41; assert_in_delta(0, (worksheet.flows_g41||0), 0.001); end
  def test_flows_h41; assert_in_delta(0, (worksheet.flows_h41||0), 0.001); end
  def test_flows_i41; assert_in_delta(0, (worksheet.flows_i41||0), 0.001); end
  def test_flows_j41; assert_in_delta(0, (worksheet.flows_j41||0), 0.001); end
  def test_flows_k41; assert_in_delta(0, (worksheet.flows_k41||0), 0.001); end
  def test_flows_l41; assert_in_delta(0, (worksheet.flows_l41||0), 0.001); end
  def test_flows_m41; assert_in_delta(0, (worksheet.flows_m41||0), 0.001); end
  def test_flows_n41; assert_in_delta(0, (worksheet.flows_n41||0), 0.001); end
  def test_flows_r41; assert_equal("Oil imports", worksheet.flows_r41); end
  def test_flows_s41; assert_in_delta(0, (worksheet.flows_s41||0), 0.001); end
  def test_flows_t41; assert_in_epsilon(65.64315527619635, worksheet.flows_t41, 0.001); end
  def test_flows_u41; assert_in_epsilon(208.35818004652242, worksheet.flows_u41, 0.001); end
  def test_flows_v41; assert_in_epsilon(357.8050142717038, worksheet.flows_v41, 0.001); end
  def test_flows_w41; assert_in_epsilon(457.52363182891844, worksheet.flows_w41, 0.001); end
  def test_flows_x41; assert_in_epsilon(528.050159297357, worksheet.flows_x41, 0.001); end
  def test_flows_y41; assert_in_epsilon(614.947899051517, worksheet.flows_y41, 0.001); end
  def test_flows_z41; assert_in_epsilon(678.4226005986385, worksheet.flows_z41, 0.001); end
  def test_flows_aa41; assert_in_epsilon(733.6856489742773, worksheet.flows_aa41, 0.001); end
  def test_flows_ab41; assert_in_epsilon(772.3784493415866, worksheet.flows_ab41, 0.001); end
  def test_flows_ad41; assert_in_delta(0, (worksheet.flows_ad41||0), 0.001); end
  def test_flows_ae41; assert_in_delta(0, (worksheet.flows_ae41||0), 0.001); end
  def test_flows_af41; assert_in_delta(0, (worksheet.flows_af41||0), 0.001); end
  def test_flows_ag41; assert_in_delta(0, (worksheet.flows_ag41||0), 0.001); end
  def test_flows_ah41; assert_in_delta(0, (worksheet.flows_ah41||0), 0.001); end
  def test_flows_ai41; assert_in_delta(0, (worksheet.flows_ai41||0), 0.001); end
  def test_flows_aj41; assert_in_delta(0, (worksheet.flows_aj41||0), 0.001); end
  def test_flows_ak41; assert_in_delta(0, (worksheet.flows_ak41||0), 0.001); end
  def test_flows_al41; assert_in_delta(0, (worksheet.flows_al41||0), 0.001); end
  def test_flows_am41; assert_in_delta(0, (worksheet.flows_am41||0), 0.001); end
  def test_flows_c42; assert_equal("CHP", worksheet.flows_c42); end
  def test_flows_d42; assert_equal("Electricity grid", worksheet.flows_d42); end
  def test_flows_e42; assert_in_delta(0, (worksheet.flows_e42||0), 0.001); end
  def test_flows_f42; assert_in_delta(0, (worksheet.flows_f42||0), 0.001); end
  def test_flows_g42; assert_in_delta(0, (worksheet.flows_g42||0), 0.001); end
  def test_flows_h42; assert_in_delta(0, (worksheet.flows_h42||0), 0.001); end
  def test_flows_i42; assert_in_delta(0, (worksheet.flows_i42||0), 0.001); end
  def test_flows_j42; assert_in_delta(0, (worksheet.flows_j42||0), 0.001); end
  def test_flows_k42; assert_in_delta(0, (worksheet.flows_k42||0), 0.001); end
  def test_flows_l42; assert_in_delta(0, (worksheet.flows_l42||0), 0.001); end
  def test_flows_m42; assert_in_delta(0, (worksheet.flows_m42||0), 0.001); end
  def test_flows_n42; assert_in_delta(0, (worksheet.flows_n42||0), 0.001); end
  def test_flows_r42; assert_equal("Oil reserves", worksheet.flows_r42); end
  def test_flows_s42; assert_in_epsilon(975.8912083497981, worksheet.flows_s42, 0.001); end
  def test_flows_t42; assert_in_epsilon(802.547952837212, worksheet.flows_t42, 0.001); end
  def test_flows_u42; assert_in_epsilon(646.8288435333163, worksheet.flows_u42, 0.001); end
  def test_flows_v42; assert_in_epsilon(501.7889500727494, worksheet.flows_v42, 0.001); end
  def test_flows_w42; assert_in_epsilon(388.27472421443264, worksheet.flows_w42, 0.001); end
  def test_flows_x42; assert_in_epsilon(300.43958011019754, worksheet.flows_x42, 0.001); end
  def test_flows_y42; assert_in_epsilon(232.47441995977493, worksheet.flows_y42, 0.001); end
  def test_flows_z42; assert_in_epsilon(179.88427462124332, worksheet.flows_z42, 0.001); end
  def test_flows_aa42; assert_in_epsilon(139.19102265793308, worksheet.flows_aa42, 0.001); end
  def test_flows_ab42; assert_in_epsilon(107.70336000383915, worksheet.flows_ab42, 0.001); end
  def test_flows_ad42; assert_in_delta(0, (worksheet.flows_ad42||0), 0.001); end
  def test_flows_ae42; assert_in_delta(0, (worksheet.flows_ae42||0), 0.001); end
  def test_flows_af42; assert_in_delta(0, (worksheet.flows_af42||0), 0.001); end
  def test_flows_ag42; assert_in_delta(0, (worksheet.flows_ag42||0), 0.001); end
  def test_flows_ah42; assert_in_delta(0, (worksheet.flows_ah42||0), 0.001); end
  def test_flows_ai42; assert_in_delta(0, (worksheet.flows_ai42||0), 0.001); end
  def test_flows_aj42; assert_in_delta(0, (worksheet.flows_aj42||0), 0.001); end
  def test_flows_ak42; assert_in_delta(0, (worksheet.flows_ak42||0), 0.001); end
  def test_flows_al42; assert_in_delta(0, (worksheet.flows_al42||0), 0.001); end
  def test_flows_am42; assert_in_delta(0, (worksheet.flows_am42||0), 0.001); end
  def test_flows_c43; assert_equal("CHP", worksheet.flows_c43); end
  def test_flows_d43; assert_equal("Losses", worksheet.flows_d43); end
  def test_flows_e43; assert_in_delta(0, (worksheet.flows_e43||0), 0.001); end
  def test_flows_f43; assert_in_delta(0, (worksheet.flows_f43||0), 0.001); end
  def test_flows_g43; assert_in_delta(0, (worksheet.flows_g43||0), 0.001); end
  def test_flows_h43; assert_in_delta(0, (worksheet.flows_h43||0), 0.001); end
  def test_flows_i43; assert_in_delta(0, (worksheet.flows_i43||0), 0.001); end
  def test_flows_j43; assert_in_delta(0, (worksheet.flows_j43||0), 0.001); end
  def test_flows_k43; assert_in_delta(0, (worksheet.flows_k43||0), 0.001); end
  def test_flows_l43; assert_in_delta(0, (worksheet.flows_l43||0), 0.001); end
  def test_flows_m43; assert_in_delta(0, (worksheet.flows_m43||0), 0.001); end
  def test_flows_n43; assert_in_delta(0, (worksheet.flows_n43||0), 0.001); end
  def test_flows_r43; assert_equal("Other waste", worksheet.flows_r43); end
  def test_flows_s43; assert_in_epsilon(42.43678729060374, worksheet.flows_s43, 0.001); end
  def test_flows_t43; assert_in_epsilon(35.83498297733027, worksheet.flows_t43, 0.001); end
  def test_flows_u43; assert_in_epsilon(36.22948545772632, worksheet.flows_u43, 0.001); end
  def test_flows_v43; assert_in_epsilon(36.399469747679824, worksheet.flows_v43, 0.001); end
  def test_flows_w43; assert_in_epsilon(39.86344675251034, worksheet.flows_w43, 0.001); end
  def test_flows_x43; assert_in_epsilon(43.815262464898986, worksheet.flows_x43, 0.001); end
  def test_flows_y43; assert_in_epsilon(46.19656972323991, worksheet.flows_y43, 0.001); end
  def test_flows_z43; assert_in_epsilon(48.78337005020964, worksheet.flows_z43, 0.001); end
  def test_flows_aa43; assert_in_epsilon(51.582129663212, worksheet.flows_aa43, 0.001); end
  def test_flows_ab43; assert_in_epsilon(54.59577646384282, worksheet.flows_ab43, 0.001); end
  def test_flows_ad43; assert_in_delta(0, (worksheet.flows_ad43||0), 0.001); end
  def test_flows_ae43; assert_in_delta(0, (worksheet.flows_ae43||0), 0.001); end
  def test_flows_af43; assert_in_delta(0, (worksheet.flows_af43||0), 0.001); end
  def test_flows_ag43; assert_in_delta(0, (worksheet.flows_ag43||0), 0.001); end
  def test_flows_ah43; assert_in_delta(0, (worksheet.flows_ah43||0), 0.001); end
  def test_flows_ai43; assert_in_delta(0, (worksheet.flows_ai43||0), 0.001); end
  def test_flows_aj43; assert_in_delta(0, (worksheet.flows_aj43||0), 0.001); end
  def test_flows_ak43; assert_in_delta(0, (worksheet.flows_ak43||0), 0.001); end
  def test_flows_al43; assert_in_delta(0, (worksheet.flows_al43||0), 0.001); end
  def test_flows_am43; assert_in_delta(0, (worksheet.flows_am43||0), 0.001); end
  def test_flows_c44; assert_equal("Electricity imports", worksheet.flows_c44); end
  def test_flows_d44; assert_equal("Electricity grid", worksheet.flows_d44); end
  def test_flows_e44; assert_in_delta(0, (worksheet.flows_e44||0), 0.001); end
  def test_flows_f44; assert_in_delta(0, (worksheet.flows_f44||0), 0.001); end
  def test_flows_g44; assert_in_delta(0, (worksheet.flows_g44||0), 0.001); end
  def test_flows_h44; assert_in_delta(0, (worksheet.flows_h44||0), 0.001); end
  def test_flows_i44; assert_in_delta(0, (worksheet.flows_i44||0), 0.001); end
  def test_flows_j44; assert_in_delta(0, (worksheet.flows_j44||0), 0.001); end
  def test_flows_k44; assert_in_delta(0, (worksheet.flows_k44||0), 0.001); end
  def test_flows_l44; assert_in_delta(0, (worksheet.flows_l44||0), 0.001); end
  def test_flows_m44; assert_in_delta(0, (worksheet.flows_m44||0), 0.001); end
  def test_flows_n44; assert_in_delta(0, (worksheet.flows_n44||0), 0.001); end
  def test_flows_r44; assert_equal("Over generation / exports", worksheet.flows_r44); end
  def test_flows_s44; assert_in_delta(0, (worksheet.flows_s44||0), 0.001); end
  def test_flows_t44; assert_in_delta(0, (worksheet.flows_t44||0), 0.001); end
  def test_flows_u44; assert_in_delta(0, (worksheet.flows_u44||0), 0.001); end
  def test_flows_v44; assert_in_delta(0, (worksheet.flows_v44||0), 0.001); end
  def test_flows_w44; assert_in_delta(0, (worksheet.flows_w44||0), 0.001); end
  def test_flows_x44; assert_in_delta(0, (worksheet.flows_x44||0), 0.001); end
  def test_flows_y44; assert_in_delta(0, (worksheet.flows_y44||0), 0.001); end
  def test_flows_z44; assert_in_delta(0, (worksheet.flows_z44||0), 0.001); end
  def test_flows_aa44; assert_in_delta(0, (worksheet.flows_aa44||0), 0.001); end
  def test_flows_ab44; assert_in_delta(0, (worksheet.flows_ab44||0), 0.001); end
  def test_flows_ad44; assert_in_epsilon(74.88229852333984, worksheet.flows_ad44, 0.001); end
  def test_flows_ae44; assert_in_delta(1.1368683772161603e-13, worksheet.flows_ae44, 0.001); end
  def test_flows_af44; assert_in_delta(0, (worksheet.flows_af44||0), 0.001); end
  def test_flows_ag44; assert_in_delta(0, (worksheet.flows_ag44||0), 0.001); end
  def test_flows_ah44; assert_in_delta(0, (worksheet.flows_ah44||0), 0.001); end
  def test_flows_ai44; assert_in_delta(0, (worksheet.flows_ai44||0), 0.001); end
  def test_flows_aj44; assert_in_delta(0, (worksheet.flows_aj44||0), 0.001); end
  def test_flows_ak44; assert_in_delta(0, (worksheet.flows_ak44||0), 0.001); end
  def test_flows_al44; assert_in_delta(0, (worksheet.flows_al44||0), 0.001); end
  def test_flows_am44; assert_in_delta(0, (worksheet.flows_am44||0), 0.001); end
  def test_flows_c45; assert_equal("Wind", worksheet.flows_c45); end
  def test_flows_d45; assert_equal("Electricity grid", worksheet.flows_d45); end
  def test_flows_e45; assert_in_epsilon(5.962752417600001, worksheet.flows_e45, 0.001); end
  def test_flows_f45; assert_in_epsilon(14.440670099999998, worksheet.flows_f45, 0.001); end
  def test_flows_g45; assert_in_epsilon(29.3428701, worksheet.flows_g45, 0.001); end
  def test_flows_h45; assert_in_epsilon(45.35726511600001, worksheet.flows_h45, 0.001); end
  def test_flows_i45; assert_in_epsilon(57.69377964, worksheet.flows_i45, 0.001); end
  def test_flows_j45; assert_in_epsilon(48.16934531999999, worksheet.flows_j45, 0.001); end
  def test_flows_k45; assert_in_epsilon(32.302885319999994, worksheet.flows_k45, 0.001); end
  def test_flows_l45; assert_in_epsilon(15.209185319999996, worksheet.flows_l45, 0.001); end
  def test_flows_m45; assert_in_delta(0.08783531999999616, worksheet.flows_m45, 0.001); end
  def test_flows_n45; assert_in_delta(0.08783531999999616, worksheet.flows_n45, 0.001); end
  def test_flows_r45; assert_equal("Pumped heat", worksheet.flows_r45); end
  def test_flows_s45; assert_in_delta(0, (worksheet.flows_s45||0), 0.001); end
  def test_flows_t45; assert_in_delta(0, (worksheet.flows_t45||0), 0.001); end
  def test_flows_u45; assert_in_delta(0, (worksheet.flows_u45||0), 0.001); end
  def test_flows_v45; assert_in_delta(0, (worksheet.flows_v45||0), 0.001); end
  def test_flows_w45; assert_in_delta(0, (worksheet.flows_w45||0), 0.001); end
  def test_flows_x45; assert_in_delta(0, (worksheet.flows_x45||0), 0.001); end
  def test_flows_y45; assert_in_delta(0, (worksheet.flows_y45||0), 0.001); end
  def test_flows_z45; assert_in_delta(0, (worksheet.flows_z45||0), 0.001); end
  def test_flows_aa45; assert_in_delta(0, (worksheet.flows_aa45||0), 0.001); end
  def test_flows_ab45; assert_in_delta(0, (worksheet.flows_ab45||0), 0.001); end
  def test_flows_ad45; assert_in_delta(0, (worksheet.flows_ad45||0), 0.001); end
  def test_flows_ae45; assert_in_delta(0, (worksheet.flows_ae45||0), 0.001); end
  def test_flows_af45; assert_in_delta(0, (worksheet.flows_af45||0), 0.001); end
  def test_flows_ag45; assert_in_delta(0, (worksheet.flows_ag45||0), 0.001); end
  def test_flows_ah45; assert_in_delta(0, (worksheet.flows_ah45||0), 0.001); end
  def test_flows_ai45; assert_in_delta(0, (worksheet.flows_ai45||0), 0.001); end
  def test_flows_aj45; assert_in_delta(0, (worksheet.flows_aj45||0), 0.001); end
  def test_flows_ak45; assert_in_delta(0, (worksheet.flows_ak45||0), 0.001); end
  def test_flows_al45; assert_in_delta(0, (worksheet.flows_al45||0), 0.001); end
  def test_flows_am45; assert_in_delta(0, (worksheet.flows_am45||0), 0.001); end
  def test_flows_c46; assert_equal("Tidal", worksheet.flows_c46); end
  def test_flows_d46; assert_equal("Electricity grid", worksheet.flows_d46); end
  def test_flows_e46; assert_in_delta(0, (worksheet.flows_e46||0), 0.001); end
  def test_flows_f46; assert_in_delta(0.0050034246575342495, worksheet.flows_f46, 0.001); end
  def test_flows_g46; assert_in_delta(0.020013698630136998, worksheet.flows_g46, 0.001); end
  def test_flows_h46; assert_in_delta(0.050034246575342486, worksheet.flows_h46, 0.001); end
  def test_flows_i46; assert_in_delta(0.12508561643835608, worksheet.flows_i46, 0.001); end
  def test_flows_j46; assert_in_delta(0.12508561643835608, worksheet.flows_j46, 0.001); end
  def test_flows_k46; assert_in_delta(0, (worksheet.flows_k46||0), 0.001); end
  def test_flows_l46; assert_in_delta(0, (worksheet.flows_l46||0), 0.001); end
  def test_flows_m46; assert_in_delta(0, (worksheet.flows_m46||0), 0.001); end
  def test_flows_n46; assert_in_delta(0, (worksheet.flows_n46||0), 0.001); end
  def test_flows_r46; assert_equal("Rail transport", worksheet.flows_r46); end
  def test_flows_s46; assert_in_delta(0, (worksheet.flows_s46||0), 0.001); end
  def test_flows_t46; assert_in_delta(0, (worksheet.flows_t46||0), 0.001); end
  def test_flows_u46; assert_in_delta(0, (worksheet.flows_u46||0), 0.001); end
  def test_flows_v46; assert_in_delta(0, (worksheet.flows_v46||0), 0.001); end
  def test_flows_w46; assert_in_delta(0, (worksheet.flows_w46||0), 0.001); end
  def test_flows_x46; assert_in_delta(0, (worksheet.flows_x46||0), 0.001); end
  def test_flows_y46; assert_in_delta(0, (worksheet.flows_y46||0), 0.001); end
  def test_flows_z46; assert_in_delta(0, (worksheet.flows_z46||0), 0.001); end
  def test_flows_aa46; assert_in_delta(0, (worksheet.flows_aa46||0), 0.001); end
  def test_flows_ab46; assert_in_delta(0, (worksheet.flows_ab46||0), 0.001); end
  def test_flows_ad46; assert_in_epsilon(15.852446803025652, worksheet.flows_ad46, 0.001); end
  def test_flows_ae46; assert_in_epsilon(17.724487403333235, worksheet.flows_ae46, 0.001); end
  def test_flows_af46; assert_in_epsilon(17.18344884013044, worksheet.flows_af46, 0.001); end
  def test_flows_ag46; assert_in_epsilon(16.963945338992865, worksheet.flows_ag46, 0.001); end
  def test_flows_ah46; assert_in_epsilon(16.668321544879078, worksheet.flows_ah46, 0.001); end
  def test_flows_ai46; assert_in_epsilon(16.278078430943093, worksheet.flows_ai46, 0.001); end
  def test_flows_aj46; assert_in_epsilon(15.860444512419438, worksheet.flows_aj46, 0.001); end
  def test_flows_ak46; assert_in_epsilon(15.374887113066478, worksheet.flows_ak46, 0.001); end
  def test_flows_al46; assert_in_epsilon(14.894486251116774, worksheet.flows_al46, 0.001); end
  def test_flows_am46; assert_in_epsilon(14.422595081474668, worksheet.flows_am46, 0.001); end
  def test_flows_c47; assert_equal("Wave", worksheet.flows_c47); end
  def test_flows_d47; assert_equal("Electricity grid", worksheet.flows_d47); end
  def test_flows_e47; assert_in_delta(0, (worksheet.flows_e47||0), 0.001); end
  def test_flows_f47; assert_in_delta(0, (worksheet.flows_f47||0), 0.001); end
  def test_flows_g47; assert_in_delta(0.0030020547945205484, worksheet.flows_g47, 0.001); end
  def test_flows_h47; assert_in_delta(0.1584417808219177, worksheet.flows_h47, 0.001); end
  def test_flows_i47; assert_in_delta(0.39610445205479383, worksheet.flows_i47, 0.001); end
  def test_flows_j47; assert_in_delta(0.39610445205479383, worksheet.flows_j47, 0.001); end
  def test_flows_k47; assert_in_delta(0, (worksheet.flows_k47||0), 0.001); end
  def test_flows_l47; assert_in_delta(0, (worksheet.flows_l47||0), 0.001); end
  def test_flows_m47; assert_in_delta(0, (worksheet.flows_m47||0), 0.001); end
  def test_flows_n47; assert_in_delta(0, (worksheet.flows_n47||0), 0.001); end
  def test_flows_r47; assert_equal("Road transport", worksheet.flows_r47); end
  def test_flows_s47; assert_in_delta(0, (worksheet.flows_s47||0), 0.001); end
  def test_flows_t47; assert_in_delta(0, (worksheet.flows_t47||0), 0.001); end
  def test_flows_u47; assert_in_delta(0, (worksheet.flows_u47||0), 0.001); end
  def test_flows_v47; assert_in_delta(0, (worksheet.flows_v47||0), 0.001); end
  def test_flows_w47; assert_in_delta(0, (worksheet.flows_w47||0), 0.001); end
  def test_flows_x47; assert_in_delta(0, (worksheet.flows_x47||0), 0.001); end
  def test_flows_y47; assert_in_delta(0, (worksheet.flows_y47||0), 0.001); end
  def test_flows_z47; assert_in_delta(0, (worksheet.flows_z47||0), 0.001); end
  def test_flows_aa47; assert_in_delta(0, (worksheet.flows_aa47||0), 0.001); end
  def test_flows_ab47; assert_in_delta(0, (worksheet.flows_ab47||0), 0.001); end
  def test_flows_ad47; assert_in_epsilon(490.85404977847907, worksheet.flows_ad47, 0.001); end
  def test_flows_ae47; assert_in_epsilon(470.2870297257891, worksheet.flows_ae47, 0.001); end
  def test_flows_af47; assert_in_epsilon(445.09762990248004, worksheet.flows_af47, 0.001); end
  def test_flows_ag47; assert_in_epsilon(424.4061681424823, worksheet.flows_ag47, 0.001); end
  def test_flows_ah47; assert_in_epsilon(392.3974289791397, worksheet.flows_ah47, 0.001); end
  def test_flows_ai47; assert_in_epsilon(356.1184633730033, worksheet.flows_ai47, 0.001); end
  def test_flows_aj47; assert_in_epsilon(350.8661658524155, worksheet.flows_aj47, 0.001); end
  def test_flows_ak47; assert_in_epsilon(343.17528729424066, worksheet.flows_ak47, 0.001); end
  def test_flows_al47; assert_in_epsilon(339.59857626834895, worksheet.flows_al47, 0.001); end
  def test_flows_am47; assert_in_epsilon(335.86059089519557, worksheet.flows_am47, 0.001); end
  def test_flows_c48; assert_equal("Geothermal", worksheet.flows_c48); end
  def test_flows_d48; assert_equal("Electricity grid", worksheet.flows_d48); end
  def test_flows_e48; assert_in_delta(0, (worksheet.flows_e48||0), 0.001); end
  def test_flows_f48; assert_in_delta(0, (worksheet.flows_f48||0), 0.001); end
  def test_flows_g48; assert_in_delta(0, (worksheet.flows_g48||0), 0.001); end
  def test_flows_h48; assert_in_delta(0, (worksheet.flows_h48||0), 0.001); end
  def test_flows_i48; assert_in_delta(0, (worksheet.flows_i48||0), 0.001); end
  def test_flows_j48; assert_in_delta(0, (worksheet.flows_j48||0), 0.001); end
  def test_flows_k48; assert_in_delta(0, (worksheet.flows_k48||0), 0.001); end
  def test_flows_l48; assert_in_delta(0, (worksheet.flows_l48||0), 0.001); end
  def test_flows_m48; assert_in_delta(0, (worksheet.flows_m48||0), 0.001); end
  def test_flows_n48; assert_in_delta(0, (worksheet.flows_n48||0), 0.001); end
  def test_flows_r48; assert_equal("Solar", worksheet.flows_r48); end
  def test_flows_s48; assert_in_delta(0.01700604, worksheet.flows_s48, 0.001); end
  def test_flows_t48; assert_in_delta(0.028059966000000006, worksheet.flows_t48, 0.001); end
  def test_flows_u48; assert_in_delta(0.013604831999999999, worksheet.flows_u48, 0.001); end
  def test_flows_v48; assert_in_delta(0, (worksheet.flows_v48||0), 0.001); end
  def test_flows_w48; assert_in_delta(0, (worksheet.flows_w48||0), 0.001); end
  def test_flows_x48; assert_in_delta(0, (worksheet.flows_x48||0), 0.001); end
  def test_flows_y48; assert_in_delta(0, (worksheet.flows_y48||0), 0.001); end
  def test_flows_z48; assert_in_delta(0, (worksheet.flows_z48||0), 0.001); end
  def test_flows_aa48; assert_in_delta(0, (worksheet.flows_aa48||0), 0.001); end
  def test_flows_ab48; assert_in_delta(0, (worksheet.flows_ab48||0), 0.001); end
  def test_flows_ad48; assert_in_delta(0, (worksheet.flows_ad48||0), 0.001); end
  def test_flows_ae48; assert_in_delta(0, (worksheet.flows_ae48||0), 0.001); end
  def test_flows_af48; assert_in_delta(0, (worksheet.flows_af48||0), 0.001); end
  def test_flows_ag48; assert_in_delta(0, (worksheet.flows_ag48||0), 0.001); end
  def test_flows_ah48; assert_in_delta(0, (worksheet.flows_ah48||0), 0.001); end
  def test_flows_ai48; assert_in_delta(0, (worksheet.flows_ai48||0), 0.001); end
  def test_flows_aj48; assert_in_delta(0, (worksheet.flows_aj48||0), 0.001); end
  def test_flows_ak48; assert_in_delta(0, (worksheet.flows_ak48||0), 0.001); end
  def test_flows_al48; assert_in_delta(0, (worksheet.flows_al48||0), 0.001); end
  def test_flows_am48; assert_in_delta(0, (worksheet.flows_am48||0), 0.001); end
  def test_flows_c49; assert_equal("Hydro", worksheet.flows_c49); end
  def test_flows_d49; assert_equal("Electricity grid", worksheet.flows_d49); end
  def test_flows_e49; assert_in_epsilon(4.114400994, worksheet.flows_e49, 0.001); end
  def test_flows_f49; assert_in_epsilon(5.329728000000001, worksheet.flows_f49, 0.001); end
  def test_flows_g49; assert_in_epsilon(5.329728000000001, worksheet.flows_g49, 0.001); end
  def test_flows_h49; assert_in_epsilon(5.329728000000001, worksheet.flows_h49, 0.001); end
  def test_flows_i49; assert_in_epsilon(5.329728000000001, worksheet.flows_i49, 0.001); end
  def test_flows_j49; assert_in_epsilon(5.329728000000001, worksheet.flows_j49, 0.001); end
  def test_flows_k49; assert_in_epsilon(5.329728000000001, worksheet.flows_k49, 0.001); end
  def test_flows_l49; assert_in_epsilon(5.329728000000001, worksheet.flows_l49, 0.001); end
  def test_flows_m49; assert_in_epsilon(5.329728000000001, worksheet.flows_m49, 0.001); end
  def test_flows_n49; assert_in_epsilon(5.329728000000001, worksheet.flows_n49, 0.001); end
  def test_flows_r49; assert_equal("Solar PV", worksheet.flows_r49); end
  def test_flows_s49; assert_in_delta(0.01700604, worksheet.flows_s49, 0.001); end
  def test_flows_t49; assert_in_delta(0.028059966000000006, worksheet.flows_t49, 0.001); end
  def test_flows_u49; assert_in_delta(0.013604831999999999, worksheet.flows_u49, 0.001); end
  def test_flows_v49; assert_in_delta(0, (worksheet.flows_v49||0), 0.001); end
  def test_flows_w49; assert_in_delta(0, (worksheet.flows_w49||0), 0.001); end
  def test_flows_x49; assert_in_delta(0, (worksheet.flows_x49||0), 0.001); end
  def test_flows_y49; assert_in_delta(0, (worksheet.flows_y49||0), 0.001); end
  def test_flows_z49; assert_in_delta(0, (worksheet.flows_z49||0), 0.001); end
  def test_flows_aa49; assert_in_delta(0, (worksheet.flows_aa49||0), 0.001); end
  def test_flows_ab49; assert_in_delta(0, (worksheet.flows_ab49||0), 0.001); end
  def test_flows_ad49; assert_in_delta(0.01700604, worksheet.flows_ad49, 0.001); end
  def test_flows_ae49; assert_in_delta(0.028059966000000006, worksheet.flows_ae49, 0.001); end
  def test_flows_af49; assert_in_delta(0.013604831999999999, worksheet.flows_af49, 0.001); end
  def test_flows_ag49; assert_in_delta(0, (worksheet.flows_ag49||0), 0.001); end
  def test_flows_ah49; assert_in_delta(0, (worksheet.flows_ah49||0), 0.001); end
  def test_flows_ai49; assert_in_delta(0, (worksheet.flows_ai49||0), 0.001); end
  def test_flows_aj49; assert_in_delta(0, (worksheet.flows_aj49||0), 0.001); end
  def test_flows_ak49; assert_in_delta(0, (worksheet.flows_ak49||0), 0.001); end
  def test_flows_al49; assert_in_delta(0, (worksheet.flows_al49||0), 0.001); end
  def test_flows_am49; assert_in_delta(0, (worksheet.flows_am49||0), 0.001); end
  def test_flows_ao49; assert_in_delta(0, (worksheet.flows_ao49||0), 0.001); end
  def test_flows_ap49; assert_in_delta(0, (worksheet.flows_ap49||0), 0.001); end
  def test_flows_aq49; assert_in_delta(0, (worksheet.flows_aq49||0), 0.001); end
  def test_flows_ar49; assert_in_delta(0, (worksheet.flows_ar49||0), 0.001); end
  def test_flows_as49; assert_in_delta(0, (worksheet.flows_as49||0), 0.001); end
  def test_flows_at49; assert_in_delta(0, (worksheet.flows_at49||0), 0.001); end
  def test_flows_au49; assert_in_delta(0, (worksheet.flows_au49||0), 0.001); end
  def test_flows_av49; assert_in_delta(0, (worksheet.flows_av49||0), 0.001); end
  def test_flows_aw49; assert_in_delta(0, (worksheet.flows_aw49||0), 0.001); end
  def test_flows_ax49; assert_in_delta(0, (worksheet.flows_ax49||0), 0.001); end
  def test_flows_c50; assert_equal("Electricity grid", worksheet.flows_c50); end
  def test_flows_d50; assert_equal("H2 conversion", worksheet.flows_d50); end
  def test_flows_e50; assert_in_delta(0, (worksheet.flows_e50||0), 0.001); end
  def test_flows_f50; assert_in_delta(0, (worksheet.flows_f50||0), 0.001); end
  def test_flows_g50; assert_in_delta(0, (worksheet.flows_g50||0), 0.001); end
  def test_flows_h50; assert_in_delta(0, (worksheet.flows_h50||0), 0.001); end
  def test_flows_i50; assert_in_delta(0, (worksheet.flows_i50||0), 0.001); end
  def test_flows_j50; assert_in_delta(0, (worksheet.flows_j50||0), 0.001); end
  def test_flows_k50; assert_in_delta(0, (worksheet.flows_k50||0), 0.001); end
  def test_flows_l50; assert_in_delta(0, (worksheet.flows_l50||0), 0.001); end
  def test_flows_m50; assert_in_delta(0, (worksheet.flows_m50||0), 0.001); end
  def test_flows_n50; assert_in_delta(0, (worksheet.flows_n50||0), 0.001); end
  def test_flows_r50; assert_equal("Solar Thermal", worksheet.flows_r50); end
  def test_flows_s50; assert_in_delta(0, (worksheet.flows_s50||0), 0.001); end
  def test_flows_t50; assert_in_delta(0, (worksheet.flows_t50||0), 0.001); end
  def test_flows_u50; assert_in_delta(0, (worksheet.flows_u50||0), 0.001); end
  def test_flows_v50; assert_in_delta(0, (worksheet.flows_v50||0), 0.001); end
  def test_flows_w50; assert_in_delta(0, (worksheet.flows_w50||0), 0.001); end
  def test_flows_x50; assert_in_delta(0, (worksheet.flows_x50||0), 0.001); end
  def test_flows_y50; assert_in_delta(0, (worksheet.flows_y50||0), 0.001); end
  def test_flows_z50; assert_in_delta(0, (worksheet.flows_z50||0), 0.001); end
  def test_flows_aa50; assert_in_delta(0, (worksheet.flows_aa50||0), 0.001); end
  def test_flows_ab50; assert_in_delta(0, (worksheet.flows_ab50||0), 0.001); end
  def test_flows_ad50; assert_in_delta(0, (worksheet.flows_ad50||0), 0.001); end
  def test_flows_ae50; assert_in_delta(0, (worksheet.flows_ae50||0), 0.001); end
  def test_flows_af50; assert_in_delta(0, (worksheet.flows_af50||0), 0.001); end
  def test_flows_ag50; assert_in_delta(0, (worksheet.flows_ag50||0), 0.001); end
  def test_flows_ah50; assert_in_delta(0, (worksheet.flows_ah50||0), 0.001); end
  def test_flows_ai50; assert_in_delta(0, (worksheet.flows_ai50||0), 0.001); end
  def test_flows_aj50; assert_in_delta(0, (worksheet.flows_aj50||0), 0.001); end
  def test_flows_ak50; assert_in_delta(0, (worksheet.flows_ak50||0), 0.001); end
  def test_flows_al50; assert_in_delta(0, (worksheet.flows_al50||0), 0.001); end
  def test_flows_am50; assert_in_delta(0, (worksheet.flows_am50||0), 0.001); end
  def test_flows_ao50; assert_in_delta(0, (worksheet.flows_ao50||0), 0.001); end
  def test_flows_ap50; assert_in_delta(0, (worksheet.flows_ap50||0), 0.001); end
  def test_flows_aq50; assert_in_delta(0, (worksheet.flows_aq50||0), 0.001); end
  def test_flows_ar50; assert_in_delta(0, (worksheet.flows_ar50||0), 0.001); end
  def test_flows_as50; assert_in_delta(0, (worksheet.flows_as50||0), 0.001); end
  def test_flows_at50; assert_in_delta(0, (worksheet.flows_at50||0), 0.001); end
  def test_flows_au50; assert_in_delta(0, (worksheet.flows_au50||0), 0.001); end
  def test_flows_av50; assert_in_delta(0, (worksheet.flows_av50||0), 0.001); end
  def test_flows_aw50; assert_in_delta(0, (worksheet.flows_aw50||0), 0.001); end
  def test_flows_ax50; assert_in_delta(0, (worksheet.flows_ax50||0), 0.001); end
  def test_flows_c51; assert_equal("Electricity grid", worksheet.flows_c51); end
  def test_flows_d51; assert_equal("Over generation / exports", worksheet.flows_d51); end
  def test_flows_e51; assert_in_delta(0, (worksheet.flows_e51||0), 0.001); end
  def test_flows_f51; assert_in_delta(1.1368683772161603e-13, worksheet.flows_f51, 0.001); end
  def test_flows_g51; assert_in_delta(0, (worksheet.flows_g51||0), 0.001); end
  def test_flows_h51; assert_in_delta(0, (worksheet.flows_h51||0), 0.001); end
  def test_flows_i51; assert_in_delta(0, (worksheet.flows_i51||0), 0.001); end
  def test_flows_j51; assert_in_delta(0, (worksheet.flows_j51||0), 0.001); end
  def test_flows_k51; assert_in_delta(0, (worksheet.flows_k51||0), 0.001); end
  def test_flows_l51; assert_in_delta(0, (worksheet.flows_l51||0), 0.001); end
  def test_flows_m51; assert_in_delta(0, (worksheet.flows_m51||0), 0.001); end
  def test_flows_n51; assert_in_delta(0, (worksheet.flows_n51||0), 0.001); end
  def test_flows_r51; assert_equal("Solid", worksheet.flows_r51); end
  def test_flows_s51; assert_in_epsilon(496.2822016743849, worksheet.flows_s51, 0.001); end
  def test_flows_t51; assert_in_epsilon(504.62288647121244, worksheet.flows_t51, 0.001); end
  def test_flows_u51; assert_in_epsilon(452.4675236264023, worksheet.flows_u51, 0.001); end
  def test_flows_v51; assert_in_epsilon(368.6508929896824, worksheet.flows_v51, 0.001); end
  def test_flows_w51; assert_in_epsilon(239.36577243928852, worksheet.flows_w51, 0.001); end
  def test_flows_x51; assert_in_epsilon(136.149824921977, worksheet.flows_x51, 0.001); end
  def test_flows_y51; assert_in_epsilon(121.80330314231703, worksheet.flows_y51, 0.001); end
  def test_flows_z51; assert_in_epsilon(127.3882431335079, worksheet.flows_z51, 0.001); end
  def test_flows_aa51; assert_in_epsilon(133.22260443623873, worksheet.flows_aa51, 0.001); end
  def test_flows_ab51; assert_in_epsilon(139.78162562276052, worksheet.flows_ab51, 0.001); end
  def test_flows_ad51; assert_in_epsilon(496.28220167438485, worksheet.flows_ad51, 0.001); end
  def test_flows_ae51; assert_in_epsilon(504.6228864712125, worksheet.flows_ae51, 0.001); end
  def test_flows_af51; assert_in_epsilon(452.4675236264023, worksheet.flows_af51, 0.001); end
  def test_flows_ag51; assert_in_epsilon(368.65089298968246, worksheet.flows_ag51, 0.001); end
  def test_flows_ah51; assert_in_epsilon(239.36577243928855, worksheet.flows_ah51, 0.001); end
  def test_flows_ai51; assert_in_epsilon(136.14982492197697, worksheet.flows_ai51, 0.001); end
  def test_flows_aj51; assert_in_epsilon(121.80330314231705, worksheet.flows_aj51, 0.001); end
  def test_flows_ak51; assert_in_epsilon(127.38824313350788, worksheet.flows_ak51, 0.001); end
  def test_flows_al51; assert_in_epsilon(133.22260443623873, worksheet.flows_al51, 0.001); end
  def test_flows_am51; assert_in_epsilon(139.78162562276052, worksheet.flows_am51, 0.001); end
  def test_flows_ao51; assert_in_delta(0, (worksheet.flows_ao51||0), 0.001); end
  def test_flows_ap51; assert_in_delta(0, (worksheet.flows_ap51||0), 0.001); end
  def test_flows_aq51; assert_in_delta(0, (worksheet.flows_aq51||0), 0.001); end
  def test_flows_ar51; assert_in_delta(0, (worksheet.flows_ar51||0), 0.001); end
  def test_flows_as51; assert_in_delta(0, (worksheet.flows_as51||0), 0.001); end
  def test_flows_at51; assert_in_delta(0, (worksheet.flows_at51||0), 0.001); end
  def test_flows_au51; assert_in_delta(0, (worksheet.flows_au51||0), 0.001); end
  def test_flows_av51; assert_in_delta(0, (worksheet.flows_av51||0), 0.001); end
  def test_flows_aw51; assert_in_delta(0, (worksheet.flows_aw51||0), 0.001); end
  def test_flows_ax51; assert_in_delta(0, (worksheet.flows_ax51||0), 0.001); end
  def test_flows_c52; assert_equal("Electricity grid", worksheet.flows_c52); end
  def test_flows_d52; assert_equal("Losses", worksheet.flows_d52); end
  def test_flows_e52; assert_in_epsilon(26.584481639635886, worksheet.flows_e52, 0.001); end
  def test_flows_f52; assert_in_epsilon(26.940516941246642, worksheet.flows_f52, 0.001); end
  def test_flows_g52; assert_in_epsilon(27.669991954458705, worksheet.flows_g52, 0.001); end
  def test_flows_h52; assert_in_epsilon(28.961017270274862, worksheet.flows_h52, 0.001); end
  def test_flows_i52; assert_in_epsilon(30.665269140449826, worksheet.flows_i52, 0.001); end
  def test_flows_j52; assert_in_epsilon(32.379298757863346, worksheet.flows_j52, 0.001); end
  def test_flows_k52; assert_in_epsilon(34.22943122193809, worksheet.flows_k52, 0.001); end
  def test_flows_l52; assert_in_epsilon(36.19366125689168, worksheet.flows_l52, 0.001); end
  def test_flows_m52; assert_in_epsilon(38.28186774924617, worksheet.flows_m52, 0.001); end
  def test_flows_n52; assert_in_epsilon(40.556151543328035, worksheet.flows_n52, 0.001); end
  def test_flows_r52; assert_equal("Thermal generation", worksheet.flows_r52); end
  def test_flows_s52; assert_in_epsilon(950.5593861714459, worksheet.flows_s52, 0.001); end
  def test_flows_t52; assert_in_epsilon(946.6966335060565, worksheet.flows_t52, 0.001); end
  def test_flows_u52; assert_in_epsilon(908.0685024590769, worksheet.flows_u52, 0.001); end
  def test_flows_v52; assert_in_epsilon(863.6563184615878, worksheet.flows_v52, 0.001); end
  def test_flows_w52; assert_in_epsilon(827.567141664927, worksheet.flows_w52, 0.001); end
  def test_flows_x52; assert_in_epsilon(862.3560513368082, worksheet.flows_x52, 0.001); end
  def test_flows_y52; assert_in_epsilon(935.0266012800174, worksheet.flows_y52, 0.001); end
  def test_flows_z52; assert_in_epsilon(1027.5274751371776, worksheet.flows_z52, 0.001); end
  def test_flows_aa52; assert_in_epsilon(1119.2535892536844, worksheet.flows_aa52, 0.001); end
  def test_flows_ab52; assert_in_epsilon(1185.6233073182088, worksheet.flows_ab52, 0.001); end
  def test_flows_ad52; assert_in_epsilon(950.559386171446, worksheet.flows_ad52, 0.001); end
  def test_flows_ae52; assert_in_epsilon(946.6966335060565, worksheet.flows_ae52, 0.001); end
  def test_flows_af52; assert_in_epsilon(908.0685024590771, worksheet.flows_af52, 0.001); end
  def test_flows_ag52; assert_in_epsilon(863.6563184615878, worksheet.flows_ag52, 0.001); end
  def test_flows_ah52; assert_in_epsilon(827.5671416649271, worksheet.flows_ah52, 0.001); end
  def test_flows_ai52; assert_in_epsilon(862.3560513368082, worksheet.flows_ai52, 0.001); end
  def test_flows_aj52; assert_in_epsilon(935.0266012800174, worksheet.flows_aj52, 0.001); end
  def test_flows_ak52; assert_in_epsilon(1027.5274751371776, worksheet.flows_ak52, 0.001); end
  def test_flows_al52; assert_in_epsilon(1119.2535892536841, worksheet.flows_al52, 0.001); end
  def test_flows_am52; assert_in_epsilon(1185.6233073182088, worksheet.flows_am52, 0.001); end
  def test_flows_ao52; assert_in_delta(0, (worksheet.flows_ao52||0), 0.001); end
  def test_flows_ap52; assert_in_delta(0, (worksheet.flows_ap52||0), 0.001); end
  def test_flows_aq52; assert_in_delta(0, (worksheet.flows_aq52||0), 0.001); end
  def test_flows_ar52; assert_in_delta(0, (worksheet.flows_ar52||0), 0.001); end
  def test_flows_as52; assert_in_delta(0, (worksheet.flows_as52||0), 0.001); end
  def test_flows_at52; assert_in_delta(0, (worksheet.flows_at52||0), 0.001); end
  def test_flows_au52; assert_in_delta(0, (worksheet.flows_au52||0), 0.001); end
  def test_flows_av52; assert_in_delta(0, (worksheet.flows_av52||0), 0.001); end
  def test_flows_aw52; assert_in_delta(0, (worksheet.flows_aw52||0), 0.001); end
  def test_flows_ax52; assert_in_delta(0, (worksheet.flows_ax52||0), 0.001); end
  def test_flows_c53; assert_equal("Gas", worksheet.flows_c53); end
  def test_flows_d53; assert_equal("H2 conversion", worksheet.flows_d53); end
  def test_flows_e53; assert_in_delta(0, (worksheet.flows_e53||0), 0.001); end
  def test_flows_f53; assert_in_delta(0, (worksheet.flows_f53||0), 0.001); end
  def test_flows_g53; assert_in_delta(0, (worksheet.flows_g53||0), 0.001); end
  def test_flows_h53; assert_in_delta(0, (worksheet.flows_h53||0), 0.001); end
  def test_flows_i53; assert_in_delta(0, (worksheet.flows_i53||0), 0.001); end
  def test_flows_j53; assert_in_delta(0, (worksheet.flows_j53||0), 0.001); end
  def test_flows_k53; assert_in_delta(0, (worksheet.flows_k53||0), 0.001); end
  def test_flows_l53; assert_in_delta(0, (worksheet.flows_l53||0), 0.001); end
  def test_flows_m53; assert_in_delta(0, (worksheet.flows_m53||0), 0.001); end
  def test_flows_n53; assert_in_delta(0, (worksheet.flows_n53||0), 0.001); end
  def test_flows_r53; assert_equal("Tidal", worksheet.flows_r53); end
  def test_flows_s53; assert_in_delta(0, (worksheet.flows_s53||0), 0.001); end
  def test_flows_t53; assert_in_delta(0.0050034246575342495, worksheet.flows_t53, 0.001); end
  def test_flows_u53; assert_in_delta(0.020013698630136998, worksheet.flows_u53, 0.001); end
  def test_flows_v53; assert_in_delta(0.050034246575342486, worksheet.flows_v53, 0.001); end
  def test_flows_w53; assert_in_delta(0.12508561643835608, worksheet.flows_w53, 0.001); end
  def test_flows_x53; assert_in_delta(0.12508561643835608, worksheet.flows_x53, 0.001); end
  def test_flows_y53; assert_in_delta(0, (worksheet.flows_y53||0), 0.001); end
  def test_flows_z53; assert_in_delta(0, (worksheet.flows_z53||0), 0.001); end
  def test_flows_aa53; assert_in_delta(0, (worksheet.flows_aa53||0), 0.001); end
  def test_flows_ab53; assert_in_delta(0, (worksheet.flows_ab53||0), 0.001); end
  def test_flows_ad53; assert_in_delta(0, (worksheet.flows_ad53||0), 0.001); end
  def test_flows_ae53; assert_in_delta(0, (worksheet.flows_ae53||0), 0.001); end
  def test_flows_af53; assert_in_delta(0, (worksheet.flows_af53||0), 0.001); end
  def test_flows_ag53; assert_in_delta(0, (worksheet.flows_ag53||0), 0.001); end
  def test_flows_ah53; assert_in_delta(0, (worksheet.flows_ah53||0), 0.001); end
  def test_flows_ai53; assert_in_delta(0, (worksheet.flows_ai53||0), 0.001); end
  def test_flows_aj53; assert_in_delta(0, (worksheet.flows_aj53||0), 0.001); end
  def test_flows_ak53; assert_in_delta(0, (worksheet.flows_ak53||0), 0.001); end
  def test_flows_al53; assert_in_delta(0, (worksheet.flows_al53||0), 0.001); end
  def test_flows_am53; assert_in_delta(0, (worksheet.flows_am53||0), 0.001); end
  def test_flows_c54; assert_equal("H2 conversion", worksheet.flows_c54); end
  def test_flows_d54; assert_equal("H2", worksheet.flows_d54); end
  def test_flows_e54; assert_in_delta(0, (worksheet.flows_e54||0), 0.001); end
  def test_flows_f54; assert_in_delta(0, (worksheet.flows_f54||0), 0.001); end
  def test_flows_g54; assert_in_delta(0, (worksheet.flows_g54||0), 0.001); end
  def test_flows_h54; assert_in_delta(0, (worksheet.flows_h54||0), 0.001); end
  def test_flows_i54; assert_in_delta(0, (worksheet.flows_i54||0), 0.001); end
  def test_flows_j54; assert_in_delta(0, (worksheet.flows_j54||0), 0.001); end
  def test_flows_k54; assert_in_delta(0, (worksheet.flows_k54||0), 0.001); end
  def test_flows_l54; assert_in_delta(0, (worksheet.flows_l54||0), 0.001); end
  def test_flows_m54; assert_in_delta(0, (worksheet.flows_m54||0), 0.001); end
  def test_flows_n54; assert_in_delta(0, (worksheet.flows_n54||0), 0.001); end
  def test_flows_r54; assert_equal("UK land based bioenergy", worksheet.flows_r54); end
  def test_flows_s54; assert_in_epsilon(4.881522222222221, worksheet.flows_s54, 0.001); end
  def test_flows_t54; assert_in_epsilon(3.0279139524977032, worksheet.flows_t54, 0.001); end
  def test_flows_u54; assert_in_epsilon(4.692845238477029, worksheet.flows_u54, 0.001); end
  def test_flows_v54; assert_in_epsilon(6.402563081931533, worksheet.flows_v54, 0.001); end
  def test_flows_w54; assert_in_epsilon(8.158190817458818, worksheet.flows_w54, 0.001); end
  def test_flows_x54; assert_in_epsilon(9.96089275380401, worksheet.flows_x54, 0.001); end
  def test_flows_y54; assert_in_epsilon(11.811876531949348, worksheet.flows_y54, 0.001); end
  def test_flows_z54; assert_in_epsilon(13.712395650409537, worksheet.flows_z54, 0.001); end
  def test_flows_aa54; assert_in_epsilon(15.663752170256295, worksheet.flows_aa54, 0.001); end
  def test_flows_ab54; assert_in_epsilon(17.667299613344547, worksheet.flows_ab54, 0.001); end
  def test_flows_ad54; assert_in_delta(0, (worksheet.flows_ad54||0), 0.001); end
  def test_flows_ae54; assert_in_delta(0, (worksheet.flows_ae54||0), 0.001); end
  def test_flows_af54; assert_in_delta(0, (worksheet.flows_af54||0), 0.001); end
  def test_flows_ag54; assert_in_delta(0, (worksheet.flows_ag54||0), 0.001); end
  def test_flows_ah54; assert_in_delta(0, (worksheet.flows_ah54||0), 0.001); end
  def test_flows_ai54; assert_in_delta(0, (worksheet.flows_ai54||0), 0.001); end
  def test_flows_aj54; assert_in_delta(0, (worksheet.flows_aj54||0), 0.001); end
  def test_flows_ak54; assert_in_delta(0, (worksheet.flows_ak54||0), 0.001); end
  def test_flows_al54; assert_in_delta(0, (worksheet.flows_al54||0), 0.001); end
  def test_flows_am54; assert_in_delta(0, (worksheet.flows_am54||0), 0.001); end
  def test_flows_c55; assert_equal("H2 conversion", worksheet.flows_c55); end
  def test_flows_d55; assert_equal("Losses", worksheet.flows_d55); end
  def test_flows_e55; assert_in_delta(0, (worksheet.flows_e55||0), 0.001); end
  def test_flows_f55; assert_in_delta(0, (worksheet.flows_f55||0), 0.001); end
  def test_flows_g55; assert_in_delta(0, (worksheet.flows_g55||0), 0.001); end
  def test_flows_h55; assert_in_delta(0, (worksheet.flows_h55||0), 0.001); end
  def test_flows_i55; assert_in_delta(0, (worksheet.flows_i55||0), 0.001); end
  def test_flows_j55; assert_in_delta(0, (worksheet.flows_j55||0), 0.001); end
  def test_flows_k55; assert_in_delta(0, (worksheet.flows_k55||0), 0.001); end
  def test_flows_l55; assert_in_delta(0, (worksheet.flows_l55||0), 0.001); end
  def test_flows_m55; assert_in_delta(0, (worksheet.flows_m55||0), 0.001); end
  def test_flows_n55; assert_in_delta(0, (worksheet.flows_n55||0), 0.001); end
  def test_flows_r55; assert_equal("Wave", worksheet.flows_r55); end
  def test_flows_s55; assert_in_delta(0, (worksheet.flows_s55||0), 0.001); end
  def test_flows_t55; assert_in_delta(0, (worksheet.flows_t55||0), 0.001); end
  def test_flows_u55; assert_in_delta(0.0030020547945205484, worksheet.flows_u55, 0.001); end
  def test_flows_v55; assert_in_delta(0.1584417808219177, worksheet.flows_v55, 0.001); end
  def test_flows_w55; assert_in_delta(0.39610445205479383, worksheet.flows_w55, 0.001); end
  def test_flows_x55; assert_in_delta(0.39610445205479383, worksheet.flows_x55, 0.001); end
  def test_flows_y55; assert_in_delta(0, (worksheet.flows_y55||0), 0.001); end
  def test_flows_z55; assert_in_delta(0, (worksheet.flows_z55||0), 0.001); end
  def test_flows_aa55; assert_in_delta(0, (worksheet.flows_aa55||0), 0.001); end
  def test_flows_ab55; assert_in_delta(0, (worksheet.flows_ab55||0), 0.001); end
  def test_flows_ad55; assert_in_delta(0, (worksheet.flows_ad55||0), 0.001); end
  def test_flows_ae55; assert_in_delta(0, (worksheet.flows_ae55||0), 0.001); end
  def test_flows_af55; assert_in_delta(0, (worksheet.flows_af55||0), 0.001); end
  def test_flows_ag55; assert_in_delta(0, (worksheet.flows_ag55||0), 0.001); end
  def test_flows_ah55; assert_in_delta(0, (worksheet.flows_ah55||0), 0.001); end
  def test_flows_ai55; assert_in_delta(0, (worksheet.flows_ai55||0), 0.001); end
  def test_flows_aj55; assert_in_delta(0, (worksheet.flows_aj55||0), 0.001); end
  def test_flows_ak55; assert_in_delta(0, (worksheet.flows_ak55||0), 0.001); end
  def test_flows_al55; assert_in_delta(0, (worksheet.flows_al55||0), 0.001); end
  def test_flows_am55; assert_in_delta(0, (worksheet.flows_am55||0), 0.001); end
  def test_flows_c56; assert_equal("Solar Thermal", worksheet.flows_c56); end
  def test_flows_d56; assert_equal("Heating and cooling - homes", worksheet.flows_d56); end
  def test_flows_e56; assert_in_delta(0, (worksheet.flows_e56||0), 0.001); end
  def test_flows_f56; assert_in_delta(0, (worksheet.flows_f56||0), 0.001); end
  def test_flows_g56; assert_in_delta(0, (worksheet.flows_g56||0), 0.001); end
  def test_flows_h56; assert_in_delta(0, (worksheet.flows_h56||0), 0.001); end
  def test_flows_i56; assert_in_delta(0, (worksheet.flows_i56||0), 0.001); end
  def test_flows_j56; assert_in_delta(0, (worksheet.flows_j56||0), 0.001); end
  def test_flows_k56; assert_in_delta(0, (worksheet.flows_k56||0), 0.001); end
  def test_flows_l56; assert_in_delta(0, (worksheet.flows_l56||0), 0.001); end
  def test_flows_m56; assert_in_delta(0, (worksheet.flows_m56||0), 0.001); end
  def test_flows_n56; assert_in_delta(0, (worksheet.flows_n56||0), 0.001); end
  def test_flows_r56; assert_equal("Wind", worksheet.flows_r56); end
  def test_flows_s56; assert_in_epsilon(5.962752417600001, worksheet.flows_s56, 0.001); end
  def test_flows_t56; assert_in_epsilon(14.440670099999998, worksheet.flows_t56, 0.001); end
  def test_flows_u56; assert_in_epsilon(29.3428701, worksheet.flows_u56, 0.001); end
  def test_flows_v56; assert_in_epsilon(45.35726511600001, worksheet.flows_v56, 0.001); end
  def test_flows_w56; assert_in_epsilon(57.69377964, worksheet.flows_w56, 0.001); end
  def test_flows_x56; assert_in_epsilon(48.16934531999999, worksheet.flows_x56, 0.001); end
  def test_flows_y56; assert_in_epsilon(32.302885319999994, worksheet.flows_y56, 0.001); end
  def test_flows_z56; assert_in_epsilon(15.209185319999996, worksheet.flows_z56, 0.001); end
  def test_flows_aa56; assert_in_delta(0.08783531999999616, worksheet.flows_aa56, 0.001); end
  def test_flows_ab56; assert_in_delta(0.08783531999999616, worksheet.flows_ab56, 0.001); end
  def test_flows_ad56; assert_in_delta(0, (worksheet.flows_ad56||0), 0.001); end
  def test_flows_ae56; assert_in_delta(0, (worksheet.flows_ae56||0), 0.001); end
  def test_flows_af56; assert_in_delta(0, (worksheet.flows_af56||0), 0.001); end
  def test_flows_ag56; assert_in_delta(0, (worksheet.flows_ag56||0), 0.001); end
  def test_flows_ah56; assert_in_delta(0, (worksheet.flows_ah56||0), 0.001); end
  def test_flows_ai56; assert_in_delta(0, (worksheet.flows_ai56||0), 0.001); end
  def test_flows_aj56; assert_in_delta(0, (worksheet.flows_aj56||0), 0.001); end
  def test_flows_ak56; assert_in_delta(0, (worksheet.flows_ak56||0), 0.001); end
  def test_flows_al56; assert_in_delta(0, (worksheet.flows_al56||0), 0.001); end
  def test_flows_am56; assert_in_delta(0, (worksheet.flows_am56||0), 0.001); end
  def test_flows_c57; assert_equal("H2", worksheet.flows_c57); end
  def test_flows_d57; assert_equal("Road transport", worksheet.flows_d57); end
  def test_flows_e57; assert_in_delta(0, (worksheet.flows_e57||0), 0.001); end
  def test_flows_f57; assert_in_delta(0, (worksheet.flows_f57||0), 0.001); end
  def test_flows_g57; assert_in_delta(0, (worksheet.flows_g57||0), 0.001); end
  def test_flows_h57; assert_in_delta(0, (worksheet.flows_h57||0), 0.001); end
  def test_flows_i57; assert_in_delta(0, (worksheet.flows_i57||0), 0.001); end
  def test_flows_j57; assert_in_delta(0, (worksheet.flows_j57||0), 0.001); end
  def test_flows_k57; assert_in_delta(0, (worksheet.flows_k57||0), 0.001); end
  def test_flows_l57; assert_in_delta(0, (worksheet.flows_l57||0), 0.001); end
  def test_flows_m57; assert_in_delta(0, (worksheet.flows_m57||0), 0.001); end
  def test_flows_n57; assert_in_delta(0, (worksheet.flows_n57||0), 0.001); end
  def test_flows_c58; assert_equal("Pumped heat", worksheet.flows_c58); end
  def test_flows_d58; assert_equal("Heating and cooling - homes", worksheet.flows_d58); end
  def test_flows_e58; assert_in_delta(0, (worksheet.flows_e58||0), 0.001); end
  def test_flows_f58; assert_in_delta(0, (worksheet.flows_f58||0), 0.001); end
  def test_flows_g58; assert_in_delta(0, (worksheet.flows_g58||0), 0.001); end
  def test_flows_h58; assert_in_delta(0, (worksheet.flows_h58||0), 0.001); end
  def test_flows_i58; assert_in_delta(0, (worksheet.flows_i58||0), 0.001); end
  def test_flows_j58; assert_in_delta(0, (worksheet.flows_j58||0), 0.001); end
  def test_flows_k58; assert_in_delta(0, (worksheet.flows_k58||0), 0.001); end
  def test_flows_l58; assert_in_delta(0, (worksheet.flows_l58||0), 0.001); end
  def test_flows_m58; assert_in_delta(0, (worksheet.flows_m58||0), 0.001); end
  def test_flows_n58; assert_in_delta(0, (worksheet.flows_n58||0), 0.001); end
  def test_flows_c59; assert_equal("Pumped heat", worksheet.flows_c59); end
  def test_flows_d59; assert_equal("Heating and cooling - commercial", worksheet.flows_d59); end
  def test_flows_e59; assert_in_delta(0, (worksheet.flows_e59||0), 0.001); end
  def test_flows_f59; assert_in_delta(0, (worksheet.flows_f59||0), 0.001); end
  def test_flows_g59; assert_in_delta(0, (worksheet.flows_g59||0), 0.001); end
  def test_flows_h59; assert_in_delta(0, (worksheet.flows_h59||0), 0.001); end
  def test_flows_i59; assert_in_delta(0, (worksheet.flows_i59||0), 0.001); end
  def test_flows_j59; assert_in_delta(0, (worksheet.flows_j59||0), 0.001); end
  def test_flows_k59; assert_in_delta(0, (worksheet.flows_k59||0), 0.001); end
  def test_flows_l59; assert_in_delta(0, (worksheet.flows_l59||0), 0.001); end
  def test_flows_m59; assert_in_delta(0, (worksheet.flows_m59||0), 0.001); end
  def test_flows_n59; assert_in_delta(0, (worksheet.flows_n59||0), 0.001); end
  def test_flows_c60; assert_equal("CHP", worksheet.flows_c60); end
  def test_flows_d60; assert_equal("Heating and cooling - homes", worksheet.flows_d60); end
  def test_flows_e60; assert_in_delta(0, (worksheet.flows_e60||0), 0.001); end
  def test_flows_f60; assert_in_delta(0, (worksheet.flows_f60||0), 0.001); end
  def test_flows_g60; assert_in_delta(0, (worksheet.flows_g60||0), 0.001); end
  def test_flows_h60; assert_in_delta(0, (worksheet.flows_h60||0), 0.001); end
  def test_flows_i60; assert_in_delta(0, (worksheet.flows_i60||0), 0.001); end
  def test_flows_j60; assert_in_delta(0, (worksheet.flows_j60||0), 0.001); end
  def test_flows_k60; assert_in_delta(0, (worksheet.flows_k60||0), 0.001); end
  def test_flows_l60; assert_in_delta(0, (worksheet.flows_l60||0), 0.001); end
  def test_flows_m60; assert_in_delta(0, (worksheet.flows_m60||0), 0.001); end
  def test_flows_n60; assert_in_delta(0, (worksheet.flows_n60||0), 0.001); end
  def test_flows_c61; assert_equal("CHP", worksheet.flows_c61); end
  def test_flows_d61; assert_equal("Heating and cooling - commercial", worksheet.flows_d61); end
  def test_flows_e61; assert_in_delta(0, (worksheet.flows_e61||0), 0.001); end
  def test_flows_f61; assert_in_delta(0, (worksheet.flows_f61||0), 0.001); end
  def test_flows_g61; assert_in_delta(0, (worksheet.flows_g61||0), 0.001); end
  def test_flows_h61; assert_in_delta(0, (worksheet.flows_h61||0), 0.001); end
  def test_flows_i61; assert_in_delta(0, (worksheet.flows_i61||0), 0.001); end
  def test_flows_j61; assert_in_delta(0, (worksheet.flows_j61||0), 0.001); end
  def test_flows_k61; assert_in_delta(0, (worksheet.flows_k61||0), 0.001); end
  def test_flows_l61; assert_in_delta(0, (worksheet.flows_l61||0), 0.001); end
  def test_flows_m61; assert_in_delta(0, (worksheet.flows_m61||0), 0.001); end
  def test_flows_n61; assert_in_delta(0, (worksheet.flows_n61||0), 0.001); end
  def test_flows_c62; assert_equal("District heating", worksheet.flows_c62); end
  def test_flows_d62; assert_equal("Heating and cooling - homes", worksheet.flows_d62); end
  def test_flows_e62; assert_in_delta(0, (worksheet.flows_e62||0), 0.001); end
  def test_flows_f62; assert_in_delta(0, (worksheet.flows_f62||0), 0.001); end
  def test_flows_g62; assert_in_delta(0, (worksheet.flows_g62||0), 0.001); end
  def test_flows_h62; assert_in_delta(0, (worksheet.flows_h62||0), 0.001); end
  def test_flows_i62; assert_in_delta(0, (worksheet.flows_i62||0), 0.001); end
  def test_flows_j62; assert_in_delta(0, (worksheet.flows_j62||0), 0.001); end
  def test_flows_k62; assert_in_delta(0, (worksheet.flows_k62||0), 0.001); end
  def test_flows_l62; assert_in_delta(0, (worksheet.flows_l62||0), 0.001); end
  def test_flows_m62; assert_in_delta(0, (worksheet.flows_m62||0), 0.001); end
  def test_flows_n62; assert_in_delta(0, (worksheet.flows_n62||0), 0.001); end
  def test_flows_c63; assert_equal("District heating", worksheet.flows_c63); end
  def test_flows_d63; assert_equal("Heating and cooling - commercial", worksheet.flows_d63); end
  def test_flows_e63; assert_in_delta(0, (worksheet.flows_e63||0), 0.001); end
  def test_flows_f63; assert_in_delta(0, (worksheet.flows_f63||0), 0.001); end
  def test_flows_g63; assert_in_delta(0, (worksheet.flows_g63||0), 0.001); end
  def test_flows_h63; assert_in_delta(0, (worksheet.flows_h63||0), 0.001); end
  def test_flows_i63; assert_in_delta(0, (worksheet.flows_i63||0), 0.001); end
  def test_flows_j63; assert_in_delta(0, (worksheet.flows_j63||0), 0.001); end
  def test_flows_k63; assert_in_delta(0, (worksheet.flows_k63||0), 0.001); end
  def test_flows_l63; assert_in_delta(0, (worksheet.flows_l63||0), 0.001); end
  def test_flows_m63; assert_in_delta(0, (worksheet.flows_m63||0), 0.001); end
  def test_flows_n63; assert_in_delta(0, (worksheet.flows_n63||0), 0.001); end
  def test_flows_c64; assert_equal("District heating", worksheet.flows_c64); end
  def test_flows_d64; assert_equal("Industry", worksheet.flows_d64); end
  def test_flows_e64; assert_in_epsilon(8.813193136590819, worksheet.flows_e64, 0.001); end
  def test_flows_f64; assert_in_epsilon(9.042140030873806, worksheet.flows_f64, 0.001); end
  def test_flows_g64; assert_in_epsilon(9.48727928745219, worksheet.flows_g64, 0.001); end
  def test_flows_h64; assert_in_epsilon(9.968747932095416, worksheet.flows_h64, 0.001); end
  def test_flows_i64; assert_in_epsilon(10.73757752705611, worksheet.flows_i64, 0.001); end
  def test_flows_j64; assert_in_epsilon(11.598323282621358, worksheet.flows_j64, 0.001); end
  def test_flows_k64; assert_in_epsilon(12.559114593882597, worksheet.flows_k64, 0.001); end
  def test_flows_l64; assert_in_epsilon(13.62952356526122, worksheet.flows_l64, 0.001); end
  def test_flows_m64; assert_in_epsilon(14.820617944313286, worksheet.flows_m64, 0.001); end
  def test_flows_n64; assert_in_epsilon(16.145046318256654, worksheet.flows_n64, 0.001); end
  def test_flows_c65; assert_equal("Electricity grid", worksheet.flows_c65); end
  def test_flows_d65; assert_equal("Heating and cooling - homes", worksheet.flows_d65); end
  def test_flows_e65; assert_in_epsilon(31.008546529888466, worksheet.flows_e65, 0.001); end
  def test_flows_f65; assert_in_epsilon(28.776774904604437, worksheet.flows_f65, 0.001); end
  def test_flows_g65; assert_in_epsilon(23.943250737912486, worksheet.flows_g65, 0.001); end
  def test_flows_h65; assert_in_epsilon(28.18933662099497, worksheet.flows_h65, 0.001); end
  def test_flows_i65; assert_in_epsilon(32.847057573486566, worksheet.flows_i65, 0.001); end
  def test_flows_j65; assert_in_epsilon(37.922473900258154, worksheet.flows_j65, 0.001); end
  def test_flows_k65; assert_in_epsilon(42.61889890941194, worksheet.flows_k65, 0.001); end
  def test_flows_l65; assert_in_epsilon(47.891185568066064, worksheet.flows_l65, 0.001); end
  def test_flows_m65; assert_in_epsilon(53.84879586918063, worksheet.flows_m65, 0.001); end
  def test_flows_n65; assert_in_epsilon(60.658172984497035, worksheet.flows_n65, 0.001); end
  def test_flows_c66; assert_equal("Solid", worksheet.flows_c66); end
  def test_flows_d66; assert_equal("Heating and cooling - homes", worksheet.flows_d66); end
  def test_flows_e66; assert_in_epsilon(14.25680300224757, worksheet.flows_e66, 0.001); end
  def test_flows_f66; assert_in_epsilon(13.147942484875603, worksheet.flows_f66, 0.001); end
  def test_flows_g66; assert_in_epsilon(10.750153595975089, worksheet.flows_g66, 0.001); end
  def test_flows_h66; assert_in_epsilon(9.935261760116955, worksheet.flows_h66, 0.001); end
  def test_flows_i66; assert_in_epsilon(8.879384011776363, worksheet.flows_i66, 0.001); end
  def test_flows_j66; assert_in_epsilon(7.5797072356746025, worksheet.flows_j66, 0.001); end
  def test_flows_k66; assert_in_epsilon(5.91081821062347, worksheet.flows_k66, 0.001); end
  def test_flows_l66; assert_in_epsilon(4.105860802720359, worksheet.flows_l66, 0.001); end
  def test_flows_m66; assert_in_epsilon(2.1447416140822204, worksheet.flows_m66, 0.001); end
  def test_flows_n66; assert_in_delta(0, (worksheet.flows_n66||0), 0.001); end
  def test_flows_c67; assert_equal("Liquid", worksheet.flows_c67); end
  def test_flows_d67; assert_equal("Heating and cooling - homes", worksheet.flows_d67); end
  def test_flows_e67; assert_in_epsilon(12.787029496861225, worksheet.flows_e67, 0.001); end
  def test_flows_f67; assert_in_epsilon(11.792484496744096, worksheet.flows_f67, 0.001); end
  def test_flows_g67; assert_in_epsilon(9.64189033865807, worksheet.flows_g67, 0.001); end
  def test_flows_h67; assert_in_epsilon(8.911007970414175, worksheet.flows_h67, 0.001); end
  def test_flows_i67; assert_in_epsilon(7.963983598191172, worksheet.flows_i67, 0.001); end
  def test_flows_j67; assert_in_epsilon(6.798294118594747, worksheet.flows_j67, 0.001); end
  def test_flows_k67; assert_in_epsilon(5.301455508497339, worksheet.flows_k67, 0.001); end
  def test_flows_l67; assert_in_epsilon(3.6825761838832083, worksheet.flows_l67, 0.001); end
  def test_flows_m67; assert_in_epsilon(1.9236342311871462, worksheet.flows_m67, 0.001); end
  def test_flows_n67; assert_in_delta(0, (worksheet.flows_n67||0), 0.001); end
  def test_flows_c68; assert_equal("Gas", worksheet.flows_c68); end
  def test_flows_d68; assert_equal("Heating and cooling - homes", worksheet.flows_d68); end
  def test_flows_e68; assert_in_epsilon(324.47780687796825, worksheet.flows_e68, 0.001); end
  def test_flows_f68; assert_in_epsilon(354.8435737936154, worksheet.flows_f68, 0.001); end
  def test_flows_g68; assert_in_epsilon(382.96955209021405, worksheet.flows_g68, 0.001); end
  def test_flows_h68; assert_in_epsilon(408.4682642374902, worksheet.flows_h68, 0.001); end
  def test_flows_i68; assert_in_epsilon(433.28527096925444, worksheet.flows_i68, 0.001); end
  def test_flows_j68; assert_in_epsilon(457.22652053439543, worksheet.flows_j68, 0.001); end
  def test_flows_k68; assert_in_epsilon(470.098708854415, worksheet.flows_k68, 0.001); end
  def test_flows_l68; assert_in_epsilon(484.2897766694549, worksheet.flows_l68, 0.001); end
  def test_flows_m68; assert_in_epsilon(500.17015397996613, worksheet.flows_m68, 0.001); end
  def test_flows_n68; assert_in_epsilon(517.9434690774432, worksheet.flows_n68, 0.001); end
  def test_flows_c69; assert_equal("Electricity grid", worksheet.flows_c69); end
  def test_flows_d69; assert_equal("Heating and cooling - commercial", worksheet.flows_d69); end
  def test_flows_e69; assert_in_epsilon(28.551697890247862, worksheet.flows_e69, 0.001); end
  def test_flows_f69; assert_in_epsilon(31.40903797859884, worksheet.flows_f69, 0.001); end
  def test_flows_g69; assert_in_epsilon(35.16946485012258, worksheet.flows_g69, 0.001); end
  def test_flows_h69; assert_in_epsilon(36.74416002679409, worksheet.flows_h69, 0.001); end
  def test_flows_i69; assert_in_epsilon(37.59493963027826, worksheet.flows_i69, 0.001); end
  def test_flows_j69; assert_in_epsilon(37.73848109426944, worksheet.flows_j69, 0.001); end
  def test_flows_k69; assert_in_epsilon(37.186936739885184, worksheet.flows_k69, 0.001); end
  def test_flows_l69; assert_in_epsilon(35.947741102135936, worksheet.flows_l69, 0.001); end
  def test_flows_m69; assert_in_epsilon(34.02338938595468, worksheet.flows_m69, 0.001); end
  def test_flows_n69; assert_in_epsilon(31.41118473825011, worksheet.flows_n69, 0.001); end
  def test_flows_c70; assert_equal("Solid", worksheet.flows_c70); end
  def test_flows_d70; assert_equal("Heating and cooling - commercial", worksheet.flows_d70); end
  def test_flows_e70; assert_in_delta(0, (worksheet.flows_e70||0), 0.001); end
  def test_flows_f70; assert_in_delta(0, (worksheet.flows_f70||0), 0.001); end
  def test_flows_g70; assert_in_delta(0, (worksheet.flows_g70||0), 0.001); end
  def test_flows_h70; assert_in_delta(0, (worksheet.flows_h70||0), 0.001); end
  def test_flows_i70; assert_in_delta(0, (worksheet.flows_i70||0), 0.001); end
  def test_flows_j70; assert_in_delta(0, (worksheet.flows_j70||0), 0.001); end
  def test_flows_k70; assert_in_delta(0, (worksheet.flows_k70||0), 0.001); end
  def test_flows_l70; assert_in_delta(0, (worksheet.flows_l70||0), 0.001); end
  def test_flows_m70; assert_in_delta(0, (worksheet.flows_m70||0), 0.001); end
  def test_flows_n70; assert_in_delta(0, (worksheet.flows_n70||0), 0.001); end
  def test_flows_c71; assert_equal("Liquid", worksheet.flows_c71); end
  def test_flows_d71; assert_equal("Heating and cooling - commercial", worksheet.flows_d71); end
  def test_flows_e71; assert_in_epsilon(9.080594910929866, worksheet.flows_e71, 0.001); end
  def test_flows_f71; assert_in_epsilon(9.35780277207328, worksheet.flows_f71, 0.001); end
  def test_flows_g71; assert_in_epsilon(9.360191566022753, worksheet.flows_g71, 0.001); end
  def test_flows_h71; assert_in_epsilon(8.461869294155873, worksheet.flows_h71, 0.001); end
  def test_flows_i71; assert_in_epsilon(7.449265149552934, worksheet.flows_i71, 0.001); end
  def test_flows_j71; assert_in_epsilon(6.305083177741304, worksheet.flows_j71, 0.001); end
  def test_flows_k71; assert_in_epsilon(5.0102346770537896, worksheet.flows_k71, 0.001); end
  def test_flows_l71; assert_in_epsilon(3.5436576592917217, worksheet.flows_l71, 0.001); end
  def test_flows_m71; assert_in_epsilon(1.882119325014239, worksheet.flows_m71, 0.001); end
  def test_flows_n71; assert_in_delta(0, (worksheet.flows_n71||0), 0.001); end
  def test_flows_c72; assert_equal("Gas", worksheet.flows_c72); end
  def test_flows_d72; assert_equal("Heating and cooling - commercial", worksheet.flows_d72); end
  def test_flows_e72; assert_in_epsilon(78.26235982624942, worksheet.flows_e72, 0.001); end
  def test_flows_f72; assert_in_epsilon(80.65151401584527, worksheet.flows_f72, 0.001); end
  def test_flows_g72; assert_in_epsilon(85.39821392838152, worksheet.flows_g72, 0.001); end
  def test_flows_h72; assert_in_epsilon(91.44410327375198, worksheet.flows_h72, 0.001); end
  def test_flows_i72; assert_in_epsilon(98.05380686191101, worksheet.flows_i72, 0.001); end
  def test_flows_j72; assert_in_epsilon(105.27784091104671, worksheet.flows_j72, 0.001); end
  def test_flows_k72; assert_in_epsilon(113.17110264565169, worksheet.flows_k72, 0.001); end
  def test_flows_l72; assert_in_epsilon(121.79324900623955, worksheet.flows_l72, 0.001); end
  def test_flows_m72; assert_in_epsilon(131.2091076031487, worksheet.flows_m72, 0.001); end
  def test_flows_n72; assert_in_epsilon(141.48912264058296, worksheet.flows_n72, 0.001); end
  def test_flows_c73; assert_equal("Electricity grid", worksheet.flows_c73); end
  def test_flows_d73; assert_equal("Lighting & appliances - homes", worksheet.flows_d73); end
  def test_flows_e73; assert_in_epsilon(86.7250002380565, worksheet.flows_e73, 0.001); end
  def test_flows_f73; assert_in_epsilon(87.37770781750622, worksheet.flows_f73, 0.001); end
  def test_flows_g73; assert_in_epsilon(89.4785198583305, worksheet.flows_g73, 0.001); end
  def test_flows_h73; assert_in_epsilon(91.46434104552873, worksheet.flows_h73, 0.001); end
  def test_flows_i73; assert_in_epsilon(93.1641125929225, worksheet.flows_i73, 0.001); end
  def test_flows_j73; assert_in_epsilon(94.56743589111149, worksheet.flows_j73, 0.001); end
  def test_flows_k73; assert_in_epsilon(96.68001200867188, worksheet.flows_k73, 0.001); end
  def test_flows_l73; assert_in_epsilon(98.82343859522426, worksheet.flows_l73, 0.001); end
  def test_flows_m73; assert_in_epsilon(101.062380337744, worksheet.flows_m73, 0.001); end
  def test_flows_n73; assert_in_epsilon(103.40155946528074, worksheet.flows_n73, 0.001); end
  def test_flows_c74; assert_equal("Gas", worksheet.flows_c74); end
  def test_flows_d74; assert_equal("Lighting & appliances - homes", worksheet.flows_d74); end
  def test_flows_e74; assert_in_epsilon(8.015505937787601, worksheet.flows_e74, 0.001); end
  def test_flows_f74; assert_in_epsilon(8.015463096052056, worksheet.flows_f74, 0.001); end
  def test_flows_g74; assert_in_epsilon(8.015547173771019, worksheet.flows_g74, 0.001); end
  def test_flows_h74; assert_in_epsilon(8.01523302287851, worksheet.flows_h74, 0.001); end
  def test_flows_i74; assert_in_epsilon(8.014845995629367, worksheet.flows_i74, 0.001); end
  def test_flows_j74; assert_in_epsilon(8.014544549125949, worksheet.flows_j74, 0.001); end
  def test_flows_k74; assert_in_epsilon(8.031450005087287, worksheet.flows_k74, 0.001); end
  def test_flows_l74; assert_in_epsilon(8.032515956768702, worksheet.flows_l74, 0.001); end
  def test_flows_m74; assert_in_epsilon(8.033582049925556, worksheet.flows_m74, 0.001); end
  def test_flows_n74; assert_in_epsilon(8.034648284576637, worksheet.flows_n74, 0.001); end
  def test_flows_c75; assert_equal("Electricity grid", worksheet.flows_c75); end
  def test_flows_d75; assert_equal("Lighting & appliances - commercial", worksheet.flows_d75); end
  def test_flows_e75; assert_in_epsilon(72.6348790796996, worksheet.flows_e75, 0.001); end
  def test_flows_f75; assert_in_epsilon(73.0477408893982, worksheet.flows_f75, 0.001); end
  def test_flows_g75; assert_in_epsilon(75.15818753192958, worksheet.flows_g75, 0.001); end
  def test_flows_h75; assert_in_epsilon(77.34780373251103, worksheet.flows_h75, 0.001); end
  def test_flows_i75; assert_in_epsilon(79.61979665666068, worksheet.flows_i75, 0.001); end
  def test_flows_j75; assert_in_epsilon(81.97751212457892, worksheet.flows_j75, 0.001); end
  def test_flows_k75; assert_in_epsilon(84.42444092846185, worksheet.flows_k75, 0.001); end
  def test_flows_l75; assert_in_epsilon(86.96422544894558, worksheet.flows_l75, 0.001); end
  def test_flows_m75; assert_in_epsilon(89.6006665852183, worksheet.flows_m75, 0.001); end
  def test_flows_n75; assert_in_epsilon(92.33773101406193, worksheet.flows_n75, 0.001); end
  def test_flows_c76; assert_equal("Gas", worksheet.flows_c76); end
  def test_flows_d76; assert_equal("Lighting & appliances - commercial", worksheet.flows_d76); end
  def test_flows_e76; assert_in_epsilon(8.985416804102144, worksheet.flows_e76, 0.001); end
  def test_flows_f76; assert_in_epsilon(8.987057559146578, worksheet.flows_f76, 0.001); end
  def test_flows_g76; assert_in_epsilon(8.995265829540278, worksheet.flows_g76, 0.001); end
  def test_flows_h76; assert_in_epsilon(9.003481596904201, worksheet.flows_h76, 0.001); end
  def test_flows_i76; assert_in_epsilon(9.011704868085635, worksheet.flows_i76, 0.001); end
  def test_flows_j76; assert_in_epsilon(9.019935649938168, worksheet.flows_j76, 0.001); end
  def test_flows_k76; assert_in_epsilon(9.0281739493216, worksheet.flows_k76, 0.001); end
  def test_flows_l76; assert_in_epsilon(9.036419773102045, worksheet.flows_l76, 0.001); end
  def test_flows_m76; assert_in_epsilon(9.044673128151834, worksheet.flows_m76, 0.001); end
  def test_flows_n76; assert_in_epsilon(9.052934021349623, worksheet.flows_n76, 0.001); end
  def test_flows_c77; assert_equal("Electricity grid", worksheet.flows_c77); end
  def test_flows_d77; assert_equal("Industry", worksheet.flows_d77); end
  def test_flows_e77; assert_in_epsilon(122.78056381550303, worksheet.flows_e77, 0.001); end
  def test_flows_f77; assert_in_epsilon(126.24923839406117, worksheet.flows_f77, 0.001); end
  def test_flows_g77; assert_in_epsilon(132.74762282341356, worksheet.flows_g77, 0.001); end
  def test_flows_h77; assert_in_epsilon(139.75533077883125, worksheet.flows_h77, 0.001); end
  def test_flows_i77; assert_in_epsilon(150.83933805648923, worksheet.flows_i77, 0.001); end
  def test_flows_j77; assert_in_epsilon(162.70769962861522, worksheet.flows_j77, 0.001); end
  def test_flows_k77; assert_in_epsilon(176.49271704246758, worksheet.flows_k77, 0.001); end
  def test_flows_l77; assert_in_epsilon(191.8296812621044, worksheet.flows_l77, 0.001); end
  def test_flows_m77; assert_in_epsilon(208.8798113026436, worksheet.flows_m77, 0.001); end
  def test_flows_n77; assert_in_epsilon(227.82619924019815, worksheet.flows_n77, 0.001); end
  def test_flows_c78; assert_equal("Solid", worksheet.flows_c78); end
  def test_flows_d78; assert_equal("Industry", worksheet.flows_d78); end
  def test_flows_e78; assert_in_epsilon(54.597961583125404, worksheet.flows_e78, 0.001); end
  def test_flows_f78; assert_in_epsilon(56.47800844568782, worksheet.flows_f78, 0.001); end
  def test_flows_g78; assert_in_epsilon(59.781827800934465, worksheet.flows_g78, 0.001); end
  def test_flows_h78; assert_in_epsilon(63.314578492079185, worksheet.flows_h78, 0.001); end
  def test_flows_i78; assert_in_epsilon(68.7502954297586, worksheet.flows_i78, 0.001); end
  def test_flows_j78; assert_in_epsilon(74.74457766148929, worksheet.flows_j78, 0.001); end
  def test_flows_k78; assert_in_epsilon(81.40888456083547, worksheet.flows_k78, 0.001); end
  def test_flows_l78; assert_in_epsilon(88.79327436447858, worksheet.flows_l78, 0.001); end
  def test_flows_m78; assert_in_epsilon(96.97920674138533, worksheet.flows_m78, 0.001); end
  def test_flows_n78; assert_in_epsilon(106.05754246808085, worksheet.flows_n78, 0.001); end
  def test_flows_c79; assert_equal("Liquid", worksheet.flows_c79); end
  def test_flows_d79; assert_equal("Industry", worksheet.flows_d79); end
  def test_flows_e79; assert_in_epsilon(137.8897200213139, worksheet.flows_e79, 0.001); end
  def test_flows_f79; assert_in_epsilon(137.43350974057122, worksheet.flows_f79, 0.001); end
  def test_flows_g79; assert_in_epsilon(139.60026862265818, worksheet.flows_g79, 0.001); end
  def test_flows_h79; assert_in_epsilon(142.2999647626889, worksheet.flows_h79, 0.001); end
  def test_flows_i79; assert_in_epsilon(148.4089907434262, worksheet.flows_i79, 0.001); end
  def test_flows_j79; assert_in_epsilon(155.84598421967303, worksheet.flows_j79, 0.001); end
  def test_flows_k79; assert_in_epsilon(164.60536738592913, worksheet.flows_k79, 0.001); end
  def test_flows_l79; assert_in_epsilon(174.7162778872345, worksheet.flows_l79, 0.001); end
  def test_flows_m79; assert_in_epsilon(186.2385820886497, worksheet.flows_m79, 0.001); end
  def test_flows_n79; assert_in_epsilon(199.2602411701368, worksheet.flows_n79, 0.001); end
  def test_flows_c80; assert_equal("Gas", worksheet.flows_c80); end
  def test_flows_d80; assert_equal("Industry", worksheet.flows_d80); end
  def test_flows_e80; assert_in_epsilon(216.87688137738803, worksheet.flows_e80, 0.001); end
  def test_flows_f80; assert_in_epsilon(210.4929840660362, worksheet.flows_f80, 0.001); end
  def test_flows_g80; assert_in_epsilon(209.20798494828864, worksheet.flows_g80, 0.001); end
  def test_flows_h80; assert_in_epsilon(209.26401889321662, worksheet.flows_h80, 0.001); end
  def test_flows_i80; assert_in_epsilon(216.65422471317268, worksheet.flows_i80, 0.001); end
  def test_flows_j80; assert_in_epsilon(227.30770299739305, worksheet.flows_j80, 0.001); end
  def test_flows_k80; assert_in_epsilon(241.11125158365778, worksheet.flows_k80, 0.001); end
  def test_flows_l80; assert_in_epsilon(257.91956943805434, worksheet.flows_l80, 0.001); end
  def test_flows_m80; assert_in_epsilon(277.72504090523944, worksheet.flows_m80, 0.001); end
  def test_flows_n80; assert_in_epsilon(300.59831850003326, worksheet.flows_n80, 0.001); end
  def test_flows_c81; assert_equal("Electricity grid", worksheet.flows_c81); end
  def test_flows_d81; assert_equal("Agriculture", worksheet.flows_d81); end
  def test_flows_e81; assert_in_epsilon(4.172844, worksheet.flows_e81, 0.001); end
  def test_flows_f81; assert_in_epsilon(4.259002503628829, worksheet.flows_f81, 0.001); end
  def test_flows_g81; assert_in_epsilon(4.285606783827001, worksheet.flows_g81, 0.001); end
  def test_flows_h81; assert_in_epsilon(4.312393687431538, worksheet.flows_h81, 0.001); end
  def test_flows_i81; assert_in_epsilon(4.339365249637551, worksheet.flows_i81, 0.001); end
  def test_flows_j81; assert_in_epsilon(4.366523528320811, worksheet.flows_j81, 0.001); end
  def test_flows_k81; assert_in_epsilon(4.3938706042905045, worksheet.flows_k81, 0.001); end
  def test_flows_l81; assert_in_epsilon(4.421408581544809, worksheet.flows_l81, 0.001); end
  def test_flows_m81; assert_in_epsilon(4.449139587529321, worksheet.flows_m81, 0.001); end
  def test_flows_n81; assert_in_epsilon(4.47706577339835, worksheet.flows_n81, 0.001); end
  def test_flows_c82; assert_equal("Solid", worksheet.flows_c82); end
  def test_flows_d82; assert_equal("Agriculture", worksheet.flows_d82); end
  def test_flows_e82; assert_in_delta(0.8345688, worksheet.flows_e82, 0.001); end
  def test_flows_f82; assert_in_delta(0.8518005007257657, worksheet.flows_f82, 0.001); end
  def test_flows_g82; assert_in_delta(0.8571213567654001, worksheet.flows_g82, 0.001); end
  def test_flows_h82; assert_in_delta(0.8624787374863075, worksheet.flows_h82, 0.001); end
  def test_flows_i82; assert_in_delta(0.8678730499275102, worksheet.flows_i82, 0.001); end
  def test_flows_j82; assert_in_delta(0.8733047056641621, worksheet.flows_j82, 0.001); end
  def test_flows_k82; assert_in_delta(0.8787741208581008, worksheet.flows_k82, 0.001); end
  def test_flows_l82; assert_in_delta(0.8842817163089618, worksheet.flows_l82, 0.001); end
  def test_flows_m82; assert_in_delta(0.8898279175058642, worksheet.flows_m82, 0.001); end
  def test_flows_n82; assert_in_delta(0.89541315467967, worksheet.flows_n82, 0.001); end
  def test_flows_c83; assert_equal("Liquid", worksheet.flows_c83); end
  def test_flows_d83; assert_equal("Agriculture", worksheet.flows_d83); end
  def test_flows_e83; assert_in_epsilon(3.4425963, worksheet.flows_e83, 0.001); end
  def test_flows_f83; assert_in_epsilon(3.513677065493784, worksheet.flows_f83, 0.001); end
  def test_flows_g83; assert_in_epsilon(3.5356255966572756, worksheet.flows_g83, 0.001); end
  def test_flows_h83; assert_in_epsilon(3.557724792131019, worksheet.flows_h83, 0.001); end
  def test_flows_i83; assert_in_epsilon(3.57997633095098, worksheet.flows_i83, 0.001); end
  def test_flows_j83; assert_in_epsilon(3.602381910864669, worksheet.flows_j83, 0.001); end
  def test_flows_k83; assert_in_epsilon(3.6249432485396658, worksheet.flows_k83, 0.001); end
  def test_flows_l83; assert_in_epsilon(3.6476620797744674, worksheet.flows_l83, 0.001); end
  def test_flows_m83; assert_in_epsilon(3.67054015971169, worksheet.flows_m83, 0.001); end
  def test_flows_n83; assert_in_epsilon(3.6935792630536386, worksheet.flows_n83, 0.001); end
  def test_flows_c84; assert_equal("Gas", worksheet.flows_c84); end
  def test_flows_d84; assert_equal("Agriculture", worksheet.flows_d84); end
  def test_flows_e84; assert_in_epsilon(1.9821009, worksheet.flows_e84, 0.001); end
  def test_flows_f84; assert_in_epsilon(2.023026189223694, worksheet.flows_f84, 0.001); end
  def test_flows_g84; assert_in_epsilon(2.0356632223178255, worksheet.flows_g84, 0.001); end
  def test_flows_h84; assert_in_epsilon(2.0483870015299805, worksheet.flows_h84, 0.001); end
  def test_flows_i84; assert_in_epsilon(2.061198493577837, worksheet.flows_i84, 0.001); end
  def test_flows_j84; assert_in_epsilon(2.074098675952385, worksheet.flows_j84, 0.001); end
  def test_flows_k84; assert_in_epsilon(2.0870885370379892, worksheet.flows_k84, 0.001); end
  def test_flows_l84; assert_in_epsilon(2.1001690762337843, worksheet.flows_l84, 0.001); end
  def test_flows_m84; assert_in_epsilon(2.1133413040764273, worksheet.flows_m84, 0.001); end
  def test_flows_n84; assert_in_epsilon(2.126606242364216, worksheet.flows_n84, 0.001); end
  def test_flows_c85; assert_equal("Electricity grid", worksheet.flows_c85); end
  def test_flows_d85; assert_equal("Road transport", worksheet.flows_d85); end
  def test_flows_e85; assert_in_delta(0, (worksheet.flows_e85||0), 0.001); end
  def test_flows_f85; assert_in_delta(0, (worksheet.flows_f85||0), 0.001); end
  def test_flows_g85; assert_in_delta(0.26431802315687997, worksheet.flows_g85, 0.001); end
  def test_flows_h85; assert_in_delta(0.538634783704799, worksheet.flows_h85, 0.001); end
  def test_flows_i85; assert_in_epsilon(2.7896366056892323, worksheet.flows_i85, 0.001); end
  def test_flows_j85; assert_in_epsilon(4.920208328489396, worksheet.flows_j85, 0.001); end
  def test_flows_k85; assert_in_epsilon(7.234926083203689, worksheet.flows_k85, 0.001); end
  def test_flows_l85; assert_in_epsilon(9.532878505267737, worksheet.flows_l85, 0.001); end
  def test_flows_m85; assert_in_epsilon(11.578110391060045, worksheet.flows_m85, 0.001); end
  def test_flows_n85; assert_in_epsilon(13.84226019889534, worksheet.flows_n85, 0.001); end
  def test_flows_c86; assert_equal("Liquid", worksheet.flows_c86); end
  def test_flows_d86; assert_equal("Road transport", worksheet.flows_d86); end
  def test_flows_e86; assert_in_epsilon(490.85404977847907, worksheet.flows_e86, 0.001); end
  def test_flows_f86; assert_in_epsilon(470.2870297257891, worksheet.flows_f86, 0.001); end
  def test_flows_g86; assert_in_epsilon(444.83331187932316, worksheet.flows_g86, 0.001); end
  def test_flows_h86; assert_in_epsilon(423.86753335877745, worksheet.flows_h86, 0.001); end
  def test_flows_i86; assert_in_epsilon(389.6077923734505, worksheet.flows_i86, 0.001); end
  def test_flows_j86; assert_in_epsilon(351.19825504451387, worksheet.flows_j86, 0.001); end
  def test_flows_k86; assert_in_epsilon(343.63123976921185, worksheet.flows_k86, 0.001); end
  def test_flows_l86; assert_in_epsilon(333.64240878897294, worksheet.flows_l86, 0.001); end
  def test_flows_m86; assert_in_epsilon(328.0204658772889, worksheet.flows_m86, 0.001); end
  def test_flows_n86; assert_in_epsilon(322.0183306963002, worksheet.flows_n86, 0.001); end
  def test_flows_c87; assert_equal("Electricity grid", worksheet.flows_c87); end
  def test_flows_d87; assert_equal("Rail transport", worksheet.flows_d87); end
  def test_flows_e87; assert_in_epsilon(8.681592457134547, worksheet.flows_e87, 0.001); end
  def test_flows_f87; assert_in_epsilon(8.184036113841765, worksheet.flows_f87, 0.001); end
  def test_flows_g87; assert_in_epsilon(7.985518411388399, worksheet.flows_g87, 0.001); end
  def test_flows_h87; assert_in_epsilon(7.898790628857575, worksheet.flows_h87, 0.001); end
  def test_flows_i87; assert_in_epsilon(7.786017018951624, worksheet.flows_i87, 0.001); end
  def test_flows_j87; assert_in_epsilon(7.639806007674586, worksheet.flows_j87, 0.001); end
  def test_flows_k87; assert_in_epsilon(7.483408181817141, worksheet.flows_k87, 0.001); end
  def test_flows_l87; assert_in_epsilon(7.301431686970098, worksheet.flows_l87, 0.001); end
  def test_flows_m87; assert_in_epsilon(7.119941726481715, worksheet.flows_m87, 0.001); end
  def test_flows_n87; assert_in_epsilon(6.940004427716452, worksheet.flows_n87, 0.001); end
  def test_flows_c88; assert_equal("Liquid", worksheet.flows_c88); end
  def test_flows_d88; assert_equal("Rail transport", worksheet.flows_d88); end
  def test_flows_e88; assert_in_epsilon(7.1708543458911045, worksheet.flows_e88, 0.001); end
  def test_flows_f88; assert_in_epsilon(9.540451289491472, worksheet.flows_f88, 0.001); end
  def test_flows_g88; assert_in_epsilon(9.197930428742039, worksheet.flows_g88, 0.001); end
  def test_flows_h88; assert_in_epsilon(9.065154710135289, worksheet.flows_h88, 0.001); end
  def test_flows_i88; assert_in_epsilon(8.882304525927452, worksheet.flows_i88, 0.001); end
  def test_flows_j88; assert_in_epsilon(8.638272423268507, worksheet.flows_j88, 0.001); end
  def test_flows_k88; assert_in_epsilon(8.377036330602296, worksheet.flows_k88, 0.001); end
  def test_flows_l88; assert_in_epsilon(8.07345542609638, worksheet.flows_l88, 0.001); end
  def test_flows_m88; assert_in_epsilon(7.7745445246350595, worksheet.flows_m88, 0.001); end
  def test_flows_n88; assert_in_epsilon(7.482590653758216, worksheet.flows_n88, 0.001); end
  def test_flows_c89; assert_equal("Liquid", worksheet.flows_c89); end
  def test_flows_d89; assert_equal("Domestic aviation", worksheet.flows_d89); end
  def test_flows_e89; assert_in_epsilon(9.019834608709552, worksheet.flows_e89, 0.001); end
  def test_flows_f89; assert_in_epsilon(9.551097329516901, worksheet.flows_f89, 0.001); end
  def test_flows_g89; assert_in_epsilon(10.163716423089292, worksheet.flows_g89, 0.001); end
  def test_flows_h89; assert_in_epsilon(11.078742052970153, worksheet.flows_h89, 0.001); end
  def test_flows_i89; assert_in_epsilon(11.927979753386868, worksheet.flows_i89, 0.001); end
  def test_flows_j89; assert_in_epsilon(12.657847240047854, worksheet.flows_j89, 0.001); end
  def test_flows_k89; assert_in_epsilon(13.331077116581312, worksheet.flows_k89, 0.001); end
  def test_flows_l89; assert_in_epsilon(13.860251279239513, worksheet.flows_l89, 0.001); end
  def test_flows_m89; assert_in_epsilon(14.344409418627478, worksheet.flows_m89, 0.001); end
  def test_flows_n89; assert_in_epsilon(14.785449092646568, worksheet.flows_n89, 0.001); end
  def test_flows_c90; assert_equal("Liquid", worksheet.flows_c90); end
  def test_flows_d90; assert_equal("National navigation", worksheet.flows_d90); end
  def test_flows_e90; assert_in_epsilon(18.817339999999998, worksheet.flows_e90, 0.001); end
  def test_flows_f90; assert_in_epsilon(26.572895707388618, worksheet.flows_f90, 0.001); end
  def test_flows_g90; assert_in_epsilon(25.383064556311584, worksheet.flows_g90, 0.001); end
  def test_flows_h90; assert_in_epsilon(24.58984378892685, worksheet.flows_h90, 0.001); end
  def test_flows_i90; assert_in_epsilon(23.99670495670838, worksheet.flows_i90, 0.001); end
  def test_flows_j90; assert_in_epsilon(23.688791719453825, worksheet.flows_j90, 0.001); end
  def test_flows_k90; assert_in_epsilon(23.384829464713203, worksheet.flows_k90, 0.001); end
  def test_flows_l90; assert_in_epsilon(23.084767495533725, worksheet.flows_l90, 0.001); end
  def test_flows_m90; assert_in_epsilon(22.788555765479813, worksheet.flows_m90, 0.001); end
  def test_flows_n90; assert_in_epsilon(22.49614487028552, worksheet.flows_n90, 0.001); end
  def test_flows_c91; assert_equal("Liquid", worksheet.flows_c91); end
  def test_flows_d91; assert_equal("International aviation", worksheet.flows_d91); end
  def test_flows_e91; assert_in_epsilon(152.8, worksheet.flows_e91, 0.001); end
  def test_flows_f91; assert_in_epsilon(125.0236041697801, worksheet.flows_f91, 0.001); end
  def test_flows_g91; assert_in_epsilon(141.92775040162394, worksheet.flows_g91, 0.001); end
  def test_flows_h91; assert_in_epsilon(160.72464692710642, worksheet.flows_h91, 0.001); end
  def test_flows_i91; assert_in_epsilon(170.5797951758127, worksheet.flows_i91, 0.001); end
  def test_flows_j91; assert_in_epsilon(178.72784123896676, worksheet.flows_j91, 0.001); end
  def test_flows_k91; assert_in_epsilon(190.58889075870331, worksheet.flows_k91, 0.001); end
  def test_flows_l91; assert_in_epsilon(194.9306323392334, worksheet.flows_l91, 0.001); end
  def test_flows_m91; assert_in_epsilon(196.4187558423291, worksheet.flows_m91, 0.001); end
  def test_flows_n91; assert_in_epsilon(188.58168305622323, worksheet.flows_n91, 0.001); end
  def test_flows_c92; assert_equal("Liquid", worksheet.flows_c92); end
  def test_flows_d92; assert_equal("International shipping", worksheet.flows_d92); end
  def test_flows_e92; assert_in_epsilon(54.1581570872572, worksheet.flows_e92, 0.001); end
  def test_flows_f92; assert_in_epsilon(57.28499215184298, worksheet.flows_f92, 0.001); end
  def test_flows_g92; assert_in_epsilon(62.90268134716652, worksheet.flows_g92, 0.001); end
  def test_flows_h92; assert_in_epsilon(69.07127280693672, worksheet.flows_h92, 0.001); end
  def test_flows_i92; assert_in_epsilon(76.70040745020478, worksheet.flows_i92, 0.001); end
  def test_flows_j92; assert_in_epsilon(85.17220349292045, worksheet.flows_j92, 0.001); end
  def test_flows_k92; assert_in_epsilon(94.57973547988082, worksheet.flows_k92, 0.001); end
  def test_flows_l92; assert_in_epsilon(105.02635832578606, worksheet.flows_l92, 0.001); end
  def test_flows_m92; assert_in_epsilon(116.62684281373198, worksheet.flows_m92, 0.001); end
  def test_flows_n92; assert_in_epsilon(129.50863651300597, worksheet.flows_n92, 0.001); end
  def test_flows_c93; assert_equal("Electricity grid", worksheet.flows_c93); end
  def test_flows_d93; assert_equal("Geosequestration", worksheet.flows_d93); end
  def test_flows_e93; assert_in_delta(0, (worksheet.flows_e93||0), 0.001); end
  def test_flows_f93; assert_in_delta(0, (worksheet.flows_f93||0), 0.001); end
  def test_flows_g93; assert_in_delta(0, (worksheet.flows_g93||0), 0.001); end
  def test_flows_h93; assert_in_delta(0, (worksheet.flows_h93||0), 0.001); end
  def test_flows_i93; assert_in_delta(0, (worksheet.flows_i93||0), 0.001); end
  def test_flows_j93; assert_in_delta(0, (worksheet.flows_j93||0), 0.001); end
  def test_flows_k93; assert_in_delta(0, (worksheet.flows_k93||0), 0.001); end
  def test_flows_l93; assert_in_delta(0, (worksheet.flows_l93||0), 0.001); end
  def test_flows_m93; assert_in_delta(0, (worksheet.flows_m93||0), 0.001); end
  def test_flows_n93; assert_in_delta(0, (worksheet.flows_n93||0), 0.001); end
  def test_flows_c94; assert_equal("Gas", worksheet.flows_c94); end
  def test_flows_d94; assert_equal("Losses", worksheet.flows_d94); end
  def test_flows_e94; assert_in_epsilon(11.144346489824967, worksheet.flows_e94, 0.001); end
  def test_flows_f94; assert_in_epsilon(11.410354584474698, worksheet.flows_f94, 0.001); end
  def test_flows_g94; assert_in_epsilon(12.307536978329129, worksheet.flows_g94, 0.001); end
  def test_flows_h94; assert_in_epsilon(13.703822237592723, worksheet.flows_h94, 0.001); end
  def test_flows_i94; assert_in_epsilon(15.828150184565732, worksheet.flows_i94, 0.001); end
  def test_flows_j94; assert_in_epsilon(17.94755809508597, worksheet.flows_j94, 0.001); end
  def test_flows_k94; assert_in_epsilon(19.693815937929163, worksheet.flows_k94, 0.001); end
  def test_flows_l94; assert_in_epsilon(21.205622886166175, worksheet.flows_l94, 0.001); end
  def test_flows_m94; assert_in_epsilon(22.774443642605604, worksheet.flows_m94, 0.001); end
  def test_flows_n94; assert_in_epsilon(24.116152691100137, worksheet.flows_n94, 0.001); end

  # start of CostPerCapita
  def test_costpercapita_b1; assert_equal("£/Capita/yr", worksheet.costpercapita_b1); end
  def test_costpercapita_e1; assert_equal("C1.Low", worksheet.costpercapita_e1); end
  def test_costpercapita_f1; assert_equal("Low estimate of capital costs", worksheet.costpercapita_f1); end
  def test_costpercapita_o1; assert_equal("C2.Low", worksheet.costpercapita_o1); end
  def test_costpercapita_p1; assert_equal("Low estimate of operating costs", worksheet.costpercapita_p1); end
  def test_costpercapita_y1; assert_equal("C3.Low", worksheet.costpercapita_y1); end
  def test_costpercapita_z1; assert_equal("Low estimate of fuel costs", worksheet.costpercapita_z1); end
  def test_costpercapita_ai1; assert_equal("Low estimate of total cost", worksheet.costpercapita_ai1); end
  def test_costpercapita_as1; assert_equal("Cashflow capital basis", worksheet.costpercapita_as1); end
  def test_costpercapita_av1; assert_equal("Loan", worksheet.costpercapita_av1); end
  def test_costpercapita_ay1; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay1); end
  def test_costpercapita_bi1; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi1); end
  def test_costpercapita_bs1; assert_equal("Total cost (ammortised capital)", worksheet.costpercapita_bs1); end
  def test_costpercapita_cc1; assert_equal("Amortised Capital", worksheet.costpercapita_cc1); end
  def test_costpercapita_cf1; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf1); end
  def test_costpercapita_cp1; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp1); end
  def test_costpercapita_a2; assert_equal("Code", worksheet.costpercapita_a2); end
  def test_costpercapita_b2; assert_equal("Description", worksheet.costpercapita_b2); end
  def test_costpercapita_c2; assert_equal("Category", worksheet.costpercapita_c2); end
  def test_costpercapita_e2; assert_equal("2010", worksheet.costpercapita_e2); end
  def test_costpercapita_f2; assert_equal("2015", worksheet.costpercapita_f2); end
  def test_costpercapita_g2; assert_equal("2020", worksheet.costpercapita_g2); end
  def test_costpercapita_h2; assert_equal("2025", worksheet.costpercapita_h2); end
  def test_costpercapita_i2; assert_equal("2030", worksheet.costpercapita_i2); end
  def test_costpercapita_j2; assert_equal("2035", worksheet.costpercapita_j2); end
  def test_costpercapita_k2; assert_equal("2040", worksheet.costpercapita_k2); end
  def test_costpercapita_l2; assert_equal("2045", worksheet.costpercapita_l2); end
  def test_costpercapita_m2; assert_equal("2050", worksheet.costpercapita_m2); end
  def test_costpercapita_o2; assert_equal("2010", worksheet.costpercapita_o2); end
  def test_costpercapita_p2; assert_equal("2015", worksheet.costpercapita_p2); end
  def test_costpercapita_q2; assert_equal("2020", worksheet.costpercapita_q2); end
  def test_costpercapita_r2; assert_equal("2025", worksheet.costpercapita_r2); end
  def test_costpercapita_s2; assert_equal("2030", worksheet.costpercapita_s2); end
  def test_costpercapita_t2; assert_equal("2035", worksheet.costpercapita_t2); end
  def test_costpercapita_u2; assert_equal("2040", worksheet.costpercapita_u2); end
  def test_costpercapita_v2; assert_equal("2045", worksheet.costpercapita_v2); end
  def test_costpercapita_w2; assert_equal("2050", worksheet.costpercapita_w2); end
  def test_costpercapita_y2; assert_equal("2010", worksheet.costpercapita_y2); end
  def test_costpercapita_z2; assert_equal("2015", worksheet.costpercapita_z2); end
  def test_costpercapita_aa2; assert_equal("2020", worksheet.costpercapita_aa2); end
  def test_costpercapita_ab2; assert_equal("2025", worksheet.costpercapita_ab2); end
  def test_costpercapita_ac2; assert_equal("2030", worksheet.costpercapita_ac2); end
  def test_costpercapita_ad2; assert_equal("2035", worksheet.costpercapita_ad2); end
  def test_costpercapita_ae2; assert_equal("2040", worksheet.costpercapita_ae2); end
  def test_costpercapita_af2; assert_equal("2045", worksheet.costpercapita_af2); end
  def test_costpercapita_ag2; assert_equal("2050", worksheet.costpercapita_ag2); end
  def test_costpercapita_ai2; assert_equal("2010", worksheet.costpercapita_ai2); end
  def test_costpercapita_aj2; assert_equal("2015", worksheet.costpercapita_aj2); end
  def test_costpercapita_ak2; assert_equal("2020", worksheet.costpercapita_ak2); end
  def test_costpercapita_al2; assert_equal("2025", worksheet.costpercapita_al2); end
  def test_costpercapita_am2; assert_equal("2030", worksheet.costpercapita_am2); end
  def test_costpercapita_an2; assert_equal("2035", worksheet.costpercapita_an2); end
  def test_costpercapita_ao2; assert_equal("2040", worksheet.costpercapita_ao2); end
  def test_costpercapita_ap2; assert_equal("2045", worksheet.costpercapita_ap2); end
  def test_costpercapita_aq2; assert_equal("2050", worksheet.costpercapita_aq2); end
  def test_costpercapita_as2; assert_equal("Mean", worksheet.costpercapita_as2); end
  def test_costpercapita_at2; assert_equal("NPV", worksheet.costpercapita_at2); end
  def test_costpercapita_av2; assert_equal("Rate", worksheet.costpercapita_av2); end
  def test_costpercapita_aw2; assert_equal("Years", worksheet.costpercapita_aw2); end
  def test_costpercapita_ay2; assert_in_epsilon(2010, worksheet.costpercapita_ay2, 0.001); end
  def test_costpercapita_az2; assert_in_epsilon(2015, worksheet.costpercapita_az2, 0.001); end
  def test_costpercapita_ba2; assert_in_epsilon(2020, worksheet.costpercapita_ba2, 0.001); end
  def test_costpercapita_bb2; assert_in_epsilon(2025, worksheet.costpercapita_bb2, 0.001); end
  def test_costpercapita_bc2; assert_in_epsilon(2030, worksheet.costpercapita_bc2, 0.001); end
  def test_costpercapita_bd2; assert_in_epsilon(2035, worksheet.costpercapita_bd2, 0.001); end
  def test_costpercapita_be2; assert_in_epsilon(2040, worksheet.costpercapita_be2, 0.001); end
  def test_costpercapita_bf2; assert_in_epsilon(2045, worksheet.costpercapita_bf2, 0.001); end
  def test_costpercapita_bg2; assert_in_epsilon(2050, worksheet.costpercapita_bg2, 0.001); end
  def test_costpercapita_bi2; assert_in_epsilon(2010, worksheet.costpercapita_bi2, 0.001); end
  def test_costpercapita_bj2; assert_in_epsilon(2015, worksheet.costpercapita_bj2, 0.001); end
  def test_costpercapita_bk2; assert_in_epsilon(2020, worksheet.costpercapita_bk2, 0.001); end
  def test_costpercapita_bl2; assert_in_epsilon(2025, worksheet.costpercapita_bl2, 0.001); end
  def test_costpercapita_bm2; assert_in_epsilon(2030, worksheet.costpercapita_bm2, 0.001); end
  def test_costpercapita_bn2; assert_in_epsilon(2035, worksheet.costpercapita_bn2, 0.001); end
  def test_costpercapita_bo2; assert_in_epsilon(2040, worksheet.costpercapita_bo2, 0.001); end
  def test_costpercapita_bp2; assert_in_epsilon(2045, worksheet.costpercapita_bp2, 0.001); end
  def test_costpercapita_bq2; assert_in_epsilon(2050, worksheet.costpercapita_bq2, 0.001); end
  def test_costpercapita_bs2; assert_equal("2010", worksheet.costpercapita_bs2); end
  def test_costpercapita_bt2; assert_equal("2015", worksheet.costpercapita_bt2); end
  def test_costpercapita_bu2; assert_equal("2020", worksheet.costpercapita_bu2); end
  def test_costpercapita_bv2; assert_equal("2025", worksheet.costpercapita_bv2); end
  def test_costpercapita_bw2; assert_equal("2030", worksheet.costpercapita_bw2); end
  def test_costpercapita_bx2; assert_equal("2035", worksheet.costpercapita_bx2); end
  def test_costpercapita_by2; assert_equal("2040", worksheet.costpercapita_by2); end
  def test_costpercapita_bz2; assert_equal("2045", worksheet.costpercapita_bz2); end
  def test_costpercapita_ca2; assert_equal("2050", worksheet.costpercapita_ca2); end
  def test_costpercapita_cc2; assert_equal("Mean", worksheet.costpercapita_cc2); end
  def test_costpercapita_cd2; assert_equal("NPV", worksheet.costpercapita_cd2); end
  def test_costpercapita_cf2; assert_equal("2010", worksheet.costpercapita_cf2); end
  def test_costpercapita_cg2; assert_equal("2015", worksheet.costpercapita_cg2); end
  def test_costpercapita_ch2; assert_equal("2020", worksheet.costpercapita_ch2); end
  def test_costpercapita_ci2; assert_equal("2025", worksheet.costpercapita_ci2); end
  def test_costpercapita_cj2; assert_equal("2030", worksheet.costpercapita_cj2); end
  def test_costpercapita_ck2; assert_equal("2035", worksheet.costpercapita_ck2); end
  def test_costpercapita_cl2; assert_equal("2040", worksheet.costpercapita_cl2); end
  def test_costpercapita_cm2; assert_equal("2045", worksheet.costpercapita_cm2); end
  def test_costpercapita_cn2; assert_equal("2050", worksheet.costpercapita_cn2); end
  def test_costpercapita_cp2; assert_equal("Mean", worksheet.costpercapita_cp2); end
  def test_costpercapita_cq2; assert_equal("NPV", worksheet.costpercapita_cq2); end
  def test_costpercapita_a3; assert_equal("I.a", worksheet.costpercapita_a3); end
  def test_costpercapita_b3; assert_equal("Conventional thermal plant", worksheet.costpercapita_b3); end
  def test_costpercapita_c3; assert_equal("Electricity", worksheet.costpercapita_c3); end
  def test_costpercapita_e3; assert_in_epsilon(4.532268460561132, worksheet.costpercapita_e3, 0.001); end
  def test_costpercapita_f3; assert_in_epsilon(16.26638787729745, worksheet.costpercapita_f3, 0.001); end
  def test_costpercapita_g3; assert_in_epsilon(23.601934183161497, worksheet.costpercapita_g3, 0.001); end
  def test_costpercapita_h3; assert_in_epsilon(30.90834547121747, worksheet.costpercapita_h3, 0.001); end
  def test_costpercapita_i3; assert_in_epsilon(32.88053283244465, worksheet.costpercapita_i3, 0.001); end
  def test_costpercapita_j3; assert_in_epsilon(32.61723009338241, worksheet.costpercapita_j3, 0.001); end
  def test_costpercapita_k3; assert_in_epsilon(33.503201488634865, worksheet.costpercapita_k3, 0.001); end
  def test_costpercapita_l3; assert_in_epsilon(34.3804708665413, worksheet.costpercapita_l3, 0.001); end
  def test_costpercapita_m3; assert_in_epsilon(32.846238835480285, worksheet.costpercapita_m3, 0.001); end
  def test_costpercapita_o3; assert_in_epsilon(22.12171366595489, worksheet.costpercapita_o3, 0.001); end
  def test_costpercapita_p3; assert_in_epsilon(19.19177229594196, worksheet.costpercapita_p3, 0.001); end
  def test_costpercapita_q3; assert_in_epsilon(18.26059566091301, worksheet.costpercapita_q3, 0.001); end
  def test_costpercapita_r3; assert_in_epsilon(17.592086550123838, worksheet.costpercapita_r3, 0.001); end
  def test_costpercapita_s3; assert_in_epsilon(17.412527734765757, worksheet.costpercapita_s3, 0.001); end
  def test_costpercapita_t3; assert_in_epsilon(18.59043053721708, worksheet.costpercapita_t3, 0.001); end
  def test_costpercapita_u3; assert_in_epsilon(19.696208381824903, worksheet.costpercapita_u3, 0.001); end
  def test_costpercapita_v3; assert_in_epsilon(20.769522194515375, worksheet.costpercapita_v3, 0.001); end
  def test_costpercapita_w3; assert_in_epsilon(21.424807024755985, worksheet.costpercapita_w3, 0.001); end
  def test_costpercapita_y3; assert_in_delta(0, (worksheet.costpercapita_y3||0), 0.001); end
  def test_costpercapita_z3; assert_in_delta(0, (worksheet.costpercapita_z3||0), 0.001); end
  def test_costpercapita_aa3; assert_in_delta(0, (worksheet.costpercapita_aa3||0), 0.001); end
  def test_costpercapita_ab3; assert_in_delta(0, (worksheet.costpercapita_ab3||0), 0.001); end
  def test_costpercapita_ac3; assert_in_delta(0, (worksheet.costpercapita_ac3||0), 0.001); end
  def test_costpercapita_ad3; assert_in_delta(0, (worksheet.costpercapita_ad3||0), 0.001); end
  def test_costpercapita_ae3; assert_in_delta(0, (worksheet.costpercapita_ae3||0), 0.001); end
  def test_costpercapita_af3; assert_in_delta(0, (worksheet.costpercapita_af3||0), 0.001); end
  def test_costpercapita_ag3; assert_in_delta(0, (worksheet.costpercapita_ag3||0), 0.001); end
  def test_costpercapita_ai3; assert_in_epsilon(26.65398212651602, worksheet.costpercapita_ai3, 0.001); end
  def test_costpercapita_aj3; assert_in_epsilon(35.458160173239406, worksheet.costpercapita_aj3, 0.001); end
  def test_costpercapita_ak3; assert_in_epsilon(41.8625298440745, worksheet.costpercapita_ak3, 0.001); end
  def test_costpercapita_al3; assert_in_epsilon(48.50043202134131, worksheet.costpercapita_al3, 0.001); end
  def test_costpercapita_am3; assert_in_epsilon(50.29306056721041, worksheet.costpercapita_am3, 0.001); end
  def test_costpercapita_an3; assert_in_epsilon(51.20766063059949, worksheet.costpercapita_an3, 0.001); end
  def test_costpercapita_ao3; assert_in_epsilon(53.19940987045977, worksheet.costpercapita_ao3, 0.001); end
  def test_costpercapita_ap3; assert_in_epsilon(55.149993061056676, worksheet.costpercapita_ap3, 0.001); end
  def test_costpercapita_aq3; assert_in_epsilon(54.27104586023627, worksheet.costpercapita_aq3, 0.001); end
  def test_costpercapita_as3; assert_in_epsilon(46.28847490608154, worksheet.costpercapita_as3, 0.001); end
  def test_costpercapita_at3; assert_in_epsilon(955.2331925758431, worksheet.costpercapita_at3, 0.001); end
  def test_costpercapita_av3; assert_in_delta(0, (worksheet.costpercapita_av3||0), 0.001); end
  def test_costpercapita_aw3; assert_in_epsilon(20, worksheet.costpercapita_aw3, 0.001); end
  def test_costpercapita_ay3; assert_in_delta(0.6798402690841696, worksheet.costpercapita_ay3, 0.001); end
  def test_costpercapita_az3; assert_in_epsilon(4.066596969324363, worksheet.costpercapita_az3, 0.001); end
  def test_costpercapita_ba3; assert_in_epsilon(5.900483545790374, worksheet.costpercapita_ba3, 0.001); end
  def test_costpercapita_bb3; assert_in_epsilon(7.727086367804367, worksheet.costpercapita_bb3, 0.001); end
  def test_costpercapita_bc3; assert_in_epsilon(8.220133208111163, worksheet.costpercapita_bc3, 0.001); end
  def test_costpercapita_bd3; assert_in_epsilon(8.154307523345603, worksheet.costpercapita_bd3, 0.001); end
  def test_costpercapita_be3; assert_in_epsilon(8.375800372158716, worksheet.costpercapita_be3, 0.001); end
  def test_costpercapita_bf3; assert_in_epsilon(8.595117716635325, worksheet.costpercapita_bf3, 0.001); end
  def test_costpercapita_bg3; assert_in_epsilon(8.211559708870071, worksheet.costpercapita_bg3, 0.001); end
  def test_costpercapita_bi3; assert_in_delta(0.6798402690841696, worksheet.costpercapita_bi3, 0.001); end
  def test_costpercapita_bj3; assert_in_epsilon(4.7240194584558335, worksheet.costpercapita_bj3, 0.001); end
  def test_costpercapita_bk3; assert_in_epsilon(10.469847344499703, worksheet.costpercapita_bk3, 0.001); end
  def test_costpercapita_bl3; assert_in_epsilon(17.87275085839768, worksheet.costpercapita_bl3, 0.001); end
  def test_costpercapita_bm3; assert_in_epsilon(25.00522270043413, worksheet.costpercapita_bm3, 0.001); end
  def test_costpercapita_bn3; assert_in_epsilon(28.95031339922445, worksheet.costpercapita_bn3, 0.001); end
  def test_costpercapita_bo3; assert_in_epsilon(31.39395596005861, worksheet.costpercapita_bo3, 0.001); end
  def test_costpercapita_bp3; assert_in_epsilon(40.02230833867809, worksheet.costpercapita_bp3, 0.001); end
  def test_costpercapita_bq3; assert_in_epsilon(32.37706484509194, worksheet.costpercapita_bq3, 0.001); end
  def test_costpercapita_bs3; assert_in_epsilon(22.801553935039056, worksheet.costpercapita_bs3, 0.001); end
  def test_costpercapita_bt3; assert_in_epsilon(23.91579175439779, worksheet.costpercapita_bt3, 0.001); end
  def test_costpercapita_bu3; assert_in_epsilon(28.730443005412713, worksheet.costpercapita_bu3, 0.001); end
  def test_costpercapita_bv3; assert_in_epsilon(35.46483740852152, worksheet.costpercapita_bv3, 0.001); end
  def test_costpercapita_bw3; assert_in_epsilon(42.417750435199885, worksheet.costpercapita_bw3, 0.001); end
  def test_costpercapita_bx3; assert_in_epsilon(47.54074393644153, worksheet.costpercapita_bx3, 0.001); end
  def test_costpercapita_by3; assert_in_epsilon(51.090164341883515, worksheet.costpercapita_by3, 0.001); end
  def test_costpercapita_bz3; assert_in_epsilon(60.79183053319346, worksheet.costpercapita_bz3, 0.001); end
  def test_costpercapita_ca3; assert_in_epsilon(53.80187186984792, worksheet.costpercapita_ca3, 0.001); end
  def test_costpercapita_cc3; assert_in_epsilon(40.72833191332638, worksheet.costpercapita_cc3, 0.001); end
  def test_costpercapita_cd3; assert_in_epsilon(794.0795733626219, worksheet.costpercapita_cd3, 0.001); end
  def test_costpercapita_cf3; assert_in_epsilon(-3.8524281914769616, worksheet.costpercapita_cf3, 0.001); end
  def test_costpercapita_cg3; assert_in_epsilon(-11.542368418841619, worksheet.costpercapita_cg3, 0.001); end
  def test_costpercapita_ch3; assert_in_epsilon(-13.132086838661793, worksheet.costpercapita_ch3, 0.001); end
  def test_costpercapita_ci3; assert_in_epsilon(-13.03559461281979, worksheet.costpercapita_ci3, 0.001); end
  def test_costpercapita_cj3; assert_in_epsilon(-7.875310132010521, worksheet.costpercapita_cj3, 0.001); end
  def test_costpercapita_ck3; assert_in_epsilon(-3.6669166941579583, worksheet.costpercapita_ck3, 0.001); end
  def test_costpercapita_cl3; assert_in_epsilon(-2.109245528576256, worksheet.costpercapita_cl3, 0.001); end
  def test_costpercapita_cm3; assert_in_epsilon(5.641837472136781, worksheet.costpercapita_cm3, 0.001); end
  def test_costpercapita_cn3; assert_in_delta(-0.46917399038834695, worksheet.costpercapita_cn3, 0.001); end
  def test_costpercapita_cp3; assert_in_epsilon(-5.560142992755162, worksheet.costpercapita_cp3, 0.001); end
  def test_costpercapita_cq3; assert_in_epsilon(-161.15361921322142, worksheet.costpercapita_cq3, 0.001); end
  def test_costpercapita_cr3; assert_equal("ok", worksheet.costpercapita_cr3); end
  def test_costpercapita_a4; assert_equal("I.b", worksheet.costpercapita_a4); end
  def test_costpercapita_b4; assert_equal("Combustion + CCS", worksheet.costpercapita_b4); end
  def test_costpercapita_c4; assert_equal("Electricity", worksheet.costpercapita_c4); end
  def test_costpercapita_e4; assert_in_delta(0, (worksheet.costpercapita_e4||0), 0.001); end
  def test_costpercapita_f4; assert_in_epsilon(2.0425903169823227, worksheet.costpercapita_f4, 0.001); end
  def test_costpercapita_g4; assert_in_epsilon(1.831688307690023, worksheet.costpercapita_g4, 0.001); end
  def test_costpercapita_h4; assert_in_delta(-2.1497699895078375e-16, worksheet.costpercapita_h4, 0.001); end
  def test_costpercapita_i4; assert_in_delta(0, (worksheet.costpercapita_i4||0), 0.001); end
  def test_costpercapita_j4; assert_in_delta(0, (worksheet.costpercapita_j4||0), 0.001); end
  def test_costpercapita_k4; assert_in_delta(0, (worksheet.costpercapita_k4||0), 0.001); end
  def test_costpercapita_l4; assert_in_delta(0, (worksheet.costpercapita_l4||0), 0.001); end
  def test_costpercapita_m4; assert_in_delta(0, (worksheet.costpercapita_m4||0), 0.001); end
  def test_costpercapita_o4; assert_in_delta(0, (worksheet.costpercapita_o4||0), 0.001); end
  def test_costpercapita_p4; assert_in_delta(0.2710424859718418, worksheet.costpercapita_p4, 0.001); end
  def test_costpercapita_q4; assert_in_delta(0.5192270185897404, worksheet.costpercapita_q4, 0.001); end
  def test_costpercapita_r4; assert_in_delta(0.45886575842905813, worksheet.costpercapita_r4, 0.001); end
  def test_costpercapita_s4; assert_in_delta(0.44632947565808306, worksheet.costpercapita_s4, 0.001); end
  def test_costpercapita_t4; assert_in_delta(0.4358158742957596, worksheet.costpercapita_t4, 0.001); end
  def test_costpercapita_u4; assert_in_delta(0.42652149662249816, worksheet.costpercapita_u4, 0.001); end
  def test_costpercapita_v4; assert_in_delta(0.41801327764104834, worksheet.costpercapita_v4, 0.001); end
  def test_costpercapita_w4; assert_in_delta(0.41021242453214596, worksheet.costpercapita_w4, 0.001); end
  def test_costpercapita_y4; assert_in_delta(0, (worksheet.costpercapita_y4||0), 0.001); end
  def test_costpercapita_z4; assert_in_delta(0, (worksheet.costpercapita_z4||0), 0.001); end
  def test_costpercapita_aa4; assert_in_delta(0, (worksheet.costpercapita_aa4||0), 0.001); end
  def test_costpercapita_ab4; assert_in_delta(0, (worksheet.costpercapita_ab4||0), 0.001); end
  def test_costpercapita_ac4; assert_in_delta(0, (worksheet.costpercapita_ac4||0), 0.001); end
  def test_costpercapita_ad4; assert_in_delta(0, (worksheet.costpercapita_ad4||0), 0.001); end
  def test_costpercapita_ae4; assert_in_delta(0, (worksheet.costpercapita_ae4||0), 0.001); end
  def test_costpercapita_af4; assert_in_delta(0, (worksheet.costpercapita_af4||0), 0.001); end
  def test_costpercapita_ag4; assert_in_delta(0, (worksheet.costpercapita_ag4||0), 0.001); end
  def test_costpercapita_ai4; assert_in_delta(0, (worksheet.costpercapita_ai4||0), 0.001); end
  def test_costpercapita_aj4; assert_in_epsilon(2.313632802954164, worksheet.costpercapita_aj4, 0.001); end
  def test_costpercapita_ak4; assert_in_epsilon(2.3509153262797637, worksheet.costpercapita_ak4, 0.001); end
  def test_costpercapita_al4; assert_in_delta(0.4588657584290579, worksheet.costpercapita_al4, 0.001); end
  def test_costpercapita_am4; assert_in_delta(0.44632947565808306, worksheet.costpercapita_am4, 0.001); end
  def test_costpercapita_an4; assert_in_delta(0.4358158742957596, worksheet.costpercapita_an4, 0.001); end
  def test_costpercapita_ao4; assert_in_delta(0.42652149662249816, worksheet.costpercapita_ao4, 0.001); end
  def test_costpercapita_ap4; assert_in_delta(0.41801327764104834, worksheet.costpercapita_ap4, 0.001); end
  def test_costpercapita_aq4; assert_in_delta(0.41021242453214596, worksheet.costpercapita_aq4, 0.001); end
  def test_costpercapita_as4; assert_in_delta(0.8067007151569467, worksheet.costpercapita_as4, 0.001); end
  def test_costpercapita_at4; assert_in_epsilon(23.43209403617454, worksheet.costpercapita_at4, 0.001); end
  def test_costpercapita_av4; assert_in_delta(0, (worksheet.costpercapita_av4||0), 0.001); end
  def test_costpercapita_aw4; assert_in_epsilon(30, worksheet.costpercapita_aw4, 0.001); end
  def test_costpercapita_ay4; assert_in_delta(0, (worksheet.costpercapita_ay4||0), 0.001); end
  def test_costpercapita_az4; assert_in_delta(0.34043171949705375, worksheet.costpercapita_az4, 0.001); end
  def test_costpercapita_ba4; assert_in_delta(0.30528138461500387, worksheet.costpercapita_ba4, 0.001); end
  def test_costpercapita_bb4; assert_in_delta(-3.582949982513063e-17, worksheet.costpercapita_bb4, 0.001); end
  def test_costpercapita_bc4; assert_in_delta(0, (worksheet.costpercapita_bc4||0), 0.001); end
  def test_costpercapita_bd4; assert_in_delta(0, (worksheet.costpercapita_bd4||0), 0.001); end
  def test_costpercapita_be4; assert_in_delta(0, (worksheet.costpercapita_be4||0), 0.001); end
  def test_costpercapita_bf4; assert_in_delta(0, (worksheet.costpercapita_bf4||0), 0.001); end
  def test_costpercapita_bg4; assert_in_delta(0, (worksheet.costpercapita_bg4||0), 0.001); end
  def test_costpercapita_bi4; assert_in_delta(0, (worksheet.costpercapita_bi4||0), 0.001); end
  def test_costpercapita_bj4; assert_in_delta(0.34043171949705375, worksheet.costpercapita_bj4, 0.001); end
  def test_costpercapita_bk4; assert_in_delta(0.6345679992621586, worksheet.costpercapita_bk4, 0.001); end
  def test_costpercapita_bl4; assert_in_delta(0.6149195690387183, worksheet.costpercapita_bl4, 0.001); end
  def test_costpercapita_bm4; assert_in_delta(0.5981198722706115, worksheet.costpercapita_bm4, 0.001); end
  def test_costpercapita_bn4; assert_in_delta(0.5840307424978909, worksheet.costpercapita_bn4, 0.001); end
  def test_costpercapita_bo4; assert_in_delta(0.5715754772959472, worksheet.costpercapita_bo4, 0.001); end
  def test_costpercapita_bp4; assert_in_delta(0.26949139072681294, worksheet.costpercapita_bp4, 0.001); end
  def test_costpercapita_bq4; assert_in_delta(-3.203051376803319e-17, worksheet.costpercapita_bq4, 0.001); end
  def test_costpercapita_bs4; assert_in_delta(0, (worksheet.costpercapita_bs4||0), 0.001); end
  def test_costpercapita_bt4; assert_in_delta(0.6114742054688955, worksheet.costpercapita_bt4, 0.001); end
  def test_costpercapita_bu4; assert_in_epsilon(1.153795017851899, worksheet.costpercapita_bu4, 0.001); end
  def test_costpercapita_bv4; assert_in_epsilon(1.0737853274677764, worksheet.costpercapita_bv4, 0.001); end
  def test_costpercapita_bw4; assert_in_epsilon(1.0444493479286945, worksheet.costpercapita_bw4, 0.001); end
  def test_costpercapita_bx4; assert_in_epsilon(1.0198466167936504, worksheet.costpercapita_bx4, 0.001); end
  def test_costpercapita_by4; assert_in_delta(0.9980969739184453, worksheet.costpercapita_by4, 0.001); end
  def test_costpercapita_bz4; assert_in_delta(0.6875046683678613, worksheet.costpercapita_bz4, 0.001); end
  def test_costpercapita_ca4; assert_in_delta(0.4102124245321459, worksheet.costpercapita_ca4, 0.001); end
  def test_costpercapita_cc4; assert_in_delta(0.7776849535921522, worksheet.costpercapita_cc4, 0.001); end
  def test_costpercapita_cd4; assert_in_epsilon(18.029067700335876, worksheet.costpercapita_cd4, 0.001); end
  def test_costpercapita_cf4; assert_in_delta(0, (worksheet.costpercapita_cf4||0), 0.001); end
  def test_costpercapita_cg4; assert_in_epsilon(-1.7021585974852689, worksheet.costpercapita_cg4, 0.001); end
  def test_costpercapita_ch4; assert_in_epsilon(-1.1971203084278645, worksheet.costpercapita_ch4, 0.001); end
  def test_costpercapita_ci4; assert_in_delta(0.6149195690387185, worksheet.costpercapita_ci4, 0.001); end
  def test_costpercapita_cj4; assert_in_delta(0.5981198722706115, worksheet.costpercapita_cj4, 0.001); end
  def test_costpercapita_ck4; assert_in_delta(0.5840307424978909, worksheet.costpercapita_ck4, 0.001); end
  def test_costpercapita_cl4; assert_in_delta(0.5715754772959472, worksheet.costpercapita_cl4, 0.001); end
  def test_costpercapita_cm4; assert_in_delta(0.26949139072681294, worksheet.costpercapita_cm4, 0.001); end
  def test_costpercapita_cn4; assert_in_delta(-3.203051376803319e-17, worksheet.costpercapita_cn4, 0.001); end
  def test_costpercapita_cp4; assert_in_delta(-0.029015761564794764, worksheet.costpercapita_cp4, 0.001); end
  def test_costpercapita_cq4; assert_in_epsilon(-5.403026335838662, worksheet.costpercapita_cq4, 0.001); end
  def test_costpercapita_cr4; assert_equal("ok", worksheet.costpercapita_cr4); end
  def test_costpercapita_a5; assert_equal("II.a", worksheet.costpercapita_a5); end
  def test_costpercapita_b5; assert_equal("Nuclear power", worksheet.costpercapita_b5); end
  def test_costpercapita_c5; assert_equal("Electricity", worksheet.costpercapita_c5); end
  def test_costpercapita_e5; assert_in_delta(0, (worksheet.costpercapita_e5||0), 0.001); end
  def test_costpercapita_f5; assert_in_delta(0, (worksheet.costpercapita_f5||0), 0.001); end
  def test_costpercapita_g5; assert_in_delta(0, (worksheet.costpercapita_g5||0), 0.001); end
  def test_costpercapita_h5; assert_in_delta(0, (worksheet.costpercapita_h5||0), 0.001); end
  def test_costpercapita_i5; assert_in_delta(0, (worksheet.costpercapita_i5||0), 0.001); end
  def test_costpercapita_j5; assert_in_delta(0, (worksheet.costpercapita_j5||0), 0.001); end
  def test_costpercapita_k5; assert_in_delta(0, (worksheet.costpercapita_k5||0), 0.001); end
  def test_costpercapita_l5; assert_in_delta(0, (worksheet.costpercapita_l5||0), 0.001); end
  def test_costpercapita_m5; assert_in_delta(0, (worksheet.costpercapita_m5||0), 0.001); end
  def test_costpercapita_o5; assert_in_epsilon(3.715090759467435, worksheet.costpercapita_o5, 0.001); end
  def test_costpercapita_p5; assert_in_epsilon(2.775325462508412, worksheet.costpercapita_p5, 0.001); end
  def test_costpercapita_q5; assert_in_epsilon(1.4334769578840183, worksheet.costpercapita_q5, 0.001); end
  def test_costpercapita_r5; assert_in_delta(0.46303051009710694, worksheet.costpercapita_r5, 0.001); end
  def test_costpercapita_s5; assert_in_delta(0.4503804456729523, worksheet.costpercapita_s5, 0.001); end
  def test_costpercapita_t5; assert_in_delta(0, (worksheet.costpercapita_t5||0), 0.001); end
  def test_costpercapita_u5; assert_in_delta(0, (worksheet.costpercapita_u5||0), 0.001); end
  def test_costpercapita_v5; assert_in_delta(0, (worksheet.costpercapita_v5||0), 0.001); end
  def test_costpercapita_w5; assert_in_delta(0, (worksheet.costpercapita_w5||0), 0.001); end
  def test_costpercapita_y5; assert_in_delta(0.27699004186341447, worksheet.costpercapita_y5, 0.001); end
  def test_costpercapita_z5; assert_in_delta(0.22499927188293975, worksheet.costpercapita_z5, 0.001); end
  def test_costpercapita_aa5; assert_in_delta(0.12436183535401259, worksheet.costpercapita_aa5, 0.001); end
  def test_costpercapita_ab5; assert_in_delta(0.04017038693498128, worksheet.costpercapita_ab5, 0.001); end
  def test_costpercapita_ac5; assert_in_delta(0.039072925813976186, worksheet.costpercapita_ac5, 0.001); end
  def test_costpercapita_ad5; assert_in_delta(0, (worksheet.costpercapita_ad5||0), 0.001); end
  def test_costpercapita_ae5; assert_in_delta(0, (worksheet.costpercapita_ae5||0), 0.001); end
  def test_costpercapita_af5; assert_in_delta(0, (worksheet.costpercapita_af5||0), 0.001); end
  def test_costpercapita_ag5; assert_in_delta(0, (worksheet.costpercapita_ag5||0), 0.001); end
  def test_costpercapita_ai5; assert_in_epsilon(3.9920808013308497, worksheet.costpercapita_ai5, 0.001); end
  def test_costpercapita_aj5; assert_in_epsilon(3.0003247343913517, worksheet.costpercapita_aj5, 0.001); end
  def test_costpercapita_ak5; assert_in_epsilon(1.5578387932380309, worksheet.costpercapita_ak5, 0.001); end
  def test_costpercapita_al5; assert_in_delta(0.5032008970320883, worksheet.costpercapita_al5, 0.001); end
  def test_costpercapita_am5; assert_in_delta(0.4894533714869285, worksheet.costpercapita_am5, 0.001); end
  def test_costpercapita_an5; assert_in_delta(0, (worksheet.costpercapita_an5||0), 0.001); end
  def test_costpercapita_ao5; assert_in_delta(0, (worksheet.costpercapita_ao5||0), 0.001); end
  def test_costpercapita_ap5; assert_in_delta(0, (worksheet.costpercapita_ap5||0), 0.001); end
  def test_costpercapita_aq5; assert_in_delta(0, (worksheet.costpercapita_aq5||0), 0.001); end
  def test_costpercapita_as5; assert_in_epsilon(1.0603220663865833, worksheet.costpercapita_as5, 0.001); end
  def test_costpercapita_at5; assert_in_epsilon(24.876643844952078, worksheet.costpercapita_at5, 0.001); end
  def test_costpercapita_av5; assert_in_delta(0, (worksheet.costpercapita_av5||0), 0.001); end
  def test_costpercapita_aw5; assert_in_epsilon(30, worksheet.costpercapita_aw5, 0.001); end
  def test_costpercapita_ay5; assert_in_delta(0, (worksheet.costpercapita_ay5||0), 0.001); end
  def test_costpercapita_az5; assert_in_delta(0, (worksheet.costpercapita_az5||0), 0.001); end
  def test_costpercapita_ba5; assert_in_delta(0, (worksheet.costpercapita_ba5||0), 0.001); end
  def test_costpercapita_bb5; assert_in_delta(0, (worksheet.costpercapita_bb5||0), 0.001); end
  def test_costpercapita_bc5; assert_in_delta(0, (worksheet.costpercapita_bc5||0), 0.001); end
  def test_costpercapita_bd5; assert_in_delta(0, (worksheet.costpercapita_bd5||0), 0.001); end
  def test_costpercapita_be5; assert_in_delta(0, (worksheet.costpercapita_be5||0), 0.001); end
  def test_costpercapita_bf5; assert_in_delta(0, (worksheet.costpercapita_bf5||0), 0.001); end
  def test_costpercapita_bg5; assert_in_delta(0, (worksheet.costpercapita_bg5||0), 0.001); end
  def test_costpercapita_bi5; assert_in_delta(0, (worksheet.costpercapita_bi5||0), 0.001); end
  def test_costpercapita_bj5; assert_in_delta(0, (worksheet.costpercapita_bj5||0), 0.001); end
  def test_costpercapita_bk5; assert_in_delta(0, (worksheet.costpercapita_bk5||0), 0.001); end
  def test_costpercapita_bl5; assert_in_delta(0, (worksheet.costpercapita_bl5||0), 0.001); end
  def test_costpercapita_bm5; assert_in_delta(0, (worksheet.costpercapita_bm5||0), 0.001); end
  def test_costpercapita_bn5; assert_in_delta(0, (worksheet.costpercapita_bn5||0), 0.001); end
  def test_costpercapita_bo5; assert_in_delta(0, (worksheet.costpercapita_bo5||0), 0.001); end
  def test_costpercapita_bp5; assert_in_delta(0, (worksheet.costpercapita_bp5||0), 0.001); end
  def test_costpercapita_bq5; assert_in_delta(0, (worksheet.costpercapita_bq5||0), 0.001); end
  def test_costpercapita_bs5; assert_in_epsilon(3.9920808013308497, worksheet.costpercapita_bs5, 0.001); end
  def test_costpercapita_bt5; assert_in_epsilon(3.0003247343913517, worksheet.costpercapita_bt5, 0.001); end
  def test_costpercapita_bu5; assert_in_epsilon(1.5578387932380309, worksheet.costpercapita_bu5, 0.001); end
  def test_costpercapita_bv5; assert_in_delta(0.5032008970320883, worksheet.costpercapita_bv5, 0.001); end
  def test_costpercapita_bw5; assert_in_delta(0.4894533714869285, worksheet.costpercapita_bw5, 0.001); end
  def test_costpercapita_bx5; assert_in_delta(0, (worksheet.costpercapita_bx5||0), 0.001); end
  def test_costpercapita_by5; assert_in_delta(0, (worksheet.costpercapita_by5||0), 0.001); end
  def test_costpercapita_bz5; assert_in_delta(0, (worksheet.costpercapita_bz5||0), 0.001); end
  def test_costpercapita_ca5; assert_in_delta(0, (worksheet.costpercapita_ca5||0), 0.001); end
  def test_costpercapita_cc5; assert_in_epsilon(1.0603220663865833, worksheet.costpercapita_cc5, 0.001); end
  def test_costpercapita_cd5; assert_in_epsilon(24.876643844952078, worksheet.costpercapita_cd5, 0.001); end
  def test_costpercapita_cf5; assert_in_delta(0, (worksheet.costpercapita_cf5||0), 0.001); end
  def test_costpercapita_cg5; assert_in_delta(0, (worksheet.costpercapita_cg5||0), 0.001); end
  def test_costpercapita_ch5; assert_in_delta(0, (worksheet.costpercapita_ch5||0), 0.001); end
  def test_costpercapita_ci5; assert_in_delta(0, (worksheet.costpercapita_ci5||0), 0.001); end
  def test_costpercapita_cj5; assert_in_delta(0, (worksheet.costpercapita_cj5||0), 0.001); end
  def test_costpercapita_ck5; assert_in_delta(0, (worksheet.costpercapita_ck5||0), 0.001); end
  def test_costpercapita_cl5; assert_in_delta(0, (worksheet.costpercapita_cl5||0), 0.001); end
  def test_costpercapita_cm5; assert_in_delta(0, (worksheet.costpercapita_cm5||0), 0.001); end
  def test_costpercapita_cn5; assert_in_delta(0, (worksheet.costpercapita_cn5||0), 0.001); end
  def test_costpercapita_cp5; assert_in_delta(0, (worksheet.costpercapita_cp5||0), 0.001); end
  def test_costpercapita_cq5; assert_in_delta(0, (worksheet.costpercapita_cq5||0), 0.001); end
  def test_costpercapita_cr5; assert_equal("ok", worksheet.costpercapita_cr5); end
  def test_costpercapita_a6; assert_equal("III.a.1", worksheet.costpercapita_a6); end
  def test_costpercapita_b6; assert_equal("Onshore wind", worksheet.costpercapita_b6); end
  def test_costpercapita_c6; assert_equal("Electricity", worksheet.costpercapita_c6); end
  def test_costpercapita_e6; assert_in_epsilon(8.615117827148735, worksheet.costpercapita_e6, 0.001); end
  def test_costpercapita_f6; assert_in_epsilon(7.415203332529532, worksheet.costpercapita_f6, 0.001); end
  def test_costpercapita_g6; assert_in_epsilon(7.118701640219212, worksheet.costpercapita_g6, 0.001); end
  def test_costpercapita_h6; assert_in_epsilon(6.8462042799268765, worksheet.costpercapita_h6, 0.001); end
  def test_costpercapita_i6; assert_in_delta(0, (worksheet.costpercapita_i6||0), 0.001); end
  def test_costpercapita_j6; assert_in_delta(0, (worksheet.costpercapita_j6||0), 0.001); end
  def test_costpercapita_k6; assert_in_delta(0, (worksheet.costpercapita_k6||0), 0.001); end
  def test_costpercapita_l6; assert_in_delta(0, (worksheet.costpercapita_l6||0), 0.001); end
  def test_costpercapita_m6; assert_in_delta(0, (worksheet.costpercapita_m6||0), 0.001); end
  def test_costpercapita_o6; assert_in_delta(0.44138121762992655, worksheet.costpercapita_o6, 0.001); end
  def test_costpercapita_p6; assert_in_delta(0.7259991101600587, worksheet.costpercapita_p6, 0.001); end
  def test_costpercapita_q6; assert_in_delta(0.9916093575231592, worksheet.costpercapita_q6, 0.001); end
  def test_costpercapita_r6; assert_in_epsilon(1.1230382541961308, worksheet.costpercapita_r6, 0.001); end
  def test_costpercapita_s6; assert_in_delta(0.8215834619258144, worksheet.costpercapita_s6, 0.001); end
  def test_costpercapita_t6; assert_in_delta(0.535898568628479, worksheet.costpercapita_t6, 0.001); end
  def test_costpercapita_u6; assert_in_delta(0.26381776304423576, worksheet.costpercapita_u6, 0.001); end
  def test_costpercapita_v6; assert_in_delta(0.0031025874384912016, worksheet.costpercapita_v6, 0.001); end
  def test_costpercapita_w6; assert_in_delta(0.0030446877731940174, worksheet.costpercapita_w6, 0.001); end
  def test_costpercapita_y6; assert_in_delta(0, (worksheet.costpercapita_y6||0), 0.001); end
  def test_costpercapita_z6; assert_in_delta(0, (worksheet.costpercapita_z6||0), 0.001); end
  def test_costpercapita_aa6; assert_in_delta(0, (worksheet.costpercapita_aa6||0), 0.001); end
  def test_costpercapita_ab6; assert_in_delta(0, (worksheet.costpercapita_ab6||0), 0.001); end
  def test_costpercapita_ac6; assert_in_delta(0, (worksheet.costpercapita_ac6||0), 0.001); end
  def test_costpercapita_ad6; assert_in_delta(0, (worksheet.costpercapita_ad6||0), 0.001); end
  def test_costpercapita_ae6; assert_in_delta(0, (worksheet.costpercapita_ae6||0), 0.001); end
  def test_costpercapita_af6; assert_in_delta(0, (worksheet.costpercapita_af6||0), 0.001); end
  def test_costpercapita_ag6; assert_in_delta(0, (worksheet.costpercapita_ag6||0), 0.001); end
  def test_costpercapita_ai6; assert_in_epsilon(9.056499044778661, worksheet.costpercapita_ai6, 0.001); end
  def test_costpercapita_aj6; assert_in_epsilon(8.141202442689591, worksheet.costpercapita_aj6, 0.001); end
  def test_costpercapita_ak6; assert_in_epsilon(8.11031099774237, worksheet.costpercapita_ak6, 0.001); end
  def test_costpercapita_al6; assert_in_epsilon(7.969242534123008, worksheet.costpercapita_al6, 0.001); end
  def test_costpercapita_am6; assert_in_delta(0.8215834619258144, worksheet.costpercapita_am6, 0.001); end
  def test_costpercapita_an6; assert_in_delta(0.535898568628479, worksheet.costpercapita_an6, 0.001); end
  def test_costpercapita_ao6; assert_in_delta(0.26381776304423576, worksheet.costpercapita_ao6, 0.001); end
  def test_costpercapita_ap6; assert_in_delta(0.0031025874384912016, worksheet.costpercapita_ap6, 0.001); end
  def test_costpercapita_aq6; assert_in_delta(0.0030446877731940174, worksheet.costpercapita_aq6, 0.001); end
  def test_costpercapita_as6; assert_in_epsilon(3.8783002320159827, worksheet.costpercapita_as6, 0.001); end
  def test_costpercapita_at6; assert_in_epsilon(99.53854451492977, worksheet.costpercapita_at6, 0.001); end
  def test_costpercapita_av6; assert_in_delta(0, (worksheet.costpercapita_av6||0), 0.001); end
  def test_costpercapita_aw6; assert_in_epsilon(20, worksheet.costpercapita_aw6, 0.001); end
  def test_costpercapita_ay6; assert_in_epsilon(1.2922676740723102, worksheet.costpercapita_ay6, 0.001); end
  def test_costpercapita_az6; assert_in_epsilon(1.8538008331323832, worksheet.costpercapita_az6, 0.001); end
  def test_costpercapita_ba6; assert_in_epsilon(1.779675410054803, worksheet.costpercapita_ba6, 0.001); end
  def test_costpercapita_bb6; assert_in_epsilon(1.7115510699817191, worksheet.costpercapita_bb6, 0.001); end
  def test_costpercapita_bc6; assert_in_delta(0, (worksheet.costpercapita_bc6||0), 0.001); end
  def test_costpercapita_bd6; assert_in_delta(0, (worksheet.costpercapita_bd6||0), 0.001); end
  def test_costpercapita_be6; assert_in_delta(0, (worksheet.costpercapita_be6||0), 0.001); end
  def test_costpercapita_bf6; assert_in_delta(0, (worksheet.costpercapita_bf6||0), 0.001); end
  def test_costpercapita_bg6; assert_in_delta(0, (worksheet.costpercapita_bg6||0), 0.001); end
  def test_costpercapita_bi6; assert_in_epsilon(1.2922676740723102, worksheet.costpercapita_bi6, 0.001); end
  def test_costpercapita_bj6; assert_in_epsilon(3.103455891161273, worksheet.costpercapita_bj6, 0.001); end
  def test_costpercapita_bk6; assert_in_epsilon(4.781529895344938, worksheet.costpercapita_bk6, 0.001); end
  def test_costpercapita_bl6; assert_in_epsilon(6.345028185137272, worksheet.costpercapita_bl6, 0.001); end
  def test_costpercapita_bm6; assert_in_epsilon(5.032364838044888, worksheet.costpercapita_bm6, 0.001); end
  def test_costpercapita_bn6; assert_in_epsilon(3.2635172444040204, worksheet.costpercapita_bn6, 0.001); end
  def test_costpercapita_bo6; assert_in_epsilon(1.5909082569457031, worksheet.costpercapita_bo6, 0.001); end
  def test_costpercapita_bp6; assert_in_delta(0, (worksheet.costpercapita_bp6||0), 0.001); end
  def test_costpercapita_bq6; assert_in_delta(0, (worksheet.costpercapita_bq6||0), 0.001); end
  def test_costpercapita_bs6; assert_in_epsilon(1.7336488917022368, worksheet.costpercapita_bs6, 0.001); end
  def test_costpercapita_bt6; assert_in_epsilon(3.8294550013213313, worksheet.costpercapita_bt6, 0.001); end
  def test_costpercapita_bu6; assert_in_epsilon(5.773139252868097, worksheet.costpercapita_bu6, 0.001); end
  def test_costpercapita_bv6; assert_in_epsilon(7.468066439333403, worksheet.costpercapita_bv6, 0.001); end
  def test_costpercapita_bw6; assert_in_epsilon(5.8539482999707015, worksheet.costpercapita_bw6, 0.001); end
  def test_costpercapita_bx6; assert_in_epsilon(3.7994158130324993, worksheet.costpercapita_bx6, 0.001); end
  def test_costpercapita_by6; assert_in_epsilon(1.854726019989939, worksheet.costpercapita_by6, 0.001); end
  def test_costpercapita_bz6; assert_in_delta(0.0031025874384912016, worksheet.costpercapita_bz6, 0.001); end
  def test_costpercapita_ca6; assert_in_delta(0.0030446877731940174, worksheet.costpercapita_ca6, 0.001); end
  def test_costpercapita_cc6; assert_in_epsilon(3.368727443714432, worksheet.costpercapita_cc6, 0.001); end
  def test_costpercapita_cd6; assert_in_epsilon(86.66799770805154, worksheet.costpercapita_cd6, 0.001); end
  def test_costpercapita_cf6; assert_in_epsilon(-7.322850153076424, worksheet.costpercapita_cf6, 0.001); end
  def test_costpercapita_cg6; assert_in_epsilon(-4.311747441368259, worksheet.costpercapita_cg6, 0.001); end
  def test_costpercapita_ch6; assert_in_epsilon(-2.3371717448742735, worksheet.costpercapita_ch6, 0.001); end
  def test_costpercapita_ci6; assert_in_delta(-0.5011760947896047, worksheet.costpercapita_ci6, 0.001); end
  def test_costpercapita_cj6; assert_in_epsilon(5.032364838044888, worksheet.costpercapita_cj6, 0.001); end
  def test_costpercapita_ck6; assert_in_epsilon(3.2635172444040204, worksheet.costpercapita_ck6, 0.001); end
  def test_costpercapita_cl6; assert_in_epsilon(1.5909082569457031, worksheet.costpercapita_cl6, 0.001); end
  def test_costpercapita_cm6; assert_in_delta(0, (worksheet.costpercapita_cm6||0), 0.001); end
  def test_costpercapita_cn6; assert_in_delta(0, (worksheet.costpercapita_cn6||0), 0.001); end
  def test_costpercapita_cp6; assert_in_delta(-0.5095727883015501, worksheet.costpercapita_cp6, 0.001); end
  def test_costpercapita_cq6; assert_in_epsilon(-12.870546806878203, worksheet.costpercapita_cq6, 0.001); end
  def test_costpercapita_cr6; assert_equal("ok", worksheet.costpercapita_cr6); end
  def test_costpercapita_a7; assert_equal("III.a.2", worksheet.costpercapita_a7); end
  def test_costpercapita_b7; assert_equal("Offshore wind", worksheet.costpercapita_b7); end
  def test_costpercapita_c7; assert_equal("Electricity", worksheet.costpercapita_c7); end
  def test_costpercapita_e7; assert_in_epsilon(11.705323134712977, worksheet.costpercapita_e7, 0.001); end
  def test_costpercapita_f7; assert_in_epsilon(16.74317682238848, worksheet.costpercapita_f7, 0.001); end
  def test_costpercapita_g7; assert_in_epsilon(15.102548580733346, worksheet.costpercapita_g7, 0.001); end
  def test_costpercapita_h7; assert_in_epsilon(10.861008649121892, worksheet.costpercapita_h7, 0.001); end
  def test_costpercapita_i7; assert_in_delta(0, (worksheet.costpercapita_i7||0), 0.001); end
  def test_costpercapita_j7; assert_in_delta(0, (worksheet.costpercapita_j7||0), 0.001); end
  def test_costpercapita_k7; assert_in_delta(0, (worksheet.costpercapita_k7||0), 0.001); end
  def test_costpercapita_l7; assert_in_delta(0, (worksheet.costpercapita_l7||0), 0.001); end
  def test_costpercapita_m7; assert_in_delta(0, (worksheet.costpercapita_m7||0), 0.001); end
  def test_costpercapita_o7; assert_in_delta(0.6479016890427718, worksheet.costpercapita_o7, 0.001); end
  def test_costpercapita_p7; assert_in_epsilon(1.792144107073221, worksheet.costpercapita_p7, 0.001); end
  def test_costpercapita_q7; assert_in_epsilon(2.8609198267483453, worksheet.costpercapita_q7, 0.001); end
  def test_costpercapita_r7; assert_in_epsilon(3.580813572777159, worksheet.costpercapita_r7, 0.001); end
  def test_costpercapita_s7; assert_in_epsilon(2.9755298377205532, worksheet.costpercapita_s7, 0.001); end
  def test_costpercapita_t7; assert_in_epsilon(1.867782318410398, worksheet.costpercapita_t7, 0.001); end
  def test_costpercapita_u7; assert_in_delta(0.8124218983285679, worksheet.costpercapita_u7, 0.001); end
  def test_costpercapita_v7; assert_in_delta(0, (worksheet.costpercapita_v7||0), 0.001); end
  def test_costpercapita_w7; assert_in_delta(0, (worksheet.costpercapita_w7||0), 0.001); end
  def test_costpercapita_y7; assert_in_delta(0, (worksheet.costpercapita_y7||0), 0.001); end
  def test_costpercapita_z7; assert_in_delta(0, (worksheet.costpercapita_z7||0), 0.001); end
  def test_costpercapita_aa7; assert_in_delta(0, (worksheet.costpercapita_aa7||0), 0.001); end
  def test_costpercapita_ab7; assert_in_delta(0, (worksheet.costpercapita_ab7||0), 0.001); end
  def test_costpercapita_ac7; assert_in_delta(0, (worksheet.costpercapita_ac7||0), 0.001); end
  def test_costpercapita_ad7; assert_in_delta(0, (worksheet.costpercapita_ad7||0), 0.001); end
  def test_costpercapita_ae7; assert_in_delta(0, (worksheet.costpercapita_ae7||0), 0.001); end
  def test_costpercapita_af7; assert_in_delta(0, (worksheet.costpercapita_af7||0), 0.001); end
  def test_costpercapita_ag7; assert_in_delta(0, (worksheet.costpercapita_ag7||0), 0.001); end
  def test_costpercapita_ai7; assert_in_epsilon(12.35322482375575, worksheet.costpercapita_ai7, 0.001); end
  def test_costpercapita_aj7; assert_in_epsilon(18.535320929461705, worksheet.costpercapita_aj7, 0.001); end
  def test_costpercapita_ak7; assert_in_epsilon(17.96346840748169, worksheet.costpercapita_ak7, 0.001); end
  def test_costpercapita_al7; assert_in_epsilon(14.441822221899052, worksheet.costpercapita_al7, 0.001); end
  def test_costpercapita_am7; assert_in_epsilon(2.9755298377205532, worksheet.costpercapita_am7, 0.001); end
  def test_costpercapita_an7; assert_in_epsilon(1.867782318410398, worksheet.costpercapita_an7, 0.001); end
  def test_costpercapita_ao7; assert_in_delta(0.8124218983285679, worksheet.costpercapita_ao7, 0.001); end
  def test_costpercapita_ap7; assert_in_delta(0, (worksheet.costpercapita_ap7||0), 0.001); end
  def test_costpercapita_aq7; assert_in_delta(0, (worksheet.costpercapita_aq7||0), 0.001); end
  def test_costpercapita_as7; assert_in_epsilon(7.661063381895302, worksheet.costpercapita_as7, 0.001); end
  def test_costpercapita_at7; assert_in_epsilon(210.0345568599086, worksheet.costpercapita_at7, 0.001); end
  def test_costpercapita_av7; assert_in_delta(0, (worksheet.costpercapita_av7||0), 0.001); end
  def test_costpercapita_aw7; assert_in_epsilon(20, worksheet.costpercapita_aw7, 0.001); end
  def test_costpercapita_ay7; assert_in_epsilon(1.755798470206947, worksheet.costpercapita_ay7, 0.001); end
  def test_costpercapita_az7; assert_in_epsilon(4.18579420559712, worksheet.costpercapita_az7, 0.001); end
  def test_costpercapita_ba7; assert_in_epsilon(3.775637145183337, worksheet.costpercapita_ba7, 0.001); end
  def test_costpercapita_bb7; assert_in_epsilon(2.715252162280473, worksheet.costpercapita_bb7, 0.001); end
  def test_costpercapita_bc7; assert_in_delta(0, (worksheet.costpercapita_bc7||0), 0.001); end
  def test_costpercapita_bd7; assert_in_delta(0, (worksheet.costpercapita_bd7||0), 0.001); end
  def test_costpercapita_be7; assert_in_delta(0, (worksheet.costpercapita_be7||0), 0.001); end
  def test_costpercapita_bf7; assert_in_delta(0, (worksheet.costpercapita_bf7||0), 0.001); end
  def test_costpercapita_bg7; assert_in_delta(0, (worksheet.costpercapita_bg7||0), 0.001); end
  def test_costpercapita_bi7; assert_in_epsilon(1.755798470206947, worksheet.costpercapita_bi7, 0.001); end
  def test_costpercapita_bj7; assert_in_epsilon(5.883695099658115, worksheet.costpercapita_bj7, 0.001); end
  def test_costpercapita_bk7; assert_in_epsilon(9.466710949483296, worksheet.costpercapita_bk7, 0.001); end
  def test_costpercapita_bl7; assert_in_epsilon(11.888840846297061, worksheet.costpercapita_bl7, 0.001); end
  def test_costpercapita_bm7; assert_in_epsilon(10.016051919137697, worksheet.costpercapita_bm7, 0.001); end
  def test_costpercapita_bn7; assert_in_epsilon(6.053802639257819, worksheet.costpercapita_bn7, 0.001); end
  def test_costpercapita_bo7; assert_in_epsilon(2.5238610523656866, worksheet.costpercapita_bo7, 0.001); end
  def test_costpercapita_bp7; assert_in_delta(0, (worksheet.costpercapita_bp7||0), 0.001); end
  def test_costpercapita_bq7; assert_in_delta(0, (worksheet.costpercapita_bq7||0), 0.001); end
  def test_costpercapita_bs7; assert_in_epsilon(2.4037001592497185, worksheet.costpercapita_bs7, 0.001); end
  def test_costpercapita_bt7; assert_in_epsilon(7.675839206731336, worksheet.costpercapita_bt7, 0.001); end
  def test_costpercapita_bu7; assert_in_epsilon(12.327630776231642, worksheet.costpercapita_bu7, 0.001); end
  def test_costpercapita_bv7; assert_in_epsilon(15.469654419074221, worksheet.costpercapita_bv7, 0.001); end
  def test_costpercapita_bw7; assert_in_epsilon(12.991581756858249, worksheet.costpercapita_bw7, 0.001); end
  def test_costpercapita_bx7; assert_in_epsilon(7.921584957668217, worksheet.costpercapita_bx7, 0.001); end
  def test_costpercapita_by7; assert_in_epsilon(3.3362829506942546, worksheet.costpercapita_by7, 0.001); end
  def test_costpercapita_bz7; assert_in_delta(0, (worksheet.costpercapita_bz7||0), 0.001); end
  def test_costpercapita_ca7; assert_in_delta(0, (worksheet.costpercapita_ca7||0), 0.001); end
  def test_costpercapita_cc7; assert_in_epsilon(6.902919358500848, worksheet.costpercapita_cc7, 0.001); end
  def test_costpercapita_cd7; assert_in_epsilon(179.93168923384096, worksheet.costpercapita_cd7, 0.001); end
  def test_costpercapita_cf7; assert_in_epsilon(-9.949524664506031, worksheet.costpercapita_cf7, 0.001); end
  def test_costpercapita_cg7; assert_in_epsilon(-10.859481722730367, worksheet.costpercapita_cg7, 0.001); end
  def test_costpercapita_ch7; assert_in_epsilon(-5.63583763125005, worksheet.costpercapita_ch7, 0.001); end
  def test_costpercapita_ci7; assert_in_epsilon(1.0278321971751692, worksheet.costpercapita_ci7, 0.001); end
  def test_costpercapita_cj7; assert_in_epsilon(10.016051919137697, worksheet.costpercapita_cj7, 0.001); end
  def test_costpercapita_ck7; assert_in_epsilon(6.053802639257819, worksheet.costpercapita_ck7, 0.001); end
  def test_costpercapita_cl7; assert_in_epsilon(2.5238610523656866, worksheet.costpercapita_cl7, 0.001); end
  def test_costpercapita_cm7; assert_in_delta(0, (worksheet.costpercapita_cm7||0), 0.001); end
  def test_costpercapita_cn7; assert_in_delta(0, (worksheet.costpercapita_cn7||0), 0.001); end
  def test_costpercapita_cp7; assert_in_delta(-0.7581440233944531, worksheet.costpercapita_cp7, 0.001); end
  def test_costpercapita_cq7; assert_in_epsilon(-30.10286762606762, worksheet.costpercapita_cq7, 0.001); end
  def test_costpercapita_cr7; assert_equal("ok", worksheet.costpercapita_cr7); end
  def test_costpercapita_a8; assert_equal("III.b", worksheet.costpercapita_a8); end
  def test_costpercapita_b8; assert_equal("Hydroelectric", worksheet.costpercapita_b8); end
  def test_costpercapita_c8; assert_equal("Electricity", worksheet.costpercapita_c8); end
  def test_costpercapita_e8; assert_in_epsilon(1.703845049721616, worksheet.costpercapita_e8, 0.001); end
  def test_costpercapita_f8; assert_in_delta(0, (worksheet.costpercapita_f8||0), 0.001); end
  def test_costpercapita_g8; assert_in_delta(0, (worksheet.costpercapita_g8||0), 0.001); end
  def test_costpercapita_h8; assert_in_delta(0, (worksheet.costpercapita_h8||0), 0.001); end
  def test_costpercapita_i8; assert_in_delta(0, (worksheet.costpercapita_i8||0), 0.001); end
  def test_costpercapita_j8; assert_in_delta(0, (worksheet.costpercapita_j8||0), 0.001); end
  def test_costpercapita_k8; assert_in_delta(0, (worksheet.costpercapita_k8||0), 0.001); end
  def test_costpercapita_l8; assert_in_delta(0, (worksheet.costpercapita_l8||0), 0.001); end
  def test_costpercapita_m8; assert_in_delta(0, (worksheet.costpercapita_m8||0), 0.001); end
  def test_costpercapita_o8; assert_in_delta(0.257142110053191, worksheet.costpercapita_o8, 0.001); end
  def test_costpercapita_p8; assert_in_delta(0.24866283116682733, worksheet.costpercapita_p8, 0.001); end
  def test_costpercapita_q8; assert_in_delta(0.24052206998945702, worksheet.costpercapita_q8, 0.001); end
  def test_costpercapita_r8; assert_in_delta(0.233074670948093, worksheet.costpercapita_r8, 0.001); end
  def test_costpercapita_s8; assert_in_delta(0.22670703525489933, worksheet.costpercapita_s8, 0.001); end
  def test_costpercapita_t8; assert_in_delta(0.2213667932930842, worksheet.costpercapita_t8, 0.001); end
  def test_costpercapita_u8; assert_in_delta(0.2166458395542848, worksheet.costpercapita_u8, 0.001); end
  def test_costpercapita_v8; assert_in_delta(0.21232420451608805, worksheet.costpercapita_v8, 0.001); end
  def test_costpercapita_w8; assert_in_delta(0.20836186642902652, worksheet.costpercapita_w8, 0.001); end
  def test_costpercapita_y8; assert_in_delta(0, (worksheet.costpercapita_y8||0), 0.001); end
  def test_costpercapita_z8; assert_in_delta(0, (worksheet.costpercapita_z8||0), 0.001); end
  def test_costpercapita_aa8; assert_in_delta(0, (worksheet.costpercapita_aa8||0), 0.001); end
  def test_costpercapita_ab8; assert_in_delta(0, (worksheet.costpercapita_ab8||0), 0.001); end
  def test_costpercapita_ac8; assert_in_delta(0, (worksheet.costpercapita_ac8||0), 0.001); end
  def test_costpercapita_ad8; assert_in_delta(0, (worksheet.costpercapita_ad8||0), 0.001); end
  def test_costpercapita_ae8; assert_in_delta(0, (worksheet.costpercapita_ae8||0), 0.001); end
  def test_costpercapita_af8; assert_in_delta(0, (worksheet.costpercapita_af8||0), 0.001); end
  def test_costpercapita_ag8; assert_in_delta(0, (worksheet.costpercapita_ag8||0), 0.001); end
  def test_costpercapita_ai8; assert_in_epsilon(1.960987159774807, worksheet.costpercapita_ai8, 0.001); end
  def test_costpercapita_aj8; assert_in_delta(0.24866283116682733, worksheet.costpercapita_aj8, 0.001); end
  def test_costpercapita_ak8; assert_in_delta(0.24052206998945702, worksheet.costpercapita_ak8, 0.001); end
  def test_costpercapita_al8; assert_in_delta(0.233074670948093, worksheet.costpercapita_al8, 0.001); end
  def test_costpercapita_am8; assert_in_delta(0.22670703525489933, worksheet.costpercapita_am8, 0.001); end
  def test_costpercapita_an8; assert_in_delta(0.2213667932930842, worksheet.costpercapita_an8, 0.001); end
  def test_costpercapita_ao8; assert_in_delta(0.2166458395542848, worksheet.costpercapita_ao8, 0.001); end
  def test_costpercapita_ap8; assert_in_delta(0.21232420451608805, worksheet.costpercapita_ap8, 0.001); end
  def test_costpercapita_aq8; assert_in_delta(0.20836186642902652, worksheet.costpercapita_aq8, 0.001); end
  def test_costpercapita_as8; assert_in_delta(0.41873916343628526, worksheet.costpercapita_as8, 0.001); end
  def test_costpercapita_at8; assert_in_epsilon(6.582393838511321, worksheet.costpercapita_at8, 0.001); end
  def test_costpercapita_av8; assert_in_delta(0, (worksheet.costpercapita_av8||0), 0.001); end
  def test_costpercapita_aw8; assert_in_epsilon(30, worksheet.costpercapita_aw8, 0.001); end
  def test_costpercapita_ay8; assert_in_delta(0.17038450497216157, worksheet.costpercapita_ay8, 0.001); end
  def test_costpercapita_az8; assert_in_delta(0, (worksheet.costpercapita_az8||0), 0.001); end
  def test_costpercapita_ba8; assert_in_delta(0, (worksheet.costpercapita_ba8||0), 0.001); end
  def test_costpercapita_bb8; assert_in_delta(0, (worksheet.costpercapita_bb8||0), 0.001); end
  def test_costpercapita_bc8; assert_in_delta(0, (worksheet.costpercapita_bc8||0), 0.001); end
  def test_costpercapita_bd8; assert_in_delta(0, (worksheet.costpercapita_bd8||0), 0.001); end
  def test_costpercapita_be8; assert_in_delta(0, (worksheet.costpercapita_be8||0), 0.001); end
  def test_costpercapita_bf8; assert_in_delta(0, (worksheet.costpercapita_bf8||0), 0.001); end
  def test_costpercapita_bg8; assert_in_delta(0, (worksheet.costpercapita_bg8||0), 0.001); end
  def test_costpercapita_bi8; assert_in_delta(0.17038450497216157, worksheet.costpercapita_bi8, 0.001); end
  def test_costpercapita_bj8; assert_in_delta(0.16476606412139963, worksheet.costpercapita_bj8, 0.001); end
  def test_costpercapita_bk8; assert_in_delta(0.15937192792559757, worksheet.costpercapita_bk8, 0.001); end
  def test_costpercapita_bl8; assert_in_delta(0.1544372192591311, worksheet.costpercapita_bl8, 0.001); end
  def test_costpercapita_bm8; assert_in_delta(0.1502179707851902, worksheet.costpercapita_bm8, 0.001); end
  def test_costpercapita_bn8; assert_in_delta(0.14667948195927516, worksheet.costpercapita_bn8, 0.001); end
  def test_costpercapita_bo8; assert_in_delta(0, (worksheet.costpercapita_bo8||0), 0.001); end
  def test_costpercapita_bp8; assert_in_delta(0, (worksheet.costpercapita_bp8||0), 0.001); end
  def test_costpercapita_bq8; assert_in_delta(0, (worksheet.costpercapita_bq8||0), 0.001); end
  def test_costpercapita_bs8; assert_in_delta(0.42752661502535255, worksheet.costpercapita_bs8, 0.001); end
  def test_costpercapita_bt8; assert_in_delta(0.413428895288227, worksheet.costpercapita_bt8, 0.001); end
  def test_costpercapita_bu8; assert_in_delta(0.3998939979150546, worksheet.costpercapita_bu8, 0.001); end
  def test_costpercapita_bv8; assert_in_delta(0.38751189020722415, worksheet.costpercapita_bv8, 0.001); end
  def test_costpercapita_bw8; assert_in_delta(0.37692500604008955, worksheet.costpercapita_bw8, 0.001); end
  def test_costpercapita_bx8; assert_in_delta(0.3680462752523594, worksheet.costpercapita_bx8, 0.001); end
  def test_costpercapita_by8; assert_in_delta(0.2166458395542848, worksheet.costpercapita_by8, 0.001); end
  def test_costpercapita_bz8; assert_in_delta(0.21232420451608805, worksheet.costpercapita_bz8, 0.001); end
  def test_costpercapita_ca8; assert_in_delta(0.20836186642902652, worksheet.costpercapita_ca8, 0.001); end
  def test_costpercapita_cc8; assert_in_delta(0.3345182878030785, worksheet.costpercapita_cc8, 0.001); end
  def test_costpercapita_cd8; assert_in_epsilon(7.456202787506768, worksheet.costpercapita_cd8, 0.001); end
  def test_costpercapita_cf8; assert_in_epsilon(-1.5334605447494543, worksheet.costpercapita_cf8, 0.001); end
  def test_costpercapita_cg8; assert_in_delta(0.16476606412139963, worksheet.costpercapita_cg8, 0.001); end
  def test_costpercapita_ch8; assert_in_delta(0.15937192792559757, worksheet.costpercapita_ch8, 0.001); end
  def test_costpercapita_ci8; assert_in_delta(0.1544372192591311, worksheet.costpercapita_ci8, 0.001); end
  def test_costpercapita_cj8; assert_in_delta(0.1502179707851902, worksheet.costpercapita_cj8, 0.001); end
  def test_costpercapita_ck8; assert_in_delta(0.14667948195927516, worksheet.costpercapita_ck8, 0.001); end
  def test_costpercapita_cl8; assert_in_delta(0, (worksheet.costpercapita_cl8||0), 0.001); end
  def test_costpercapita_cm8; assert_in_delta(0, (worksheet.costpercapita_cm8||0), 0.001); end
  def test_costpercapita_cn8; assert_in_delta(0, (worksheet.costpercapita_cn8||0), 0.001); end
  def test_costpercapita_cp8; assert_in_delta(-0.08422087563320674, worksheet.costpercapita_cp8, 0.001); end
  def test_costpercapita_cq8; assert_in_delta(0.8738089489954444, worksheet.costpercapita_cq8, 0.001); end
  def test_costpercapita_cr8; assert_equal("ok", worksheet.costpercapita_cr8); end
  def test_costpercapita_a9; assert_equal("III.c", worksheet.costpercapita_a9); end
  def test_costpercapita_b9; assert_equal("Wave and Tidal", worksheet.costpercapita_b9); end
  def test_costpercapita_c9; assert_equal("Electricity", worksheet.costpercapita_c9); end
  def test_costpercapita_e9; assert_in_delta(0.02446176846015897, worksheet.costpercapita_e9, 0.001); end
  def test_costpercapita_f9; assert_in_delta(0.05007037194468583, worksheet.costpercapita_f9, 0.001); end
  def test_costpercapita_g9; assert_in_delta(0.5836526928528888, worksheet.costpercapita_g9, 0.001); end
  def test_costpercapita_h9; assert_in_delta(0.8334067225757337, worksheet.costpercapita_h9, 0.001); end
  def test_costpercapita_i9; assert_in_delta(0, (worksheet.costpercapita_i9||0), 0.001); end
  def test_costpercapita_j9; assert_in_delta(0, (worksheet.costpercapita_j9||0), 0.001); end
  def test_costpercapita_k9; assert_in_delta(0.027998743766022273, worksheet.costpercapita_k9, 0.001); end
  def test_costpercapita_l9; assert_in_delta(0.2757504534695958, worksheet.costpercapita_l9, 0.001); end
  def test_costpercapita_m9; assert_in_delta(0.5352052336972425, worksheet.costpercapita_m9, 0.001); end
  def test_costpercapita_o9; assert_in_delta(0.000560582193878643, worksheet.costpercapita_o9, 0.001); end
  def test_costpercapita_p9; assert_in_delta(0.0026414906278820136, worksheet.costpercapita_p9, 0.001); end
  def test_costpercapita_q9; assert_in_delta(0.029395362276478685, worksheet.costpercapita_q9, 0.001); end
  def test_costpercapita_r9; assert_in_delta(0.0712129492970288, worksheet.costpercapita_r9, 0.001); end
  def test_costpercapita_s9; assert_in_delta(0.0692674006197882, worksheet.costpercapita_s9, 0.001); end
  def test_costpercapita_t9; assert_in_delta(0, (worksheet.costpercapita_t9||0), 0.001); end
  def test_costpercapita_u9; assert_in_delta(0, (worksheet.costpercapita_u9||0), 0.001); end
  def test_costpercapita_v9; assert_in_delta(0, (worksheet.costpercapita_v9||0), 0.001); end
  def test_costpercapita_w9; assert_in_delta(0, (worksheet.costpercapita_w9||0), 0.001); end
  def test_costpercapita_y9; assert_in_delta(0, (worksheet.costpercapita_y9||0), 0.001); end
  def test_costpercapita_z9; assert_in_delta(0, (worksheet.costpercapita_z9||0), 0.001); end
  def test_costpercapita_aa9; assert_in_delta(0, (worksheet.costpercapita_aa9||0), 0.001); end
  def test_costpercapita_ab9; assert_in_delta(0, (worksheet.costpercapita_ab9||0), 0.001); end
  def test_costpercapita_ac9; assert_in_delta(0, (worksheet.costpercapita_ac9||0), 0.001); end
  def test_costpercapita_ad9; assert_in_delta(0, (worksheet.costpercapita_ad9||0), 0.001); end
  def test_costpercapita_ae9; assert_in_delta(0, (worksheet.costpercapita_ae9||0), 0.001); end
  def test_costpercapita_af9; assert_in_delta(0, (worksheet.costpercapita_af9||0), 0.001); end
  def test_costpercapita_ag9; assert_in_delta(0, (worksheet.costpercapita_ag9||0), 0.001); end
  def test_costpercapita_ai9; assert_in_delta(0.02502235065403761, worksheet.costpercapita_ai9, 0.001); end
  def test_costpercapita_aj9; assert_in_delta(0.052711862572567846, worksheet.costpercapita_aj9, 0.001); end
  def test_costpercapita_ak9; assert_in_delta(0.6130480551293674, worksheet.costpercapita_ak9, 0.001); end
  def test_costpercapita_al9; assert_in_delta(0.9046196718727624, worksheet.costpercapita_al9, 0.001); end
  def test_costpercapita_am9; assert_in_delta(0.0692674006197882, worksheet.costpercapita_am9, 0.001); end
  def test_costpercapita_an9; assert_in_delta(0, (worksheet.costpercapita_an9||0), 0.001); end
  def test_costpercapita_ao9; assert_in_delta(0.027998743766022273, worksheet.costpercapita_ao9, 0.001); end
  def test_costpercapita_ap9; assert_in_delta(0.2757504534695958, worksheet.costpercapita_ap9, 0.001); end
  def test_costpercapita_aq9; assert_in_delta(0.5352052336972425, worksheet.costpercapita_aq9, 0.001); end
  def test_costpercapita_as9; assert_in_delta(0.27818041908682045, worksheet.costpercapita_as9, 0.001); end
  def test_costpercapita_at9; assert_in_epsilon(6.4768248388253, worksheet.costpercapita_at9, 0.001); end
  def test_costpercapita_av9; assert_in_delta(0, (worksheet.costpercapita_av9||0), 0.001); end
  def test_costpercapita_aw9; assert_in_epsilon(30, worksheet.costpercapita_aw9, 0.001); end
  def test_costpercapita_ay9; assert_in_delta(0.002446176846015897, worksheet.costpercapita_ay9, 0.001); end
  def test_costpercapita_az9; assert_in_delta(0.00834506199078097, worksheet.costpercapita_az9, 0.001); end
  def test_costpercapita_ba9; assert_in_delta(0.09727544880881481, worksheet.costpercapita_ba9, 0.001); end
  def test_costpercapita_bb9; assert_in_delta(0.13890112042928895, worksheet.costpercapita_bb9, 0.001); end
  def test_costpercapita_bc9; assert_in_delta(0, (worksheet.costpercapita_bc9||0), 0.001); end
  def test_costpercapita_bd9; assert_in_delta(0, (worksheet.costpercapita_bd9||0), 0.001); end
  def test_costpercapita_be9; assert_in_delta(0.004666457294337046, worksheet.costpercapita_be9, 0.001); end
  def test_costpercapita_bf9; assert_in_delta(0.0459584089115993, worksheet.costpercapita_bf9, 0.001); end
  def test_costpercapita_bg9; assert_in_delta(0.08920087228287374, worksheet.costpercapita_bg9, 0.001); end
  def test_costpercapita_bi9; assert_in_delta(0.002446176846015897, worksheet.costpercapita_bi9, 0.001); end
  def test_costpercapita_bj9; assert_in_delta(0.010710575985899192, worksheet.costpercapita_bj9, 0.001); end
  def test_costpercapita_bk9; assert_in_delta(0.10763538034671129, worksheet.costpercapita_bk9, 0.001); end
  def test_costpercapita_bl9; assert_in_delta(0.24320373539423676, worksheet.costpercapita_bl9, 0.001); end
  def test_costpercapita_bm9; assert_in_delta(0.2365593721096512, worksheet.costpercapita_bm9, 0.001); end
  def test_costpercapita_bn9; assert_in_delta(0.23098705149780863, worksheet.costpercapita_bn9, 0.001); end
  def test_costpercapita_bo9; assert_in_delta(0.22866645135903169, worksheet.costpercapita_bo9, 0.001); end
  def test_costpercapita_bp9; assert_in_delta(0.2629378921334126, worksheet.costpercapita_bp9, 0.001); end
  def test_costpercapita_bq9; assert_in_delta(0.26296313756557027, worksheet.costpercapita_bq9, 0.001); end
  def test_costpercapita_bs9; assert_in_delta(0.00300675903989454, worksheet.costpercapita_bs9, 0.001); end
  def test_costpercapita_bt9; assert_in_delta(0.013352066613781206, worksheet.costpercapita_bt9, 0.001); end
  def test_costpercapita_bu9; assert_in_delta(0.13703074262318998, worksheet.costpercapita_bu9, 0.001); end
  def test_costpercapita_bv9; assert_in_delta(0.31441668469126555, worksheet.costpercapita_bv9, 0.001); end
  def test_costpercapita_bw9; assert_in_delta(0.30582677272943937, worksheet.costpercapita_bw9, 0.001); end
  def test_costpercapita_bx9; assert_in_delta(0.23098705149780863, worksheet.costpercapita_bx9, 0.001); end
  def test_costpercapita_by9; assert_in_delta(0.22866645135903169, worksheet.costpercapita_by9, 0.001); end
  def test_costpercapita_bz9; assert_in_delta(0.2629378921334126, worksheet.costpercapita_bz9, 0.001); end
  def test_costpercapita_ca9; assert_in_delta(0.26296313756557027, worksheet.costpercapita_ca9, 0.001); end
  def test_costpercapita_cc9; assert_in_delta(0.19546528425037712, worksheet.costpercapita_cc9, 0.001); end
  def test_costpercapita_cd9; assert_in_epsilon(3.9004455933717495, worksheet.costpercapita_cd9, 0.001); end
  def test_costpercapita_cf9; assert_in_delta(-0.02201559161414307, worksheet.costpercapita_cf9, 0.001); end
  def test_costpercapita_cg9; assert_in_delta(-0.039359795958786636, worksheet.costpercapita_cg9, 0.001); end
  def test_costpercapita_ch9; assert_in_delta(-0.4760173125061775, worksheet.costpercapita_ch9, 0.001); end
  def test_costpercapita_ci9; assert_in_delta(-0.5902029871814969, worksheet.costpercapita_ci9, 0.001); end
  def test_costpercapita_cj9; assert_in_delta(0.2365593721096512, worksheet.costpercapita_cj9, 0.001); end
  def test_costpercapita_ck9; assert_in_delta(0.23098705149780863, worksheet.costpercapita_ck9, 0.001); end
  def test_costpercapita_cl9; assert_in_delta(0.2006677075930094, worksheet.costpercapita_cl9, 0.001); end
  def test_costpercapita_cm9; assert_in_delta(-0.01281256133618322, worksheet.costpercapita_cm9, 0.001); end
  def test_costpercapita_cn9; assert_in_delta(-0.2722420961316722, worksheet.costpercapita_cn9, 0.001); end
  def test_costpercapita_cp9; assert_in_delta(-0.08271513483644337, worksheet.costpercapita_cp9, 0.001); end
  def test_costpercapita_cq9; assert_in_epsilon(-2.5763792454535497, worksheet.costpercapita_cq9, 0.001); end
  def test_costpercapita_cr9; assert_equal("ok", worksheet.costpercapita_cr9); end
  def test_costpercapita_a10; assert_equal("III.d", worksheet.costpercapita_a10); end
  def test_costpercapita_b10; assert_equal("Geothermal", worksheet.costpercapita_b10); end
  def test_costpercapita_c10; assert_equal("Electricity", worksheet.costpercapita_c10); end
  def test_costpercapita_e10; assert_in_delta(0, (worksheet.costpercapita_e10||0), 0.001); end
  def test_costpercapita_f10; assert_in_delta(0, (worksheet.costpercapita_f10||0), 0.001); end
  def test_costpercapita_g10; assert_in_delta(0, (worksheet.costpercapita_g10||0), 0.001); end
  def test_costpercapita_h10; assert_in_delta(0, (worksheet.costpercapita_h10||0), 0.001); end
  def test_costpercapita_i10; assert_in_delta(0, (worksheet.costpercapita_i10||0), 0.001); end
  def test_costpercapita_j10; assert_in_delta(0, (worksheet.costpercapita_j10||0), 0.001); end
  def test_costpercapita_k10; assert_in_delta(0, (worksheet.costpercapita_k10||0), 0.001); end
  def test_costpercapita_l10; assert_in_delta(0, (worksheet.costpercapita_l10||0), 0.001); end
  def test_costpercapita_m10; assert_in_delta(0, (worksheet.costpercapita_m10||0), 0.001); end
  def test_costpercapita_o10; assert_in_delta(0, (worksheet.costpercapita_o10||0), 0.001); end
  def test_costpercapita_p10; assert_in_delta(0, (worksheet.costpercapita_p10||0), 0.001); end
  def test_costpercapita_q10; assert_in_delta(0, (worksheet.costpercapita_q10||0), 0.001); end
  def test_costpercapita_r10; assert_in_delta(0, (worksheet.costpercapita_r10||0), 0.001); end
  def test_costpercapita_s10; assert_in_delta(0, (worksheet.costpercapita_s10||0), 0.001); end
  def test_costpercapita_t10; assert_in_delta(0, (worksheet.costpercapita_t10||0), 0.001); end
  def test_costpercapita_u10; assert_in_delta(0, (worksheet.costpercapita_u10||0), 0.001); end
  def test_costpercapita_v10; assert_in_delta(0, (worksheet.costpercapita_v10||0), 0.001); end
  def test_costpercapita_w10; assert_in_delta(0, (worksheet.costpercapita_w10||0), 0.001); end
  def test_costpercapita_y10; assert_in_delta(0, (worksheet.costpercapita_y10||0), 0.001); end
  def test_costpercapita_z10; assert_in_delta(0, (worksheet.costpercapita_z10||0), 0.001); end
  def test_costpercapita_aa10; assert_in_delta(0, (worksheet.costpercapita_aa10||0), 0.001); end
  def test_costpercapita_ab10; assert_in_delta(0, (worksheet.costpercapita_ab10||0), 0.001); end
  def test_costpercapita_ac10; assert_in_delta(0, (worksheet.costpercapita_ac10||0), 0.001); end
  def test_costpercapita_ad10; assert_in_delta(0, (worksheet.costpercapita_ad10||0), 0.001); end
  def test_costpercapita_ae10; assert_in_delta(0, (worksheet.costpercapita_ae10||0), 0.001); end
  def test_costpercapita_af10; assert_in_delta(0, (worksheet.costpercapita_af10||0), 0.001); end
  def test_costpercapita_ag10; assert_in_delta(0, (worksheet.costpercapita_ag10||0), 0.001); end
  def test_costpercapita_ai10; assert_in_delta(0, (worksheet.costpercapita_ai10||0), 0.001); end
  def test_costpercapita_aj10; assert_in_delta(0, (worksheet.costpercapita_aj10||0), 0.001); end
  def test_costpercapita_ak10; assert_in_delta(0, (worksheet.costpercapita_ak10||0), 0.001); end
  def test_costpercapita_al10; assert_in_delta(0, (worksheet.costpercapita_al10||0), 0.001); end
  def test_costpercapita_am10; assert_in_delta(0, (worksheet.costpercapita_am10||0), 0.001); end
  def test_costpercapita_an10; assert_in_delta(0, (worksheet.costpercapita_an10||0), 0.001); end
  def test_costpercapita_ao10; assert_in_delta(0, (worksheet.costpercapita_ao10||0), 0.001); end
  def test_costpercapita_ap10; assert_in_delta(0, (worksheet.costpercapita_ap10||0), 0.001); end
  def test_costpercapita_aq10; assert_in_delta(0, (worksheet.costpercapita_aq10||0), 0.001); end
  def test_costpercapita_as10; assert_in_delta(0, (worksheet.costpercapita_as10||0), 0.001); end
  def test_costpercapita_at10; assert_in_delta(0, (worksheet.costpercapita_at10||0), 0.001); end
  def test_costpercapita_av10; assert_in_delta(0, (worksheet.costpercapita_av10||0), 0.001); end
  def test_costpercapita_aw10; assert_in_epsilon(25, worksheet.costpercapita_aw10, 0.001); end
  def test_costpercapita_ay10; assert_in_delta(0, (worksheet.costpercapita_ay10||0), 0.001); end
  def test_costpercapita_az10; assert_in_delta(0, (worksheet.costpercapita_az10||0), 0.001); end
  def test_costpercapita_ba10; assert_in_delta(0, (worksheet.costpercapita_ba10||0), 0.001); end
  def test_costpercapita_bb10; assert_in_delta(0, (worksheet.costpercapita_bb10||0), 0.001); end
  def test_costpercapita_bc10; assert_in_delta(0, (worksheet.costpercapita_bc10||0), 0.001); end
  def test_costpercapita_bd10; assert_in_delta(0, (worksheet.costpercapita_bd10||0), 0.001); end
  def test_costpercapita_be10; assert_in_delta(0, (worksheet.costpercapita_be10||0), 0.001); end
  def test_costpercapita_bf10; assert_in_delta(0, (worksheet.costpercapita_bf10||0), 0.001); end
  def test_costpercapita_bg10; assert_in_delta(0, (worksheet.costpercapita_bg10||0), 0.001); end
  def test_costpercapita_bi10; assert_in_delta(0, (worksheet.costpercapita_bi10||0), 0.001); end
  def test_costpercapita_bj10; assert_in_delta(0, (worksheet.costpercapita_bj10||0), 0.001); end
  def test_costpercapita_bk10; assert_in_delta(0, (worksheet.costpercapita_bk10||0), 0.001); end
  def test_costpercapita_bl10; assert_in_delta(0, (worksheet.costpercapita_bl10||0), 0.001); end
  def test_costpercapita_bm10; assert_in_delta(0, (worksheet.costpercapita_bm10||0), 0.001); end
  def test_costpercapita_bn10; assert_in_delta(0, (worksheet.costpercapita_bn10||0), 0.001); end
  def test_costpercapita_bo10; assert_in_delta(0, (worksheet.costpercapita_bo10||0), 0.001); end
  def test_costpercapita_bp10; assert_in_delta(0, (worksheet.costpercapita_bp10||0), 0.001); end
  def test_costpercapita_bq10; assert_in_delta(0, (worksheet.costpercapita_bq10||0), 0.001); end
  def test_costpercapita_bs10; assert_in_delta(0, (worksheet.costpercapita_bs10||0), 0.001); end
  def test_costpercapita_bt10; assert_in_delta(0, (worksheet.costpercapita_bt10||0), 0.001); end
  def test_costpercapita_bu10; assert_in_delta(0, (worksheet.costpercapita_bu10||0), 0.001); end
  def test_costpercapita_bv10; assert_in_delta(0, (worksheet.costpercapita_bv10||0), 0.001); end
  def test_costpercapita_bw10; assert_in_delta(0, (worksheet.costpercapita_bw10||0), 0.001); end
  def test_costpercapita_bx10; assert_in_delta(0, (worksheet.costpercapita_bx10||0), 0.001); end
  def test_costpercapita_by10; assert_in_delta(0, (worksheet.costpercapita_by10||0), 0.001); end
  def test_costpercapita_bz10; assert_in_delta(0, (worksheet.costpercapita_bz10||0), 0.001); end
  def test_costpercapita_ca10; assert_in_delta(0, (worksheet.costpercapita_ca10||0), 0.001); end
  def test_costpercapita_cc10; assert_in_delta(0, (worksheet.costpercapita_cc10||0), 0.001); end
  def test_costpercapita_cd10; assert_in_delta(0, (worksheet.costpercapita_cd10||0), 0.001); end
  def test_costpercapita_cf10; assert_in_delta(0, (worksheet.costpercapita_cf10||0), 0.001); end
  def test_costpercapita_cg10; assert_in_delta(0, (worksheet.costpercapita_cg10||0), 0.001); end
  def test_costpercapita_ch10; assert_in_delta(0, (worksheet.costpercapita_ch10||0), 0.001); end
  def test_costpercapita_ci10; assert_in_delta(0, (worksheet.costpercapita_ci10||0), 0.001); end
  def test_costpercapita_cj10; assert_in_delta(0, (worksheet.costpercapita_cj10||0), 0.001); end
  def test_costpercapita_ck10; assert_in_delta(0, (worksheet.costpercapita_ck10||0), 0.001); end
  def test_costpercapita_cl10; assert_in_delta(0, (worksheet.costpercapita_cl10||0), 0.001); end
  def test_costpercapita_cm10; assert_in_delta(0, (worksheet.costpercapita_cm10||0), 0.001); end
  def test_costpercapita_cn10; assert_in_delta(0, (worksheet.costpercapita_cn10||0), 0.001); end
  def test_costpercapita_cp10; assert_in_delta(0, (worksheet.costpercapita_cp10||0), 0.001); end
  def test_costpercapita_cq10; assert_in_delta(0, (worksheet.costpercapita_cq10||0), 0.001); end
  def test_costpercapita_cr10; assert_equal("ok", worksheet.costpercapita_cr10); end
  def test_costpercapita_a11; assert_equal("IV.a", worksheet.costpercapita_a11); end
  def test_costpercapita_b11; assert_equal("Distributed solar PV", worksheet.costpercapita_b11); end
  def test_costpercapita_c11; assert_equal("Electricity", worksheet.costpercapita_c11); end
  def test_costpercapita_e11; assert_in_delta(0.16609773171248304, worksheet.costpercapita_e11, 0.001); end
  def test_costpercapita_f11; assert_in_delta(0, (worksheet.costpercapita_f11||0), 0.001); end
  def test_costpercapita_g11; assert_in_delta(0, (worksheet.costpercapita_g11||0), 0.001); end
  def test_costpercapita_h11; assert_in_delta(0, (worksheet.costpercapita_h11||0), 0.001); end
  def test_costpercapita_i11; assert_in_delta(0, (worksheet.costpercapita_i11||0), 0.001); end
  def test_costpercapita_j11; assert_in_delta(0, (worksheet.costpercapita_j11||0), 0.001); end
  def test_costpercapita_k11; assert_in_delta(0, (worksheet.costpercapita_k11||0), 0.001); end
  def test_costpercapita_l11; assert_in_delta(0, (worksheet.costpercapita_l11||0), 0.001); end
  def test_costpercapita_m11; assert_in_delta(0, (worksheet.costpercapita_m11||0), 0.001); end
  def test_costpercapita_o11; assert_in_delta(0.0005303556019847064, worksheet.costpercapita_o11, 0.001); end
  def test_costpercapita_p11; assert_in_delta(0.00024866283116682734, worksheet.costpercapita_p11, 0.001); end
  def test_costpercapita_q11; assert_in_delta(0, (worksheet.costpercapita_q11||0), 0.001); end
  def test_costpercapita_r11; assert_in_delta(0, (worksheet.costpercapita_r11||0), 0.001); end
  def test_costpercapita_s11; assert_in_delta(0, (worksheet.costpercapita_s11||0), 0.001); end
  def test_costpercapita_t11; assert_in_delta(0, (worksheet.costpercapita_t11||0), 0.001); end
  def test_costpercapita_u11; assert_in_delta(0, (worksheet.costpercapita_u11||0), 0.001); end
  def test_costpercapita_v11; assert_in_delta(0, (worksheet.costpercapita_v11||0), 0.001); end
  def test_costpercapita_w11; assert_in_delta(0, (worksheet.costpercapita_w11||0), 0.001); end
  def test_costpercapita_y11; assert_in_delta(0, (worksheet.costpercapita_y11||0), 0.001); end
  def test_costpercapita_z11; assert_in_delta(0, (worksheet.costpercapita_z11||0), 0.001); end
  def test_costpercapita_aa11; assert_in_delta(0, (worksheet.costpercapita_aa11||0), 0.001); end
  def test_costpercapita_ab11; assert_in_delta(0, (worksheet.costpercapita_ab11||0), 0.001); end
  def test_costpercapita_ac11; assert_in_delta(0, (worksheet.costpercapita_ac11||0), 0.001); end
  def test_costpercapita_ad11; assert_in_delta(0, (worksheet.costpercapita_ad11||0), 0.001); end
  def test_costpercapita_ae11; assert_in_delta(0, (worksheet.costpercapita_ae11||0), 0.001); end
  def test_costpercapita_af11; assert_in_delta(0, (worksheet.costpercapita_af11||0), 0.001); end
  def test_costpercapita_ag11; assert_in_delta(0, (worksheet.costpercapita_ag11||0), 0.001); end
  def test_costpercapita_ai11; assert_in_delta(0.16662808731446777, worksheet.costpercapita_ai11, 0.001); end
  def test_costpercapita_aj11; assert_in_delta(0.00024866283116682734, worksheet.costpercapita_aj11, 0.001); end
  def test_costpercapita_ak11; assert_in_delta(0, (worksheet.costpercapita_ak11||0), 0.001); end
  def test_costpercapita_al11; assert_in_delta(0, (worksheet.costpercapita_al11||0), 0.001); end
  def test_costpercapita_am11; assert_in_delta(0, (worksheet.costpercapita_am11||0), 0.001); end
  def test_costpercapita_an11; assert_in_delta(0, (worksheet.costpercapita_an11||0), 0.001); end
  def test_costpercapita_ao11; assert_in_delta(0, (worksheet.costpercapita_ao11||0), 0.001); end
  def test_costpercapita_ap11; assert_in_delta(0, (worksheet.costpercapita_ap11||0), 0.001); end
  def test_costpercapita_aq11; assert_in_delta(0, (worksheet.costpercapita_aq11||0), 0.001); end
  def test_costpercapita_as11; assert_in_delta(0.018541861127292735, worksheet.costpercapita_as11, 0.001); end
  def test_costpercapita_at11; assert_in_delta(0.16767492447165547, worksheet.costpercapita_at11, 0.001); end
  def test_costpercapita_av11; assert_in_delta(0, (worksheet.costpercapita_av11||0), 0.001); end
  def test_costpercapita_aw11; assert_in_epsilon(25, worksheet.costpercapita_aw11, 0.001); end
  def test_costpercapita_ay11; assert_in_delta(0.019931727805497967, worksheet.costpercapita_ay11, 0.001); end
  def test_costpercapita_az11; assert_in_delta(0, (worksheet.costpercapita_az11||0), 0.001); end
  def test_costpercapita_ba11; assert_in_delta(0, (worksheet.costpercapita_ba11||0), 0.001); end
  def test_costpercapita_bb11; assert_in_delta(0, (worksheet.costpercapita_bb11||0), 0.001); end
  def test_costpercapita_bc11; assert_in_delta(0, (worksheet.costpercapita_bc11||0), 0.001); end
  def test_costpercapita_bd11; assert_in_delta(0, (worksheet.costpercapita_bd11||0), 0.001); end
  def test_costpercapita_be11; assert_in_delta(0, (worksheet.costpercapita_be11||0), 0.001); end
  def test_costpercapita_bf11; assert_in_delta(0, (worksheet.costpercapita_bf11||0), 0.001); end
  def test_costpercapita_bg11; assert_in_delta(0, (worksheet.costpercapita_bg11||0), 0.001); end
  def test_costpercapita_bi11; assert_in_delta(0.019931727805497967, worksheet.costpercapita_bi11, 0.001); end
  def test_costpercapita_bj11; assert_in_delta(0.019274477700818707, worksheet.costpercapita_bj11, 0.001); end
  def test_costpercapita_bk11; assert_in_delta(0.01864346695005779, worksheet.costpercapita_bk11, 0.001); end
  def test_costpercapita_bl11; assert_in_delta(0.018066200431864063, worksheet.costpercapita_bl11, 0.001); end
  def test_costpercapita_bm11; assert_in_delta(0.017572629070195387, worksheet.costpercapita_bm11, 0.001); end
  def test_costpercapita_bn11; assert_in_delta(0, (worksheet.costpercapita_bn11||0), 0.001); end
  def test_costpercapita_bo11; assert_in_delta(0, (worksheet.costpercapita_bo11||0), 0.001); end
  def test_costpercapita_bp11; assert_in_delta(0, (worksheet.costpercapita_bp11||0), 0.001); end
  def test_costpercapita_bq11; assert_in_delta(0, (worksheet.costpercapita_bq11||0), 0.001); end
  def test_costpercapita_bs11; assert_in_delta(0.02046208340748267, worksheet.costpercapita_bs11, 0.001); end
  def test_costpercapita_bt11; assert_in_delta(0.019523140531985533, worksheet.costpercapita_bt11, 0.001); end
  def test_costpercapita_bu11; assert_in_delta(0.01864346695005779, worksheet.costpercapita_bu11, 0.001); end
  def test_costpercapita_bv11; assert_in_delta(0.018066200431864063, worksheet.costpercapita_bv11, 0.001); end
  def test_costpercapita_bw11; assert_in_delta(0.017572629070195387, worksheet.costpercapita_bw11, 0.001); end
  def test_costpercapita_bx11; assert_in_delta(0, (worksheet.costpercapita_bx11||0), 0.001); end
  def test_costpercapita_by11; assert_in_delta(0, (worksheet.costpercapita_by11||0), 0.001); end
  def test_costpercapita_bz11; assert_in_delta(0, (worksheet.costpercapita_bz11||0), 0.001); end
  def test_costpercapita_ca11; assert_in_delta(0, (worksheet.costpercapita_ca11||0), 0.001); end
  def test_costpercapita_cc11; assert_in_delta(0.010474168932398381, worksheet.costpercapita_cc11, 0.001); end
  def test_costpercapita_cd11; assert_in_delta(0.26681015519168105, worksheet.costpercapita_cd11, 0.001); end
  def test_costpercapita_cf11; assert_in_delta(-0.1461660039069851, worksheet.costpercapita_cf11, 0.001); end
  def test_costpercapita_cg11; assert_in_delta(0.019274477700818707, worksheet.costpercapita_cg11, 0.001); end
  def test_costpercapita_ch11; assert_in_delta(0.01864346695005779, worksheet.costpercapita_ch11, 0.001); end
  def test_costpercapita_ci11; assert_in_delta(0.018066200431864063, worksheet.costpercapita_ci11, 0.001); end
  def test_costpercapita_cj11; assert_in_delta(0.017572629070195387, worksheet.costpercapita_cj11, 0.001); end
  def test_costpercapita_ck11; assert_in_delta(0, (worksheet.costpercapita_ck11||0), 0.001); end
  def test_costpercapita_cl11; assert_in_delta(0, (worksheet.costpercapita_cl11||0), 0.001); end
  def test_costpercapita_cm11; assert_in_delta(0, (worksheet.costpercapita_cm11||0), 0.001); end
  def test_costpercapita_cn11; assert_in_delta(0, (worksheet.costpercapita_cn11||0), 0.001); end
  def test_costpercapita_cp11; assert_in_delta(-0.00806769219489435, worksheet.costpercapita_cp11, 0.001); end
  def test_costpercapita_cq11; assert_in_delta(0.09913523072002556, worksheet.costpercapita_cq11, 0.001); end
  def test_costpercapita_cr11; assert_equal("ok", worksheet.costpercapita_cr11); end
  def test_costpercapita_a12; assert_equal("IV.b", worksheet.costpercapita_a12); end
  def test_costpercapita_b12; assert_equal("Distributed solar thermal", worksheet.costpercapita_b12); end
  def test_costpercapita_c12; assert_equal("Buildings", worksheet.costpercapita_c12); end
  def test_costpercapita_e12; assert_in_delta(0, (worksheet.costpercapita_e12||0), 0.001); end
  def test_costpercapita_f12; assert_in_delta(0, (worksheet.costpercapita_f12||0), 0.001); end
  def test_costpercapita_g12; assert_in_delta(0, (worksheet.costpercapita_g12||0), 0.001); end
  def test_costpercapita_h12; assert_in_delta(0, (worksheet.costpercapita_h12||0), 0.001); end
  def test_costpercapita_i12; assert_in_delta(0, (worksheet.costpercapita_i12||0), 0.001); end
  def test_costpercapita_j12; assert_in_delta(0, (worksheet.costpercapita_j12||0), 0.001); end
  def test_costpercapita_k12; assert_in_delta(0, (worksheet.costpercapita_k12||0), 0.001); end
  def test_costpercapita_l12; assert_in_delta(0, (worksheet.costpercapita_l12||0), 0.001); end
  def test_costpercapita_m12; assert_in_delta(0, (worksheet.costpercapita_m12||0), 0.001); end
  def test_costpercapita_o12; assert_in_delta(0, (worksheet.costpercapita_o12||0), 0.001); end
  def test_costpercapita_p12; assert_in_delta(0, (worksheet.costpercapita_p12||0), 0.001); end
  def test_costpercapita_q12; assert_in_delta(0, (worksheet.costpercapita_q12||0), 0.001); end
  def test_costpercapita_r12; assert_in_delta(0, (worksheet.costpercapita_r12||0), 0.001); end
  def test_costpercapita_s12; assert_in_delta(0, (worksheet.costpercapita_s12||0), 0.001); end
  def test_costpercapita_t12; assert_in_delta(0, (worksheet.costpercapita_t12||0), 0.001); end
  def test_costpercapita_u12; assert_in_delta(0, (worksheet.costpercapita_u12||0), 0.001); end
  def test_costpercapita_v12; assert_in_delta(0, (worksheet.costpercapita_v12||0), 0.001); end
  def test_costpercapita_w12; assert_in_delta(0, (worksheet.costpercapita_w12||0), 0.001); end
  def test_costpercapita_y12; assert_in_delta(0, (worksheet.costpercapita_y12||0), 0.001); end
  def test_costpercapita_z12; assert_in_delta(0, (worksheet.costpercapita_z12||0), 0.001); end
  def test_costpercapita_aa12; assert_in_delta(0, (worksheet.costpercapita_aa12||0), 0.001); end
  def test_costpercapita_ab12; assert_in_delta(0, (worksheet.costpercapita_ab12||0), 0.001); end
  def test_costpercapita_ac12; assert_in_delta(0, (worksheet.costpercapita_ac12||0), 0.001); end
  def test_costpercapita_ad12; assert_in_delta(0, (worksheet.costpercapita_ad12||0), 0.001); end
  def test_costpercapita_ae12; assert_in_delta(0, (worksheet.costpercapita_ae12||0), 0.001); end
  def test_costpercapita_af12; assert_in_delta(0, (worksheet.costpercapita_af12||0), 0.001); end
  def test_costpercapita_ag12; assert_in_delta(0, (worksheet.costpercapita_ag12||0), 0.001); end
  def test_costpercapita_ai12; assert_in_delta(0, (worksheet.costpercapita_ai12||0), 0.001); end
  def test_costpercapita_aj12; assert_in_delta(0, (worksheet.costpercapita_aj12||0), 0.001); end
  def test_costpercapita_ak12; assert_in_delta(0, (worksheet.costpercapita_ak12||0), 0.001); end
  def test_costpercapita_al12; assert_in_delta(0, (worksheet.costpercapita_al12||0), 0.001); end
  def test_costpercapita_am12; assert_in_delta(0, (worksheet.costpercapita_am12||0), 0.001); end
  def test_costpercapita_an12; assert_in_delta(0, (worksheet.costpercapita_an12||0), 0.001); end
  def test_costpercapita_ao12; assert_in_delta(0, (worksheet.costpercapita_ao12||0), 0.001); end
  def test_costpercapita_ap12; assert_in_delta(0, (worksheet.costpercapita_ap12||0), 0.001); end
  def test_costpercapita_aq12; assert_in_delta(0, (worksheet.costpercapita_aq12||0), 0.001); end
  def test_costpercapita_as12; assert_in_delta(0, (worksheet.costpercapita_as12||0), 0.001); end
  def test_costpercapita_at12; assert_in_delta(0, (worksheet.costpercapita_at12||0), 0.001); end
  def test_costpercapita_av12; assert_in_delta(0, (worksheet.costpercapita_av12||0), 0.001); end
  def test_costpercapita_aw12; assert_in_epsilon(20, worksheet.costpercapita_aw12, 0.001); end
  def test_costpercapita_ay12; assert_in_delta(0, (worksheet.costpercapita_ay12||0), 0.001); end
  def test_costpercapita_az12; assert_in_delta(0, (worksheet.costpercapita_az12||0), 0.001); end
  def test_costpercapita_ba12; assert_in_delta(0, (worksheet.costpercapita_ba12||0), 0.001); end
  def test_costpercapita_bb12; assert_in_delta(0, (worksheet.costpercapita_bb12||0), 0.001); end
  def test_costpercapita_bc12; assert_in_delta(0, (worksheet.costpercapita_bc12||0), 0.001); end
  def test_costpercapita_bd12; assert_in_delta(0, (worksheet.costpercapita_bd12||0), 0.001); end
  def test_costpercapita_be12; assert_in_delta(0, (worksheet.costpercapita_be12||0), 0.001); end
  def test_costpercapita_bf12; assert_in_delta(0, (worksheet.costpercapita_bf12||0), 0.001); end
  def test_costpercapita_bg12; assert_in_delta(0, (worksheet.costpercapita_bg12||0), 0.001); end
  def test_costpercapita_bi12; assert_in_delta(0, (worksheet.costpercapita_bi12||0), 0.001); end
  def test_costpercapita_bj12; assert_in_delta(0, (worksheet.costpercapita_bj12||0), 0.001); end
  def test_costpercapita_bk12; assert_in_delta(0, (worksheet.costpercapita_bk12||0), 0.001); end
  def test_costpercapita_bl12; assert_in_delta(0, (worksheet.costpercapita_bl12||0), 0.001); end
  def test_costpercapita_bm12; assert_in_delta(0, (worksheet.costpercapita_bm12||0), 0.001); end
  def test_costpercapita_bn12; assert_in_delta(0, (worksheet.costpercapita_bn12||0), 0.001); end
  def test_costpercapita_bo12; assert_in_delta(0, (worksheet.costpercapita_bo12||0), 0.001); end
  def test_costpercapita_bp12; assert_in_delta(0, (worksheet.costpercapita_bp12||0), 0.001); end
  def test_costpercapita_bq12; assert_in_delta(0, (worksheet.costpercapita_bq12||0), 0.001); end
  def test_costpercapita_bs12; assert_in_delta(0, (worksheet.costpercapita_bs12||0), 0.001); end
  def test_costpercapita_bt12; assert_in_delta(0, (worksheet.costpercapita_bt12||0), 0.001); end
  def test_costpercapita_bu12; assert_in_delta(0, (worksheet.costpercapita_bu12||0), 0.001); end
  def test_costpercapita_bv12; assert_in_delta(0, (worksheet.costpercapita_bv12||0), 0.001); end
  def test_costpercapita_bw12; assert_in_delta(0, (worksheet.costpercapita_bw12||0), 0.001); end
  def test_costpercapita_bx12; assert_in_delta(0, (worksheet.costpercapita_bx12||0), 0.001); end
  def test_costpercapita_by12; assert_in_delta(0, (worksheet.costpercapita_by12||0), 0.001); end
  def test_costpercapita_bz12; assert_in_delta(0, (worksheet.costpercapita_bz12||0), 0.001); end
  def test_costpercapita_ca12; assert_in_delta(0, (worksheet.costpercapita_ca12||0), 0.001); end
  def test_costpercapita_cc12; assert_in_delta(0, (worksheet.costpercapita_cc12||0), 0.001); end
  def test_costpercapita_cd12; assert_in_delta(0, (worksheet.costpercapita_cd12||0), 0.001); end
  def test_costpercapita_cf12; assert_in_delta(0, (worksheet.costpercapita_cf12||0), 0.001); end
  def test_costpercapita_cg12; assert_in_delta(0, (worksheet.costpercapita_cg12||0), 0.001); end
  def test_costpercapita_ch12; assert_in_delta(0, (worksheet.costpercapita_ch12||0), 0.001); end
  def test_costpercapita_ci12; assert_in_delta(0, (worksheet.costpercapita_ci12||0), 0.001); end
  def test_costpercapita_cj12; assert_in_delta(0, (worksheet.costpercapita_cj12||0), 0.001); end
  def test_costpercapita_ck12; assert_in_delta(0, (worksheet.costpercapita_ck12||0), 0.001); end
  def test_costpercapita_cl12; assert_in_delta(0, (worksheet.costpercapita_cl12||0), 0.001); end
  def test_costpercapita_cm12; assert_in_delta(0, (worksheet.costpercapita_cm12||0), 0.001); end
  def test_costpercapita_cn12; assert_in_delta(0, (worksheet.costpercapita_cn12||0), 0.001); end
  def test_costpercapita_cp12; assert_in_delta(0, (worksheet.costpercapita_cp12||0), 0.001); end
  def test_costpercapita_cq12; assert_in_delta(0, (worksheet.costpercapita_cq12||0), 0.001); end
  def test_costpercapita_cr12; assert_equal("ok", worksheet.costpercapita_cr12); end
  def test_costpercapita_a13; assert_equal("IV.c", worksheet.costpercapita_a13); end
  def test_costpercapita_b13; assert_equal("Micro wind", worksheet.costpercapita_b13); end
  def test_costpercapita_c13; assert_equal("Electricity", worksheet.costpercapita_c13); end
  def test_costpercapita_e13; assert_in_delta(0, (worksheet.costpercapita_e13||0), 0.001); end
  def test_costpercapita_f13; assert_in_delta(0, (worksheet.costpercapita_f13||0), 0.001); end
  def test_costpercapita_g13; assert_in_delta(0, (worksheet.costpercapita_g13||0), 0.001); end
  def test_costpercapita_h13; assert_in_delta(0, (worksheet.costpercapita_h13||0), 0.001); end
  def test_costpercapita_i13; assert_in_delta(0, (worksheet.costpercapita_i13||0), 0.001); end
  def test_costpercapita_j13; assert_in_delta(0, (worksheet.costpercapita_j13||0), 0.001); end
  def test_costpercapita_k13; assert_in_delta(0, (worksheet.costpercapita_k13||0), 0.001); end
  def test_costpercapita_l13; assert_in_delta(0, (worksheet.costpercapita_l13||0), 0.001); end
  def test_costpercapita_m13; assert_in_delta(0, (worksheet.costpercapita_m13||0), 0.001); end
  def test_costpercapita_o13; assert_in_delta(0, (worksheet.costpercapita_o13||0), 0.001); end
  def test_costpercapita_p13; assert_in_delta(0, (worksheet.costpercapita_p13||0), 0.001); end
  def test_costpercapita_q13; assert_in_delta(0, (worksheet.costpercapita_q13||0), 0.001); end
  def test_costpercapita_r13; assert_in_delta(0, (worksheet.costpercapita_r13||0), 0.001); end
  def test_costpercapita_s13; assert_in_delta(0, (worksheet.costpercapita_s13||0), 0.001); end
  def test_costpercapita_t13; assert_in_delta(0, (worksheet.costpercapita_t13||0), 0.001); end
  def test_costpercapita_u13; assert_in_delta(0, (worksheet.costpercapita_u13||0), 0.001); end
  def test_costpercapita_v13; assert_in_delta(0, (worksheet.costpercapita_v13||0), 0.001); end
  def test_costpercapita_w13; assert_in_delta(0, (worksheet.costpercapita_w13||0), 0.001); end
  def test_costpercapita_y13; assert_in_delta(0, (worksheet.costpercapita_y13||0), 0.001); end
  def test_costpercapita_z13; assert_in_delta(0, (worksheet.costpercapita_z13||0), 0.001); end
  def test_costpercapita_aa13; assert_in_delta(0, (worksheet.costpercapita_aa13||0), 0.001); end
  def test_costpercapita_ab13; assert_in_delta(0, (worksheet.costpercapita_ab13||0), 0.001); end
  def test_costpercapita_ac13; assert_in_delta(0, (worksheet.costpercapita_ac13||0), 0.001); end
  def test_costpercapita_ad13; assert_in_delta(0, (worksheet.costpercapita_ad13||0), 0.001); end
  def test_costpercapita_ae13; assert_in_delta(0, (worksheet.costpercapita_ae13||0), 0.001); end
  def test_costpercapita_af13; assert_in_delta(0, (worksheet.costpercapita_af13||0), 0.001); end
  def test_costpercapita_ag13; assert_in_delta(0, (worksheet.costpercapita_ag13||0), 0.001); end
  def test_costpercapita_ai13; assert_in_delta(0, (worksheet.costpercapita_ai13||0), 0.001); end
  def test_costpercapita_aj13; assert_in_delta(0, (worksheet.costpercapita_aj13||0), 0.001); end
  def test_costpercapita_ak13; assert_in_delta(0, (worksheet.costpercapita_ak13||0), 0.001); end
  def test_costpercapita_al13; assert_in_delta(0, (worksheet.costpercapita_al13||0), 0.001); end
  def test_costpercapita_am13; assert_in_delta(0, (worksheet.costpercapita_am13||0), 0.001); end
  def test_costpercapita_an13; assert_in_delta(0, (worksheet.costpercapita_an13||0), 0.001); end
  def test_costpercapita_ao13; assert_in_delta(0, (worksheet.costpercapita_ao13||0), 0.001); end
  def test_costpercapita_ap13; assert_in_delta(0, (worksheet.costpercapita_ap13||0), 0.001); end
  def test_costpercapita_aq13; assert_in_delta(0, (worksheet.costpercapita_aq13||0), 0.001); end
  def test_costpercapita_as13; assert_in_delta(0, (worksheet.costpercapita_as13||0), 0.001); end
  def test_costpercapita_at13; assert_in_delta(0, (worksheet.costpercapita_at13||0), 0.001); end
  def test_costpercapita_av13; assert_in_delta(0, (worksheet.costpercapita_av13||0), 0.001); end
  def test_costpercapita_aw13; assert_in_epsilon(25, worksheet.costpercapita_aw13, 0.001); end
  def test_costpercapita_ay13; assert_in_delta(0, (worksheet.costpercapita_ay13||0), 0.001); end
  def test_costpercapita_az13; assert_in_delta(0, (worksheet.costpercapita_az13||0), 0.001); end
  def test_costpercapita_ba13; assert_in_delta(0, (worksheet.costpercapita_ba13||0), 0.001); end
  def test_costpercapita_bb13; assert_in_delta(0, (worksheet.costpercapita_bb13||0), 0.001); end
  def test_costpercapita_bc13; assert_in_delta(0, (worksheet.costpercapita_bc13||0), 0.001); end
  def test_costpercapita_bd13; assert_in_delta(0, (worksheet.costpercapita_bd13||0), 0.001); end
  def test_costpercapita_be13; assert_in_delta(0, (worksheet.costpercapita_be13||0), 0.001); end
  def test_costpercapita_bf13; assert_in_delta(0, (worksheet.costpercapita_bf13||0), 0.001); end
  def test_costpercapita_bg13; assert_in_delta(0, (worksheet.costpercapita_bg13||0), 0.001); end
  def test_costpercapita_bi13; assert_in_delta(0, (worksheet.costpercapita_bi13||0), 0.001); end
  def test_costpercapita_bj13; assert_in_delta(0, (worksheet.costpercapita_bj13||0), 0.001); end
  def test_costpercapita_bk13; assert_in_delta(0, (worksheet.costpercapita_bk13||0), 0.001); end
  def test_costpercapita_bl13; assert_in_delta(0, (worksheet.costpercapita_bl13||0), 0.001); end
  def test_costpercapita_bm13; assert_in_delta(0, (worksheet.costpercapita_bm13||0), 0.001); end
  def test_costpercapita_bn13; assert_in_delta(0, (worksheet.costpercapita_bn13||0), 0.001); end
  def test_costpercapita_bo13; assert_in_delta(0, (worksheet.costpercapita_bo13||0), 0.001); end
  def test_costpercapita_bp13; assert_in_delta(0, (worksheet.costpercapita_bp13||0), 0.001); end
  def test_costpercapita_bq13; assert_in_delta(0, (worksheet.costpercapita_bq13||0), 0.001); end
  def test_costpercapita_bs13; assert_in_delta(0, (worksheet.costpercapita_bs13||0), 0.001); end
  def test_costpercapita_bt13; assert_in_delta(0, (worksheet.costpercapita_bt13||0), 0.001); end
  def test_costpercapita_bu13; assert_in_delta(0, (worksheet.costpercapita_bu13||0), 0.001); end
  def test_costpercapita_bv13; assert_in_delta(0, (worksheet.costpercapita_bv13||0), 0.001); end
  def test_costpercapita_bw13; assert_in_delta(0, (worksheet.costpercapita_bw13||0), 0.001); end
  def test_costpercapita_bx13; assert_in_delta(0, (worksheet.costpercapita_bx13||0), 0.001); end
  def test_costpercapita_by13; assert_in_delta(0, (worksheet.costpercapita_by13||0), 0.001); end
  def test_costpercapita_bz13; assert_in_delta(0, (worksheet.costpercapita_bz13||0), 0.001); end
  def test_costpercapita_ca13; assert_in_delta(0, (worksheet.costpercapita_ca13||0), 0.001); end
  def test_costpercapita_cc13; assert_in_delta(0, (worksheet.costpercapita_cc13||0), 0.001); end
  def test_costpercapita_cd13; assert_in_delta(0, (worksheet.costpercapita_cd13||0), 0.001); end
  def test_costpercapita_cf13; assert_in_delta(0, (worksheet.costpercapita_cf13||0), 0.001); end
  def test_costpercapita_cg13; assert_in_delta(0, (worksheet.costpercapita_cg13||0), 0.001); end
  def test_costpercapita_ch13; assert_in_delta(0, (worksheet.costpercapita_ch13||0), 0.001); end
  def test_costpercapita_ci13; assert_in_delta(0, (worksheet.costpercapita_ci13||0), 0.001); end
  def test_costpercapita_cj13; assert_in_delta(0, (worksheet.costpercapita_cj13||0), 0.001); end
  def test_costpercapita_ck13; assert_in_delta(0, (worksheet.costpercapita_ck13||0), 0.001); end
  def test_costpercapita_cl13; assert_in_delta(0, (worksheet.costpercapita_cl13||0), 0.001); end
  def test_costpercapita_cm13; assert_in_delta(0, (worksheet.costpercapita_cm13||0), 0.001); end
  def test_costpercapita_cn13; assert_in_delta(0, (worksheet.costpercapita_cn13||0), 0.001); end
  def test_costpercapita_cp13; assert_in_delta(0, (worksheet.costpercapita_cp13||0), 0.001); end
  def test_costpercapita_cq13; assert_in_delta(0, (worksheet.costpercapita_cq13||0), 0.001); end
  def test_costpercapita_cr13; assert_equal("ok", worksheet.costpercapita_cr13); end
  def test_costpercapita_a14; assert_equal("V.a", worksheet.costpercapita_a14); end
  def test_costpercapita_b14; assert_equal("Biomatter to fuel conversion", worksheet.costpercapita_b14); end
  def test_costpercapita_c14; assert_equal("Bioenergy", worksheet.costpercapita_c14); end
  def test_costpercapita_e14; assert_in_delta(0.9252295522602386, worksheet.costpercapita_e14, 0.001); end
  def test_costpercapita_f14; assert_in_epsilon(1.326720111067372, worksheet.costpercapita_f14, 0.001); end
  def test_costpercapita_g14; assert_in_delta(0.9336588276130879, worksheet.costpercapita_g14, 0.001); end
  def test_costpercapita_h14; assert_in_delta(0.7250997045861989, worksheet.costpercapita_h14, 0.001); end
  def test_costpercapita_i14; assert_in_delta(0.6750617674069848, worksheet.costpercapita_i14, 0.001); end
  def test_costpercapita_j14; assert_in_delta(0.6575418448739205, worksheet.costpercapita_j14, 0.001); end
  def test_costpercapita_k14; assert_in_delta(0.6454900351744246, worksheet.costpercapita_k14, 0.001); end
  def test_costpercapita_l14; assert_in_delta(0.6378824866117209, worksheet.costpercapita_l14, 0.001); end
  def test_costpercapita_m14; assert_in_delta(0.4922990595941412, worksheet.costpercapita_m14, 0.001); end
  def test_costpercapita_o14; assert_in_epsilon(2.824146001036413, worksheet.costpercapita_o14, 0.001); end
  def test_costpercapita_p14; assert_in_epsilon(2.5156218680007614, worksheet.costpercapita_p14, 0.001); end
  def test_costpercapita_q14; assert_in_epsilon(2.2937785945421147, worksheet.costpercapita_q14, 0.001); end
  def test_costpercapita_r14; assert_in_epsilon(2.1963080186925086, worksheet.costpercapita_r14, 0.001); end
  def test_costpercapita_s14; assert_in_epsilon(2.0504005575495072, worksheet.costpercapita_s14, 0.001); end
  def test_costpercapita_t14; assert_in_epsilon(1.9666315875047289, worksheet.costpercapita_t14, 0.001); end
  def test_costpercapita_u14; assert_in_epsilon(1.9021169445683725, worksheet.costpercapita_u14, 0.001); end
  def test_costpercapita_v14; assert_in_epsilon(1.8537562993255954, worksheet.costpercapita_v14, 0.001); end
  def test_costpercapita_w14; assert_in_epsilon(1.8201995147964796, worksheet.costpercapita_w14, 0.001); end
  def test_costpercapita_y14; assert_in_delta(0, (worksheet.costpercapita_y14||0), 0.001); end
  def test_costpercapita_z14; assert_in_delta(0, (worksheet.costpercapita_z14||0), 0.001); end
  def test_costpercapita_aa14; assert_in_delta(0, (worksheet.costpercapita_aa14||0), 0.001); end
  def test_costpercapita_ab14; assert_in_delta(0, (worksheet.costpercapita_ab14||0), 0.001); end
  def test_costpercapita_ac14; assert_in_delta(0, (worksheet.costpercapita_ac14||0), 0.001); end
  def test_costpercapita_ad14; assert_in_delta(0, (worksheet.costpercapita_ad14||0), 0.001); end
  def test_costpercapita_ae14; assert_in_delta(0, (worksheet.costpercapita_ae14||0), 0.001); end
  def test_costpercapita_af14; assert_in_delta(0, (worksheet.costpercapita_af14||0), 0.001); end
  def test_costpercapita_ag14; assert_in_delta(0, (worksheet.costpercapita_ag14||0), 0.001); end
  def test_costpercapita_ai14; assert_in_epsilon(3.7493755532966517, worksheet.costpercapita_ai14, 0.001); end
  def test_costpercapita_aj14; assert_in_epsilon(3.842341979068133, worksheet.costpercapita_aj14, 0.001); end
  def test_costpercapita_ak14; assert_in_epsilon(3.2274374221552025, worksheet.costpercapita_ak14, 0.001); end
  def test_costpercapita_al14; assert_in_epsilon(2.9214077232787075, worksheet.costpercapita_al14, 0.001); end
  def test_costpercapita_am14; assert_in_epsilon(2.7254623249564918, worksheet.costpercapita_am14, 0.001); end
  def test_costpercapita_an14; assert_in_epsilon(2.6241734323786496, worksheet.costpercapita_an14, 0.001); end
  def test_costpercapita_ao14; assert_in_epsilon(2.547606979742797, worksheet.costpercapita_ao14, 0.001); end
  def test_costpercapita_ap14; assert_in_epsilon(2.491638785937316, worksheet.costpercapita_ap14, 0.001); end
  def test_costpercapita_aq14; assert_in_epsilon(2.312498574390621, worksheet.costpercapita_aq14, 0.001); end
  def test_costpercapita_as14; assert_in_epsilon(2.9379936416893973, worksheet.costpercapita_as14, 0.001); end
  def test_costpercapita_at14; assert_in_epsilon(63.916876704454886, worksheet.costpercapita_at14, 0.001); end
  def test_costpercapita_av14; assert_in_delta(0, (worksheet.costpercapita_av14||0), 0.001); end
  def test_costpercapita_aw14; assert_in_epsilon(30, worksheet.costpercapita_aw14, 0.001); end
  def test_costpercapita_ay14; assert_in_delta(0.09252295522602387, worksheet.costpercapita_ay14, 0.001); end
  def test_costpercapita_az14; assert_in_delta(0.22112001851122867, worksheet.costpercapita_az14, 0.001); end
  def test_costpercapita_ba14; assert_in_delta(0.15560980460218132, worksheet.costpercapita_ba14, 0.001); end
  def test_costpercapita_bb14; assert_in_delta(0.12084995076436648, worksheet.costpercapita_bb14, 0.001); end
  def test_costpercapita_bc14; assert_in_delta(0.1125102945678308, worksheet.costpercapita_bc14, 0.001); end
  def test_costpercapita_bd14; assert_in_delta(0.10959030747898676, worksheet.costpercapita_bd14, 0.001); end
  def test_costpercapita_be14; assert_in_delta(0.10758167252907075, worksheet.costpercapita_be14, 0.001); end
  def test_costpercapita_bf14; assert_in_delta(0.10631374776862014, worksheet.costpercapita_bf14, 0.001); end
  def test_costpercapita_bg14; assert_in_delta(0.08204984326569019, worksheet.costpercapita_bg14, 0.001); end
  def test_costpercapita_bi14; assert_in_delta(0.09252295522602387, worksheet.costpercapita_bi14, 0.001); end
  def test_costpercapita_bj14; assert_in_delta(0.3105920228813631, worksheet.costpercapita_bj14, 0.001); end
  def test_costpercapita_bk14; assert_in_delta(0.45603361911074913, worksheet.costpercapita_bk14, 0.001); end
  def test_costpercapita_bl14; assert_in_delta(0.5627631844238179, worksheet.costpercapita_bl14, 0.001); end
  def test_costpercapita_bm14; assert_in_delta(0.6598987026361753, worksheet.costpercapita_bm14, 0.001); end
  def test_costpercapita_bn14; assert_in_delta(0.7539446370064811, worksheet.costpercapita_bn14, 0.001); end
  def test_costpercapita_bo14; assert_in_delta(0.7674955056272059, worksheet.costpercapita_bo14, 0.001); end
  def test_costpercapita_bp14; assert_in_delta(0.7750652933709945, worksheet.costpercapita_bp14, 0.001); end
  def test_costpercapita_bq14; assert_in_delta(0.7078478541546983, worksheet.costpercapita_bq14, 0.001); end
  def test_costpercapita_bs14; assert_in_epsilon(2.916668956262437, worksheet.costpercapita_bs14, 0.001); end
  def test_costpercapita_bt14; assert_in_epsilon(2.8262138908821246, worksheet.costpercapita_bt14, 0.001); end
  def test_costpercapita_bu14; assert_in_epsilon(2.7498122136528638, worksheet.costpercapita_bu14, 0.001); end
  def test_costpercapita_bv14; assert_in_epsilon(2.759071203116327, worksheet.costpercapita_bv14, 0.001); end
  def test_costpercapita_bw14; assert_in_epsilon(2.7102992601856823, worksheet.costpercapita_bw14, 0.001); end
  def test_costpercapita_bx14; assert_in_epsilon(2.72057622451121, worksheet.costpercapita_bx14, 0.001); end
  def test_costpercapita_by14; assert_in_epsilon(2.6696124501955785, worksheet.costpercapita_by14, 0.001); end
  def test_costpercapita_bz14; assert_in_epsilon(2.62882159269659, worksheet.costpercapita_bz14, 0.001); end
  def test_costpercapita_ca14; assert_in_epsilon(2.528047368951178, worksheet.costpercapita_ca14, 0.001); end
  def test_costpercapita_cc14; assert_in_epsilon(2.7232359067171097, worksheet.costpercapita_cc14, 0.001); end
  def test_costpercapita_cd14; assert_in_epsilon(57.50865018967472, worksheet.costpercapita_cd14, 0.001); end
  def test_costpercapita_cf14; assert_in_delta(-0.8327065970342148, worksheet.costpercapita_cf14, 0.001); end
  def test_costpercapita_cg14; assert_in_epsilon(-1.016128088186009, worksheet.costpercapita_cg14, 0.001); end
  def test_costpercapita_ch14; assert_in_delta(-0.4776252085023388, worksheet.costpercapita_ch14, 0.001); end
  def test_costpercapita_ci14; assert_in_delta(-0.162336520162381, worksheet.costpercapita_ci14, 0.001); end
  def test_costpercapita_cj14; assert_in_delta(-0.015163064770809358, worksheet.costpercapita_cj14, 0.001); end
  def test_costpercapita_ck14; assert_in_delta(0.0964027921325605, worksheet.costpercapita_ck14, 0.001); end
  def test_costpercapita_cl14; assert_in_delta(0.1220054704527814, worksheet.costpercapita_cl14, 0.001); end
  def test_costpercapita_cm14; assert_in_delta(0.13718280675927366, worksheet.costpercapita_cm14, 0.001); end
  def test_costpercapita_cn14; assert_in_delta(0.21554879456055717, worksheet.costpercapita_cn14, 0.001); end
  def test_costpercapita_cp14; assert_in_delta(-0.2147577349722867, worksheet.costpercapita_cp14, 0.001); end
  def test_costpercapita_cq14; assert_in_epsilon(-6.408226514780157, worksheet.costpercapita_cq14, 0.001); end
  def test_costpercapita_cr14; assert_equal("ok", worksheet.costpercapita_cr14); end
  def test_costpercapita_a15; assert_equal("V.b", worksheet.costpercapita_a15); end
  def test_costpercapita_b15; assert_equal("Bioenergy imports", worksheet.costpercapita_b15); end
  def test_costpercapita_c15; assert_equal("Bioenergy", worksheet.costpercapita_c15); end
  def test_costpercapita_e15; assert_in_delta(0, (worksheet.costpercapita_e15||0), 0.001); end
  def test_costpercapita_f15; assert_in_delta(0, (worksheet.costpercapita_f15||0), 0.001); end
  def test_costpercapita_g15; assert_in_delta(0, (worksheet.costpercapita_g15||0), 0.001); end
  def test_costpercapita_h15; assert_in_delta(0, (worksheet.costpercapita_h15||0), 0.001); end
  def test_costpercapita_i15; assert_in_delta(0, (worksheet.costpercapita_i15||0), 0.001); end
  def test_costpercapita_j15; assert_in_delta(0, (worksheet.costpercapita_j15||0), 0.001); end
  def test_costpercapita_k15; assert_in_delta(0, (worksheet.costpercapita_k15||0), 0.001); end
  def test_costpercapita_l15; assert_in_delta(0, (worksheet.costpercapita_l15||0), 0.001); end
  def test_costpercapita_m15; assert_in_delta(0, (worksheet.costpercapita_m15||0), 0.001); end
  def test_costpercapita_o15; assert_in_delta(0, (worksheet.costpercapita_o15||0), 0.001); end
  def test_costpercapita_p15; assert_in_delta(0, (worksheet.costpercapita_p15||0), 0.001); end
  def test_costpercapita_q15; assert_in_delta(0, (worksheet.costpercapita_q15||0), 0.001); end
  def test_costpercapita_r15; assert_in_delta(0, (worksheet.costpercapita_r15||0), 0.001); end
  def test_costpercapita_s15; assert_in_delta(0, (worksheet.costpercapita_s15||0), 0.001); end
  def test_costpercapita_t15; assert_in_delta(0, (worksheet.costpercapita_t15||0), 0.001); end
  def test_costpercapita_u15; assert_in_delta(0, (worksheet.costpercapita_u15||0), 0.001); end
  def test_costpercapita_v15; assert_in_delta(0, (worksheet.costpercapita_v15||0), 0.001); end
  def test_costpercapita_w15; assert_in_delta(0, (worksheet.costpercapita_w15||0), 0.001); end
  def test_costpercapita_y15; assert_in_epsilon(1.3144566461502731, worksheet.costpercapita_y15, 0.001); end
  def test_costpercapita_z15; assert_in_epsilon(1.112223303813976, worksheet.costpercapita_z15, 0.001); end
  def test_costpercapita_aa15; assert_in_delta(0.9221238599681264, worksheet.costpercapita_aa15, 0.001); end
  def test_costpercapita_ab15; assert_in_delta(0.7446430842599925, worksheet.costpercapita_ab15, 0.001); end
  def test_costpercapita_ac15; assert_in_delta(0.5794394569566704, worksheet.costpercapita_ac15, 0.001); end
  def test_costpercapita_ad15; assert_in_delta(0.42434276802360144, worksheet.costpercapita_ad15, 0.001); end
  def test_costpercapita_ae15; assert_in_delta(0.2768620468308644, worksheet.costpercapita_ae15, 0.001); end
  def test_costpercapita_af15; assert_in_delta(0.13566961169205746, worksheet.costpercapita_af15, 0.001); end
  def test_costpercapita_ag15; assert_in_delta(0, (worksheet.costpercapita_ag15||0), 0.001); end
  def test_costpercapita_ai15; assert_in_epsilon(1.3144566461502731, worksheet.costpercapita_ai15, 0.001); end
  def test_costpercapita_aj15; assert_in_epsilon(1.112223303813976, worksheet.costpercapita_aj15, 0.001); end
  def test_costpercapita_ak15; assert_in_delta(0.9221238599681264, worksheet.costpercapita_ak15, 0.001); end
  def test_costpercapita_al15; assert_in_delta(0.7446430842599925, worksheet.costpercapita_al15, 0.001); end
  def test_costpercapita_am15; assert_in_delta(0.5794394569566704, worksheet.costpercapita_am15, 0.001); end
  def test_costpercapita_an15; assert_in_delta(0.42434276802360144, worksheet.costpercapita_an15, 0.001); end
  def test_costpercapita_ao15; assert_in_delta(0.2768620468308644, worksheet.costpercapita_ao15, 0.001); end
  def test_costpercapita_ap15; assert_in_delta(0.13566961169205746, worksheet.costpercapita_ap15, 0.001); end
  def test_costpercapita_aq15; assert_in_delta(0, (worksheet.costpercapita_aq15||0), 0.001); end
  def test_costpercapita_as15; assert_in_delta(0.6121956419661735, worksheet.costpercapita_as15, 0.001); end
  def test_costpercapita_at15; assert_in_epsilon(14.543179796510623, worksheet.costpercapita_at15, 0.001); end
  def test_costpercapita_av15; assert_in_delta(0, (worksheet.costpercapita_av15||0), 0.001); end
  def test_costpercapita_aw15; assert_in_epsilon(5, worksheet.costpercapita_aw15, 0.001); end
  def test_costpercapita_ay15; assert_in_delta(0, (worksheet.costpercapita_ay15||0), 0.001); end
  def test_costpercapita_az15; assert_in_delta(0, (worksheet.costpercapita_az15||0), 0.001); end
  def test_costpercapita_ba15; assert_in_delta(0, (worksheet.costpercapita_ba15||0), 0.001); end
  def test_costpercapita_bb15; assert_in_delta(0, (worksheet.costpercapita_bb15||0), 0.001); end
  def test_costpercapita_bc15; assert_in_delta(0, (worksheet.costpercapita_bc15||0), 0.001); end
  def test_costpercapita_bd15; assert_in_delta(0, (worksheet.costpercapita_bd15||0), 0.001); end
  def test_costpercapita_be15; assert_in_delta(0, (worksheet.costpercapita_be15||0), 0.001); end
  def test_costpercapita_bf15; assert_in_delta(0, (worksheet.costpercapita_bf15||0), 0.001); end
  def test_costpercapita_bg15; assert_in_delta(0, (worksheet.costpercapita_bg15||0), 0.001); end
  def test_costpercapita_bi15; assert_in_delta(0, (worksheet.costpercapita_bi15||0), 0.001); end
  def test_costpercapita_bj15; assert_in_delta(0, (worksheet.costpercapita_bj15||0), 0.001); end
  def test_costpercapita_bk15; assert_in_delta(0, (worksheet.costpercapita_bk15||0), 0.001); end
  def test_costpercapita_bl15; assert_in_delta(0, (worksheet.costpercapita_bl15||0), 0.001); end
  def test_costpercapita_bm15; assert_in_delta(0, (worksheet.costpercapita_bm15||0), 0.001); end
  def test_costpercapita_bn15; assert_in_delta(0, (worksheet.costpercapita_bn15||0), 0.001); end
  def test_costpercapita_bo15; assert_in_delta(0, (worksheet.costpercapita_bo15||0), 0.001); end
  def test_costpercapita_bp15; assert_in_delta(0, (worksheet.costpercapita_bp15||0), 0.001); end
  def test_costpercapita_bq15; assert_in_delta(0, (worksheet.costpercapita_bq15||0), 0.001); end
  def test_costpercapita_bs15; assert_in_epsilon(1.3144566461502731, worksheet.costpercapita_bs15, 0.001); end
  def test_costpercapita_bt15; assert_in_epsilon(1.112223303813976, worksheet.costpercapita_bt15, 0.001); end
  def test_costpercapita_bu15; assert_in_delta(0.9221238599681264, worksheet.costpercapita_bu15, 0.001); end
  def test_costpercapita_bv15; assert_in_delta(0.7446430842599925, worksheet.costpercapita_bv15, 0.001); end
  def test_costpercapita_bw15; assert_in_delta(0.5794394569566704, worksheet.costpercapita_bw15, 0.001); end
  def test_costpercapita_bx15; assert_in_delta(0.42434276802360144, worksheet.costpercapita_bx15, 0.001); end
  def test_costpercapita_by15; assert_in_delta(0.2768620468308644, worksheet.costpercapita_by15, 0.001); end
  def test_costpercapita_bz15; assert_in_delta(0.13566961169205746, worksheet.costpercapita_bz15, 0.001); end
  def test_costpercapita_ca15; assert_in_delta(0, (worksheet.costpercapita_ca15||0), 0.001); end
  def test_costpercapita_cc15; assert_in_delta(0.6121956419661735, worksheet.costpercapita_cc15, 0.001); end
  def test_costpercapita_cd15; assert_in_epsilon(14.543179796510623, worksheet.costpercapita_cd15, 0.001); end
  def test_costpercapita_cf15; assert_in_delta(0, (worksheet.costpercapita_cf15||0), 0.001); end
  def test_costpercapita_cg15; assert_in_delta(0, (worksheet.costpercapita_cg15||0), 0.001); end
  def test_costpercapita_ch15; assert_in_delta(0, (worksheet.costpercapita_ch15||0), 0.001); end
  def test_costpercapita_ci15; assert_in_delta(0, (worksheet.costpercapita_ci15||0), 0.001); end
  def test_costpercapita_cj15; assert_in_delta(0, (worksheet.costpercapita_cj15||0), 0.001); end
  def test_costpercapita_ck15; assert_in_delta(0, (worksheet.costpercapita_ck15||0), 0.001); end
  def test_costpercapita_cl15; assert_in_delta(0, (worksheet.costpercapita_cl15||0), 0.001); end
  def test_costpercapita_cm15; assert_in_delta(0, (worksheet.costpercapita_cm15||0), 0.001); end
  def test_costpercapita_cn15; assert_in_delta(0, (worksheet.costpercapita_cn15||0), 0.001); end
  def test_costpercapita_cp15; assert_in_delta(0, (worksheet.costpercapita_cp15||0), 0.001); end
  def test_costpercapita_cq15; assert_in_delta(0, (worksheet.costpercapita_cq15||0), 0.001); end
  def test_costpercapita_cr15; assert_equal("ok", worksheet.costpercapita_cr15); end
  def test_costpercapita_a16; assert_equal("VI.a.Bioenergy", worksheet.costpercapita_a16); end
  def test_costpercapita_b16; assert_equal("Agriculture and land use", worksheet.costpercapita_b16); end
  def test_costpercapita_c16; assert_equal("Bioenergy", worksheet.costpercapita_c16); end
  def test_costpercapita_e16; assert_in_delta(0, (worksheet.costpercapita_e16||0), 0.001); end
  def test_costpercapita_f16; assert_in_delta(0, (worksheet.costpercapita_f16||0), 0.001); end
  def test_costpercapita_g16; assert_in_delta(0, (worksheet.costpercapita_g16||0), 0.001); end
  def test_costpercapita_h16; assert_in_delta(0, (worksheet.costpercapita_h16||0), 0.001); end
  def test_costpercapita_i16; assert_in_delta(0, (worksheet.costpercapita_i16||0), 0.001); end
  def test_costpercapita_j16; assert_in_delta(0, (worksheet.costpercapita_j16||0), 0.001); end
  def test_costpercapita_k16; assert_in_delta(0, (worksheet.costpercapita_k16||0), 0.001); end
  def test_costpercapita_l16; assert_in_delta(0, (worksheet.costpercapita_l16||0), 0.001); end
  def test_costpercapita_m16; assert_in_delta(0, (worksheet.costpercapita_m16||0), 0.001); end
  def test_costpercapita_o16; assert_in_delta(0, (worksheet.costpercapita_o16||0), 0.001); end
  def test_costpercapita_p16; assert_in_delta(0, (worksheet.costpercapita_p16||0), 0.001); end
  def test_costpercapita_q16; assert_in_delta(0, (worksheet.costpercapita_q16||0), 0.001); end
  def test_costpercapita_r16; assert_in_delta(0, (worksheet.costpercapita_r16||0), 0.001); end
  def test_costpercapita_s16; assert_in_delta(0, (worksheet.costpercapita_s16||0), 0.001); end
  def test_costpercapita_t16; assert_in_delta(0, (worksheet.costpercapita_t16||0), 0.001); end
  def test_costpercapita_u16; assert_in_delta(0, (worksheet.costpercapita_u16||0), 0.001); end
  def test_costpercapita_v16; assert_in_delta(0, (worksheet.costpercapita_v16||0), 0.001); end
  def test_costpercapita_w16; assert_in_delta(0, (worksheet.costpercapita_w16||0), 0.001); end
  def test_costpercapita_y16; assert_in_delta(0.9006409520666151, worksheet.costpercapita_y16, 0.001); end
  def test_costpercapita_z16; assert_in_epsilon(1.0647811938598921, worksheet.costpercapita_z16, 0.001); end
  def test_costpercapita_aa16; assert_in_epsilon(1.2230909111834285, worksheet.costpercapita_aa16, 0.001); end
  def test_costpercapita_ab16; assert_in_epsilon(1.3780926553440696, worksheet.costpercapita_ab16, 0.001); end
  def test_costpercapita_ac16; assert_in_epsilon(1.5337662588450633, worksheet.costpercapita_ac16, 0.001); end
  def test_costpercapita_ad16; assert_in_epsilon(1.6921866849500267, worksheet.costpercapita_ad16, 0.001); end
  def test_costpercapita_ae16; assert_in_epsilon(1.8523563348426473, worksheet.costpercapita_ae16, 0.001); end
  def test_costpercapita_af16; assert_in_epsilon(2.013696834908815, worksheet.costpercapita_af16, 0.001); end
  def test_costpercapita_ag16; assert_in_epsilon(2.17676048128013, worksheet.costpercapita_ag16, 0.001); end
  def test_costpercapita_ai16; assert_in_delta(0.9006409520666151, worksheet.costpercapita_ai16, 0.001); end
  def test_costpercapita_aj16; assert_in_epsilon(1.0647811938598921, worksheet.costpercapita_aj16, 0.001); end
  def test_costpercapita_ak16; assert_in_epsilon(1.2230909111834285, worksheet.costpercapita_ak16, 0.001); end
  def test_costpercapita_al16; assert_in_epsilon(1.3780926553440696, worksheet.costpercapita_al16, 0.001); end
  def test_costpercapita_am16; assert_in_epsilon(1.5337662588450633, worksheet.costpercapita_am16, 0.001); end
  def test_costpercapita_an16; assert_in_epsilon(1.6921866849500267, worksheet.costpercapita_an16, 0.001); end
  def test_costpercapita_ao16; assert_in_epsilon(1.8523563348426473, worksheet.costpercapita_ao16, 0.001); end
  def test_costpercapita_ap16; assert_in_epsilon(2.013696834908815, worksheet.costpercapita_ap16, 0.001); end
  def test_costpercapita_aq16; assert_in_epsilon(2.17676048128013, worksheet.costpercapita_aq16, 0.001); end
  def test_costpercapita_as16; assert_in_epsilon(1.5372635896978541, worksheet.costpercapita_as16, 0.001); end
  def test_costpercapita_at16; assert_in_epsilon(30.545207025590216, worksheet.costpercapita_at16, 0.001); end
  def test_costpercapita_av16; assert_in_delta(0, (worksheet.costpercapita_av16||0), 0.001); end
  def test_costpercapita_aw16; assert_in_epsilon(5, worksheet.costpercapita_aw16, 0.001); end
  def test_costpercapita_ay16; assert_in_delta(0, (worksheet.costpercapita_ay16||0), 0.001); end
  def test_costpercapita_az16; assert_in_delta(0, (worksheet.costpercapita_az16||0), 0.001); end
  def test_costpercapita_ba16; assert_in_delta(0, (worksheet.costpercapita_ba16||0), 0.001); end
  def test_costpercapita_bb16; assert_in_delta(0, (worksheet.costpercapita_bb16||0), 0.001); end
  def test_costpercapita_bc16; assert_in_delta(0, (worksheet.costpercapita_bc16||0), 0.001); end
  def test_costpercapita_bd16; assert_in_delta(0, (worksheet.costpercapita_bd16||0), 0.001); end
  def test_costpercapita_be16; assert_in_delta(0, (worksheet.costpercapita_be16||0), 0.001); end
  def test_costpercapita_bf16; assert_in_delta(0, (worksheet.costpercapita_bf16||0), 0.001); end
  def test_costpercapita_bg16; assert_in_delta(0, (worksheet.costpercapita_bg16||0), 0.001); end
  def test_costpercapita_bi16; assert_in_delta(0, (worksheet.costpercapita_bi16||0), 0.001); end
  def test_costpercapita_bj16; assert_in_delta(0, (worksheet.costpercapita_bj16||0), 0.001); end
  def test_costpercapita_bk16; assert_in_delta(0, (worksheet.costpercapita_bk16||0), 0.001); end
  def test_costpercapita_bl16; assert_in_delta(0, (worksheet.costpercapita_bl16||0), 0.001); end
  def test_costpercapita_bm16; assert_in_delta(0, (worksheet.costpercapita_bm16||0), 0.001); end
  def test_costpercapita_bn16; assert_in_delta(0, (worksheet.costpercapita_bn16||0), 0.001); end
  def test_costpercapita_bo16; assert_in_delta(0, (worksheet.costpercapita_bo16||0), 0.001); end
  def test_costpercapita_bp16; assert_in_delta(0, (worksheet.costpercapita_bp16||0), 0.001); end
  def test_costpercapita_bq16; assert_in_delta(0, (worksheet.costpercapita_bq16||0), 0.001); end
  def test_costpercapita_bs16; assert_in_delta(0.9006409520666151, worksheet.costpercapita_bs16, 0.001); end
  def test_costpercapita_bt16; assert_in_epsilon(1.0647811938598921, worksheet.costpercapita_bt16, 0.001); end
  def test_costpercapita_bu16; assert_in_epsilon(1.2230909111834285, worksheet.costpercapita_bu16, 0.001); end
  def test_costpercapita_bv16; assert_in_epsilon(1.3780926553440696, worksheet.costpercapita_bv16, 0.001); end
  def test_costpercapita_bw16; assert_in_epsilon(1.5337662588450633, worksheet.costpercapita_bw16, 0.001); end
  def test_costpercapita_bx16; assert_in_epsilon(1.6921866849500267, worksheet.costpercapita_bx16, 0.001); end
  def test_costpercapita_by16; assert_in_epsilon(1.8523563348426473, worksheet.costpercapita_by16, 0.001); end
  def test_costpercapita_bz16; assert_in_epsilon(2.013696834908815, worksheet.costpercapita_bz16, 0.001); end
  def test_costpercapita_ca16; assert_in_epsilon(2.17676048128013, worksheet.costpercapita_ca16, 0.001); end
  def test_costpercapita_cc16; assert_in_epsilon(1.5372635896978541, worksheet.costpercapita_cc16, 0.001); end
  def test_costpercapita_cd16; assert_in_epsilon(30.545207025590216, worksheet.costpercapita_cd16, 0.001); end
  def test_costpercapita_cf16; assert_in_delta(0, (worksheet.costpercapita_cf16||0), 0.001); end
  def test_costpercapita_cg16; assert_in_delta(0, (worksheet.costpercapita_cg16||0), 0.001); end
  def test_costpercapita_ch16; assert_in_delta(0, (worksheet.costpercapita_ch16||0), 0.001); end
  def test_costpercapita_ci16; assert_in_delta(0, (worksheet.costpercapita_ci16||0), 0.001); end
  def test_costpercapita_cj16; assert_in_delta(0, (worksheet.costpercapita_cj16||0), 0.001); end
  def test_costpercapita_ck16; assert_in_delta(0, (worksheet.costpercapita_ck16||0), 0.001); end
  def test_costpercapita_cl16; assert_in_delta(0, (worksheet.costpercapita_cl16||0), 0.001); end
  def test_costpercapita_cm16; assert_in_delta(0, (worksheet.costpercapita_cm16||0), 0.001); end
  def test_costpercapita_cn16; assert_in_delta(0, (worksheet.costpercapita_cn16||0), 0.001); end
  def test_costpercapita_cp16; assert_in_delta(0, (worksheet.costpercapita_cp16||0), 0.001); end
  def test_costpercapita_cq16; assert_in_delta(0, (worksheet.costpercapita_cq16||0), 0.001); end
  def test_costpercapita_cr16; assert_equal("ok", worksheet.costpercapita_cr16); end
  def test_costpercapita_a17; assert_equal("VI.a.Emissions", worksheet.costpercapita_a17); end
  def test_costpercapita_b17; assert_equal("Agriculture and land use", worksheet.costpercapita_b17); end
  def test_costpercapita_c17; assert_equal("Bioenergy", worksheet.costpercapita_c17); end
  def test_costpercapita_e17; assert_in_delta(0, (worksheet.costpercapita_e17||0), 0.001); end
  def test_costpercapita_f17; assert_in_delta(0, (worksheet.costpercapita_f17||0), 0.001); end
  def test_costpercapita_g17; assert_in_delta(0, (worksheet.costpercapita_g17||0), 0.001); end
  def test_costpercapita_h17; assert_in_delta(0, (worksheet.costpercapita_h17||0), 0.001); end
  def test_costpercapita_i17; assert_in_delta(0, (worksheet.costpercapita_i17||0), 0.001); end
  def test_costpercapita_j17; assert_in_delta(0, (worksheet.costpercapita_j17||0), 0.001); end
  def test_costpercapita_k17; assert_in_delta(0, (worksheet.costpercapita_k17||0), 0.001); end
  def test_costpercapita_l17; assert_in_delta(0, (worksheet.costpercapita_l17||0), 0.001); end
  def test_costpercapita_m17; assert_in_delta(0, (worksheet.costpercapita_m17||0), 0.001); end
  def test_costpercapita_o17; assert_in_delta(4.7392361963065065e-07, worksheet.costpercapita_o17, 0.001); end
  def test_costpercapita_p17; assert_in_delta(7.245687591407266e-06, worksheet.costpercapita_p17, 0.001); end
  def test_costpercapita_q17; assert_in_delta(1.9664368179411587e-05, worksheet.costpercapita_q17, 0.001); end
  def test_costpercapita_r17; assert_in_delta(3.13315981015922e-05, worksheet.costpercapita_r17, 0.001); end
  def test_costpercapita_s17; assert_in_delta(4.472478050202473e-05, worksheet.costpercapita_s17, 0.001); end
  def test_costpercapita_t17; assert_in_delta(5.9919959788806734e-05, worksheet.costpercapita_t17, 0.001); end
  def test_costpercapita_u17; assert_in_delta(7.691191875223806e-05, worksheet.costpercapita_u17, 0.001); end
  def test_costpercapita_v17; assert_in_delta(9.568708999761658e-05, worksheet.costpercapita_v17, 0.001); end
  def test_costpercapita_w17; assert_in_delta(2.8368886241673137e-06, worksheet.costpercapita_w17, 0.001); end
  def test_costpercapita_y17; assert_in_delta(0, (worksheet.costpercapita_y17||0), 0.001); end
  def test_costpercapita_z17; assert_in_delta(0, (worksheet.costpercapita_z17||0), 0.001); end
  def test_costpercapita_aa17; assert_in_delta(0, (worksheet.costpercapita_aa17||0), 0.001); end
  def test_costpercapita_ab17; assert_in_delta(0, (worksheet.costpercapita_ab17||0), 0.001); end
  def test_costpercapita_ac17; assert_in_delta(0, (worksheet.costpercapita_ac17||0), 0.001); end
  def test_costpercapita_ad17; assert_in_delta(0, (worksheet.costpercapita_ad17||0), 0.001); end
  def test_costpercapita_ae17; assert_in_delta(0, (worksheet.costpercapita_ae17||0), 0.001); end
  def test_costpercapita_af17; assert_in_delta(0, (worksheet.costpercapita_af17||0), 0.001); end
  def test_costpercapita_ag17; assert_in_delta(0, (worksheet.costpercapita_ag17||0), 0.001); end
  def test_costpercapita_ai17; assert_in_delta(4.7392361963065065e-07, worksheet.costpercapita_ai17, 0.001); end
  def test_costpercapita_aj17; assert_in_delta(7.245687591407266e-06, worksheet.costpercapita_aj17, 0.001); end
  def test_costpercapita_ak17; assert_in_delta(1.9664368179411587e-05, worksheet.costpercapita_ak17, 0.001); end
  def test_costpercapita_al17; assert_in_delta(3.13315981015922e-05, worksheet.costpercapita_al17, 0.001); end
  def test_costpercapita_am17; assert_in_delta(4.472478050202473e-05, worksheet.costpercapita_am17, 0.001); end
  def test_costpercapita_an17; assert_in_delta(5.9919959788806734e-05, worksheet.costpercapita_an17, 0.001); end
  def test_costpercapita_ao17; assert_in_delta(7.691191875223806e-05, worksheet.costpercapita_ao17, 0.001); end
  def test_costpercapita_ap17; assert_in_delta(9.568708999761658e-05, worksheet.costpercapita_ap17, 0.001); end
  def test_costpercapita_aq17; assert_in_delta(2.8368886241673137e-06, worksheet.costpercapita_aq17, 0.001); end
  def test_costpercapita_as17; assert_in_delta(3.764402390632168e-05, worksheet.costpercapita_as17, 0.001); end
  def test_costpercapita_at17; assert_in_delta(0.0007211553573064599, worksheet.costpercapita_at17, 0.001); end
  def test_costpercapita_av17; assert_in_delta(0, (worksheet.costpercapita_av17||0), 0.001); end
  def test_costpercapita_aw17; assert_in_epsilon(5, worksheet.costpercapita_aw17, 0.001); end
  def test_costpercapita_ay17; assert_in_delta(0, (worksheet.costpercapita_ay17||0), 0.001); end
  def test_costpercapita_az17; assert_in_delta(0, (worksheet.costpercapita_az17||0), 0.001); end
  def test_costpercapita_ba17; assert_in_delta(0, (worksheet.costpercapita_ba17||0), 0.001); end
  def test_costpercapita_bb17; assert_in_delta(0, (worksheet.costpercapita_bb17||0), 0.001); end
  def test_costpercapita_bc17; assert_in_delta(0, (worksheet.costpercapita_bc17||0), 0.001); end
  def test_costpercapita_bd17; assert_in_delta(0, (worksheet.costpercapita_bd17||0), 0.001); end
  def test_costpercapita_be17; assert_in_delta(0, (worksheet.costpercapita_be17||0), 0.001); end
  def test_costpercapita_bf17; assert_in_delta(0, (worksheet.costpercapita_bf17||0), 0.001); end
  def test_costpercapita_bg17; assert_in_delta(0, (worksheet.costpercapita_bg17||0), 0.001); end
  def test_costpercapita_bi17; assert_in_delta(0, (worksheet.costpercapita_bi17||0), 0.001); end
  def test_costpercapita_bj17; assert_in_delta(0, (worksheet.costpercapita_bj17||0), 0.001); end
  def test_costpercapita_bk17; assert_in_delta(0, (worksheet.costpercapita_bk17||0), 0.001); end
  def test_costpercapita_bl17; assert_in_delta(0, (worksheet.costpercapita_bl17||0), 0.001); end
  def test_costpercapita_bm17; assert_in_delta(0, (worksheet.costpercapita_bm17||0), 0.001); end
  def test_costpercapita_bn17; assert_in_delta(0, (worksheet.costpercapita_bn17||0), 0.001); end
  def test_costpercapita_bo17; assert_in_delta(0, (worksheet.costpercapita_bo17||0), 0.001); end
  def test_costpercapita_bp17; assert_in_delta(0, (worksheet.costpercapita_bp17||0), 0.001); end
  def test_costpercapita_bq17; assert_in_delta(0, (worksheet.costpercapita_bq17||0), 0.001); end
  def test_costpercapita_bs17; assert_in_delta(4.7392361963065065e-07, worksheet.costpercapita_bs17, 0.001); end
  def test_costpercapita_bt17; assert_in_delta(7.245687591407266e-06, worksheet.costpercapita_bt17, 0.001); end
  def test_costpercapita_bu17; assert_in_delta(1.9664368179411587e-05, worksheet.costpercapita_bu17, 0.001); end
  def test_costpercapita_bv17; assert_in_delta(3.13315981015922e-05, worksheet.costpercapita_bv17, 0.001); end
  def test_costpercapita_bw17; assert_in_delta(4.472478050202473e-05, worksheet.costpercapita_bw17, 0.001); end
  def test_costpercapita_bx17; assert_in_delta(5.9919959788806734e-05, worksheet.costpercapita_bx17, 0.001); end
  def test_costpercapita_by17; assert_in_delta(7.691191875223806e-05, worksheet.costpercapita_by17, 0.001); end
  def test_costpercapita_bz17; assert_in_delta(9.568708999761658e-05, worksheet.costpercapita_bz17, 0.001); end
  def test_costpercapita_ca17; assert_in_delta(2.8368886241673137e-06, worksheet.costpercapita_ca17, 0.001); end
  def test_costpercapita_cc17; assert_in_delta(3.764402390632168e-05, worksheet.costpercapita_cc17, 0.001); end
  def test_costpercapita_cd17; assert_in_delta(0.0007211553573064599, worksheet.costpercapita_cd17, 0.001); end
  def test_costpercapita_cf17; assert_in_delta(0, (worksheet.costpercapita_cf17||0), 0.001); end
  def test_costpercapita_cg17; assert_in_delta(0, (worksheet.costpercapita_cg17||0), 0.001); end
  def test_costpercapita_ch17; assert_in_delta(0, (worksheet.costpercapita_ch17||0), 0.001); end
  def test_costpercapita_ci17; assert_in_delta(0, (worksheet.costpercapita_ci17||0), 0.001); end
  def test_costpercapita_cj17; assert_in_delta(0, (worksheet.costpercapita_cj17||0), 0.001); end
  def test_costpercapita_ck17; assert_in_delta(0, (worksheet.costpercapita_ck17||0), 0.001); end
  def test_costpercapita_cl17; assert_in_delta(0, (worksheet.costpercapita_cl17||0), 0.001); end
  def test_costpercapita_cm17; assert_in_delta(0, (worksheet.costpercapita_cm17||0), 0.001); end
  def test_costpercapita_cn17; assert_in_delta(0, (worksheet.costpercapita_cn17||0), 0.001); end
  def test_costpercapita_cp17; assert_in_delta(0, (worksheet.costpercapita_cp17||0), 0.001); end
  def test_costpercapita_cq17; assert_in_delta(0, (worksheet.costpercapita_cq17||0), 0.001); end
  def test_costpercapita_cr17; assert_equal("ok", worksheet.costpercapita_cr17); end
  def test_costpercapita_a18; assert_equal("VI.b.Bioenergy", worksheet.costpercapita_a18); end
  def test_costpercapita_b18; assert_equal("Energy from waste", worksheet.costpercapita_b18); end
  def test_costpercapita_c18; assert_equal("Bioenergy", worksheet.costpercapita_c18); end
  def test_costpercapita_e18; assert_in_epsilon(8.610082127493534, worksheet.costpercapita_e18, 0.001); end
  def test_costpercapita_f18; assert_in_epsilon(8.52529637656604, worksheet.costpercapita_f18, 0.001); end
  def test_costpercapita_g18; assert_in_epsilon(8.438807021356345, worksheet.costpercapita_g18, 0.001); end
  def test_costpercapita_h18; assert_in_epsilon(8.891769562335881, worksheet.costpercapita_h18, 0.001); end
  def test_costpercapita_i18; assert_in_epsilon(9.343588766133642, worksheet.costpercapita_i18, 0.001); end
  def test_costpercapita_j18; assert_in_epsilon(9.570537352671753, worksheet.costpercapita_j18, 0.001); end
  def test_costpercapita_k18; assert_in_epsilon(9.80394187917491, worksheet.costpercapita_k18, 0.001); end
  def test_costpercapita_l18; assert_in_epsilon(10.037155674169293, worksheet.costpercapita_l18, 0.001); end
  def test_costpercapita_m18; assert_in_epsilon(10.27062521048618, worksheet.costpercapita_m18, 0.001); end
  def test_costpercapita_o18; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_o18, 0.001); end
  def test_costpercapita_p18; assert_in_epsilon(3.163751694170952, worksheet.costpercapita_p18, 0.001); end
  def test_costpercapita_q18; assert_in_epsilon(3.3344820770620087, worksheet.costpercapita_q18, 0.001); end
  def test_costpercapita_r18; assert_in_epsilon(3.964655129646296, worksheet.costpercapita_r18, 0.001); end
  def test_costpercapita_s18; assert_in_epsilon(4.646815955274262, worksheet.costpercapita_s18, 0.001); end
  def test_costpercapita_t18; assert_in_epsilon(5.007082713263363, worksheet.costpercapita_t18, 0.001); end
  def test_costpercapita_u18; assert_in_epsilon(5.391435089854007, worksheet.costpercapita_u18, 0.001); end
  def test_costpercapita_v18; assert_in_epsilon(5.797192437203441, worksheet.costpercapita_v18, 0.001); end
  def test_costpercapita_w18; assert_in_epsilon(6.225248428797817, worksheet.costpercapita_w18, 0.001); end
  def test_costpercapita_y18; assert_in_delta(0, (worksheet.costpercapita_y18||0), 0.001); end
  def test_costpercapita_z18; assert_in_delta(0, (worksheet.costpercapita_z18||0), 0.001); end
  def test_costpercapita_aa18; assert_in_delta(0, (worksheet.costpercapita_aa18||0), 0.001); end
  def test_costpercapita_ab18; assert_in_delta(0, (worksheet.costpercapita_ab18||0), 0.001); end
  def test_costpercapita_ac18; assert_in_delta(0, (worksheet.costpercapita_ac18||0), 0.001); end
  def test_costpercapita_ad18; assert_in_delta(0, (worksheet.costpercapita_ad18||0), 0.001); end
  def test_costpercapita_ae18; assert_in_delta(0, (worksheet.costpercapita_ae18||0), 0.001); end
  def test_costpercapita_af18; assert_in_delta(0, (worksheet.costpercapita_af18||0), 0.001); end
  def test_costpercapita_ag18; assert_in_delta(0, (worksheet.costpercapita_ag18||0), 0.001); end
  def test_costpercapita_ai18; assert_in_epsilon(11.598354631208956, worksheet.costpercapita_ai18, 0.001); end
  def test_costpercapita_aj18; assert_in_epsilon(11.689048070736993, worksheet.costpercapita_aj18, 0.001); end
  def test_costpercapita_ak18; assert_in_epsilon(11.773289098418353, worksheet.costpercapita_ak18, 0.001); end
  def test_costpercapita_al18; assert_in_epsilon(12.856424691982175, worksheet.costpercapita_al18, 0.001); end
  def test_costpercapita_am18; assert_in_epsilon(13.990404721407906, worksheet.costpercapita_am18, 0.001); end
  def test_costpercapita_an18; assert_in_epsilon(14.577620065935115, worksheet.costpercapita_an18, 0.001); end
  def test_costpercapita_ao18; assert_in_epsilon(15.195376969028917, worksheet.costpercapita_ao18, 0.001); end
  def test_costpercapita_ap18; assert_in_epsilon(15.834348111372734, worksheet.costpercapita_ap18, 0.001); end
  def test_costpercapita_aq18; assert_in_epsilon(16.495873639284, worksheet.costpercapita_aq18, 0.001); end
  def test_costpercapita_as18; assert_in_epsilon(13.778971111041683, worksheet.costpercapita_as18, 0.001); end
  def test_costpercapita_at18; assert_in_epsilon(280.1728330544344, worksheet.costpercapita_at18, 0.001); end
  def test_costpercapita_av18; assert_in_delta(0, (worksheet.costpercapita_av18||0), 0.001); end
  def test_costpercapita_aw18; assert_in_epsilon(15, worksheet.costpercapita_aw18, 0.001); end
  def test_costpercapita_ay18; assert_in_epsilon(1.7220164254987065, worksheet.costpercapita_ay18, 0.001); end
  def test_costpercapita_az18; assert_in_epsilon(2.8417654588553467, worksheet.costpercapita_az18, 0.001); end
  def test_costpercapita_ba18; assert_in_epsilon(2.8129356737854483, worksheet.costpercapita_ba18, 0.001); end
  def test_costpercapita_bb18; assert_in_epsilon(2.9639231874452934, worksheet.costpercapita_bb18, 0.001); end
  def test_costpercapita_bc18; assert_in_epsilon(3.1145295887112145, worksheet.costpercapita_bc18, 0.001); end
  def test_costpercapita_bd18; assert_in_epsilon(3.1901791175572507, worksheet.costpercapita_bd18, 0.001); end
  def test_costpercapita_be18; assert_in_epsilon(3.2679806263916364, worksheet.costpercapita_be18, 0.001); end
  def test_costpercapita_bf18; assert_in_epsilon(3.345718558056431, worksheet.costpercapita_bf18, 0.001); end
  def test_costpercapita_bg18; assert_in_epsilon(3.4235417368287275, worksheet.costpercapita_bg18, 0.001); end
  def test_costpercapita_bi18; assert_in_epsilon(1.7220164254987065, worksheet.costpercapita_bi18, 0.001); end
  def test_costpercapita_bj18; assert_in_epsilon(4.506998273471798, worksheet.costpercapita_bj18, 0.001); end
  def test_costpercapita_bk18; assert_in_epsilon(7.172383159714982, worksheet.costpercapita_bk18, 0.001); end
  def test_costpercapita_bl18; assert_in_epsilon(8.353381639612719, worksheet.costpercapita_bl18, 0.001); end
  def test_costpercapita_bm18; assert_in_epsilon(8.648845056595004, worksheet.costpercapita_bm18, 0.001); end
  def test_costpercapita_bn18; assert_in_epsilon(9.046382292427472, worksheet.costpercapita_bn18, 0.001); end
  def test_costpercapita_bo18; assert_in_epsilon(9.366432376377519, worksheet.costpercapita_bo18, 0.001); end
  def test_costpercapita_bp18; assert_in_epsilon(9.608373578280446, worksheet.costpercapita_bp18, 0.001); end
  def test_costpercapita_bq18; assert_in_epsilon(9.849844932541089, worksheet.costpercapita_bq18, 0.001); end
  def test_costpercapita_bs18; assert_in_epsilon(4.710288929214129, worksheet.costpercapita_bs18, 0.001); end
  def test_costpercapita_bt18; assert_in_epsilon(7.67074996764275, worksheet.costpercapita_bt18, 0.001); end
  def test_costpercapita_bu18; assert_in_epsilon(10.50686523677699, worksheet.costpercapita_bu18, 0.001); end
  def test_costpercapita_bv18; assert_in_epsilon(12.318036769259015, worksheet.costpercapita_bv18, 0.001); end
  def test_costpercapita_bw18; assert_in_epsilon(13.295661011869264, worksheet.costpercapita_bw18, 0.001); end
  def test_costpercapita_bx18; assert_in_epsilon(14.053465005690834, worksheet.costpercapita_bx18, 0.001); end
  def test_costpercapita_by18; assert_in_epsilon(14.757867466231527, worksheet.costpercapita_by18, 0.001); end
  def test_costpercapita_bz18; assert_in_epsilon(15.405566015483885, worksheet.costpercapita_bz18, 0.001); end
  def test_costpercapita_ca18; assert_in_epsilon(16.075093361338904, worksheet.costpercapita_ca18, 0.001); end
  def test_costpercapita_cc18; assert_in_epsilon(12.088177084834143, worksheet.costpercapita_cc18, 0.001); end
  def test_costpercapita_cd18; assert_in_epsilon(245.4217583313179, worksheet.costpercapita_cd18, 0.001); end
  def test_costpercapita_cf18; assert_in_epsilon(-6.888065701994826, worksheet.costpercapita_cf18, 0.001); end
  def test_costpercapita_cg18; assert_in_epsilon(-4.018298103094242, worksheet.costpercapita_cg18, 0.001); end
  def test_costpercapita_ch18; assert_in_epsilon(-1.266423861641363, worksheet.costpercapita_ch18, 0.001); end
  def test_costpercapita_ci18; assert_in_delta(-0.5383879227231615, worksheet.costpercapita_ci18, 0.001); end
  def test_costpercapita_cj18; assert_in_delta(-0.6947437095386396, worksheet.costpercapita_cj18, 0.001); end
  def test_costpercapita_ck18; assert_in_delta(-0.5241550602442808, worksheet.costpercapita_ck18, 0.001); end
  def test_costpercapita_cl18; assert_in_delta(-0.4375095027973908, worksheet.costpercapita_cl18, 0.001); end
  def test_costpercapita_cm18; assert_in_delta(-0.42878209588884747, worksheet.costpercapita_cm18, 0.001); end
  def test_costpercapita_cn18; assert_in_delta(-0.420780277945092, worksheet.costpercapita_cn18, 0.001); end
  def test_costpercapita_cp18; assert_in_epsilon(-1.6907940262075383, worksheet.costpercapita_cp18, 0.001); end
  def test_costpercapita_cq18; assert_in_epsilon(-34.75107472311653, worksheet.costpercapita_cq18, 0.001); end
  def test_costpercapita_cr18; assert_equal("ok", worksheet.costpercapita_cr18); end
  def test_costpercapita_a19; assert_equal("VI.b.Waste", worksheet.costpercapita_a19); end
  def test_costpercapita_b19; assert_equal("Waste arising", worksheet.costpercapita_b19); end
  def test_costpercapita_c19; assert_equal("Bioenergy", worksheet.costpercapita_c19); end
  def test_costpercapita_e19; assert_in_epsilon(35.24809771490182, worksheet.costpercapita_e19, 0.001); end
  def test_costpercapita_f19; assert_in_epsilon(34.87941931732309, worksheet.costpercapita_f19, 0.001); end
  def test_costpercapita_g19; assert_in_epsilon(36.92609153961815, worksheet.costpercapita_g19, 0.001); end
  def test_costpercapita_h19; assert_in_epsilon(37.02233679443636, worksheet.costpercapita_h19, 0.001); end
  def test_costpercapita_i19; assert_in_epsilon(39.50547681411891, worksheet.costpercapita_i19, 0.001); end
  def test_costpercapita_j19; assert_in_epsilon(43.80182256077141, worksheet.costpercapita_j19, 0.001); end
  def test_costpercapita_k19; assert_in_epsilon(43.89902885286584, worksheet.costpercapita_k19, 0.001); end
  def test_costpercapita_l19; assert_in_epsilon(46.2198890565723, worksheet.costpercapita_l19, 0.001); end
  def test_costpercapita_m19; assert_in_epsilon(50.466432166134, worksheet.costpercapita_m19, 0.001); end
  def test_costpercapita_o19; assert_in_epsilon(53.24977042432771, worksheet.costpercapita_o19, 0.001); end
  def test_costpercapita_p19; assert_in_epsilon(52.666516687074896, worksheet.costpercapita_p19, 0.001); end
  def test_costpercapita_q19; assert_in_epsilon(52.0739217320289, worksheet.costpercapita_q19, 0.001); end
  def test_costpercapita_r19; assert_in_epsilon(55.251017492552684, worksheet.costpercapita_r19, 0.001); end
  def test_costpercapita_s19; assert_in_epsilon(58.45987610658892, worksheet.costpercapita_s19, 0.001); end
  def test_costpercapita_t19; assert_in_epsilon(60.74459137434952, worksheet.costpercapita_t19, 0.001); end
  def test_costpercapita_u19; assert_in_epsilon(63.111879113097444, worksheet.costpercapita_u19, 0.001); end
  def test_costpercapita_v19; assert_in_epsilon(65.52010150213336, worksheet.costpercapita_v19, 0.001); end
  def test_costpercapita_w19; assert_in_epsilon(67.97216164718807, worksheet.costpercapita_w19, 0.001); end
  def test_costpercapita_y19; assert_in_delta(0, (worksheet.costpercapita_y19||0), 0.001); end
  def test_costpercapita_z19; assert_in_delta(0, (worksheet.costpercapita_z19||0), 0.001); end
  def test_costpercapita_aa19; assert_in_delta(0, (worksheet.costpercapita_aa19||0), 0.001); end
  def test_costpercapita_ab19; assert_in_delta(0, (worksheet.costpercapita_ab19||0), 0.001); end
  def test_costpercapita_ac19; assert_in_delta(0, (worksheet.costpercapita_ac19||0), 0.001); end
  def test_costpercapita_ad19; assert_in_delta(0, (worksheet.costpercapita_ad19||0), 0.001); end
  def test_costpercapita_ae19; assert_in_delta(0, (worksheet.costpercapita_ae19||0), 0.001); end
  def test_costpercapita_af19; assert_in_delta(0, (worksheet.costpercapita_af19||0), 0.001); end
  def test_costpercapita_ag19; assert_in_delta(0, (worksheet.costpercapita_ag19||0), 0.001); end
  def test_costpercapita_ai19; assert_in_epsilon(88.49786813922952, worksheet.costpercapita_ai19, 0.001); end
  def test_costpercapita_aj19; assert_in_epsilon(87.54593600439797, worksheet.costpercapita_aj19, 0.001); end
  def test_costpercapita_ak19; assert_in_epsilon(89.00001327164703, worksheet.costpercapita_ak19, 0.001); end
  def test_costpercapita_al19; assert_in_epsilon(92.27335428698905, worksheet.costpercapita_al19, 0.001); end
  def test_costpercapita_am19; assert_in_epsilon(97.96535292070783, worksheet.costpercapita_am19, 0.001); end
  def test_costpercapita_an19; assert_in_epsilon(104.54641393512092, worksheet.costpercapita_an19, 0.001); end
  def test_costpercapita_ao19; assert_in_epsilon(107.01090796596328, worksheet.costpercapita_ao19, 0.001); end
  def test_costpercapita_ap19; assert_in_epsilon(111.73999055870566, worksheet.costpercapita_ap19, 0.001); end
  def test_costpercapita_aq19; assert_in_epsilon(118.43859381332207, worksheet.costpercapita_aq19, 0.001); end
  def test_costpercapita_as19; assert_in_epsilon(99.66871454400926, worksheet.costpercapita_as19, 0.001); end
  def test_costpercapita_at19; assert_in_epsilon(2034.5977465856595, worksheet.costpercapita_at19, 0.001); end
  def test_costpercapita_av19; assert_in_delta(0, (worksheet.costpercapita_av19||0), 0.001); end
  def test_costpercapita_aw19; assert_in_epsilon(15, worksheet.costpercapita_aw19, 0.001); end
  def test_costpercapita_ay19; assert_in_epsilon(7.049619542980363, worksheet.costpercapita_ay19, 0.001); end
  def test_costpercapita_az19; assert_in_epsilon(11.626473105774362, worksheet.costpercapita_az19, 0.001); end
  def test_costpercapita_ba19; assert_in_epsilon(12.308697179872714, worksheet.costpercapita_ba19, 0.001); end
  def test_costpercapita_bb19; assert_in_epsilon(12.340778931478788, worksheet.costpercapita_bb19, 0.001); end
  def test_costpercapita_bc19; assert_in_epsilon(13.16849227137297, worksheet.costpercapita_bc19, 0.001); end
  def test_costpercapita_bd19; assert_in_epsilon(14.600607520257137, worksheet.costpercapita_bd19, 0.001); end
  def test_costpercapita_be19; assert_in_epsilon(14.633009617621946, worksheet.costpercapita_be19, 0.001); end
  def test_costpercapita_bf19; assert_in_epsilon(15.406629685524099, worksheet.costpercapita_bf19, 0.001); end
  def test_costpercapita_bg19; assert_in_epsilon(16.822144055377997, worksheet.costpercapita_bg19, 0.001); end
  def test_costpercapita_bi19; assert_in_epsilon(7.049619542980363, worksheet.costpercapita_bi19, 0.001); end
  def test_costpercapita_bj19; assert_in_epsilon(18.443630956131432, worksheet.costpercapita_bj19, 0.001); end
  def test_costpercapita_bk19; assert_in_epsilon(30.148517770969384, worksheet.costpercapita_bk19, 0.001); end
  def test_costpercapita_bl19; assert_in_epsilon(35.16598955401934, worksheet.costpercapita_bl19, 0.001); end
  def test_costpercapita_bm19; assert_in_epsilon(36.77383314494687, worksheet.costpercapita_bm19, 0.001); end
  def test_costpercapita_bn19; assert_in_epsilon(39.1797799696724, worksheet.costpercapita_bn19, 0.001); end
  def test_costpercapita_bo19; assert_in_epsilon(41.506317158413346, worksheet.costpercapita_bo19, 0.001); end
  def test_costpercapita_bp19; assert_in_epsilon(43.75192996397591, worksheet.costpercapita_bp19, 0.001); end
  def test_costpercapita_bq19; assert_in_epsilon(46.01474070641181, worksheet.costpercapita_bq19, 0.001); end
  def test_costpercapita_bs19; assert_in_epsilon(60.299389967308066, worksheet.costpercapita_bs19, 0.001); end
  def test_costpercapita_bt19; assert_in_epsilon(71.11014764320633, worksheet.costpercapita_bt19, 0.001); end
  def test_costpercapita_bu19; assert_in_epsilon(82.22243950299827, worksheet.costpercapita_bu19, 0.001); end
  def test_costpercapita_bv19; assert_in_epsilon(90.41700704657202, worksheet.costpercapita_bv19, 0.001); end
  def test_costpercapita_bw19; assert_in_epsilon(95.2337092515358, worksheet.costpercapita_bw19, 0.001); end
  def test_costpercapita_bx19; assert_in_epsilon(99.92437134402192, worksheet.costpercapita_bx19, 0.001); end
  def test_costpercapita_by19; assert_in_epsilon(104.6181962715108, worksheet.costpercapita_by19, 0.001); end
  def test_costpercapita_bz19; assert_in_epsilon(109.27203146610927, worksheet.costpercapita_bz19, 0.001); end
  def test_costpercapita_ca19; assert_in_epsilon(113.98690235359986, worksheet.costpercapita_ca19, 0.001); end
  def test_costpercapita_cc19; assert_in_epsilon(91.8982438718736, worksheet.costpercapita_cc19, 0.001); end
  def test_costpercapita_cd19; assert_in_epsilon(1877.0441513143967, worksheet.costpercapita_cd19, 0.001); end
  def test_costpercapita_cf19; assert_in_epsilon(-28.198478171921455, worksheet.costpercapita_cf19, 0.001); end
  def test_costpercapita_cg19; assert_in_epsilon(-16.435788361191655, worksheet.costpercapita_cg19, 0.001); end
  def test_costpercapita_ch19; assert_in_epsilon(-6.777573768648761, worksheet.costpercapita_ch19, 0.001); end
  def test_costpercapita_ci19; assert_in_epsilon(-1.8563472404170223, worksheet.costpercapita_ci19, 0.001); end
  def test_costpercapita_cj19; assert_in_epsilon(-2.73164366917204, worksheet.costpercapita_cj19, 0.001); end
  def test_costpercapita_ck19; assert_in_epsilon(-4.62204259109901, worksheet.costpercapita_ck19, 0.001); end
  def test_costpercapita_cl19; assert_in_epsilon(-2.3927116944524904, worksheet.costpercapita_cl19, 0.001); end
  def test_costpercapita_cm19; assert_in_epsilon(-2.467959092596389, worksheet.costpercapita_cm19, 0.001); end
  def test_costpercapita_cn19; assert_in_epsilon(-4.451691459722197, worksheet.costpercapita_cn19, 0.001); end
  def test_costpercapita_cp19; assert_in_epsilon(-7.770470672135668, worksheet.costpercapita_cp19, 0.001); end
  def test_costpercapita_cq19; assert_in_epsilon(-157.55359527126262, worksheet.costpercapita_cq19, 0.001); end
  def test_costpercapita_cr19; assert_equal("ok", worksheet.costpercapita_cr19); end
  def test_costpercapita_a20; assert_equal("VI.c", worksheet.costpercapita_a20); end
  def test_costpercapita_b20; assert_equal("Marine algae", worksheet.costpercapita_b20); end
  def test_costpercapita_c20; assert_equal("Bioenergy", worksheet.costpercapita_c20); end
  def test_costpercapita_e20; assert_in_delta(0, (worksheet.costpercapita_e20||0), 0.001); end
  def test_costpercapita_f20; assert_in_delta(0, (worksheet.costpercapita_f20||0), 0.001); end
  def test_costpercapita_g20; assert_in_delta(0, (worksheet.costpercapita_g20||0), 0.001); end
  def test_costpercapita_h20; assert_in_delta(0, (worksheet.costpercapita_h20||0), 0.001); end
  def test_costpercapita_i20; assert_in_delta(0, (worksheet.costpercapita_i20||0), 0.001); end
  def test_costpercapita_j20; assert_in_delta(0, (worksheet.costpercapita_j20||0), 0.001); end
  def test_costpercapita_k20; assert_in_delta(0, (worksheet.costpercapita_k20||0), 0.001); end
  def test_costpercapita_l20; assert_in_delta(0, (worksheet.costpercapita_l20||0), 0.001); end
  def test_costpercapita_m20; assert_in_delta(0, (worksheet.costpercapita_m20||0), 0.001); end
  def test_costpercapita_o20; assert_in_delta(0, (worksheet.costpercapita_o20||0), 0.001); end
  def test_costpercapita_p20; assert_in_delta(0, (worksheet.costpercapita_p20||0), 0.001); end
  def test_costpercapita_q20; assert_in_delta(0, (worksheet.costpercapita_q20||0), 0.001); end
  def test_costpercapita_r20; assert_in_delta(0, (worksheet.costpercapita_r20||0), 0.001); end
  def test_costpercapita_s20; assert_in_delta(0, (worksheet.costpercapita_s20||0), 0.001); end
  def test_costpercapita_t20; assert_in_delta(0, (worksheet.costpercapita_t20||0), 0.001); end
  def test_costpercapita_u20; assert_in_delta(0, (worksheet.costpercapita_u20||0), 0.001); end
  def test_costpercapita_v20; assert_in_delta(0, (worksheet.costpercapita_v20||0), 0.001); end
  def test_costpercapita_w20; assert_in_delta(0, (worksheet.costpercapita_w20||0), 0.001); end
  def test_costpercapita_y20; assert_in_delta(0, (worksheet.costpercapita_y20||0), 0.001); end
  def test_costpercapita_z20; assert_in_delta(0, (worksheet.costpercapita_z20||0), 0.001); end
  def test_costpercapita_aa20; assert_in_delta(0, (worksheet.costpercapita_aa20||0), 0.001); end
  def test_costpercapita_ab20; assert_in_delta(0, (worksheet.costpercapita_ab20||0), 0.001); end
  def test_costpercapita_ac20; assert_in_delta(0, (worksheet.costpercapita_ac20||0), 0.001); end
  def test_costpercapita_ad20; assert_in_delta(0, (worksheet.costpercapita_ad20||0), 0.001); end
  def test_costpercapita_ae20; assert_in_delta(0, (worksheet.costpercapita_ae20||0), 0.001); end
  def test_costpercapita_af20; assert_in_delta(0, (worksheet.costpercapita_af20||0), 0.001); end
  def test_costpercapita_ag20; assert_in_delta(0, (worksheet.costpercapita_ag20||0), 0.001); end
  def test_costpercapita_ai20; assert_in_delta(0, (worksheet.costpercapita_ai20||0), 0.001); end
  def test_costpercapita_aj20; assert_in_delta(0, (worksheet.costpercapita_aj20||0), 0.001); end
  def test_costpercapita_ak20; assert_in_delta(0, (worksheet.costpercapita_ak20||0), 0.001); end
  def test_costpercapita_al20; assert_in_delta(0, (worksheet.costpercapita_al20||0), 0.001); end
  def test_costpercapita_am20; assert_in_delta(0, (worksheet.costpercapita_am20||0), 0.001); end
  def test_costpercapita_an20; assert_in_delta(0, (worksheet.costpercapita_an20||0), 0.001); end
  def test_costpercapita_ao20; assert_in_delta(0, (worksheet.costpercapita_ao20||0), 0.001); end
  def test_costpercapita_ap20; assert_in_delta(0, (worksheet.costpercapita_ap20||0), 0.001); end
  def test_costpercapita_aq20; assert_in_delta(0, (worksheet.costpercapita_aq20||0), 0.001); end
  def test_costpercapita_as20; assert_in_delta(0, (worksheet.costpercapita_as20||0), 0.001); end
  def test_costpercapita_at20; assert_in_delta(0, (worksheet.costpercapita_at20||0), 0.001); end
  def test_costpercapita_av20; assert_in_delta(0, (worksheet.costpercapita_av20||0), 0.001); end
  def test_costpercapita_aw20; assert_in_epsilon(5, worksheet.costpercapita_aw20, 0.001); end
  def test_costpercapita_ay20; assert_in_delta(0, (worksheet.costpercapita_ay20||0), 0.001); end
  def test_costpercapita_az20; assert_in_delta(0, (worksheet.costpercapita_az20||0), 0.001); end
  def test_costpercapita_ba20; assert_in_delta(0, (worksheet.costpercapita_ba20||0), 0.001); end
  def test_costpercapita_bb20; assert_in_delta(0, (worksheet.costpercapita_bb20||0), 0.001); end
  def test_costpercapita_bc20; assert_in_delta(0, (worksheet.costpercapita_bc20||0), 0.001); end
  def test_costpercapita_bd20; assert_in_delta(0, (worksheet.costpercapita_bd20||0), 0.001); end
  def test_costpercapita_be20; assert_in_delta(0, (worksheet.costpercapita_be20||0), 0.001); end
  def test_costpercapita_bf20; assert_in_delta(0, (worksheet.costpercapita_bf20||0), 0.001); end
  def test_costpercapita_bg20; assert_in_delta(0, (worksheet.costpercapita_bg20||0), 0.001); end
  def test_costpercapita_bi20; assert_in_delta(0, (worksheet.costpercapita_bi20||0), 0.001); end
  def test_costpercapita_bj20; assert_in_delta(0, (worksheet.costpercapita_bj20||0), 0.001); end
  def test_costpercapita_bk20; assert_in_delta(0, (worksheet.costpercapita_bk20||0), 0.001); end
  def test_costpercapita_bl20; assert_in_delta(0, (worksheet.costpercapita_bl20||0), 0.001); end
  def test_costpercapita_bm20; assert_in_delta(0, (worksheet.costpercapita_bm20||0), 0.001); end
  def test_costpercapita_bn20; assert_in_delta(0, (worksheet.costpercapita_bn20||0), 0.001); end
  def test_costpercapita_bo20; assert_in_delta(0, (worksheet.costpercapita_bo20||0), 0.001); end
  def test_costpercapita_bp20; assert_in_delta(0, (worksheet.costpercapita_bp20||0), 0.001); end
  def test_costpercapita_bq20; assert_in_delta(0, (worksheet.costpercapita_bq20||0), 0.001); end
  def test_costpercapita_bs20; assert_in_delta(0, (worksheet.costpercapita_bs20||0), 0.001); end
  def test_costpercapita_bt20; assert_in_delta(0, (worksheet.costpercapita_bt20||0), 0.001); end
  def test_costpercapita_bu20; assert_in_delta(0, (worksheet.costpercapita_bu20||0), 0.001); end
  def test_costpercapita_bv20; assert_in_delta(0, (worksheet.costpercapita_bv20||0), 0.001); end
  def test_costpercapita_bw20; assert_in_delta(0, (worksheet.costpercapita_bw20||0), 0.001); end
  def test_costpercapita_bx20; assert_in_delta(0, (worksheet.costpercapita_bx20||0), 0.001); end
  def test_costpercapita_by20; assert_in_delta(0, (worksheet.costpercapita_by20||0), 0.001); end
  def test_costpercapita_bz20; assert_in_delta(0, (worksheet.costpercapita_bz20||0), 0.001); end
  def test_costpercapita_ca20; assert_in_delta(0, (worksheet.costpercapita_ca20||0), 0.001); end
  def test_costpercapita_cc20; assert_in_delta(0, (worksheet.costpercapita_cc20||0), 0.001); end
  def test_costpercapita_cd20; assert_in_delta(0, (worksheet.costpercapita_cd20||0), 0.001); end
  def test_costpercapita_cf20; assert_in_delta(0, (worksheet.costpercapita_cf20||0), 0.001); end
  def test_costpercapita_cg20; assert_in_delta(0, (worksheet.costpercapita_cg20||0), 0.001); end
  def test_costpercapita_ch20; assert_in_delta(0, (worksheet.costpercapita_ch20||0), 0.001); end
  def test_costpercapita_ci20; assert_in_delta(0, (worksheet.costpercapita_ci20||0), 0.001); end
  def test_costpercapita_cj20; assert_in_delta(0, (worksheet.costpercapita_cj20||0), 0.001); end
  def test_costpercapita_ck20; assert_in_delta(0, (worksheet.costpercapita_ck20||0), 0.001); end
  def test_costpercapita_cl20; assert_in_delta(0, (worksheet.costpercapita_cl20||0), 0.001); end
  def test_costpercapita_cm20; assert_in_delta(0, (worksheet.costpercapita_cm20||0), 0.001); end
  def test_costpercapita_cn20; assert_in_delta(0, (worksheet.costpercapita_cn20||0), 0.001); end
  def test_costpercapita_cp20; assert_in_delta(0, (worksheet.costpercapita_cp20||0), 0.001); end
  def test_costpercapita_cq20; assert_in_delta(0, (worksheet.costpercapita_cq20||0), 0.001); end
  def test_costpercapita_cr20; assert_equal("ok", worksheet.costpercapita_cr20); end
  def test_costpercapita_a21; assert_equal("VII.a.Imports", worksheet.costpercapita_a21); end
  def test_costpercapita_b21; assert_equal("Electricity imports", worksheet.costpercapita_b21); end
  def test_costpercapita_c21; assert_equal("Electricity", worksheet.costpercapita_c21); end
  def test_costpercapita_e21; assert_in_delta(0, (worksheet.costpercapita_e21||0), 0.001); end
  def test_costpercapita_f21; assert_in_delta(0, (worksheet.costpercapita_f21||0), 0.001); end
  def test_costpercapita_g21; assert_in_delta(0, (worksheet.costpercapita_g21||0), 0.001); end
  def test_costpercapita_h21; assert_in_delta(0, (worksheet.costpercapita_h21||0), 0.001); end
  def test_costpercapita_i21; assert_in_delta(0, (worksheet.costpercapita_i21||0), 0.001); end
  def test_costpercapita_j21; assert_in_delta(0, (worksheet.costpercapita_j21||0), 0.001); end
  def test_costpercapita_k21; assert_in_delta(0, (worksheet.costpercapita_k21||0), 0.001); end
  def test_costpercapita_l21; assert_in_delta(0, (worksheet.costpercapita_l21||0), 0.001); end
  def test_costpercapita_m21; assert_in_delta(0, (worksheet.costpercapita_m21||0), 0.001); end
  def test_costpercapita_o21; assert_in_delta(0, (worksheet.costpercapita_o21||0), 0.001); end
  def test_costpercapita_p21; assert_in_delta(0, (worksheet.costpercapita_p21||0), 0.001); end
  def test_costpercapita_q21; assert_in_delta(0, (worksheet.costpercapita_q21||0), 0.001); end
  def test_costpercapita_r21; assert_in_delta(0, (worksheet.costpercapita_r21||0), 0.001); end
  def test_costpercapita_s21; assert_in_delta(0, (worksheet.costpercapita_s21||0), 0.001); end
  def test_costpercapita_t21; assert_in_delta(0, (worksheet.costpercapita_t21||0), 0.001); end
  def test_costpercapita_u21; assert_in_delta(0, (worksheet.costpercapita_u21||0), 0.001); end
  def test_costpercapita_v21; assert_in_delta(0, (worksheet.costpercapita_v21||0), 0.001); end
  def test_costpercapita_w21; assert_in_delta(0, (worksheet.costpercapita_w21||0), 0.001); end
  def test_costpercapita_y21; assert_in_delta(0, (worksheet.costpercapita_y21||0), 0.001); end
  def test_costpercapita_z21; assert_in_delta(0, (worksheet.costpercapita_z21||0), 0.001); end
  def test_costpercapita_aa21; assert_in_delta(0, (worksheet.costpercapita_aa21||0), 0.001); end
  def test_costpercapita_ab21; assert_in_delta(0, (worksheet.costpercapita_ab21||0), 0.001); end
  def test_costpercapita_ac21; assert_in_delta(0, (worksheet.costpercapita_ac21||0), 0.001); end
  def test_costpercapita_ad21; assert_in_delta(0, (worksheet.costpercapita_ad21||0), 0.001); end
  def test_costpercapita_ae21; assert_in_delta(0, (worksheet.costpercapita_ae21||0), 0.001); end
  def test_costpercapita_af21; assert_in_delta(0, (worksheet.costpercapita_af21||0), 0.001); end
  def test_costpercapita_ag21; assert_in_delta(0, (worksheet.costpercapita_ag21||0), 0.001); end
  def test_costpercapita_ai21; assert_in_delta(0, (worksheet.costpercapita_ai21||0), 0.001); end
  def test_costpercapita_aj21; assert_in_delta(0, (worksheet.costpercapita_aj21||0), 0.001); end
  def test_costpercapita_ak21; assert_in_delta(0, (worksheet.costpercapita_ak21||0), 0.001); end
  def test_costpercapita_al21; assert_in_delta(0, (worksheet.costpercapita_al21||0), 0.001); end
  def test_costpercapita_am21; assert_in_delta(0, (worksheet.costpercapita_am21||0), 0.001); end
  def test_costpercapita_an21; assert_in_delta(0, (worksheet.costpercapita_an21||0), 0.001); end
  def test_costpercapita_ao21; assert_in_delta(0, (worksheet.costpercapita_ao21||0), 0.001); end
  def test_costpercapita_ap21; assert_in_delta(0, (worksheet.costpercapita_ap21||0), 0.001); end
  def test_costpercapita_aq21; assert_in_delta(0, (worksheet.costpercapita_aq21||0), 0.001); end
  def test_costpercapita_as21; assert_in_delta(0, (worksheet.costpercapita_as21||0), 0.001); end
  def test_costpercapita_at21; assert_in_delta(0, (worksheet.costpercapita_at21||0), 0.001); end
  def test_costpercapita_av21; assert_in_delta(0, (worksheet.costpercapita_av21||0), 0.001); end
  def test_costpercapita_aw21; assert_in_epsilon(5, worksheet.costpercapita_aw21, 0.001); end
  def test_costpercapita_ay21; assert_in_delta(0, (worksheet.costpercapita_ay21||0), 0.001); end
  def test_costpercapita_az21; assert_in_delta(0, (worksheet.costpercapita_az21||0), 0.001); end
  def test_costpercapita_ba21; assert_in_delta(0, (worksheet.costpercapita_ba21||0), 0.001); end
  def test_costpercapita_bb21; assert_in_delta(0, (worksheet.costpercapita_bb21||0), 0.001); end
  def test_costpercapita_bc21; assert_in_delta(0, (worksheet.costpercapita_bc21||0), 0.001); end
  def test_costpercapita_bd21; assert_in_delta(0, (worksheet.costpercapita_bd21||0), 0.001); end
  def test_costpercapita_be21; assert_in_delta(0, (worksheet.costpercapita_be21||0), 0.001); end
  def test_costpercapita_bf21; assert_in_delta(0, (worksheet.costpercapita_bf21||0), 0.001); end
  def test_costpercapita_bg21; assert_in_delta(0, (worksheet.costpercapita_bg21||0), 0.001); end
  def test_costpercapita_bi21; assert_in_delta(0, (worksheet.costpercapita_bi21||0), 0.001); end
  def test_costpercapita_bj21; assert_in_delta(0, (worksheet.costpercapita_bj21||0), 0.001); end
  def test_costpercapita_bk21; assert_in_delta(0, (worksheet.costpercapita_bk21||0), 0.001); end
  def test_costpercapita_bl21; assert_in_delta(0, (worksheet.costpercapita_bl21||0), 0.001); end
  def test_costpercapita_bm21; assert_in_delta(0, (worksheet.costpercapita_bm21||0), 0.001); end
  def test_costpercapita_bn21; assert_in_delta(0, (worksheet.costpercapita_bn21||0), 0.001); end
  def test_costpercapita_bo21; assert_in_delta(0, (worksheet.costpercapita_bo21||0), 0.001); end
  def test_costpercapita_bp21; assert_in_delta(0, (worksheet.costpercapita_bp21||0), 0.001); end
  def test_costpercapita_bq21; assert_in_delta(0, (worksheet.costpercapita_bq21||0), 0.001); end
  def test_costpercapita_bs21; assert_in_delta(0, (worksheet.costpercapita_bs21||0), 0.001); end
  def test_costpercapita_bt21; assert_in_delta(0, (worksheet.costpercapita_bt21||0), 0.001); end
  def test_costpercapita_bu21; assert_in_delta(0, (worksheet.costpercapita_bu21||0), 0.001); end
  def test_costpercapita_bv21; assert_in_delta(0, (worksheet.costpercapita_bv21||0), 0.001); end
  def test_costpercapita_bw21; assert_in_delta(0, (worksheet.costpercapita_bw21||0), 0.001); end
  def test_costpercapita_bx21; assert_in_delta(0, (worksheet.costpercapita_bx21||0), 0.001); end
  def test_costpercapita_by21; assert_in_delta(0, (worksheet.costpercapita_by21||0), 0.001); end
  def test_costpercapita_bz21; assert_in_delta(0, (worksheet.costpercapita_bz21||0), 0.001); end
  def test_costpercapita_ca21; assert_in_delta(0, (worksheet.costpercapita_ca21||0), 0.001); end
  def test_costpercapita_cc21; assert_in_delta(0, (worksheet.costpercapita_cc21||0), 0.001); end
  def test_costpercapita_cd21; assert_in_delta(0, (worksheet.costpercapita_cd21||0), 0.001); end
  def test_costpercapita_cf21; assert_in_delta(0, (worksheet.costpercapita_cf21||0), 0.001); end
  def test_costpercapita_cg21; assert_in_delta(0, (worksheet.costpercapita_cg21||0), 0.001); end
  def test_costpercapita_ch21; assert_in_delta(0, (worksheet.costpercapita_ch21||0), 0.001); end
  def test_costpercapita_ci21; assert_in_delta(0, (worksheet.costpercapita_ci21||0), 0.001); end
  def test_costpercapita_cj21; assert_in_delta(0, (worksheet.costpercapita_cj21||0), 0.001); end
  def test_costpercapita_ck21; assert_in_delta(0, (worksheet.costpercapita_ck21||0), 0.001); end
  def test_costpercapita_cl21; assert_in_delta(0, (worksheet.costpercapita_cl21||0), 0.001); end
  def test_costpercapita_cm21; assert_in_delta(0, (worksheet.costpercapita_cm21||0), 0.001); end
  def test_costpercapita_cn21; assert_in_delta(0, (worksheet.costpercapita_cn21||0), 0.001); end
  def test_costpercapita_cp21; assert_in_delta(0, (worksheet.costpercapita_cp21||0), 0.001); end
  def test_costpercapita_cq21; assert_in_delta(0, (worksheet.costpercapita_cq21||0), 0.001); end
  def test_costpercapita_cr21; assert_equal("ok", worksheet.costpercapita_cr21); end
  def test_costpercapita_a22; assert_equal("VII.a.Exports", worksheet.costpercapita_a22); end
  def test_costpercapita_b22; assert_equal("Electricity Exports", worksheet.costpercapita_b22); end
  def test_costpercapita_c22; assert_equal("Electricity", worksheet.costpercapita_c22); end
  def test_costpercapita_e22; assert_in_delta(0, (worksheet.costpercapita_e22||0), 0.001); end
  def test_costpercapita_f22; assert_in_delta(0, (worksheet.costpercapita_f22||0), 0.001); end
  def test_costpercapita_g22; assert_in_delta(0, (worksheet.costpercapita_g22||0), 0.001); end
  def test_costpercapita_h22; assert_in_delta(0, (worksheet.costpercapita_h22||0), 0.001); end
  def test_costpercapita_i22; assert_in_delta(0, (worksheet.costpercapita_i22||0), 0.001); end
  def test_costpercapita_j22; assert_in_delta(0, (worksheet.costpercapita_j22||0), 0.001); end
  def test_costpercapita_k22; assert_in_delta(0, (worksheet.costpercapita_k22||0), 0.001); end
  def test_costpercapita_l22; assert_in_delta(0, (worksheet.costpercapita_l22||0), 0.001); end
  def test_costpercapita_m22; assert_in_delta(0, (worksheet.costpercapita_m22||0), 0.001); end
  def test_costpercapita_o22; assert_in_delta(0, (worksheet.costpercapita_o22||0), 0.001); end
  def test_costpercapita_p22; assert_in_delta(0, (worksheet.costpercapita_p22||0), 0.001); end
  def test_costpercapita_q22; assert_in_delta(0, (worksheet.costpercapita_q22||0), 0.001); end
  def test_costpercapita_r22; assert_in_delta(0, (worksheet.costpercapita_r22||0), 0.001); end
  def test_costpercapita_s22; assert_in_delta(0, (worksheet.costpercapita_s22||0), 0.001); end
  def test_costpercapita_t22; assert_in_delta(0, (worksheet.costpercapita_t22||0), 0.001); end
  def test_costpercapita_u22; assert_in_delta(0, (worksheet.costpercapita_u22||0), 0.001); end
  def test_costpercapita_v22; assert_in_delta(0, (worksheet.costpercapita_v22||0), 0.001); end
  def test_costpercapita_w22; assert_in_delta(0, (worksheet.costpercapita_w22||0), 0.001); end
  def test_costpercapita_y22; assert_in_delta(-3.654209167126382e-14, worksheet.costpercapita_y22, 0.001); end
  def test_costpercapita_z22; assert_in_delta(0, (worksheet.costpercapita_z22||0), 0.001); end
  def test_costpercapita_aa22; assert_in_delta(0, (worksheet.costpercapita_aa22||0), 0.001); end
  def test_costpercapita_ab22; assert_in_delta(0, (worksheet.costpercapita_ab22||0), 0.001); end
  def test_costpercapita_ac22; assert_in_delta(0, (worksheet.costpercapita_ac22||0), 0.001); end
  def test_costpercapita_ad22; assert_in_delta(0, (worksheet.costpercapita_ad22||0), 0.001); end
  def test_costpercapita_ae22; assert_in_delta(0, (worksheet.costpercapita_ae22||0), 0.001); end
  def test_costpercapita_af22; assert_in_delta(0, (worksheet.costpercapita_af22||0), 0.001); end
  def test_costpercapita_ag22; assert_in_delta(0, (worksheet.costpercapita_ag22||0), 0.001); end
  def test_costpercapita_ai22; assert_in_delta(-3.654209167126382e-14, worksheet.costpercapita_ai22, 0.001); end
  def test_costpercapita_aj22; assert_in_delta(0, (worksheet.costpercapita_aj22||0), 0.001); end
  def test_costpercapita_ak22; assert_in_delta(0, (worksheet.costpercapita_ak22||0), 0.001); end
  def test_costpercapita_al22; assert_in_delta(0, (worksheet.costpercapita_al22||0), 0.001); end
  def test_costpercapita_am22; assert_in_delta(0, (worksheet.costpercapita_am22||0), 0.001); end
  def test_costpercapita_an22; assert_in_delta(0, (worksheet.costpercapita_an22||0), 0.001); end
  def test_costpercapita_ao22; assert_in_delta(0, (worksheet.costpercapita_ao22||0), 0.001); end
  def test_costpercapita_ap22; assert_in_delta(0, (worksheet.costpercapita_ap22||0), 0.001); end
  def test_costpercapita_aq22; assert_in_delta(0, (worksheet.costpercapita_aq22||0), 0.001); end
  def test_costpercapita_as22; assert_in_delta(-4.060232407918202e-15, worksheet.costpercapita_as22, 0.001); end
  def test_costpercapita_at22; assert_in_delta(-3.654209167126382e-14, worksheet.costpercapita_at22, 0.001); end
  def test_costpercapita_av22; assert_in_delta(0, (worksheet.costpercapita_av22||0), 0.001); end
  def test_costpercapita_aw22; assert_in_epsilon(5, worksheet.costpercapita_aw22, 0.001); end
  def test_costpercapita_ay22; assert_in_delta(0, (worksheet.costpercapita_ay22||0), 0.001); end
  def test_costpercapita_az22; assert_in_delta(0, (worksheet.costpercapita_az22||0), 0.001); end
  def test_costpercapita_ba22; assert_in_delta(0, (worksheet.costpercapita_ba22||0), 0.001); end
  def test_costpercapita_bb22; assert_in_delta(0, (worksheet.costpercapita_bb22||0), 0.001); end
  def test_costpercapita_bc22; assert_in_delta(0, (worksheet.costpercapita_bc22||0), 0.001); end
  def test_costpercapita_bd22; assert_in_delta(0, (worksheet.costpercapita_bd22||0), 0.001); end
  def test_costpercapita_be22; assert_in_delta(0, (worksheet.costpercapita_be22||0), 0.001); end
  def test_costpercapita_bf22; assert_in_delta(0, (worksheet.costpercapita_bf22||0), 0.001); end
  def test_costpercapita_bg22; assert_in_delta(0, (worksheet.costpercapita_bg22||0), 0.001); end
  def test_costpercapita_bi22; assert_in_delta(0, (worksheet.costpercapita_bi22||0), 0.001); end
  def test_costpercapita_bj22; assert_in_delta(0, (worksheet.costpercapita_bj22||0), 0.001); end
  def test_costpercapita_bk22; assert_in_delta(0, (worksheet.costpercapita_bk22||0), 0.001); end
  def test_costpercapita_bl22; assert_in_delta(0, (worksheet.costpercapita_bl22||0), 0.001); end
  def test_costpercapita_bm22; assert_in_delta(0, (worksheet.costpercapita_bm22||0), 0.001); end
  def test_costpercapita_bn22; assert_in_delta(0, (worksheet.costpercapita_bn22||0), 0.001); end
  def test_costpercapita_bo22; assert_in_delta(0, (worksheet.costpercapita_bo22||0), 0.001); end
  def test_costpercapita_bp22; assert_in_delta(0, (worksheet.costpercapita_bp22||0), 0.001); end
  def test_costpercapita_bq22; assert_in_delta(0, (worksheet.costpercapita_bq22||0), 0.001); end
  def test_costpercapita_bs22; assert_in_delta(-3.654209167126382e-14, worksheet.costpercapita_bs22, 0.001); end
  def test_costpercapita_bt22; assert_in_delta(0, (worksheet.costpercapita_bt22||0), 0.001); end
  def test_costpercapita_bu22; assert_in_delta(0, (worksheet.costpercapita_bu22||0), 0.001); end
  def test_costpercapita_bv22; assert_in_delta(0, (worksheet.costpercapita_bv22||0), 0.001); end
  def test_costpercapita_bw22; assert_in_delta(0, (worksheet.costpercapita_bw22||0), 0.001); end
  def test_costpercapita_bx22; assert_in_delta(0, (worksheet.costpercapita_bx22||0), 0.001); end
  def test_costpercapita_by22; assert_in_delta(0, (worksheet.costpercapita_by22||0), 0.001); end
  def test_costpercapita_bz22; assert_in_delta(0, (worksheet.costpercapita_bz22||0), 0.001); end
  def test_costpercapita_ca22; assert_in_delta(0, (worksheet.costpercapita_ca22||0), 0.001); end
  def test_costpercapita_cc22; assert_in_delta(-4.060232407918202e-15, worksheet.costpercapita_cc22, 0.001); end
  def test_costpercapita_cd22; assert_in_delta(-3.654209167126382e-14, worksheet.costpercapita_cd22, 0.001); end
  def test_costpercapita_cf22; assert_in_delta(0, (worksheet.costpercapita_cf22||0), 0.001); end
  def test_costpercapita_cg22; assert_in_delta(0, (worksheet.costpercapita_cg22||0), 0.001); end
  def test_costpercapita_ch22; assert_in_delta(0, (worksheet.costpercapita_ch22||0), 0.001); end
  def test_costpercapita_ci22; assert_in_delta(0, (worksheet.costpercapita_ci22||0), 0.001); end
  def test_costpercapita_cj22; assert_in_delta(0, (worksheet.costpercapita_cj22||0), 0.001); end
  def test_costpercapita_ck22; assert_in_delta(0, (worksheet.costpercapita_ck22||0), 0.001); end
  def test_costpercapita_cl22; assert_in_delta(0, (worksheet.costpercapita_cl22||0), 0.001); end
  def test_costpercapita_cm22; assert_in_delta(0, (worksheet.costpercapita_cm22||0), 0.001); end
  def test_costpercapita_cn22; assert_in_delta(0, (worksheet.costpercapita_cn22||0), 0.001); end
  def test_costpercapita_cp22; assert_in_delta(0, (worksheet.costpercapita_cp22||0), 0.001); end
  def test_costpercapita_cq22; assert_in_delta(0, (worksheet.costpercapita_cq22||0), 0.001); end
  def test_costpercapita_cr22; assert_equal("ok", worksheet.costpercapita_cr22); end
  def test_costpercapita_a23; assert_equal("VII.b", worksheet.costpercapita_a23); end
  def test_costpercapita_b23; assert_equal("Electricity grid distribution", worksheet.costpercapita_b23); end
  def test_costpercapita_c23; assert_equal("Electricity", worksheet.costpercapita_c23); end
  def test_costpercapita_e23; assert_in_epsilon(11.175057630825671, worksheet.costpercapita_e23, 0.001); end
  def test_costpercapita_f23; assert_in_epsilon(9.977646972327822, worksheet.costpercapita_f23, 0.001); end
  def test_costpercapita_g23; assert_in_epsilon(12.896731738807171, worksheet.costpercapita_g23, 0.001); end
  def test_costpercapita_h23; assert_in_epsilon(13.320205547455865, worksheet.costpercapita_h23, 0.001); end
  def test_costpercapita_i23; assert_in_epsilon(11.455102779638214, worksheet.costpercapita_i23, 0.001); end
  def test_costpercapita_j23; assert_in_epsilon(11.714839330983573, worksheet.costpercapita_j23, 0.001); end
  def test_costpercapita_k23; assert_in_epsilon(11.976714422383068, worksheet.costpercapita_k23, 0.001); end
  def test_costpercapita_l23; assert_in_epsilon(12.239820382811825, worksheet.costpercapita_l23, 0.001); end
  def test_costpercapita_m23; assert_in_epsilon(13.664898061835956, worksheet.costpercapita_m23, 0.001); end
  def test_costpercapita_o23; assert_in_epsilon(6.1490680193200955, worksheet.costpercapita_o23, 0.001); end
  def test_costpercapita_p23; assert_in_epsilon(5.786541313623712, worksheet.costpercapita_p23, 0.001); end
  def test_costpercapita_q23; assert_in_epsilon(5.912816412860669, worksheet.costpercapita_q23, 0.001); end
  def test_costpercapita_r23; assert_in_epsilon(6.068605232544829, worksheet.costpercapita_r23, 0.001); end
  def test_costpercapita_s23; assert_in_epsilon(5.950392450483419, worksheet.costpercapita_s23, 0.001); end
  def test_costpercapita_t23; assert_in_epsilon(5.915494491070593, worksheet.costpercapita_t23, 0.001); end
  def test_costpercapita_u23; assert_in_epsilon(5.934651972444307, worksheet.costpercapita_u23, 0.001); end
  def test_costpercapita_v23; assert_in_epsilon(5.98983667257408, worksheet.costpercapita_v23, 0.001); end
  def test_costpercapita_w23; assert_in_epsilon(6.225682644613283, worksheet.costpercapita_w23, 0.001); end
  def test_costpercapita_y23; assert_in_delta(0, (worksheet.costpercapita_y23||0), 0.001); end
  def test_costpercapita_z23; assert_in_delta(0, (worksheet.costpercapita_z23||0), 0.001); end
  def test_costpercapita_aa23; assert_in_delta(0, (worksheet.costpercapita_aa23||0), 0.001); end
  def test_costpercapita_ab23; assert_in_delta(0, (worksheet.costpercapita_ab23||0), 0.001); end
  def test_costpercapita_ac23; assert_in_delta(0, (worksheet.costpercapita_ac23||0), 0.001); end
  def test_costpercapita_ad23; assert_in_delta(0, (worksheet.costpercapita_ad23||0), 0.001); end
  def test_costpercapita_ae23; assert_in_delta(0, (worksheet.costpercapita_ae23||0), 0.001); end
  def test_costpercapita_af23; assert_in_delta(0, (worksheet.costpercapita_af23||0), 0.001); end
  def test_costpercapita_ag23; assert_in_delta(0, (worksheet.costpercapita_ag23||0), 0.001); end
  def test_costpercapita_ai23; assert_in_epsilon(17.324125650145767, worksheet.costpercapita_ai23, 0.001); end
  def test_costpercapita_aj23; assert_in_epsilon(15.764188285951533, worksheet.costpercapita_aj23, 0.001); end
  def test_costpercapita_ak23; assert_in_epsilon(18.80954815166784, worksheet.costpercapita_ak23, 0.001); end
  def test_costpercapita_al23; assert_in_epsilon(19.388810780000696, worksheet.costpercapita_al23, 0.001); end
  def test_costpercapita_am23; assert_in_epsilon(17.405495230121634, worksheet.costpercapita_am23, 0.001); end
  def test_costpercapita_an23; assert_in_epsilon(17.630333822054165, worksheet.costpercapita_an23, 0.001); end
  def test_costpercapita_ao23; assert_in_epsilon(17.911366394827375, worksheet.costpercapita_ao23, 0.001); end
  def test_costpercapita_ap23; assert_in_epsilon(18.229657055385903, worksheet.costpercapita_ap23, 0.001); end
  def test_costpercapita_aq23; assert_in_epsilon(19.89058070644924, worksheet.costpercapita_aq23, 0.001); end
  def test_costpercapita_as23; assert_in_epsilon(18.039345119622684, worksheet.costpercapita_as23, 0.001); end
  def test_costpercapita_at23; assert_in_epsilon(375.5496950755837, worksheet.costpercapita_at23, 0.001); end
  def test_costpercapita_av23; assert_in_delta(0, (worksheet.costpercapita_av23||0), 0.001); end
  def test_costpercapita_aw23; assert_in_epsilon(20, worksheet.costpercapita_aw23, 0.001); end
  def test_costpercapita_ay23; assert_in_epsilon(1.6762586446238508, worksheet.costpercapita_ay23, 0.001); end
  def test_costpercapita_az23; assert_in_epsilon(2.4944117430819555, worksheet.costpercapita_az23, 0.001); end
  def test_costpercapita_ba23; assert_in_epsilon(3.2241829347017923, worksheet.costpercapita_ba23, 0.001); end
  def test_costpercapita_bb23; assert_in_epsilon(3.3300513868639663, worksheet.costpercapita_bb23, 0.001); end
  def test_costpercapita_bc23; assert_in_epsilon(2.8637756949095534, worksheet.costpercapita_bc23, 0.001); end
  def test_costpercapita_bd23; assert_in_epsilon(2.928709832745893, worksheet.costpercapita_bd23, 0.001); end
  def test_costpercapita_be23; assert_in_epsilon(2.994178605595767, worksheet.costpercapita_be23, 0.001); end
  def test_costpercapita_bf23; assert_in_epsilon(3.0599550957029567, worksheet.costpercapita_bf23, 0.001); end
  def test_costpercapita_bg23; assert_in_epsilon(3.416224515458989, worksheet.costpercapita_bg23, 0.001); end
  def test_costpercapita_bi23; assert_in_epsilon(1.6762586446238508, worksheet.costpercapita_bi23, 0.001); end
  def test_costpercapita_bj23; assert_in_epsilon(4.115395642816674, worksheet.costpercapita_bj23, 0.001); end
  def test_costpercapita_bk23; assert_in_epsilon(7.204848135814115, worksheet.costpercapita_bk23, 0.001); end
  def test_costpercapita_bl23; assert_in_epsilon(10.311812389334404, worksheet.costpercapita_bl23, 0.001); end
  def test_costpercapita_bm23; assert_in_epsilon(11.416009389871233, worksheet.costpercapita_bm23, 0.001); end
  def test_costpercapita_bn23; assert_in_epsilon(11.855210210900125, worksheet.costpercapita_bn23, 0.001); end
  def test_costpercapita_bo23; assert_in_epsilon(11.692436428558647, worksheet.costpercapita_bo23, 0.001); end
  def test_costpercapita_bp23; assert_in_epsilon(14.167663301234985, worksheet.costpercapita_bp23, 0.001); end
  def test_costpercapita_bq23; assert_in_epsilon(12.055417601730277, worksheet.costpercapita_bq23, 0.001); end
  def test_costpercapita_bs23; assert_in_epsilon(7.8253266639439465, worksheet.costpercapita_bs23, 0.001); end
  def test_costpercapita_bt23; assert_in_epsilon(9.901936956440386, worksheet.costpercapita_bt23, 0.001); end
  def test_costpercapita_bu23; assert_in_epsilon(13.117664548674783, worksheet.costpercapita_bu23, 0.001); end
  def test_costpercapita_bv23; assert_in_epsilon(16.380417621879232, worksheet.costpercapita_bv23, 0.001); end
  def test_costpercapita_bw23; assert_in_epsilon(17.36640184035465, worksheet.costpercapita_bw23, 0.001); end
  def test_costpercapita_bx23; assert_in_epsilon(17.77070470197072, worksheet.costpercapita_bx23, 0.001); end
  def test_costpercapita_by23; assert_in_epsilon(17.627088401002954, worksheet.costpercapita_by23, 0.001); end
  def test_costpercapita_bz23; assert_in_epsilon(20.157499973809067, worksheet.costpercapita_bz23, 0.001); end
  def test_costpercapita_ca23; assert_in_epsilon(18.28110024634356, worksheet.costpercapita_ca23, 0.001); end
  def test_costpercapita_cc23; assert_in_epsilon(15.380904550491032, worksheet.costpercapita_cc23, 0.001); end
  def test_costpercapita_cd23; assert_in_epsilon(312.7391271206207, worksheet.costpercapita_cd23, 0.001); end
  def test_costpercapita_cf23; assert_in_epsilon(-9.498798986201821, worksheet.costpercapita_cf23, 0.001); end
  def test_costpercapita_cg23; assert_in_epsilon(-5.862251329511149, worksheet.costpercapita_cg23, 0.001); end
  def test_costpercapita_ch23; assert_in_epsilon(-5.691883602993057, worksheet.costpercapita_ch23, 0.001); end
  def test_costpercapita_ci23; assert_in_epsilon(-3.008393158121461, worksheet.costpercapita_ci23, 0.001); end
  def test_costpercapita_cj23; assert_in_delta(-0.03909338976698176, worksheet.costpercapita_cj23, 0.001); end
  def test_costpercapita_ck23; assert_in_delta(0.14037087991655245, worksheet.costpercapita_ck23, 0.001); end
  def test_costpercapita_cl23; assert_in_delta(-0.2842779938244215, worksheet.costpercapita_cl23, 0.001); end
  def test_costpercapita_cm23; assert_in_epsilon(1.9278429184231594, worksheet.costpercapita_cm23, 0.001); end
  def test_costpercapita_cn23; assert_in_epsilon(-1.6094804601056796, worksheet.costpercapita_cn23, 0.001); end
  def test_costpercapita_cp23; assert_in_epsilon(-2.658440569131651, worksheet.costpercapita_cp23, 0.001); end
  def test_costpercapita_cq23; assert_in_epsilon(-62.81056795496295, worksheet.costpercapita_cq23, 0.001); end
  def test_costpercapita_cr23; assert_equal("ok", worksheet.costpercapita_cr23); end
  def test_costpercapita_a24; assert_equal("VII.c", worksheet.costpercapita_a24); end
  def test_costpercapita_b24; assert_equal("Storage, demand shifting, backup", worksheet.costpercapita_b24); end
  def test_costpercapita_c24; assert_equal("Electricity", worksheet.costpercapita_c24); end
  def test_costpercapita_e24; assert_in_delta(0, (worksheet.costpercapita_e24||0), 0.001); end
  def test_costpercapita_f24; assert_in_epsilon(1.2168937300226612, worksheet.costpercapita_f24, 0.001); end
  def test_costpercapita_g24; assert_in_delta(0, (worksheet.costpercapita_g24||0), 0.001); end
  def test_costpercapita_h24; assert_in_delta(0, (worksheet.costpercapita_h24||0), 0.001); end
  def test_costpercapita_i24; assert_in_delta(0, (worksheet.costpercapita_i24||0), 0.001); end
  def test_costpercapita_j24; assert_in_delta(0, (worksheet.costpercapita_j24||0), 0.001); end
  def test_costpercapita_k24; assert_in_delta(0, (worksheet.costpercapita_k24||0), 0.001); end
  def test_costpercapita_l24; assert_in_delta(0, (worksheet.costpercapita_l24||0), 0.001); end
  def test_costpercapita_m24; assert_in_delta(0, (worksheet.costpercapita_m24||0), 0.001); end
  def test_costpercapita_o24; assert_in_delta(0.5538687646229019, worksheet.costpercapita_o24, 0.001); end
  def test_costpercapita_p24; assert_in_delta(0.5401038014361748, worksheet.costpercapita_p24, 0.001); end
  def test_costpercapita_q24; assert_in_delta(0.5224218019276439, worksheet.costpercapita_q24, 0.001); end
  def test_costpercapita_r24; assert_in_delta(0.5062458076538787, worksheet.costpercapita_r24, 0.001); end
  def test_costpercapita_s24; assert_in_delta(0.4924150946843669, worksheet.costpercapita_s24, 0.001); end
  def test_costpercapita_t24; assert_in_delta(0.4808159144987674, worksheet.costpercapita_t24, 0.001); end
  def test_costpercapita_u24; assert_in_delta(0.47056184858644284, worksheet.costpercapita_u24, 0.001); end
  def test_costpercapita_v24; assert_in_delta(0.46117511595094146, worksheet.costpercapita_v24, 0.001); end
  def test_costpercapita_w24; assert_in_delta(0.45256878804356915, worksheet.costpercapita_w24, 0.001); end
  def test_costpercapita_y24; assert_in_delta(0, (worksheet.costpercapita_y24||0), 0.001); end
  def test_costpercapita_z24; assert_in_delta(0, (worksheet.costpercapita_z24||0), 0.001); end
  def test_costpercapita_aa24; assert_in_delta(0, (worksheet.costpercapita_aa24||0), 0.001); end
  def test_costpercapita_ab24; assert_in_delta(0, (worksheet.costpercapita_ab24||0), 0.001); end
  def test_costpercapita_ac24; assert_in_delta(0, (worksheet.costpercapita_ac24||0), 0.001); end
  def test_costpercapita_ad24; assert_in_delta(0, (worksheet.costpercapita_ad24||0), 0.001); end
  def test_costpercapita_ae24; assert_in_delta(0, (worksheet.costpercapita_ae24||0), 0.001); end
  def test_costpercapita_af24; assert_in_delta(0, (worksheet.costpercapita_af24||0), 0.001); end
  def test_costpercapita_ag24; assert_in_delta(0, (worksheet.costpercapita_ag24||0), 0.001); end
  def test_costpercapita_ai24; assert_in_delta(0.5538687646229019, worksheet.costpercapita_ai24, 0.001); end
  def test_costpercapita_aj24; assert_in_epsilon(1.756997531458836, worksheet.costpercapita_aj24, 0.001); end
  def test_costpercapita_ak24; assert_in_delta(0.5224218019276439, worksheet.costpercapita_ak24, 0.001); end
  def test_costpercapita_al24; assert_in_delta(0.5062458076538787, worksheet.costpercapita_al24, 0.001); end
  def test_costpercapita_am24; assert_in_delta(0.4924150946843669, worksheet.costpercapita_am24, 0.001); end
  def test_costpercapita_an24; assert_in_delta(0.4808159144987674, worksheet.costpercapita_an24, 0.001); end
  def test_costpercapita_ao24; assert_in_delta(0.47056184858644284, worksheet.costpercapita_ao24, 0.001); end
  def test_costpercapita_ap24; assert_in_delta(0.46117511595094146, worksheet.costpercapita_ap24, 0.001); end
  def test_costpercapita_aq24; assert_in_delta(0.45256878804356915, worksheet.costpercapita_aq24, 0.001); end
  def test_costpercapita_as24; assert_in_delta(0.633007851936372, worksheet.costpercapita_as24, 0.001); end
  def test_costpercapita_at24; assert_in_epsilon(15.714674544942126, worksheet.costpercapita_at24, 0.001); end
  def test_costpercapita_av24; assert_in_delta(0, (worksheet.costpercapita_av24||0), 0.001); end
  def test_costpercapita_aw24; assert_in_epsilon(15, worksheet.costpercapita_aw24, 0.001); end
  def test_costpercapita_ay24; assert_in_delta(0, (worksheet.costpercapita_ay24||0), 0.001); end
  def test_costpercapita_az24; assert_in_delta(0.4056312433408871, worksheet.costpercapita_az24, 0.001); end
  def test_costpercapita_ba24; assert_in_delta(0, (worksheet.costpercapita_ba24||0), 0.001); end
  def test_costpercapita_bb24; assert_in_delta(0, (worksheet.costpercapita_bb24||0), 0.001); end
  def test_costpercapita_bc24; assert_in_delta(0, (worksheet.costpercapita_bc24||0), 0.001); end
  def test_costpercapita_bd24; assert_in_delta(0, (worksheet.costpercapita_bd24||0), 0.001); end
  def test_costpercapita_be24; assert_in_delta(0, (worksheet.costpercapita_be24||0), 0.001); end
  def test_costpercapita_bf24; assert_in_delta(0, (worksheet.costpercapita_bf24||0), 0.001); end
  def test_costpercapita_bg24; assert_in_delta(0, (worksheet.costpercapita_bg24||0), 0.001); end
  def test_costpercapita_bi24; assert_in_delta(0, (worksheet.costpercapita_bi24||0), 0.001); end
  def test_costpercapita_bj24; assert_in_delta(0.4056312433408871, worksheet.costpercapita_bj24, 0.001); end
  def test_costpercapita_bk24; assert_in_delta(0.39235162667030177, worksheet.costpercapita_bk24, 0.001); end
  def test_costpercapita_bl24; assert_in_delta(0.38020305698407675, worksheet.costpercapita_bl24, 0.001); end
  def test_costpercapita_bm24; assert_in_delta(0, (worksheet.costpercapita_bm24||0), 0.001); end
  def test_costpercapita_bn24; assert_in_delta(0, (worksheet.costpercapita_bn24||0), 0.001); end
  def test_costpercapita_bo24; assert_in_delta(0, (worksheet.costpercapita_bo24||0), 0.001); end
  def test_costpercapita_bp24; assert_in_delta(0, (worksheet.costpercapita_bp24||0), 0.001); end
  def test_costpercapita_bq24; assert_in_delta(0, (worksheet.costpercapita_bq24||0), 0.001); end
  def test_costpercapita_bs24; assert_in_delta(0.5538687646229019, worksheet.costpercapita_bs24, 0.001); end
  def test_costpercapita_bt24; assert_in_delta(0.9457350447770619, worksheet.costpercapita_bt24, 0.001); end
  def test_costpercapita_bu24; assert_in_delta(0.9147734285979456, worksheet.costpercapita_bu24, 0.001); end
  def test_costpercapita_bv24; assert_in_delta(0.8864488646379555, worksheet.costpercapita_bv24, 0.001); end
  def test_costpercapita_bw24; assert_in_delta(0.4924150946843669, worksheet.costpercapita_bw24, 0.001); end
  def test_costpercapita_bx24; assert_in_delta(0.4808159144987674, worksheet.costpercapita_bx24, 0.001); end
  def test_costpercapita_by24; assert_in_delta(0.47056184858644284, worksheet.costpercapita_by24, 0.001); end
  def test_costpercapita_bz24; assert_in_delta(0.46117511595094146, worksheet.costpercapita_bz24, 0.001); end
  def test_costpercapita_ca24; assert_in_delta(0.45256878804356915, worksheet.costpercapita_ca24, 0.001); end
  def test_costpercapita_cc24; assert_in_delta(0.6287069849333281, worksheet.costpercapita_cc24, 0.001); end
  def test_costpercapita_cd24; assert_in_epsilon(14.824793757729639, worksheet.costpercapita_cd24, 0.001); end
  def test_costpercapita_cf24; assert_in_delta(0, (worksheet.costpercapita_cf24||0), 0.001); end
  def test_costpercapita_cg24; assert_in_delta(-0.8112624866817741, worksheet.costpercapita_cg24, 0.001); end
  def test_costpercapita_ch24; assert_in_delta(0.39235162667030177, worksheet.costpercapita_ch24, 0.001); end
  def test_costpercapita_ci24; assert_in_delta(0.38020305698407675, worksheet.costpercapita_ci24, 0.001); end
  def test_costpercapita_cj24; assert_in_delta(0, (worksheet.costpercapita_cj24||0), 0.001); end
  def test_costpercapita_ck24; assert_in_delta(0, (worksheet.costpercapita_ck24||0), 0.001); end
  def test_costpercapita_cl24; assert_in_delta(0, (worksheet.costpercapita_cl24||0), 0.001); end
  def test_costpercapita_cm24; assert_in_delta(0, (worksheet.costpercapita_cm24||0), 0.001); end
  def test_costpercapita_cn24; assert_in_delta(0, (worksheet.costpercapita_cn24||0), 0.001); end
  def test_costpercapita_cp24; assert_in_delta(-0.004300867003043958, worksheet.costpercapita_cp24, 0.001); end
  def test_costpercapita_cq24; assert_in_delta(-0.8898807872124869, worksheet.costpercapita_cq24, 0.001); end
  def test_costpercapita_cr24; assert_equal("ok", worksheet.costpercapita_cr24); end
  def test_costpercapita_a25; assert_equal("VIII.a", worksheet.costpercapita_a25); end
  def test_costpercapita_b25; assert_equal("H2 Production", worksheet.costpercapita_b25); end
  def test_costpercapita_c25; assert_equal("Transport", worksheet.costpercapita_c25); end
  def test_costpercapita_e25; assert_in_delta(0, (worksheet.costpercapita_e25||0), 0.001); end
  def test_costpercapita_f25; assert_in_delta(0, (worksheet.costpercapita_f25||0), 0.001); end
  def test_costpercapita_g25; assert_in_delta(0, (worksheet.costpercapita_g25||0), 0.001); end
  def test_costpercapita_h25; assert_in_delta(0, (worksheet.costpercapita_h25||0), 0.001); end
  def test_costpercapita_i25; assert_in_delta(0, (worksheet.costpercapita_i25||0), 0.001); end
  def test_costpercapita_j25; assert_in_delta(0, (worksheet.costpercapita_j25||0), 0.001); end
  def test_costpercapita_k25; assert_in_delta(0, (worksheet.costpercapita_k25||0), 0.001); end
  def test_costpercapita_l25; assert_in_delta(0, (worksheet.costpercapita_l25||0), 0.001); end
  def test_costpercapita_m25; assert_in_delta(0, (worksheet.costpercapita_m25||0), 0.001); end
  def test_costpercapita_o25; assert_in_delta(0, (worksheet.costpercapita_o25||0), 0.001); end
  def test_costpercapita_p25; assert_in_delta(0, (worksheet.costpercapita_p25||0), 0.001); end
  def test_costpercapita_q25; assert_in_delta(0, (worksheet.costpercapita_q25||0), 0.001); end
  def test_costpercapita_r25; assert_in_delta(0, (worksheet.costpercapita_r25||0), 0.001); end
  def test_costpercapita_s25; assert_in_delta(0, (worksheet.costpercapita_s25||0), 0.001); end
  def test_costpercapita_t25; assert_in_delta(0, (worksheet.costpercapita_t25||0), 0.001); end
  def test_costpercapita_u25; assert_in_delta(0, (worksheet.costpercapita_u25||0), 0.001); end
  def test_costpercapita_v25; assert_in_delta(0, (worksheet.costpercapita_v25||0), 0.001); end
  def test_costpercapita_w25; assert_in_delta(0, (worksheet.costpercapita_w25||0), 0.001); end
  def test_costpercapita_y25; assert_in_delta(0, (worksheet.costpercapita_y25||0), 0.001); end
  def test_costpercapita_z25; assert_in_delta(0, (worksheet.costpercapita_z25||0), 0.001); end
  def test_costpercapita_aa25; assert_in_delta(0, (worksheet.costpercapita_aa25||0), 0.001); end
  def test_costpercapita_ab25; assert_in_delta(0, (worksheet.costpercapita_ab25||0), 0.001); end
  def test_costpercapita_ac25; assert_in_delta(0, (worksheet.costpercapita_ac25||0), 0.001); end
  def test_costpercapita_ad25; assert_in_delta(0, (worksheet.costpercapita_ad25||0), 0.001); end
  def test_costpercapita_ae25; assert_in_delta(0, (worksheet.costpercapita_ae25||0), 0.001); end
  def test_costpercapita_af25; assert_in_delta(0, (worksheet.costpercapita_af25||0), 0.001); end
  def test_costpercapita_ag25; assert_in_delta(0, (worksheet.costpercapita_ag25||0), 0.001); end
  def test_costpercapita_ai25; assert_in_delta(0, (worksheet.costpercapita_ai25||0), 0.001); end
  def test_costpercapita_aj25; assert_in_delta(0, (worksheet.costpercapita_aj25||0), 0.001); end
  def test_costpercapita_ak25; assert_in_delta(0, (worksheet.costpercapita_ak25||0), 0.001); end
  def test_costpercapita_al25; assert_in_delta(0, (worksheet.costpercapita_al25||0), 0.001); end
  def test_costpercapita_am25; assert_in_delta(0, (worksheet.costpercapita_am25||0), 0.001); end
  def test_costpercapita_an25; assert_in_delta(0, (worksheet.costpercapita_an25||0), 0.001); end
  def test_costpercapita_ao25; assert_in_delta(0, (worksheet.costpercapita_ao25||0), 0.001); end
  def test_costpercapita_ap25; assert_in_delta(0, (worksheet.costpercapita_ap25||0), 0.001); end
  def test_costpercapita_aq25; assert_in_delta(0, (worksheet.costpercapita_aq25||0), 0.001); end
  def test_costpercapita_as25; assert_in_delta(0, (worksheet.costpercapita_as25||0), 0.001); end
  def test_costpercapita_at25; assert_in_delta(0, (worksheet.costpercapita_at25||0), 0.001); end
  def test_costpercapita_av25; assert_in_delta(0, (worksheet.costpercapita_av25||0), 0.001); end
  def test_costpercapita_aw25; assert_in_epsilon(25, worksheet.costpercapita_aw25, 0.001); end
  def test_costpercapita_ay25; assert_in_delta(0, (worksheet.costpercapita_ay25||0), 0.001); end
  def test_costpercapita_az25; assert_in_delta(0, (worksheet.costpercapita_az25||0), 0.001); end
  def test_costpercapita_ba25; assert_in_delta(0, (worksheet.costpercapita_ba25||0), 0.001); end
  def test_costpercapita_bb25; assert_in_delta(0, (worksheet.costpercapita_bb25||0), 0.001); end
  def test_costpercapita_bc25; assert_in_delta(0, (worksheet.costpercapita_bc25||0), 0.001); end
  def test_costpercapita_bd25; assert_in_delta(0, (worksheet.costpercapita_bd25||0), 0.001); end
  def test_costpercapita_be25; assert_in_delta(0, (worksheet.costpercapita_be25||0), 0.001); end
  def test_costpercapita_bf25; assert_in_delta(0, (worksheet.costpercapita_bf25||0), 0.001); end
  def test_costpercapita_bg25; assert_in_delta(0, (worksheet.costpercapita_bg25||0), 0.001); end
  def test_costpercapita_bi25; assert_in_delta(0, (worksheet.costpercapita_bi25||0), 0.001); end
  def test_costpercapita_bj25; assert_in_delta(0, (worksheet.costpercapita_bj25||0), 0.001); end
  def test_costpercapita_bk25; assert_in_delta(0, (worksheet.costpercapita_bk25||0), 0.001); end
  def test_costpercapita_bl25; assert_in_delta(0, (worksheet.costpercapita_bl25||0), 0.001); end
  def test_costpercapita_bm25; assert_in_delta(0, (worksheet.costpercapita_bm25||0), 0.001); end
  def test_costpercapita_bn25; assert_in_delta(0, (worksheet.costpercapita_bn25||0), 0.001); end
  def test_costpercapita_bo25; assert_in_delta(0, (worksheet.costpercapita_bo25||0), 0.001); end
  def test_costpercapita_bp25; assert_in_delta(0, (worksheet.costpercapita_bp25||0), 0.001); end
  def test_costpercapita_bq25; assert_in_delta(0, (worksheet.costpercapita_bq25||0), 0.001); end
  def test_costpercapita_bs25; assert_in_delta(0, (worksheet.costpercapita_bs25||0), 0.001); end
  def test_costpercapita_bt25; assert_in_delta(0, (worksheet.costpercapita_bt25||0), 0.001); end
  def test_costpercapita_bu25; assert_in_delta(0, (worksheet.costpercapita_bu25||0), 0.001); end
  def test_costpercapita_bv25; assert_in_delta(0, (worksheet.costpercapita_bv25||0), 0.001); end
  def test_costpercapita_bw25; assert_in_delta(0, (worksheet.costpercapita_bw25||0), 0.001); end
  def test_costpercapita_bx25; assert_in_delta(0, (worksheet.costpercapita_bx25||0), 0.001); end
  def test_costpercapita_by25; assert_in_delta(0, (worksheet.costpercapita_by25||0), 0.001); end
  def test_costpercapita_bz25; assert_in_delta(0, (worksheet.costpercapita_bz25||0), 0.001); end
  def test_costpercapita_ca25; assert_in_delta(0, (worksheet.costpercapita_ca25||0), 0.001); end
  def test_costpercapita_cc25; assert_in_delta(0, (worksheet.costpercapita_cc25||0), 0.001); end
  def test_costpercapita_cd25; assert_in_delta(0, (worksheet.costpercapita_cd25||0), 0.001); end
  def test_costpercapita_cf25; assert_in_delta(0, (worksheet.costpercapita_cf25||0), 0.001); end
  def test_costpercapita_cg25; assert_in_delta(0, (worksheet.costpercapita_cg25||0), 0.001); end
  def test_costpercapita_ch25; assert_in_delta(0, (worksheet.costpercapita_ch25||0), 0.001); end
  def test_costpercapita_ci25; assert_in_delta(0, (worksheet.costpercapita_ci25||0), 0.001); end
  def test_costpercapita_cj25; assert_in_delta(0, (worksheet.costpercapita_cj25||0), 0.001); end
  def test_costpercapita_ck25; assert_in_delta(0, (worksheet.costpercapita_ck25||0), 0.001); end
  def test_costpercapita_cl25; assert_in_delta(0, (worksheet.costpercapita_cl25||0), 0.001); end
  def test_costpercapita_cm25; assert_in_delta(0, (worksheet.costpercapita_cm25||0), 0.001); end
  def test_costpercapita_cn25; assert_in_delta(0, (worksheet.costpercapita_cn25||0), 0.001); end
  def test_costpercapita_cp25; assert_in_delta(0, (worksheet.costpercapita_cp25||0), 0.001); end
  def test_costpercapita_cq25; assert_in_delta(0, (worksheet.costpercapita_cq25||0), 0.001); end
  def test_costpercapita_cr25; assert_equal("ok", worksheet.costpercapita_cr25); end
  def test_costpercapita_a26; assert_equal("IX.a.Heating", worksheet.costpercapita_a26); end
  def test_costpercapita_b26; assert_equal("Domestic heating", worksheet.costpercapita_b26); end
  def test_costpercapita_c26; assert_equal("Buildings", worksheet.costpercapita_c26); end
  def test_costpercapita_e26; assert_in_epsilon(135.69350562330595, worksheet.costpercapita_e26, 0.001); end
  def test_costpercapita_f26; assert_in_epsilon(100.66809285687317, worksheet.costpercapita_f26, 0.001); end
  def test_costpercapita_g26; assert_in_epsilon(102.12400280409796, worksheet.costpercapita_g26, 0.001); end
  def test_costpercapita_h26; assert_in_epsilon(116.16994174454166, worksheet.costpercapita_h26, 0.001); end
  def test_costpercapita_i26; assert_in_epsilon(129.338821911803, worksheet.costpercapita_i26, 0.001); end
  def test_costpercapita_j26; assert_in_epsilon(145.44018386696627, worksheet.costpercapita_j26, 0.001); end
  def test_costpercapita_k26; assert_in_epsilon(159.90520535146752, worksheet.costpercapita_k26, 0.001); end
  def test_costpercapita_l26; assert_in_epsilon(179.7505047100408, worksheet.costpercapita_l26, 0.001); end
  def test_costpercapita_m26; assert_in_epsilon(201.60159740247005, worksheet.costpercapita_m26, 0.001); end
  def test_costpercapita_o26; assert_in_epsilon(76.98015520229907, worksheet.costpercapita_o26, 0.001); end
  def test_costpercapita_p26; assert_in_epsilon(78.94151967806035, worksheet.costpercapita_p26, 0.001); end
  def test_costpercapita_q26; assert_in_epsilon(80.68124857163484, worksheet.costpercapita_q26, 0.001); end
  def test_costpercapita_r26; assert_in_epsilon(82.11726300792796, worksheet.costpercapita_r26, 0.001); end
  def test_costpercapita_s26; assert_in_epsilon(83.4132378230336, worksheet.costpercapita_s26, 0.001); end
  def test_costpercapita_t26; assert_in_epsilon(85.8194063736814, worksheet.costpercapita_t26, 0.001); end
  def test_costpercapita_u26; assert_in_epsilon(88.49600709499136, worksheet.costpercapita_u26, 0.001); end
  def test_costpercapita_v26; assert_in_epsilon(91.38404397360709, worksheet.costpercapita_v26, 0.001); end
  def test_costpercapita_w26; assert_in_epsilon(94.48957995625537, worksheet.costpercapita_w26, 0.001); end
  def test_costpercapita_y26; assert_in_delta(0, (worksheet.costpercapita_y26||0), 0.001); end
  def test_costpercapita_z26; assert_in_delta(0, (worksheet.costpercapita_z26||0), 0.001); end
  def test_costpercapita_aa26; assert_in_delta(0, (worksheet.costpercapita_aa26||0), 0.001); end
  def test_costpercapita_ab26; assert_in_delta(0, (worksheet.costpercapita_ab26||0), 0.001); end
  def test_costpercapita_ac26; assert_in_delta(0, (worksheet.costpercapita_ac26||0), 0.001); end
  def test_costpercapita_ad26; assert_in_delta(0, (worksheet.costpercapita_ad26||0), 0.001); end
  def test_costpercapita_ae26; assert_in_delta(0, (worksheet.costpercapita_ae26||0), 0.001); end
  def test_costpercapita_af26; assert_in_delta(0, (worksheet.costpercapita_af26||0), 0.001); end
  def test_costpercapita_ag26; assert_in_delta(0, (worksheet.costpercapita_ag26||0), 0.001); end
  def test_costpercapita_ai26; assert_in_epsilon(212.67366082560503, worksheet.costpercapita_ai26, 0.001); end
  def test_costpercapita_aj26; assert_in_epsilon(179.60961253493352, worksheet.costpercapita_aj26, 0.001); end
  def test_costpercapita_ak26; assert_in_epsilon(182.8052513757328, worksheet.costpercapita_ak26, 0.001); end
  def test_costpercapita_al26; assert_in_epsilon(198.28720475246962, worksheet.costpercapita_al26, 0.001); end
  def test_costpercapita_am26; assert_in_epsilon(212.7520597348366, worksheet.costpercapita_am26, 0.001); end
  def test_costpercapita_an26; assert_in_epsilon(231.25959024064767, worksheet.costpercapita_an26, 0.001); end
  def test_costpercapita_ao26; assert_in_epsilon(248.40121244645886, worksheet.costpercapita_ao26, 0.001); end
  def test_costpercapita_ap26; assert_in_epsilon(271.1345486836479, worksheet.costpercapita_ap26, 0.001); end
  def test_costpercapita_aq26; assert_in_epsilon(296.0911773587254, worksheet.costpercapita_aq26, 0.001); end
  def test_costpercapita_as26; assert_in_epsilon(225.89047977256192, worksheet.costpercapita_as26, 0.001); end
  def test_costpercapita_at26; assert_in_epsilon(4484.061937982865, worksheet.costpercapita_at26, 0.001); end
  def test_costpercapita_av26; assert_in_delta(0, (worksheet.costpercapita_av26||0), 0.001); end
  def test_costpercapita_aw26; assert_in_epsilon(15, worksheet.costpercapita_aw26, 0.001); end
  def test_costpercapita_ay26; assert_in_epsilon(27.13870112466119, worksheet.costpercapita_ay26, 0.001); end
  def test_costpercapita_az26; assert_in_epsilon(33.55603095229106, worksheet.costpercapita_az26, 0.001); end
  def test_costpercapita_ba26; assert_in_epsilon(34.04133426803266, worksheet.costpercapita_ba26, 0.001); end
  def test_costpercapita_bb26; assert_in_epsilon(38.723313914847225, worksheet.costpercapita_bb26, 0.001); end
  def test_costpercapita_bc26; assert_in_epsilon(43.11294063726766, worksheet.costpercapita_bc26, 0.001); end
  def test_costpercapita_bd26; assert_in_epsilon(48.48006128898876, worksheet.costpercapita_bd26, 0.001); end
  def test_costpercapita_be26; assert_in_epsilon(53.301735117155836, worksheet.costpercapita_be26, 0.001); end
  def test_costpercapita_bf26; assert_in_epsilon(59.91683490334693, worksheet.costpercapita_bf26, 0.001); end
  def test_costpercapita_bg26; assert_in_epsilon(67.20053246749, worksheet.costpercapita_bg26, 0.001); end
  def test_costpercapita_bi26; assert_in_epsilon(27.13870112466119, worksheet.costpercapita_bi26, 0.001); end
  def test_costpercapita_bj26; assert_in_epsilon(59.79983152798315, worksheet.costpercapita_bj26, 0.001); end
  def test_costpercapita_bk26; assert_in_epsilon(91.88342991473452, worksheet.costpercapita_bk26, 0.001); end
  def test_costpercapita_bl26; assert_in_epsilon(103.16308274297474, worksheet.costpercapita_bl26, 0.001); end
  def test_costpercapita_bm26; assert_in_epsilon(112.86440597702982, worksheet.costpercapita_bm26, 0.001); end
  def test_costpercapita_bn26; assert_in_epsilon(127.35559926101564, worksheet.costpercapita_bn26, 0.001); end
  def test_costpercapita_bo26; assert_in_epsilon(141.94749211520244, worksheet.costpercapita_bo26, 0.001); end
  def test_costpercapita_bp26; assert_in_epsilon(158.65501536833006, worksheet.costpercapita_bp26, 0.001); end
  def test_costpercapita_bq26; assert_in_epsilon(177.26283073603403, worksheet.costpercapita_bq26, 0.001); end
  def test_costpercapita_bs26; assert_in_epsilon(104.11885632696026, worksheet.costpercapita_bs26, 0.001); end
  def test_costpercapita_bt26; assert_in_epsilon(138.7413512060435, worksheet.costpercapita_bt26, 0.001); end
  def test_costpercapita_bu26; assert_in_epsilon(172.56467848636933, worksheet.costpercapita_bu26, 0.001); end
  def test_costpercapita_bv26; assert_in_epsilon(185.2803457509027, worksheet.costpercapita_bv26, 0.001); end
  def test_costpercapita_bw26; assert_in_epsilon(196.27764380006343, worksheet.costpercapita_bw26, 0.001); end
  def test_costpercapita_bx26; assert_in_epsilon(213.17500563469704, worksheet.costpercapita_bx26, 0.001); end
  def test_costpercapita_by26; assert_in_epsilon(230.44349921019378, worksheet.costpercapita_by26, 0.001); end
  def test_costpercapita_bz26; assert_in_epsilon(250.03905934193716, worksheet.costpercapita_bz26, 0.001); end
  def test_costpercapita_ca26; assert_in_epsilon(271.7524106922894, worksheet.costpercapita_ca26, 0.001); end
  def test_costpercapita_cc26; assert_in_epsilon(195.82142782771743, worksheet.costpercapita_cc26, 0.001); end
  def test_costpercapita_cd26; assert_in_epsilon(3952.013028593384, worksheet.costpercapita_cd26, 0.001); end
  def test_costpercapita_cf26; assert_in_epsilon(-108.55480449864476, worksheet.costpercapita_cf26, 0.001); end
  def test_costpercapita_cg26; assert_in_epsilon(-40.86826132889002, worksheet.costpercapita_cg26, 0.001); end
  def test_costpercapita_ch26; assert_in_epsilon(-10.240572889363436, worksheet.costpercapita_ch26, 0.001); end
  def test_costpercapita_ci26; assert_in_epsilon(-13.006859001566923, worksheet.costpercapita_ci26, 0.001); end
  def test_costpercapita_cj26; assert_in_epsilon(-16.474415934773177, worksheet.costpercapita_cj26, 0.001); end
  def test_costpercapita_ck26; assert_in_epsilon(-18.084584605950624, worksheet.costpercapita_ck26, 0.001); end
  def test_costpercapita_cl26; assert_in_epsilon(-17.95771323626509, worksheet.costpercapita_cl26, 0.001); end
  def test_costpercapita_cm26; assert_in_epsilon(-21.095489341710742, worksheet.costpercapita_cm26, 0.001); end
  def test_costpercapita_cn26; assert_in_epsilon(-24.338766666435998, worksheet.costpercapita_cn26, 0.001); end
  def test_costpercapita_cp26; assert_in_epsilon(-30.069051944844528, worksheet.costpercapita_cp26, 0.001); end
  def test_costpercapita_cq26; assert_in_epsilon(-532.0489093894803, worksheet.costpercapita_cq26, 0.001); end
  def test_costpercapita_cr26; assert_equal("ok", worksheet.costpercapita_cr26); end
  def test_costpercapita_a27; assert_equal("IX.a.Insulation", worksheet.costpercapita_a27); end
  def test_costpercapita_b27; assert_equal("Domestic insulation", worksheet.costpercapita_b27); end
  def test_costpercapita_c27; assert_equal("Buildings", worksheet.costpercapita_c27); end
  def test_costpercapita_e27; assert_in_epsilon(7.00682164100754, worksheet.costpercapita_e27, 0.001); end
  def test_costpercapita_f27; assert_in_epsilon(3.1323069272334356, worksheet.costpercapita_f27, 0.001); end
  def test_costpercapita_g27; assert_in_delta(0.6803049897874783, worksheet.costpercapita_g27, 0.001); end
  def test_costpercapita_h27; assert_in_delta(0.659240383412685, worksheet.costpercapita_h27, 0.001); end
  def test_costpercapita_i27; assert_in_delta(0.6412298352105243, worksheet.costpercapita_i27, 0.001); end
  def test_costpercapita_j27; assert_in_delta(0.6261252202641515, worksheet.costpercapita_j27, 0.001); end
  def test_costpercapita_k27; assert_in_delta(0.6127722319699723, worksheet.costpercapita_k27, 0.001); end
  def test_costpercapita_l27; assert_in_delta(0.6005486972205223, worksheet.costpercapita_l27, 0.001); end
  def test_costpercapita_m27; assert_in_delta(0.5893414164417934, worksheet.costpercapita_m27, 0.001); end
  def test_costpercapita_o27; assert_in_delta(0, (worksheet.costpercapita_o27||0), 0.001); end
  def test_costpercapita_p27; assert_in_delta(0, (worksheet.costpercapita_p27||0), 0.001); end
  def test_costpercapita_q27; assert_in_delta(0, (worksheet.costpercapita_q27||0), 0.001); end
  def test_costpercapita_r27; assert_in_delta(0, (worksheet.costpercapita_r27||0), 0.001); end
  def test_costpercapita_s27; assert_in_delta(0, (worksheet.costpercapita_s27||0), 0.001); end
  def test_costpercapita_t27; assert_in_delta(0, (worksheet.costpercapita_t27||0), 0.001); end
  def test_costpercapita_u27; assert_in_delta(0, (worksheet.costpercapita_u27||0), 0.001); end
  def test_costpercapita_v27; assert_in_delta(0, (worksheet.costpercapita_v27||0), 0.001); end
  def test_costpercapita_w27; assert_in_delta(0, (worksheet.costpercapita_w27||0), 0.001); end
  def test_costpercapita_y27; assert_in_delta(0, (worksheet.costpercapita_y27||0), 0.001); end
  def test_costpercapita_z27; assert_in_delta(0, (worksheet.costpercapita_z27||0), 0.001); end
  def test_costpercapita_aa27; assert_in_delta(0, (worksheet.costpercapita_aa27||0), 0.001); end
  def test_costpercapita_ab27; assert_in_delta(0, (worksheet.costpercapita_ab27||0), 0.001); end
  def test_costpercapita_ac27; assert_in_delta(0, (worksheet.costpercapita_ac27||0), 0.001); end
  def test_costpercapita_ad27; assert_in_delta(0, (worksheet.costpercapita_ad27||0), 0.001); end
  def test_costpercapita_ae27; assert_in_delta(0, (worksheet.costpercapita_ae27||0), 0.001); end
  def test_costpercapita_af27; assert_in_delta(0, (worksheet.costpercapita_af27||0), 0.001); end
  def test_costpercapita_ag27; assert_in_delta(0, (worksheet.costpercapita_ag27||0), 0.001); end
  def test_costpercapita_ai27; assert_in_epsilon(7.00682164100754, worksheet.costpercapita_ai27, 0.001); end
  def test_costpercapita_aj27; assert_in_epsilon(3.1323069272334356, worksheet.costpercapita_aj27, 0.001); end
  def test_costpercapita_ak27; assert_in_delta(0.6803049897874783, worksheet.costpercapita_ak27, 0.001); end
  def test_costpercapita_al27; assert_in_delta(0.659240383412685, worksheet.costpercapita_al27, 0.001); end
  def test_costpercapita_am27; assert_in_delta(0.6412298352105243, worksheet.costpercapita_am27, 0.001); end
  def test_costpercapita_an27; assert_in_delta(0.6261252202641515, worksheet.costpercapita_an27, 0.001); end
  def test_costpercapita_ao27; assert_in_delta(0.6127722319699723, worksheet.costpercapita_ao27, 0.001); end
  def test_costpercapita_ap27; assert_in_delta(0.6005486972205223, worksheet.costpercapita_ap27, 0.001); end
  def test_costpercapita_aq27; assert_in_delta(0.5893414164417934, worksheet.costpercapita_aq27, 0.001); end
  def test_costpercapita_as27; assert_in_epsilon(1.6165212602831227, worksheet.costpercapita_as27, 0.001); end
  def test_costpercapita_at27; assert_in_epsilon(30.303909786451165, worksheet.costpercapita_at27, 0.001); end
  def test_costpercapita_av27; assert_in_delta(0, (worksheet.costpercapita_av27||0), 0.001); end
  def test_costpercapita_aw27; assert_in_epsilon(30, worksheet.costpercapita_aw27, 0.001); end
  def test_costpercapita_ay27; assert_in_delta(0.700682164100754, worksheet.costpercapita_ay27, 0.001); end
  def test_costpercapita_az27; assert_in_delta(0.5220511545389059, worksheet.costpercapita_az27, 0.001); end
  def test_costpercapita_ba27; assert_in_delta(0.1133841649645797, worksheet.costpercapita_ba27, 0.001); end
  def test_costpercapita_bb27; assert_in_delta(0.10987339723544749, worksheet.costpercapita_bb27, 0.001); end
  def test_costpercapita_bc27; assert_in_delta(0.10687163920175406, worksheet.costpercapita_bc27, 0.001); end
  def test_costpercapita_bd27; assert_in_delta(0.10435420337735858, worksheet.costpercapita_bd27, 0.001); end
  def test_costpercapita_be27; assert_in_delta(0.10212870532832871, worksheet.costpercapita_be27, 0.001); end
  def test_costpercapita_bf27; assert_in_delta(0.10009144953675371, worksheet.costpercapita_bf27, 0.001); end
  def test_costpercapita_bg27; assert_in_delta(0.09822356940696557, worksheet.costpercapita_bg27, 0.001); end
  def test_costpercapita_bi27; assert_in_delta(0.700682164100754, worksheet.costpercapita_bi27, 0.001); end
  def test_costpercapita_bj27; assert_in_epsilon(1.1996282757554662, worksheet.costpercapita_bj27, 0.001); end
  def test_costpercapita_bk27; assert_in_epsilon(1.2737388297476286, worksheet.costpercapita_bk27, 0.001); end
  def test_costpercapita_bl27; assert_in_epsilon(1.3441728468878258, worksheet.costpercapita_bl27, 0.001); end
  def test_costpercapita_bm27; assert_in_epsilon(1.4143214781245879, worksheet.costpercapita_bm27, 0.001); end
  def test_costpercapita_bn27; assert_in_epsilon(1.485360354977186, worksheet.costpercapita_bn27, 0.001); end
  def test_costpercapita_bo27; assert_in_delta(0.9654771265594623, worksheet.costpercapita_bo27, 0.001); end
  def test_costpercapita_bp27; assert_in_delta(0.7006401467572761, worksheet.costpercapita_bp27, 0.001); end
  def test_costpercapita_bq27; assert_in_delta(0.687564985848759, worksheet.costpercapita_bq27, 0.001); end
  def test_costpercapita_bs27; assert_in_delta(0.700682164100754, worksheet.costpercapita_bs27, 0.001); end
  def test_costpercapita_bt27; assert_in_epsilon(1.1996282757554662, worksheet.costpercapita_bt27, 0.001); end
  def test_costpercapita_bu27; assert_in_epsilon(1.2737388297476286, worksheet.costpercapita_bu27, 0.001); end
  def test_costpercapita_bv27; assert_in_epsilon(1.3441728468878258, worksheet.costpercapita_bv27, 0.001); end
  def test_costpercapita_bw27; assert_in_epsilon(1.4143214781245879, worksheet.costpercapita_bw27, 0.001); end
  def test_costpercapita_bx27; assert_in_epsilon(1.485360354977186, worksheet.costpercapita_bx27, 0.001); end
  def test_costpercapita_by27; assert_in_delta(0.9654771265594623, worksheet.costpercapita_by27, 0.001); end
  def test_costpercapita_bz27; assert_in_delta(0.7006401467572761, worksheet.costpercapita_bz27, 0.001); end
  def test_costpercapita_ca27; assert_in_delta(0.687564985848759, worksheet.costpercapita_ca27, 0.001); end
  def test_costpercapita_cc27; assert_in_epsilon(1.0857318009732164, worksheet.costpercapita_cc27, 0.001); end
  def test_costpercapita_cd27; assert_in_epsilon(24.68195285652352, worksheet.costpercapita_cd27, 0.001); end
  def test_costpercapita_cf27; assert_in_epsilon(-6.306139476906786, worksheet.costpercapita_cf27, 0.001); end
  def test_costpercapita_cg27; assert_in_epsilon(-1.9326786514779695, worksheet.costpercapita_cg27, 0.001); end
  def test_costpercapita_ch27; assert_in_delta(0.5934338399601503, worksheet.costpercapita_ch27, 0.001); end
  def test_costpercapita_ci27; assert_in_delta(0.6849324634751407, worksheet.costpercapita_ci27, 0.001); end
  def test_costpercapita_cj27; assert_in_delta(0.7730916429140635, worksheet.costpercapita_cj27, 0.001); end
  def test_costpercapita_ck27; assert_in_delta(0.8592351347130347, worksheet.costpercapita_ck27, 0.001); end
  def test_costpercapita_cl27; assert_in_delta(0.35270489458949006, worksheet.costpercapita_cl27, 0.001); end
  def test_costpercapita_cm27; assert_in_delta(0.10009144953675388, worksheet.costpercapita_cm27, 0.001); end
  def test_costpercapita_cn27; assert_in_delta(0.09822356940696562, worksheet.costpercapita_cn27, 0.001); end
  def test_costpercapita_cp27; assert_in_delta(-0.5307894593099064, worksheet.costpercapita_cp27, 0.001); end
  def test_costpercapita_cq27; assert_in_epsilon(-5.621956929927643, worksheet.costpercapita_cq27, 0.001); end
  def test_costpercapita_cr27; assert_equal("ok", worksheet.costpercapita_cr27); end
  def test_costpercapita_a28; assert_equal("IX.c", worksheet.costpercapita_a28); end
  def test_costpercapita_b28; assert_equal("Commercial heating and cooling", worksheet.costpercapita_b28); end
  def test_costpercapita_c28; assert_equal("Buildings", worksheet.costpercapita_c28); end
  def test_costpercapita_e28; assert_in_epsilon(83.11208181769604, worksheet.costpercapita_e28, 0.001); end
  def test_costpercapita_f28; assert_in_epsilon(138.70727799640565, worksheet.costpercapita_f28, 0.001); end
  def test_costpercapita_g28; assert_in_epsilon(149.57819102446868, worksheet.costpercapita_g28, 0.001); end
  def test_costpercapita_h28; assert_in_epsilon(159.64898466712944, worksheet.costpercapita_h28, 0.001); end
  def test_costpercapita_i28; assert_in_epsilon(169.38263632810052, worksheet.costpercapita_i28, 0.001); end
  def test_costpercapita_j28; assert_in_epsilon(179.0011706361743, worksheet.costpercapita_j28, 0.001); end
  def test_costpercapita_k28; assert_in_epsilon(188.6521941012258, worksheet.costpercapita_k28, 0.001); end
  def test_costpercapita_l28; assert_in_epsilon(198.43887448021573, worksheet.costpercapita_l28, 0.001); end
  def test_costpercapita_m28; assert_in_epsilon(208.10925448093604, worksheet.costpercapita_m28, 0.001); end
  def test_costpercapita_o28; assert_in_epsilon(6.856410347742039, worksheet.costpercapita_o28, 0.001); end
  def test_costpercapita_p28; assert_in_epsilon(7.040479229387764, worksheet.costpercapita_p28, 0.001); end
  def test_costpercapita_q28; assert_in_epsilon(7.347001312593689, worksheet.costpercapita_q28, 0.001); end
  def test_costpercapita_r28; assert_in_epsilon(7.689467738235032, worksheet.costpercapita_r28, 0.001); end
  def test_costpercapita_s28; assert_in_epsilon(8.08654229611378, worksheet.costpercapita_s28, 0.001); end
  def test_costpercapita_t28; assert_in_epsilon(8.545275016872004, worksheet.costpercapita_t28, 0.001); end
  def test_costpercapita_u28; assert_in_epsilon(9.058730477040784, worksheet.costpercapita_u28, 0.001); end
  def test_costpercapita_v28; assert_in_epsilon(9.624471072380468, worksheet.costpercapita_v28, 0.001); end
  def test_costpercapita_w28; assert_in_epsilon(10.246677138183504, worksheet.costpercapita_w28, 0.001); end
  def test_costpercapita_y28; assert_in_delta(0, (worksheet.costpercapita_y28||0), 0.001); end
  def test_costpercapita_z28; assert_in_delta(0, (worksheet.costpercapita_z28||0), 0.001); end
  def test_costpercapita_aa28; assert_in_delta(0, (worksheet.costpercapita_aa28||0), 0.001); end
  def test_costpercapita_ab28; assert_in_delta(0, (worksheet.costpercapita_ab28||0), 0.001); end
  def test_costpercapita_ac28; assert_in_delta(0, (worksheet.costpercapita_ac28||0), 0.001); end
  def test_costpercapita_ad28; assert_in_delta(0, (worksheet.costpercapita_ad28||0), 0.001); end
  def test_costpercapita_ae28; assert_in_delta(0, (worksheet.costpercapita_ae28||0), 0.001); end
  def test_costpercapita_af28; assert_in_delta(0, (worksheet.costpercapita_af28||0), 0.001); end
  def test_costpercapita_ag28; assert_in_delta(0, (worksheet.costpercapita_ag28||0), 0.001); end
  def test_costpercapita_ai28; assert_in_epsilon(89.96849216543808, worksheet.costpercapita_ai28, 0.001); end
  def test_costpercapita_aj28; assert_in_epsilon(145.7477572257934, worksheet.costpercapita_aj28, 0.001); end
  def test_costpercapita_ak28; assert_in_epsilon(156.92519233706238, worksheet.costpercapita_ak28, 0.001); end
  def test_costpercapita_al28; assert_in_epsilon(167.33845240536448, worksheet.costpercapita_al28, 0.001); end
  def test_costpercapita_am28; assert_in_epsilon(177.4691786242143, worksheet.costpercapita_am28, 0.001); end
  def test_costpercapita_an28; assert_in_epsilon(187.5464456530463, worksheet.costpercapita_an28, 0.001); end
  def test_costpercapita_ao28; assert_in_epsilon(197.71092457826657, worksheet.costpercapita_ao28, 0.001); end
  def test_costpercapita_ap28; assert_in_epsilon(208.0633455525962, worksheet.costpercapita_ap28, 0.001); end
  def test_costpercapita_aq28; assert_in_epsilon(218.35593161911956, worksheet.costpercapita_aq28, 0.001); end
  def test_costpercapita_as28; assert_in_epsilon(172.1250800178779, worksheet.costpercapita_as28, 0.001); end
  def test_costpercapita_at28; assert_in_epsilon(3563.3010644922088, worksheet.costpercapita_at28, 0.001); end
  def test_costpercapita_av28; assert_in_delta(0, (worksheet.costpercapita_av28||0), 0.001); end
  def test_costpercapita_aw28; assert_in_epsilon(15, worksheet.costpercapita_aw28, 0.001); end
  def test_costpercapita_ay28; assert_in_epsilon(16.622416363539205, worksheet.costpercapita_ay28, 0.001); end
  def test_costpercapita_az28; assert_in_epsilon(46.23575933213522, worksheet.costpercapita_az28, 0.001); end
  def test_costpercapita_ba28; assert_in_epsilon(49.85939700815623, worksheet.costpercapita_ba28, 0.001); end
  def test_costpercapita_bb28; assert_in_epsilon(53.21632822237648, worksheet.costpercapita_bb28, 0.001); end
  def test_costpercapita_bc28; assert_in_epsilon(56.4608787760335, worksheet.costpercapita_bc28, 0.001); end
  def test_costpercapita_bd28; assert_in_epsilon(59.66705687872477, worksheet.costpercapita_bd28, 0.001); end
  def test_costpercapita_be28; assert_in_epsilon(62.884064700408594, worksheet.costpercapita_be28, 0.001); end
  def test_costpercapita_bf28; assert_in_epsilon(66.14629149340524, worksheet.costpercapita_bf28, 0.001); end
  def test_costpercapita_bg28; assert_in_epsilon(69.36975149364535, worksheet.costpercapita_bg28, 0.001); end
  def test_costpercapita_bi28; assert_in_epsilon(16.622416363539205, worksheet.costpercapita_bi28, 0.001); end
  def test_costpercapita_bj28; assert_in_epsilon(62.310050364967026, worksheet.costpercapita_bj28, 0.001); end
  def test_costpercapita_bk28; assert_in_epsilon(110.12953156990135, worksheet.costpercapita_bk28, 0.001); end
  def test_costpercapita_bl28; assert_in_epsilon(144.86923995380616, worksheet.costpercapita_bl28, 0.001); end
  def test_costpercapita_bm28; assert_in_epsilon(155.21891663602707, worksheet.costpercapita_bm28, 0.001); end
  def test_costpercapita_bn28; assert_in_epsilon(165.34110983030658, worksheet.costpercapita_bn28, 0.001); end
  def test_costpercapita_bo28; assert_in_epsilon(175.2337994245836, worksheet.costpercapita_bo28, 0.001); end
  def test_costpercapita_bp28; assert_in_epsilon(185.00567313381083, worksheet.costpercapita_bp28, 0.001); end
  def test_costpercapita_bq28; assert_in_epsilon(194.76118011891938, worksheet.costpercapita_bq28, 0.001); end
  def test_costpercapita_bs28; assert_in_epsilon(23.478826711281247, worksheet.costpercapita_bs28, 0.001); end
  def test_costpercapita_bt28; assert_in_epsilon(69.35052959435478, worksheet.costpercapita_bt28, 0.001); end
  def test_costpercapita_bu28; assert_in_epsilon(117.47653288249504, worksheet.costpercapita_bu28, 0.001); end
  def test_costpercapita_bv28; assert_in_epsilon(152.55870769204117, worksheet.costpercapita_bv28, 0.001); end
  def test_costpercapita_bw28; assert_in_epsilon(163.30545893214085, worksheet.costpercapita_bw28, 0.001); end
  def test_costpercapita_bx28; assert_in_epsilon(173.88638484717856, worksheet.costpercapita_bx28, 0.001); end
  def test_costpercapita_by28; assert_in_epsilon(184.29252990162436, worksheet.costpercapita_by28, 0.001); end
  def test_costpercapita_bz28; assert_in_epsilon(194.63014420619132, worksheet.costpercapita_bz28, 0.001); end
  def test_costpercapita_ca28; assert_in_epsilon(205.0078572571029, worksheet.costpercapita_ca28, 0.001); end
  def test_costpercapita_cc28; assert_in_epsilon(142.66521911382335, worksheet.costpercapita_cc28, 0.001); end
  def test_costpercapita_cd28; assert_in_epsilon(2864.519646764757, worksheet.costpercapita_cd28, 0.001); end
  def test_costpercapita_cf28; assert_in_epsilon(-66.48966545415682, worksheet.costpercapita_cf28, 0.001); end
  def test_costpercapita_cg28; assert_in_epsilon(-76.39722763143861, worksheet.costpercapita_cg28, 0.001); end
  def test_costpercapita_ch28; assert_in_epsilon(-39.44865945456734, worksheet.costpercapita_ch28, 0.001); end
  def test_costpercapita_ci28; assert_in_epsilon(-14.779744713323295, worksheet.costpercapita_ci28, 0.001); end
  def test_costpercapita_cj28; assert_in_epsilon(-14.163719692073444, worksheet.costpercapita_cj28, 0.001); end
  def test_costpercapita_ck28; assert_in_epsilon(-13.660060805867728, worksheet.costpercapita_ck28, 0.001); end
  def test_costpercapita_cl28; assert_in_epsilon(-13.41839467664221, worksheet.costpercapita_cl28, 0.001); end
  def test_costpercapita_cm28; assert_in_epsilon(-13.433201346404896, worksheet.costpercapita_cm28, 0.001); end
  def test_costpercapita_cn28; assert_in_epsilon(-13.348074362016645, worksheet.costpercapita_cn28, 0.001); end
  def test_costpercapita_cp28; assert_in_epsilon(-29.45986090405455, worksheet.costpercapita_cp28, 0.001); end
  def test_costpercapita_cq28; assert_in_epsilon(-698.7814177274512, worksheet.costpercapita_cq28, 0.001); end
  def test_costpercapita_cr28; assert_equal("ok", worksheet.costpercapita_cr28); end
  def test_costpercapita_a29; assert_equal("X.a", worksheet.costpercapita_a29); end
  def test_costpercapita_b29; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costpercapita_b29); end
  def test_costpercapita_c29; assert_equal("Buildings", worksheet.costpercapita_c29); end
  def test_costpercapita_e29; assert_in_epsilon(37.25458564664322, worksheet.costpercapita_e29, 0.001); end
  def test_costpercapita_f29; assert_in_epsilon(39.69948488703974, worksheet.costpercapita_f29, 0.001); end
  def test_costpercapita_g29; assert_in_epsilon(40.22598368362486, worksheet.costpercapita_g29, 0.001); end
  def test_costpercapita_h29; assert_in_epsilon(40.410538030184924, worksheet.costpercapita_h29, 0.001); end
  def test_costpercapita_i29; assert_in_epsilon(40.52717167637147, worksheet.costpercapita_i29, 0.001); end
  def test_costpercapita_j29; assert_in_epsilon(42.257147561807585, worksheet.costpercapita_j29, 0.001); end
  def test_costpercapita_k29; assert_in_epsilon(43.4655246630101, worksheet.costpercapita_k29, 0.001); end
  def test_costpercapita_l29; assert_in_epsilon(44.77142809868947, worksheet.costpercapita_l29, 0.001); end
  def test_costpercapita_m29; assert_in_epsilon(46.17708881575076, worksheet.costpercapita_m29, 0.001); end
  def test_costpercapita_o29; assert_in_delta(0, (worksheet.costpercapita_o29||0), 0.001); end
  def test_costpercapita_p29; assert_in_delta(0, (worksheet.costpercapita_p29||0), 0.001); end
  def test_costpercapita_q29; assert_in_delta(0, (worksheet.costpercapita_q29||0), 0.001); end
  def test_costpercapita_r29; assert_in_delta(0, (worksheet.costpercapita_r29||0), 0.001); end
  def test_costpercapita_s29; assert_in_delta(0, (worksheet.costpercapita_s29||0), 0.001); end
  def test_costpercapita_t29; assert_in_delta(0, (worksheet.costpercapita_t29||0), 0.001); end
  def test_costpercapita_u29; assert_in_delta(0, (worksheet.costpercapita_u29||0), 0.001); end
  def test_costpercapita_v29; assert_in_delta(0, (worksheet.costpercapita_v29||0), 0.001); end
  def test_costpercapita_w29; assert_in_delta(0, (worksheet.costpercapita_w29||0), 0.001); end
  def test_costpercapita_y29; assert_in_delta(0, (worksheet.costpercapita_y29||0), 0.001); end
  def test_costpercapita_z29; assert_in_delta(0, (worksheet.costpercapita_z29||0), 0.001); end
  def test_costpercapita_aa29; assert_in_delta(0, (worksheet.costpercapita_aa29||0), 0.001); end
  def test_costpercapita_ab29; assert_in_delta(0, (worksheet.costpercapita_ab29||0), 0.001); end
  def test_costpercapita_ac29; assert_in_delta(0, (worksheet.costpercapita_ac29||0), 0.001); end
  def test_costpercapita_ad29; assert_in_delta(0, (worksheet.costpercapita_ad29||0), 0.001); end
  def test_costpercapita_ae29; assert_in_delta(0, (worksheet.costpercapita_ae29||0), 0.001); end
  def test_costpercapita_af29; assert_in_delta(0, (worksheet.costpercapita_af29||0), 0.001); end
  def test_costpercapita_ag29; assert_in_delta(0, (worksheet.costpercapita_ag29||0), 0.001); end
  def test_costpercapita_ai29; assert_in_epsilon(37.25458564664322, worksheet.costpercapita_ai29, 0.001); end
  def test_costpercapita_aj29; assert_in_epsilon(39.69948488703974, worksheet.costpercapita_aj29, 0.001); end
  def test_costpercapita_ak29; assert_in_epsilon(40.22598368362486, worksheet.costpercapita_ak29, 0.001); end
  def test_costpercapita_al29; assert_in_epsilon(40.410538030184924, worksheet.costpercapita_al29, 0.001); end
  def test_costpercapita_am29; assert_in_epsilon(40.52717167637147, worksheet.costpercapita_am29, 0.001); end
  def test_costpercapita_an29; assert_in_epsilon(42.257147561807585, worksheet.costpercapita_an29, 0.001); end
  def test_costpercapita_ao29; assert_in_epsilon(43.4655246630101, worksheet.costpercapita_ao29, 0.001); end
  def test_costpercapita_ap29; assert_in_epsilon(44.77142809868947, worksheet.costpercapita_ap29, 0.001); end
  def test_costpercapita_aq29; assert_in_epsilon(46.17708881575076, worksheet.costpercapita_aq29, 0.001); end
  def test_costpercapita_as29; assert_in_epsilon(41.64321700701357, worksheet.costpercapita_as29, 0.001); end
  def test_costpercapita_at29; assert_in_epsilon(866.2507209717971, worksheet.costpercapita_at29, 0.001); end
  def test_costpercapita_av29; assert_in_delta(0, (worksheet.costpercapita_av29||0), 0.001); end
  def test_costpercapita_aw29; assert_in_epsilon(15, worksheet.costpercapita_aw29, 0.001); end
  def test_costpercapita_ay29; assert_in_epsilon(7.450917129328644, worksheet.costpercapita_ay29, 0.001); end
  def test_costpercapita_az29; assert_in_epsilon(13.233161629013246, worksheet.costpercapita_az29, 0.001); end
  def test_costpercapita_ba29; assert_in_epsilon(13.408661227874953, worksheet.costpercapita_ba29, 0.001); end
  def test_costpercapita_bb29; assert_in_epsilon(13.470179343394975, worksheet.costpercapita_bb29, 0.001); end
  def test_costpercapita_bc29; assert_in_epsilon(13.509057225457155, worksheet.costpercapita_bc29, 0.001); end
  def test_costpercapita_bd29; assert_in_epsilon(14.085715853935863, worksheet.costpercapita_bd29, 0.001); end
  def test_costpercapita_be29; assert_in_epsilon(14.488508221003366, worksheet.costpercapita_be29, 0.001); end
  def test_costpercapita_bf29; assert_in_epsilon(14.923809366229822, worksheet.costpercapita_bf29, 0.001); end
  def test_costpercapita_bg29; assert_in_epsilon(15.392362938583586, worksheet.costpercapita_bg29, 0.001); end
  def test_costpercapita_bi29; assert_in_epsilon(7.450917129328644, worksheet.costpercapita_bi29, 0.001); end
  def test_costpercapita_bj29; assert_in_epsilon(20.438384250018483, worksheet.costpercapita_bj29, 0.001); end
  def test_costpercapita_bk29; assert_in_epsilon(33.177930579418316, worksheet.costpercapita_bk29, 0.001); end
  def test_costpercapita_bl29; assert_in_epsilon(38.8672638371296, worksheet.costpercapita_bl29, 0.001); end
  def test_costpercapita_bm29; assert_in_epsilon(39.24972776071359, worksheet.costpercapita_bm29, 0.001); end
  def test_costpercapita_bn29; assert_in_epsilon(40.07009904040126, worksheet.costpercapita_bn29, 0.001); end
  def test_costpercapita_bo29; assert_in_epsilon(41.183355649378306, worksheet.costpercapita_bo29, 0.001); end
  def test_costpercapita_bp29; assert_in_epsilon(42.63363184015454, worksheet.costpercapita_bp29, 0.001); end
  def test_costpercapita_bq29; assert_in_epsilon(43.97217349603513, worksheet.costpercapita_bq29, 0.001); end
  def test_costpercapita_bs29; assert_in_epsilon(7.450917129328644, worksheet.costpercapita_bs29, 0.001); end
  def test_costpercapita_bt29; assert_in_epsilon(20.438384250018483, worksheet.costpercapita_bt29, 0.001); end
  def test_costpercapita_bu29; assert_in_epsilon(33.177930579418316, worksheet.costpercapita_bu29, 0.001); end
  def test_costpercapita_bv29; assert_in_epsilon(38.8672638371296, worksheet.costpercapita_bv29, 0.001); end
  def test_costpercapita_bw29; assert_in_epsilon(39.24972776071359, worksheet.costpercapita_bw29, 0.001); end
  def test_costpercapita_bx29; assert_in_epsilon(40.07009904040126, worksheet.costpercapita_bx29, 0.001); end
  def test_costpercapita_by29; assert_in_epsilon(41.183355649378306, worksheet.costpercapita_by29, 0.001); end
  def test_costpercapita_bz29; assert_in_epsilon(42.63363184015454, worksheet.costpercapita_bz29, 0.001); end
  def test_costpercapita_ca29; assert_in_epsilon(43.97217349603513, worksheet.costpercapita_ca29, 0.001); end
  def test_costpercapita_cc29; assert_in_epsilon(34.115942620286425, worksheet.costpercapita_cc29, 0.001); end
  def test_costpercapita_cd29; assert_in_epsilon(707.661736237461, worksheet.costpercapita_cd29, 0.001); end
  def test_costpercapita_cf29; assert_in_epsilon(-29.803668517314577, worksheet.costpercapita_cf29, 0.001); end
  def test_costpercapita_cg29; assert_in_epsilon(-19.261100637021254, worksheet.costpercapita_cg29, 0.001); end
  def test_costpercapita_ch29; assert_in_epsilon(-7.048053104206548, worksheet.costpercapita_ch29, 0.001); end
  def test_costpercapita_ci29; assert_in_epsilon(-1.5432741930553262, worksheet.costpercapita_ci29, 0.001); end
  def test_costpercapita_cj29; assert_in_epsilon(-1.277443915657886, worksheet.costpercapita_cj29, 0.001); end
  def test_costpercapita_ck29; assert_in_epsilon(-2.1870485214063273, worksheet.costpercapita_ck29, 0.001); end
  def test_costpercapita_cl29; assert_in_epsilon(-2.2821690136317985, worksheet.costpercapita_cl29, 0.001); end
  def test_costpercapita_cm29; assert_in_epsilon(-2.1377962585349226, worksheet.costpercapita_cm29, 0.001); end
  def test_costpercapita_cn29; assert_in_epsilon(-2.204915319715623, worksheet.costpercapita_cn29, 0.001); end
  def test_costpercapita_cp29; assert_in_epsilon(-7.527274386727139, worksheet.costpercapita_cp29, 0.001); end
  def test_costpercapita_cq29; assert_in_epsilon(-158.588984734336, worksheet.costpercapita_cq29, 0.001); end
  def test_costpercapita_cr29; assert_equal("ok", worksheet.costpercapita_cr29); end
  def test_costpercapita_a30; assert_equal("X.b", worksheet.costpercapita_a30); end
  def test_costpercapita_b30; assert_equal("Commercial lighting, appliances, and catering", worksheet.costpercapita_b30); end
  def test_costpercapita_c30; assert_equal("Buildings", worksheet.costpercapita_c30); end
  def test_costpercapita_e30; assert_in_delta(0, (worksheet.costpercapita_e30||0), 0.001); end
  def test_costpercapita_f30; assert_in_delta(0, (worksheet.costpercapita_f30||0), 0.001); end
  def test_costpercapita_g30; assert_in_delta(0, (worksheet.costpercapita_g30||0), 0.001); end
  def test_costpercapita_h30; assert_in_delta(0, (worksheet.costpercapita_h30||0), 0.001); end
  def test_costpercapita_i30; assert_in_delta(0, (worksheet.costpercapita_i30||0), 0.001); end
  def test_costpercapita_j30; assert_in_delta(0, (worksheet.costpercapita_j30||0), 0.001); end
  def test_costpercapita_k30; assert_in_delta(0, (worksheet.costpercapita_k30||0), 0.001); end
  def test_costpercapita_l30; assert_in_delta(0, (worksheet.costpercapita_l30||0), 0.001); end
  def test_costpercapita_m30; assert_in_delta(0, (worksheet.costpercapita_m30||0), 0.001); end
  def test_costpercapita_o30; assert_in_delta(0, (worksheet.costpercapita_o30||0), 0.001); end
  def test_costpercapita_p30; assert_in_delta(0, (worksheet.costpercapita_p30||0), 0.001); end
  def test_costpercapita_q30; assert_in_delta(0, (worksheet.costpercapita_q30||0), 0.001); end
  def test_costpercapita_r30; assert_in_delta(0, (worksheet.costpercapita_r30||0), 0.001); end
  def test_costpercapita_s30; assert_in_delta(0, (worksheet.costpercapita_s30||0), 0.001); end
  def test_costpercapita_t30; assert_in_delta(0, (worksheet.costpercapita_t30||0), 0.001); end
  def test_costpercapita_u30; assert_in_delta(0, (worksheet.costpercapita_u30||0), 0.001); end
  def test_costpercapita_v30; assert_in_delta(0, (worksheet.costpercapita_v30||0), 0.001); end
  def test_costpercapita_w30; assert_in_delta(0, (worksheet.costpercapita_w30||0), 0.001); end
  def test_costpercapita_y30; assert_in_delta(0, (worksheet.costpercapita_y30||0), 0.001); end
  def test_costpercapita_z30; assert_in_delta(0, (worksheet.costpercapita_z30||0), 0.001); end
  def test_costpercapita_aa30; assert_in_delta(0, (worksheet.costpercapita_aa30||0), 0.001); end
  def test_costpercapita_ab30; assert_in_delta(0, (worksheet.costpercapita_ab30||0), 0.001); end
  def test_costpercapita_ac30; assert_in_delta(0, (worksheet.costpercapita_ac30||0), 0.001); end
  def test_costpercapita_ad30; assert_in_delta(0, (worksheet.costpercapita_ad30||0), 0.001); end
  def test_costpercapita_ae30; assert_in_delta(0, (worksheet.costpercapita_ae30||0), 0.001); end
  def test_costpercapita_af30; assert_in_delta(0, (worksheet.costpercapita_af30||0), 0.001); end
  def test_costpercapita_ag30; assert_in_delta(0, (worksheet.costpercapita_ag30||0), 0.001); end
  def test_costpercapita_ai30; assert_in_delta(0, (worksheet.costpercapita_ai30||0), 0.001); end
  def test_costpercapita_aj30; assert_in_delta(0, (worksheet.costpercapita_aj30||0), 0.001); end
  def test_costpercapita_ak30; assert_in_delta(0, (worksheet.costpercapita_ak30||0), 0.001); end
  def test_costpercapita_al30; assert_in_delta(0, (worksheet.costpercapita_al30||0), 0.001); end
  def test_costpercapita_am30; assert_in_delta(0, (worksheet.costpercapita_am30||0), 0.001); end
  def test_costpercapita_an30; assert_in_delta(0, (worksheet.costpercapita_an30||0), 0.001); end
  def test_costpercapita_ao30; assert_in_delta(0, (worksheet.costpercapita_ao30||0), 0.001); end
  def test_costpercapita_ap30; assert_in_delta(0, (worksheet.costpercapita_ap30||0), 0.001); end
  def test_costpercapita_aq30; assert_in_delta(0, (worksheet.costpercapita_aq30||0), 0.001); end
  def test_costpercapita_as30; assert_in_delta(0, (worksheet.costpercapita_as30||0), 0.001); end
  def test_costpercapita_at30; assert_in_delta(0, (worksheet.costpercapita_at30||0), 0.001); end
  def test_costpercapita_av30; assert_in_delta(0, (worksheet.costpercapita_av30||0), 0.001); end
  def test_costpercapita_aw30; assert_in_epsilon(5, worksheet.costpercapita_aw30, 0.001); end
  def test_costpercapita_ay30; assert_in_delta(0, (worksheet.costpercapita_ay30||0), 0.001); end
  def test_costpercapita_az30; assert_in_delta(0, (worksheet.costpercapita_az30||0), 0.001); end
  def test_costpercapita_ba30; assert_in_delta(0, (worksheet.costpercapita_ba30||0), 0.001); end
  def test_costpercapita_bb30; assert_in_delta(0, (worksheet.costpercapita_bb30||0), 0.001); end
  def test_costpercapita_bc30; assert_in_delta(0, (worksheet.costpercapita_bc30||0), 0.001); end
  def test_costpercapita_bd30; assert_in_delta(0, (worksheet.costpercapita_bd30||0), 0.001); end
  def test_costpercapita_be30; assert_in_delta(0, (worksheet.costpercapita_be30||0), 0.001); end
  def test_costpercapita_bf30; assert_in_delta(0, (worksheet.costpercapita_bf30||0), 0.001); end
  def test_costpercapita_bg30; assert_in_delta(0, (worksheet.costpercapita_bg30||0), 0.001); end
  def test_costpercapita_bi30; assert_in_delta(0, (worksheet.costpercapita_bi30||0), 0.001); end
  def test_costpercapita_bj30; assert_in_delta(0, (worksheet.costpercapita_bj30||0), 0.001); end
  def test_costpercapita_bk30; assert_in_delta(0, (worksheet.costpercapita_bk30||0), 0.001); end
  def test_costpercapita_bl30; assert_in_delta(0, (worksheet.costpercapita_bl30||0), 0.001); end
  def test_costpercapita_bm30; assert_in_delta(0, (worksheet.costpercapita_bm30||0), 0.001); end
  def test_costpercapita_bn30; assert_in_delta(0, (worksheet.costpercapita_bn30||0), 0.001); end
  def test_costpercapita_bo30; assert_in_delta(0, (worksheet.costpercapita_bo30||0), 0.001); end
  def test_costpercapita_bp30; assert_in_delta(0, (worksheet.costpercapita_bp30||0), 0.001); end
  def test_costpercapita_bq30; assert_in_delta(0, (worksheet.costpercapita_bq30||0), 0.001); end
  def test_costpercapita_bs30; assert_in_delta(0, (worksheet.costpercapita_bs30||0), 0.001); end
  def test_costpercapita_bt30; assert_in_delta(0, (worksheet.costpercapita_bt30||0), 0.001); end
  def test_costpercapita_bu30; assert_in_delta(0, (worksheet.costpercapita_bu30||0), 0.001); end
  def test_costpercapita_bv30; assert_in_delta(0, (worksheet.costpercapita_bv30||0), 0.001); end
  def test_costpercapita_bw30; assert_in_delta(0, (worksheet.costpercapita_bw30||0), 0.001); end
  def test_costpercapita_bx30; assert_in_delta(0, (worksheet.costpercapita_bx30||0), 0.001); end
  def test_costpercapita_by30; assert_in_delta(0, (worksheet.costpercapita_by30||0), 0.001); end
  def test_costpercapita_bz30; assert_in_delta(0, (worksheet.costpercapita_bz30||0), 0.001); end
  def test_costpercapita_ca30; assert_in_delta(0, (worksheet.costpercapita_ca30||0), 0.001); end
  def test_costpercapita_cc30; assert_in_delta(0, (worksheet.costpercapita_cc30||0), 0.001); end
  def test_costpercapita_cd30; assert_in_delta(0, (worksheet.costpercapita_cd30||0), 0.001); end
  def test_costpercapita_cf30; assert_in_delta(0, (worksheet.costpercapita_cf30||0), 0.001); end
  def test_costpercapita_cg30; assert_in_delta(0, (worksheet.costpercapita_cg30||0), 0.001); end
  def test_costpercapita_ch30; assert_in_delta(0, (worksheet.costpercapita_ch30||0), 0.001); end
  def test_costpercapita_ci30; assert_in_delta(0, (worksheet.costpercapita_ci30||0), 0.001); end
  def test_costpercapita_cj30; assert_in_delta(0, (worksheet.costpercapita_cj30||0), 0.001); end
  def test_costpercapita_ck30; assert_in_delta(0, (worksheet.costpercapita_ck30||0), 0.001); end
  def test_costpercapita_cl30; assert_in_delta(0, (worksheet.costpercapita_cl30||0), 0.001); end
  def test_costpercapita_cm30; assert_in_delta(0, (worksheet.costpercapita_cm30||0), 0.001); end
  def test_costpercapita_cn30; assert_in_delta(0, (worksheet.costpercapita_cn30||0), 0.001); end
  def test_costpercapita_cp30; assert_in_delta(0, (worksheet.costpercapita_cp30||0), 0.001); end
  def test_costpercapita_cq30; assert_in_delta(0, (worksheet.costpercapita_cq30||0), 0.001); end
  def test_costpercapita_cr30; assert_equal("ok", worksheet.costpercapita_cr30); end
  def test_costpercapita_a31; assert_equal("XI.a", worksheet.costpercapita_a31); end
  def test_costpercapita_b31; assert_equal("Industrial processes", worksheet.costpercapita_b31); end
  def test_costpercapita_c31; assert_equal("Industry", worksheet.costpercapita_c31); end
  def test_costpercapita_e31; assert_in_delta(0, (worksheet.costpercapita_e31||0), 0.001); end
  def test_costpercapita_f31; assert_in_delta(0, (worksheet.costpercapita_f31||0), 0.001); end
  def test_costpercapita_g31; assert_in_delta(0, (worksheet.costpercapita_g31||0), 0.001); end
  def test_costpercapita_h31; assert_in_delta(0, (worksheet.costpercapita_h31||0), 0.001); end
  def test_costpercapita_i31; assert_in_delta(0, (worksheet.costpercapita_i31||0), 0.001); end
  def test_costpercapita_j31; assert_in_delta(0, (worksheet.costpercapita_j31||0), 0.001); end
  def test_costpercapita_k31; assert_in_delta(0, (worksheet.costpercapita_k31||0), 0.001); end
  def test_costpercapita_l31; assert_in_delta(0, (worksheet.costpercapita_l31||0), 0.001); end
  def test_costpercapita_m31; assert_in_delta(0, (worksheet.costpercapita_m31||0), 0.001); end
  def test_costpercapita_o31; assert_in_delta(0, (worksheet.costpercapita_o31||0), 0.001); end
  def test_costpercapita_p31; assert_in_delta(0, (worksheet.costpercapita_p31||0), 0.001); end
  def test_costpercapita_q31; assert_in_delta(0, (worksheet.costpercapita_q31||0), 0.001); end
  def test_costpercapita_r31; assert_in_delta(0, (worksheet.costpercapita_r31||0), 0.001); end
  def test_costpercapita_s31; assert_in_delta(0, (worksheet.costpercapita_s31||0), 0.001); end
  def test_costpercapita_t31; assert_in_delta(0, (worksheet.costpercapita_t31||0), 0.001); end
  def test_costpercapita_u31; assert_in_delta(0, (worksheet.costpercapita_u31||0), 0.001); end
  def test_costpercapita_v31; assert_in_delta(0, (worksheet.costpercapita_v31||0), 0.001); end
  def test_costpercapita_w31; assert_in_delta(0, (worksheet.costpercapita_w31||0), 0.001); end
  def test_costpercapita_y31; assert_in_delta(0, (worksheet.costpercapita_y31||0), 0.001); end
  def test_costpercapita_z31; assert_in_delta(0, (worksheet.costpercapita_z31||0), 0.001); end
  def test_costpercapita_aa31; assert_in_delta(0, (worksheet.costpercapita_aa31||0), 0.001); end
  def test_costpercapita_ab31; assert_in_delta(0, (worksheet.costpercapita_ab31||0), 0.001); end
  def test_costpercapita_ac31; assert_in_delta(0, (worksheet.costpercapita_ac31||0), 0.001); end
  def test_costpercapita_ad31; assert_in_delta(0, (worksheet.costpercapita_ad31||0), 0.001); end
  def test_costpercapita_ae31; assert_in_delta(0, (worksheet.costpercapita_ae31||0), 0.001); end
  def test_costpercapita_af31; assert_in_delta(0, (worksheet.costpercapita_af31||0), 0.001); end
  def test_costpercapita_ag31; assert_in_delta(0, (worksheet.costpercapita_ag31||0), 0.001); end
  def test_costpercapita_ai31; assert_in_delta(0, (worksheet.costpercapita_ai31||0), 0.001); end
  def test_costpercapita_aj31; assert_in_delta(0, (worksheet.costpercapita_aj31||0), 0.001); end
  def test_costpercapita_ak31; assert_in_delta(0, (worksheet.costpercapita_ak31||0), 0.001); end
  def test_costpercapita_al31; assert_in_delta(0, (worksheet.costpercapita_al31||0), 0.001); end
  def test_costpercapita_am31; assert_in_delta(0, (worksheet.costpercapita_am31||0), 0.001); end
  def test_costpercapita_an31; assert_in_delta(0, (worksheet.costpercapita_an31||0), 0.001); end
  def test_costpercapita_ao31; assert_in_delta(0, (worksheet.costpercapita_ao31||0), 0.001); end
  def test_costpercapita_ap31; assert_in_delta(0, (worksheet.costpercapita_ap31||0), 0.001); end
  def test_costpercapita_aq31; assert_in_delta(0, (worksheet.costpercapita_aq31||0), 0.001); end
  def test_costpercapita_as31; assert_in_delta(0, (worksheet.costpercapita_as31||0), 0.001); end
  def test_costpercapita_at31; assert_in_delta(0, (worksheet.costpercapita_at31||0), 0.001); end
  def test_costpercapita_av31; assert_in_delta(0, (worksheet.costpercapita_av31||0), 0.001); end
  def test_costpercapita_aw31; assert_in_epsilon(5, worksheet.costpercapita_aw31, 0.001); end
  def test_costpercapita_ay31; assert_in_delta(0, (worksheet.costpercapita_ay31||0), 0.001); end
  def test_costpercapita_az31; assert_in_delta(0, (worksheet.costpercapita_az31||0), 0.001); end
  def test_costpercapita_ba31; assert_in_delta(0, (worksheet.costpercapita_ba31||0), 0.001); end
  def test_costpercapita_bb31; assert_in_delta(0, (worksheet.costpercapita_bb31||0), 0.001); end
  def test_costpercapita_bc31; assert_in_delta(0, (worksheet.costpercapita_bc31||0), 0.001); end
  def test_costpercapita_bd31; assert_in_delta(0, (worksheet.costpercapita_bd31||0), 0.001); end
  def test_costpercapita_be31; assert_in_delta(0, (worksheet.costpercapita_be31||0), 0.001); end
  def test_costpercapita_bf31; assert_in_delta(0, (worksheet.costpercapita_bf31||0), 0.001); end
  def test_costpercapita_bg31; assert_in_delta(0, (worksheet.costpercapita_bg31||0), 0.001); end
  def test_costpercapita_bi31; assert_in_delta(0, (worksheet.costpercapita_bi31||0), 0.001); end
  def test_costpercapita_bj31; assert_in_delta(0, (worksheet.costpercapita_bj31||0), 0.001); end
  def test_costpercapita_bk31; assert_in_delta(0, (worksheet.costpercapita_bk31||0), 0.001); end
  def test_costpercapita_bl31; assert_in_delta(0, (worksheet.costpercapita_bl31||0), 0.001); end
  def test_costpercapita_bm31; assert_in_delta(0, (worksheet.costpercapita_bm31||0), 0.001); end
  def test_costpercapita_bn31; assert_in_delta(0, (worksheet.costpercapita_bn31||0), 0.001); end
  def test_costpercapita_bo31; assert_in_delta(0, (worksheet.costpercapita_bo31||0), 0.001); end
  def test_costpercapita_bp31; assert_in_delta(0, (worksheet.costpercapita_bp31||0), 0.001); end
  def test_costpercapita_bq31; assert_in_delta(0, (worksheet.costpercapita_bq31||0), 0.001); end
  def test_costpercapita_bs31; assert_in_delta(0, (worksheet.costpercapita_bs31||0), 0.001); end
  def test_costpercapita_bt31; assert_in_delta(0, (worksheet.costpercapita_bt31||0), 0.001); end
  def test_costpercapita_bu31; assert_in_delta(0, (worksheet.costpercapita_bu31||0), 0.001); end
  def test_costpercapita_bv31; assert_in_delta(0, (worksheet.costpercapita_bv31||0), 0.001); end
  def test_costpercapita_bw31; assert_in_delta(0, (worksheet.costpercapita_bw31||0), 0.001); end
  def test_costpercapita_bx31; assert_in_delta(0, (worksheet.costpercapita_bx31||0), 0.001); end
  def test_costpercapita_by31; assert_in_delta(0, (worksheet.costpercapita_by31||0), 0.001); end
  def test_costpercapita_bz31; assert_in_delta(0, (worksheet.costpercapita_bz31||0), 0.001); end
  def test_costpercapita_ca31; assert_in_delta(0, (worksheet.costpercapita_ca31||0), 0.001); end
  def test_costpercapita_cc31; assert_in_delta(0, (worksheet.costpercapita_cc31||0), 0.001); end
  def test_costpercapita_cd31; assert_in_delta(0, (worksheet.costpercapita_cd31||0), 0.001); end
  def test_costpercapita_cf31; assert_in_delta(0, (worksheet.costpercapita_cf31||0), 0.001); end
  def test_costpercapita_cg31; assert_in_delta(0, (worksheet.costpercapita_cg31||0), 0.001); end
  def test_costpercapita_ch31; assert_in_delta(0, (worksheet.costpercapita_ch31||0), 0.001); end
  def test_costpercapita_ci31; assert_in_delta(0, (worksheet.costpercapita_ci31||0), 0.001); end
  def test_costpercapita_cj31; assert_in_delta(0, (worksheet.costpercapita_cj31||0), 0.001); end
  def test_costpercapita_ck31; assert_in_delta(0, (worksheet.costpercapita_ck31||0), 0.001); end
  def test_costpercapita_cl31; assert_in_delta(0, (worksheet.costpercapita_cl31||0), 0.001); end
  def test_costpercapita_cm31; assert_in_delta(0, (worksheet.costpercapita_cm31||0), 0.001); end
  def test_costpercapita_cn31; assert_in_delta(0, (worksheet.costpercapita_cn31||0), 0.001); end
  def test_costpercapita_cp31; assert_in_delta(0, (worksheet.costpercapita_cp31||0), 0.001); end
  def test_costpercapita_cq31; assert_in_delta(0, (worksheet.costpercapita_cq31||0), 0.001); end
  def test_costpercapita_cr31; assert_equal("ok", worksheet.costpercapita_cr31); end
  def test_costpercapita_a32; assert_equal("XII.a.ICE", worksheet.costpercapita_a32); end
  def test_costpercapita_b32; assert_equal("Conventional cars and buses", worksheet.costpercapita_b32); end
  def test_costpercapita_c32; assert_equal("Transport", worksheet.costpercapita_c32); end
  def test_costpercapita_e32; assert_in_epsilon(802.1745489497979, worksheet.costpercapita_e32, 0.001); end
  def test_costpercapita_f32; assert_in_epsilon(732.2627266320917, worksheet.costpercapita_f32, 0.001); end
  def test_costpercapita_g32; assert_in_epsilon(762.7887807716817, worksheet.costpercapita_g32, 0.001); end
  def test_costpercapita_h32; assert_in_epsilon(699.2682882128161, worksheet.costpercapita_h32, 0.001); end
  def test_costpercapita_i32; assert_in_epsilon(659.2654914864048, worksheet.costpercapita_i32, 0.001); end
  def test_costpercapita_j32; assert_in_epsilon(619.4998539883611, worksheet.costpercapita_j32, 0.001); end
  def test_costpercapita_k32; assert_in_epsilon(574.9975560113246, worksheet.costpercapita_k32, 0.001); end
  def test_costpercapita_l32; assert_in_epsilon(550.6822838255855, worksheet.costpercapita_l32, 0.001); end
  def test_costpercapita_m32; assert_in_epsilon(520.2354956227815, worksheet.costpercapita_m32, 0.001); end
  def test_costpercapita_o32; assert_in_epsilon(906.6199100558307, worksheet.costpercapita_o32, 0.001); end
  def test_costpercapita_p32; assert_in_epsilon(795.0695441040543, worksheet.costpercapita_p32, 0.001); end
  def test_costpercapita_q32; assert_in_epsilon(708.6280928828731, worksheet.costpercapita_q32, 0.001); end
  def test_costpercapita_r32; assert_in_epsilon(597.2000362077671, worksheet.costpercapita_r32, 0.001); end
  def test_costpercapita_s32; assert_in_epsilon(486.5854397634005, worksheet.costpercapita_s32, 0.001); end
  def test_costpercapita_t32; assert_in_epsilon(379.5703510649894, worksheet.costpercapita_t32, 0.001); end
  def test_costpercapita_u32; assert_in_epsilon(276.47769557479046, worksheet.costpercapita_u32, 0.001); end
  def test_costpercapita_v32; assert_in_epsilon(182.397340224721, worksheet.costpercapita_v32, 0.001); end
  def test_costpercapita_w32; assert_in_epsilon(94.25971018111616, worksheet.costpercapita_w32, 0.001); end
  def test_costpercapita_y32; assert_in_delta(0, (worksheet.costpercapita_y32||0), 0.001); end
  def test_costpercapita_z32; assert_in_delta(0, (worksheet.costpercapita_z32||0), 0.001); end
  def test_costpercapita_aa32; assert_in_delta(0, (worksheet.costpercapita_aa32||0), 0.001); end
  def test_costpercapita_ab32; assert_in_delta(0, (worksheet.costpercapita_ab32||0), 0.001); end
  def test_costpercapita_ac32; assert_in_delta(0, (worksheet.costpercapita_ac32||0), 0.001); end
  def test_costpercapita_ad32; assert_in_delta(0, (worksheet.costpercapita_ad32||0), 0.001); end
  def test_costpercapita_ae32; assert_in_delta(0, (worksheet.costpercapita_ae32||0), 0.001); end
  def test_costpercapita_af32; assert_in_delta(0, (worksheet.costpercapita_af32||0), 0.001); end
  def test_costpercapita_ag32; assert_in_delta(0, (worksheet.costpercapita_ag32||0), 0.001); end
  def test_costpercapita_ai32; assert_in_epsilon(1708.7944590056286, worksheet.costpercapita_ai32, 0.001); end
  def test_costpercapita_aj32; assert_in_epsilon(1527.3322707361458, worksheet.costpercapita_aj32, 0.001); end
  def test_costpercapita_ak32; assert_in_epsilon(1471.4168736545548, worksheet.costpercapita_ak32, 0.001); end
  def test_costpercapita_al32; assert_in_epsilon(1296.4683244205833, worksheet.costpercapita_al32, 0.001); end
  def test_costpercapita_am32; assert_in_epsilon(1145.8509312498054, worksheet.costpercapita_am32, 0.001); end
  def test_costpercapita_an32; assert_in_epsilon(999.0702050533504, worksheet.costpercapita_an32, 0.001); end
  def test_costpercapita_ao32; assert_in_epsilon(851.4752515861151, worksheet.costpercapita_ao32, 0.001); end
  def test_costpercapita_ap32; assert_in_epsilon(733.0796240503066, worksheet.costpercapita_ap32, 0.001); end
  def test_costpercapita_aq32; assert_in_epsilon(614.4952058038976, worksheet.costpercapita_aq32, 0.001); end
  def test_costpercapita_as32; assert_in_epsilon(1149.7759050622653, worksheet.costpercapita_as32, 0.001); end
  def test_costpercapita_at32; assert_in_epsilon(25674.39999752628, worksheet.costpercapita_at32, 0.001); end
  def test_costpercapita_av32; assert_in_delta(0, (worksheet.costpercapita_av32||0), 0.001); end
  def test_costpercapita_aw32; assert_in_epsilon(15, worksheet.costpercapita_aw32, 0.001); end
  def test_costpercapita_ay32; assert_in_epsilon(160.4349097899596, worksheet.costpercapita_ay32, 0.001); end
  def test_costpercapita_az32; assert_in_epsilon(244.08757554403056, worksheet.costpercapita_az32, 0.001); end
  def test_costpercapita_ba32; assert_in_epsilon(254.26292692389387, worksheet.costpercapita_ba32, 0.001); end
  def test_costpercapita_bb32; assert_in_epsilon(233.08942940427204, worksheet.costpercapita_bb32, 0.001); end
  def test_costpercapita_bc32; assert_in_epsilon(219.75516382880164, worksheet.costpercapita_bc32, 0.001); end
  def test_costpercapita_bd32; assert_in_epsilon(206.49995132945372, worksheet.costpercapita_bd32, 0.001); end
  def test_costpercapita_be32; assert_in_epsilon(191.66585200377486, worksheet.costpercapita_be32, 0.001); end
  def test_costpercapita_bf32; assert_in_epsilon(183.5607612751952, worksheet.costpercapita_bf32, 0.001); end
  def test_costpercapita_bg32; assert_in_epsilon(173.4118318742605, worksheet.costpercapita_bg32, 0.001); end
  def test_costpercapita_bi32; assert_in_epsilon(160.4349097899596, worksheet.costpercapita_bi32, 0.001); end
  def test_costpercapita_bj32; assert_in_epsilon(399.23213307338114, worksheet.costpercapita_bj32, 0.001); end
  def test_costpercapita_bk32; assert_in_epsilon(640.4249383613557, worksheet.costpercapita_bk32, 0.001); end
  def test_costpercapita_bl32; assert_in_epsilon(708.2657212775488, worksheet.costpercapita_bl32, 0.001); end
  def test_costpercapita_bm32; assert_in_epsilon(686.1352032941583, worksheet.costpercapita_bm32, 0.001); end
  def test_costpercapita_bn32; assert_in_epsilon(642.4594397631158, worksheet.costpercapita_bn32, 0.001); end
  def test_costpercapita_bo32; assert_in_epsilon(603.7643958734112, worksheet.costpercapita_bo32, 0.001); end
  def test_costpercapita_bp32; assert_in_epsilon(569.4679337789029, worksheet.costpercapita_bp32, 0.001); end
  def test_costpercapita_bq32; assert_in_epsilon(537.8840794212015, worksheet.costpercapita_bq32, 0.001); end
  def test_costpercapita_bs32; assert_in_epsilon(1067.0548198457905, worksheet.costpercapita_bs32, 0.001); end
  def test_costpercapita_bt32; assert_in_epsilon(1194.3016771774353, worksheet.costpercapita_bt32, 0.001); end
  def test_costpercapita_bu32; assert_in_epsilon(1349.0530312442288, worksheet.costpercapita_bu32, 0.001); end
  def test_costpercapita_bv32; assert_in_epsilon(1305.4657574853159, worksheet.costpercapita_bv32, 0.001); end
  def test_costpercapita_bw32; assert_in_epsilon(1172.7206430575586, worksheet.costpercapita_bw32, 0.001); end
  def test_costpercapita_bx32; assert_in_epsilon(1022.0297908281052, worksheet.costpercapita_bx32, 0.001); end
  def test_costpercapita_by32; assert_in_epsilon(880.2420914482017, worksheet.costpercapita_by32, 0.001); end
  def test_costpercapita_bz32; assert_in_epsilon(751.8652740036239, worksheet.costpercapita_bz32, 0.001); end
  def test_costpercapita_ca32; assert_in_epsilon(632.1437896023176, worksheet.costpercapita_ca32, 0.001); end
  def test_costpercapita_cc32; assert_in_epsilon(1041.652986076953, worksheet.costpercapita_cc32, 0.001); end
  def test_costpercapita_cd32; assert_in_epsilon(23443.369395925707, worksheet.costpercapita_cd32, 0.001); end
  def test_costpercapita_cf32; assert_in_epsilon(-641.7396391598384, worksheet.costpercapita_cf32, 0.001); end
  def test_costpercapita_cg32; assert_in_epsilon(-333.0305935587105, worksheet.costpercapita_cg32, 0.001); end
  def test_costpercapita_ch32; assert_in_epsilon(-122.363842410326, worksheet.costpercapita_ch32, 0.001); end
  def test_costpercapita_ci32; assert_in_epsilon(8.997433064732684, worksheet.costpercapita_ci32, 0.001); end
  def test_costpercapita_cj32; assert_in_epsilon(26.869711807753465, worksheet.costpercapita_cj32, 0.001); end
  def test_costpercapita_ck32; assert_in_epsilon(22.95958577475473, worksheet.costpercapita_ck32, 0.001); end
  def test_costpercapita_cl32; assert_in_epsilon(28.7668398620866, worksheet.costpercapita_cl32, 0.001); end
  def test_costpercapita_cm32; assert_in_epsilon(18.785649953317325, worksheet.costpercapita_cm32, 0.001); end
  def test_costpercapita_cn32; assert_in_epsilon(17.648583798419967, worksheet.costpercapita_cn32, 0.001); end
  def test_costpercapita_cp32; assert_in_epsilon(-108.12291898531224, worksheet.costpercapita_cp32, 0.001); end
  def test_costpercapita_cq32; assert_in_epsilon(-2231.0306016005707, worksheet.costpercapita_cq32, 0.001); end
  def test_costpercapita_cr32; assert_equal("ok", worksheet.costpercapita_cr32); end
  def test_costpercapita_a33; assert_equal("XII.a.HEV", worksheet.costpercapita_a33); end
  def test_costpercapita_b33; assert_equal("Hybrid cars and buses", worksheet.costpercapita_b33); end
  def test_costpercapita_c33; assert_equal("Transport", worksheet.costpercapita_c33); end
  def test_costpercapita_e33; assert_in_epsilon(1.493996908618019, worksheet.costpercapita_e33, 0.001); end
  def test_costpercapita_f33; assert_in_epsilon(12.6546776733144, worksheet.costpercapita_f33, 0.001); end
  def test_costpercapita_g33; assert_in_epsilon(17.41308853666219, worksheet.costpercapita_g33, 0.001); end
  def test_costpercapita_h33; assert_in_epsilon(85.59635592654675, worksheet.costpercapita_h33, 0.001); end
  def test_costpercapita_i33; assert_in_epsilon(112.79113587041942, worksheet.costpercapita_i33, 0.001); end
  def test_costpercapita_j33; assert_in_epsilon(143.93237353039024, worksheet.costpercapita_j33, 0.001); end
  def test_costpercapita_k33; assert_in_epsilon(164.9617093826074, worksheet.costpercapita_k33, 0.001); end
  def test_costpercapita_l33; assert_in_epsilon(173.45623025702935, worksheet.costpercapita_l33, 0.001); end
  def test_costpercapita_m33; assert_in_epsilon(183.9445964005501, worksheet.costpercapita_m33, 0.001); end
  def test_costpercapita_o33; assert_in_delta(0.4130168017123628, worksheet.costpercapita_o33, 0.001); end
  def test_costpercapita_p33; assert_in_epsilon(6.907359379065622, worksheet.costpercapita_p33, 0.001); end
  def test_costpercapita_q33; assert_in_epsilon(12.061206967480931, worksheet.costpercapita_q33, 0.001); end
  def test_costpercapita_r33; assert_in_epsilon(45.48941115284887, worksheet.costpercapita_r33, 0.001); end
  def test_costpercapita_s33; assert_in_epsilon(67.09666262538366, worksheet.costpercapita_s33, 0.001); end
  def test_costpercapita_t33; assert_in_epsilon(79.05335313215463, worksheet.costpercapita_t33, 0.001); end
  def test_costpercapita_u33; assert_in_epsilon(76.55793043029821, worksheet.costpercapita_u33, 0.001); end
  def test_costpercapita_v33; assert_in_epsilon(58.246130081547534, worksheet.costpercapita_v33, 0.001); end
  def test_costpercapita_w33; assert_in_epsilon(27.385479957419015, worksheet.costpercapita_w33, 0.001); end
  def test_costpercapita_y33; assert_in_delta(0, (worksheet.costpercapita_y33||0), 0.001); end
  def test_costpercapita_z33; assert_in_delta(0, (worksheet.costpercapita_z33||0), 0.001); end
  def test_costpercapita_aa33; assert_in_delta(0, (worksheet.costpercapita_aa33||0), 0.001); end
  def test_costpercapita_ab33; assert_in_delta(0, (worksheet.costpercapita_ab33||0), 0.001); end
  def test_costpercapita_ac33; assert_in_delta(0, (worksheet.costpercapita_ac33||0), 0.001); end
  def test_costpercapita_ad33; assert_in_delta(0, (worksheet.costpercapita_ad33||0), 0.001); end
  def test_costpercapita_ae33; assert_in_delta(0, (worksheet.costpercapita_ae33||0), 0.001); end
  def test_costpercapita_af33; assert_in_delta(0, (worksheet.costpercapita_af33||0), 0.001); end
  def test_costpercapita_ag33; assert_in_delta(0, (worksheet.costpercapita_ag33||0), 0.001); end
  def test_costpercapita_ai33; assert_in_epsilon(1.9070137103303817, worksheet.costpercapita_ai33, 0.001); end
  def test_costpercapita_aj33; assert_in_epsilon(19.56203705238002, worksheet.costpercapita_aj33, 0.001); end
  def test_costpercapita_ak33; assert_in_epsilon(29.474295504143118, worksheet.costpercapita_ak33, 0.001); end
  def test_costpercapita_al33; assert_in_epsilon(131.08576707939562, worksheet.costpercapita_al33, 0.001); end
  def test_costpercapita_am33; assert_in_epsilon(179.88779849580308, worksheet.costpercapita_am33, 0.001); end
  def test_costpercapita_an33; assert_in_epsilon(222.98572666254483, worksheet.costpercapita_an33, 0.001); end
  def test_costpercapita_ao33; assert_in_epsilon(241.5196398129056, worksheet.costpercapita_ao33, 0.001); end
  def test_costpercapita_ap33; assert_in_epsilon(231.70236033857688, worksheet.costpercapita_ap33, 0.001); end
  def test_costpercapita_aq33; assert_in_epsilon(211.33007635796912, worksheet.costpercapita_aq33, 0.001); end
  def test_costpercapita_as33; assert_in_epsilon(141.05052389044985, worksheet.costpercapita_as33, 0.001); end
  def test_costpercapita_at33; assert_in_epsilon(2570.168531585556, worksheet.costpercapita_at33, 0.001); end
  def test_costpercapita_av33; assert_in_delta(0, (worksheet.costpercapita_av33||0), 0.001); end
  def test_costpercapita_aw33; assert_in_epsilon(15, worksheet.costpercapita_aw33, 0.001); end
  def test_costpercapita_ay33; assert_in_delta(0.29879938172360376, worksheet.costpercapita_ay33, 0.001); end
  def test_costpercapita_az33; assert_in_epsilon(4.2182258911048, worksheet.costpercapita_az33, 0.001); end
  def test_costpercapita_ba33; assert_in_epsilon(5.8043628455540635, worksheet.costpercapita_ba33, 0.001); end
  def test_costpercapita_bb33; assert_in_epsilon(28.532118642182247, worksheet.costpercapita_bb33, 0.001); end
  def test_costpercapita_bc33; assert_in_epsilon(37.59704529013981, worksheet.costpercapita_bc33, 0.001); end
  def test_costpercapita_bd33; assert_in_epsilon(47.977457843463405, worksheet.costpercapita_bd33, 0.001); end
  def test_costpercapita_be33; assert_in_epsilon(54.98723646086913, worksheet.costpercapita_be33, 0.001); end
  def test_costpercapita_bf33; assert_in_epsilon(57.81874341900978, worksheet.costpercapita_bf33, 0.001); end
  def test_costpercapita_bg33; assert_in_epsilon(61.31486546685003, worksheet.costpercapita_bg33, 0.001); end
  def test_costpercapita_bi33; assert_in_delta(0.29879938172360376, worksheet.costpercapita_bi33, 0.001); end
  def test_costpercapita_bj33; assert_in_epsilon(4.507172342523899, worksheet.costpercapita_bj33, 0.001); end
  def test_costpercapita_bk33; assert_in_epsilon(10.163978701836884, worksheet.costpercapita_bk33, 0.001); end
  def test_costpercapita_bl33; assert_in_epsilon(38.11055225200787, worksheet.costpercapita_bl33, 0.001); end
  def test_costpercapita_bm33; assert_in_epsilon(70.82063567091903, worksheet.costpercapita_bm33, 0.001); end
  def test_costpercapita_bn33; assert_in_epsilon(111.78776316461347, worksheet.costpercapita_bn33, 0.001); end
  def test_costpercapita_bo33; assert_in_epsilon(137.87000729574262, worksheet.costpercapita_bo33, 0.001); end
  def test_costpercapita_bp33; assert_in_epsilon(157.72673032227615, worksheet.costpercapita_bp33, 0.001); end
  def test_costpercapita_bq33; assert_in_epsilon(170.93927843734468, worksheet.costpercapita_bq33, 0.001); end
  def test_costpercapita_bs33; assert_in_delta(0.7118161834359666, worksheet.costpercapita_bs33, 0.001); end
  def test_costpercapita_bt33; assert_in_epsilon(11.41453172158952, worksheet.costpercapita_bt33, 0.001); end
  def test_costpercapita_bu33; assert_in_epsilon(22.225185669317813, worksheet.costpercapita_bu33, 0.001); end
  def test_costpercapita_bv33; assert_in_epsilon(83.59996340485675, worksheet.costpercapita_bv33, 0.001); end
  def test_costpercapita_bw33; assert_in_epsilon(137.91729829630268, worksheet.costpercapita_bw33, 0.001); end
  def test_costpercapita_bx33; assert_in_epsilon(190.8411162967681, worksheet.costpercapita_bx33, 0.001); end
  def test_costpercapita_by33; assert_in_epsilon(214.42793772604082, worksheet.costpercapita_by33, 0.001); end
  def test_costpercapita_bz33; assert_in_epsilon(215.9728604038237, worksheet.costpercapita_bz33, 0.001); end
  def test_costpercapita_ca33; assert_in_epsilon(198.3247583947637, worksheet.costpercapita_ca33, 0.001); end
  def test_costpercapita_cc33; assert_in_epsilon(119.49282978854434, worksheet.costpercapita_cc33, 0.001); end
  def test_costpercapita_cd33; assert_in_epsilon(2104.1145018776, worksheet.costpercapita_cd33, 0.001); end
  def test_costpercapita_cf33; assert_in_epsilon(-1.195197526894415, worksheet.costpercapita_cf33, 0.001); end
  def test_costpercapita_cg33; assert_in_epsilon(-8.1475053307905, worksheet.costpercapita_cg33, 0.001); end
  def test_costpercapita_ch33; assert_in_epsilon(-7.249109834825306, worksheet.costpercapita_ch33, 0.001); end
  def test_costpercapita_ci33; assert_in_epsilon(-47.48580367453887, worksheet.costpercapita_ci33, 0.001); end
  def test_costpercapita_cj33; assert_in_epsilon(-41.97050019950041, worksheet.costpercapita_cj33, 0.001); end
  def test_costpercapita_ck33; assert_in_epsilon(-32.14461036577676, worksheet.costpercapita_ck33, 0.001); end
  def test_costpercapita_cl33; assert_in_epsilon(-27.091702086864778, worksheet.costpercapita_cl33, 0.001); end
  def test_costpercapita_cm33; assert_in_epsilon(-15.729499934753177, worksheet.costpercapita_cm33, 0.001); end
  def test_costpercapita_cn33; assert_in_epsilon(-13.005317963205414, worksheet.costpercapita_cn33, 0.001); end
  def test_costpercapita_cp33; assert_in_epsilon(-21.55769410190551, worksheet.costpercapita_cp33, 0.001); end
  def test_costpercapita_cq33; assert_in_epsilon(-466.05402970795586, worksheet.costpercapita_cq33, 0.001); end
  def test_costpercapita_cr33; assert_equal("ok", worksheet.costpercapita_cr33); end
  def test_costpercapita_a34; assert_equal("XII.a.EV", worksheet.costpercapita_a34); end
  def test_costpercapita_b34; assert_equal("Electric cars and buses", worksheet.costpercapita_b34); end
  def test_costpercapita_c34; assert_equal("Transport", worksheet.costpercapita_c34); end
  def test_costpercapita_e34; assert_in_delta(0, (worksheet.costpercapita_e34||0), 0.001); end
  def test_costpercapita_f34; assert_in_epsilon(1.7610418650975563, worksheet.costpercapita_f34, 0.001); end
  def test_costpercapita_g34; assert_in_epsilon(2.4157198597272314, worksheet.costpercapita_g34, 0.001); end
  def test_costpercapita_h34; assert_in_epsilon(13.55432518949977, worksheet.costpercapita_h34, 0.001); end
  def test_costpercapita_i34; assert_in_epsilon(17.57372715584558, worksheet.costpercapita_i34, 0.001); end
  def test_costpercapita_j34; assert_in_epsilon(21.970683863587883, worksheet.costpercapita_j34, 0.001); end
  def test_costpercapita_k34; assert_in_epsilon(24.47060247344557, worksheet.costpercapita_k34, 0.001); end
  def test_costpercapita_l34; assert_in_epsilon(21.37068841556231, worksheet.costpercapita_l34, 0.001); end
  def test_costpercapita_m34; assert_in_epsilon(20.80819232469555, worksheet.costpercapita_m34, 0.001); end
  def test_costpercapita_o34; assert_in_delta(0, (worksheet.costpercapita_o34||0), 0.001); end
  def test_costpercapita_p34; assert_in_delta(0.624834638272208, worksheet.costpercapita_p34, 0.001); end
  def test_costpercapita_q34; assert_in_epsilon(1.1325452918250327, worksheet.costpercapita_q34, 0.001); end
  def test_costpercapita_r34; assert_in_epsilon(4.598571131555122, worksheet.costpercapita_r34, 0.001); end
  def test_costpercapita_s34; assert_in_epsilon(6.890061191172301, worksheet.costpercapita_s34, 0.001); end
  def test_costpercapita_t34; assert_in_epsilon(8.249262161367943, worksheet.costpercapita_t34, 0.001); end
  def test_costpercapita_u34; assert_in_epsilon(8.170868303727529, worksheet.costpercapita_u34, 0.001); end
  def test_costpercapita_v34; assert_in_epsilon(6.030027316470208, worksheet.costpercapita_v34, 0.001); end
  def test_costpercapita_w34; assert_in_epsilon(3.156386467116557, worksheet.costpercapita_w34, 0.001); end
  def test_costpercapita_y34; assert_in_delta(0, (worksheet.costpercapita_y34||0), 0.001); end
  def test_costpercapita_z34; assert_in_delta(0, (worksheet.costpercapita_z34||0), 0.001); end
  def test_costpercapita_aa34; assert_in_delta(0, (worksheet.costpercapita_aa34||0), 0.001); end
  def test_costpercapita_ab34; assert_in_delta(0, (worksheet.costpercapita_ab34||0), 0.001); end
  def test_costpercapita_ac34; assert_in_delta(0, (worksheet.costpercapita_ac34||0), 0.001); end
  def test_costpercapita_ad34; assert_in_delta(0, (worksheet.costpercapita_ad34||0), 0.001); end
  def test_costpercapita_ae34; assert_in_delta(0, (worksheet.costpercapita_ae34||0), 0.001); end
  def test_costpercapita_af34; assert_in_delta(0, (worksheet.costpercapita_af34||0), 0.001); end
  def test_costpercapita_ag34; assert_in_delta(0, (worksheet.costpercapita_ag34||0), 0.001); end
  def test_costpercapita_ai34; assert_in_delta(0, (worksheet.costpercapita_ai34||0), 0.001); end
  def test_costpercapita_aj34; assert_in_epsilon(2.3858765033697646, worksheet.costpercapita_aj34, 0.001); end
  def test_costpercapita_ak34; assert_in_epsilon(3.5482651515522643, worksheet.costpercapita_ak34, 0.001); end
  def test_costpercapita_al34; assert_in_epsilon(18.152896321054893, worksheet.costpercapita_al34, 0.001); end
  def test_costpercapita_am34; assert_in_epsilon(24.463788347017886, worksheet.costpercapita_am34, 0.001); end
  def test_costpercapita_an34; assert_in_epsilon(30.219946024955828, worksheet.costpercapita_an34, 0.001); end
  def test_costpercapita_ao34; assert_in_epsilon(32.641470777173105, worksheet.costpercapita_ao34, 0.001); end
  def test_costpercapita_ap34; assert_in_epsilon(27.400715732032516, worksheet.costpercapita_ap34, 0.001); end
  def test_costpercapita_aq34; assert_in_epsilon(23.96457879181211, worksheet.costpercapita_aq34, 0.001); end
  def test_costpercapita_as34; assert_in_epsilon(18.086393072107597, worksheet.costpercapita_as34, 0.001); end
  def test_costpercapita_at34; assert_in_epsilon(334.2265841740783, worksheet.costpercapita_at34, 0.001); end
  def test_costpercapita_av34; assert_in_delta(0, (worksheet.costpercapita_av34||0), 0.001); end
  def test_costpercapita_aw34; assert_in_epsilon(15, worksheet.costpercapita_aw34, 0.001); end
  def test_costpercapita_ay34; assert_in_delta(0, (worksheet.costpercapita_ay34||0), 0.001); end
  def test_costpercapita_az34; assert_in_delta(0.5870139550325187, worksheet.costpercapita_az34, 0.001); end
  def test_costpercapita_ba34; assert_in_delta(0.8052399532424105, worksheet.costpercapita_ba34, 0.001); end
  def test_costpercapita_bb34; assert_in_epsilon(4.518108396499923, worksheet.costpercapita_bb34, 0.001); end
  def test_costpercapita_bc34; assert_in_epsilon(5.857909051948528, worksheet.costpercapita_bc34, 0.001); end
  def test_costpercapita_bd34; assert_in_epsilon(7.323561287862628, worksheet.costpercapita_bd34, 0.001); end
  def test_costpercapita_be34; assert_in_epsilon(8.156867491148523, worksheet.costpercapita_be34, 0.001); end
  def test_costpercapita_bf34; assert_in_epsilon(7.1235628051874365, worksheet.costpercapita_bf34, 0.001); end
  def test_costpercapita_bg34; assert_in_epsilon(6.936064108231849, worksheet.costpercapita_bg34, 0.001); end
  def test_costpercapita_bi34; assert_in_delta(0, (worksheet.costpercapita_bi34||0), 0.001); end
  def test_costpercapita_bj34; assert_in_delta(0.5870139550325187, worksheet.costpercapita_bj34, 0.001); end
  def test_costpercapita_bk34; assert_in_epsilon(1.373036157100459, worksheet.costpercapita_bk34, 0.001); end
  def test_costpercapita_bl34; assert_in_epsilon(5.848630583216724, worksheet.costpercapita_bl34, 0.001); end
  def test_costpercapita_bm34; assert_in_epsilon(11.011570856942859, worksheet.costpercapita_bm34, 0.001); end
  def test_costpercapita_bn34; assert_in_epsilon(17.334636619459147, worksheet.costpercapita_bn34, 0.001); end
  def test_costpercapita_bo34; assert_in_epsilon(20.922180345978727, worksheet.costpercapita_bo34, 0.001); end
  def test_costpercapita_bp34; assert_in_epsilon(22.14211961812175, worksheet.costpercapita_bp34, 0.001); end
  def test_costpercapita_bq34; assert_in_epsilon(21.771658975444804, worksheet.costpercapita_bq34, 0.001); end
  def test_costpercapita_bs34; assert_in_delta(0, (worksheet.costpercapita_bs34||0), 0.001); end
  def test_costpercapita_bt34; assert_in_epsilon(1.2118485933047267, worksheet.costpercapita_bt34, 0.001); end
  def test_costpercapita_bu34; assert_in_epsilon(2.5055814489254917, worksheet.costpercapita_bu34, 0.001); end
  def test_costpercapita_bv34; assert_in_epsilon(10.447201714771847, worksheet.costpercapita_bv34, 0.001); end
  def test_costpercapita_bw34; assert_in_epsilon(17.901632048115157, worksheet.costpercapita_bw34, 0.001); end
  def test_costpercapita_bx34; assert_in_epsilon(25.583898780827088, worksheet.costpercapita_bx34, 0.001); end
  def test_costpercapita_by34; assert_in_epsilon(29.093048649706255, worksheet.costpercapita_by34, 0.001); end
  def test_costpercapita_bz34; assert_in_epsilon(28.17214693459196, worksheet.costpercapita_bz34, 0.001); end
  def test_costpercapita_ca34; assert_in_epsilon(24.928045442561363, worksheet.costpercapita_ca34, 0.001); end
  def test_costpercapita_cc34; assert_in_epsilon(15.538155956978208, worksheet.costpercapita_cc34, 0.001); end
  def test_costpercapita_cd34; assert_in_epsilon(272.4340647058905, worksheet.costpercapita_cd34, 0.001); end
  def test_costpercapita_cf34; assert_in_delta(0, (worksheet.costpercapita_cf34||0), 0.001); end
  def test_costpercapita_cg34; assert_in_epsilon(-1.1740279100650373, worksheet.costpercapita_cg34, 0.001); end
  def test_costpercapita_ch34; assert_in_epsilon(-1.0426837026267721, worksheet.costpercapita_ch34, 0.001); end
  def test_costpercapita_ci34; assert_in_epsilon(-7.705694606283045, worksheet.costpercapita_ci34, 0.001); end
  def test_costpercapita_cj34; assert_in_epsilon(-6.562156298902724, worksheet.costpercapita_cj34, 0.001); end
  def test_costpercapita_ck34; assert_in_epsilon(-4.636047244128737, worksheet.costpercapita_ck34, 0.001); end
  def test_costpercapita_cl34; assert_in_epsilon(-3.548422127466845, worksheet.costpercapita_cl34, 0.001); end
  def test_costpercapita_cm34; assert_in_delta(0.7714312025594426, worksheet.costpercapita_cm34, 0.001); end
  def test_costpercapita_cn34; assert_in_delta(0.963466650749255, worksheet.costpercapita_cn34, 0.001); end
  def test_costpercapita_cp34; assert_in_epsilon(-2.548237115129385, worksheet.costpercapita_cp34, 0.001); end
  def test_costpercapita_cq34; assert_in_epsilon(-61.79251946818778, worksheet.costpercapita_cq34, 0.001); end
  def test_costpercapita_cr34; assert_equal("ok", worksheet.costpercapita_cr34); end
  def test_costpercapita_a35; assert_equal("XII.a.FCV", worksheet.costpercapita_a35); end
  def test_costpercapita_b35; assert_equal("Fuel cell cars and buses", worksheet.costpercapita_b35); end
  def test_costpercapita_c35; assert_equal("Transport", worksheet.costpercapita_c35); end
  def test_costpercapita_e35; assert_in_delta(0, (worksheet.costpercapita_e35||0), 0.001); end
  def test_costpercapita_f35; assert_in_delta(0, (worksheet.costpercapita_f35||0), 0.001); end
  def test_costpercapita_g35; assert_in_delta(0, (worksheet.costpercapita_g35||0), 0.001); end
  def test_costpercapita_h35; assert_in_delta(0, (worksheet.costpercapita_h35||0), 0.001); end
  def test_costpercapita_i35; assert_in_delta(0, (worksheet.costpercapita_i35||0), 0.001); end
  def test_costpercapita_j35; assert_in_delta(0, (worksheet.costpercapita_j35||0), 0.001); end
  def test_costpercapita_k35; assert_in_delta(0, (worksheet.costpercapita_k35||0), 0.001); end
  def test_costpercapita_l35; assert_in_delta(0, (worksheet.costpercapita_l35||0), 0.001); end
  def test_costpercapita_m35; assert_in_delta(0, (worksheet.costpercapita_m35||0), 0.001); end
  def test_costpercapita_o35; assert_in_delta(0, (worksheet.costpercapita_o35||0), 0.001); end
  def test_costpercapita_p35; assert_in_delta(0, (worksheet.costpercapita_p35||0), 0.001); end
  def test_costpercapita_q35; assert_in_delta(0, (worksheet.costpercapita_q35||0), 0.001); end
  def test_costpercapita_r35; assert_in_delta(0, (worksheet.costpercapita_r35||0), 0.001); end
  def test_costpercapita_s35; assert_in_delta(0, (worksheet.costpercapita_s35||0), 0.001); end
  def test_costpercapita_t35; assert_in_delta(0, (worksheet.costpercapita_t35||0), 0.001); end
  def test_costpercapita_u35; assert_in_delta(0, (worksheet.costpercapita_u35||0), 0.001); end
  def test_costpercapita_v35; assert_in_delta(0, (worksheet.costpercapita_v35||0), 0.001); end
  def test_costpercapita_w35; assert_in_delta(0, (worksheet.costpercapita_w35||0), 0.001); end
  def test_costpercapita_y35; assert_in_delta(0, (worksheet.costpercapita_y35||0), 0.001); end
  def test_costpercapita_z35; assert_in_delta(0, (worksheet.costpercapita_z35||0), 0.001); end
  def test_costpercapita_aa35; assert_in_delta(0, (worksheet.costpercapita_aa35||0), 0.001); end
  def test_costpercapita_ab35; assert_in_delta(0, (worksheet.costpercapita_ab35||0), 0.001); end
  def test_costpercapita_ac35; assert_in_delta(0, (worksheet.costpercapita_ac35||0), 0.001); end
  def test_costpercapita_ad35; assert_in_delta(0, (worksheet.costpercapita_ad35||0), 0.001); end
  def test_costpercapita_ae35; assert_in_delta(0, (worksheet.costpercapita_ae35||0), 0.001); end
  def test_costpercapita_af35; assert_in_delta(0, (worksheet.costpercapita_af35||0), 0.001); end
  def test_costpercapita_ag35; assert_in_delta(0, (worksheet.costpercapita_ag35||0), 0.001); end
  def test_costpercapita_ai35; assert_in_delta(0, (worksheet.costpercapita_ai35||0), 0.001); end
  def test_costpercapita_aj35; assert_in_delta(0, (worksheet.costpercapita_aj35||0), 0.001); end
  def test_costpercapita_ak35; assert_in_delta(0, (worksheet.costpercapita_ak35||0), 0.001); end
  def test_costpercapita_al35; assert_in_delta(0, (worksheet.costpercapita_al35||0), 0.001); end
  def test_costpercapita_am35; assert_in_delta(0, (worksheet.costpercapita_am35||0), 0.001); end
  def test_costpercapita_an35; assert_in_delta(0, (worksheet.costpercapita_an35||0), 0.001); end
  def test_costpercapita_ao35; assert_in_delta(0, (worksheet.costpercapita_ao35||0), 0.001); end
  def test_costpercapita_ap35; assert_in_delta(0, (worksheet.costpercapita_ap35||0), 0.001); end
  def test_costpercapita_aq35; assert_in_delta(0, (worksheet.costpercapita_aq35||0), 0.001); end
  def test_costpercapita_as35; assert_in_delta(0, (worksheet.costpercapita_as35||0), 0.001); end
  def test_costpercapita_at35; assert_in_delta(0, (worksheet.costpercapita_at35||0), 0.001); end
  def test_costpercapita_av35; assert_in_delta(0, (worksheet.costpercapita_av35||0), 0.001); end
  def test_costpercapita_aw35; assert_in_epsilon(15, worksheet.costpercapita_aw35, 0.001); end
  def test_costpercapita_ay35; assert_in_delta(0, (worksheet.costpercapita_ay35||0), 0.001); end
  def test_costpercapita_az35; assert_in_delta(0, (worksheet.costpercapita_az35||0), 0.001); end
  def test_costpercapita_ba35; assert_in_delta(0, (worksheet.costpercapita_ba35||0), 0.001); end
  def test_costpercapita_bb35; assert_in_delta(0, (worksheet.costpercapita_bb35||0), 0.001); end
  def test_costpercapita_bc35; assert_in_delta(0, (worksheet.costpercapita_bc35||0), 0.001); end
  def test_costpercapita_bd35; assert_in_delta(0, (worksheet.costpercapita_bd35||0), 0.001); end
  def test_costpercapita_be35; assert_in_delta(0, (worksheet.costpercapita_be35||0), 0.001); end
  def test_costpercapita_bf35; assert_in_delta(0, (worksheet.costpercapita_bf35||0), 0.001); end
  def test_costpercapita_bg35; assert_in_delta(0, (worksheet.costpercapita_bg35||0), 0.001); end
  def test_costpercapita_bi35; assert_in_delta(0, (worksheet.costpercapita_bi35||0), 0.001); end
  def test_costpercapita_bj35; assert_in_delta(0, (worksheet.costpercapita_bj35||0), 0.001); end
  def test_costpercapita_bk35; assert_in_delta(0, (worksheet.costpercapita_bk35||0), 0.001); end
  def test_costpercapita_bl35; assert_in_delta(0, (worksheet.costpercapita_bl35||0), 0.001); end
  def test_costpercapita_bm35; assert_in_delta(0, (worksheet.costpercapita_bm35||0), 0.001); end
  def test_costpercapita_bn35; assert_in_delta(0, (worksheet.costpercapita_bn35||0), 0.001); end
  def test_costpercapita_bo35; assert_in_delta(0, (worksheet.costpercapita_bo35||0), 0.001); end
  def test_costpercapita_bp35; assert_in_delta(0, (worksheet.costpercapita_bp35||0), 0.001); end
  def test_costpercapita_bq35; assert_in_delta(0, (worksheet.costpercapita_bq35||0), 0.001); end
  def test_costpercapita_bs35; assert_in_delta(0, (worksheet.costpercapita_bs35||0), 0.001); end
  def test_costpercapita_bt35; assert_in_delta(0, (worksheet.costpercapita_bt35||0), 0.001); end
  def test_costpercapita_bu35; assert_in_delta(0, (worksheet.costpercapita_bu35||0), 0.001); end
  def test_costpercapita_bv35; assert_in_delta(0, (worksheet.costpercapita_bv35||0), 0.001); end
  def test_costpercapita_bw35; assert_in_delta(0, (worksheet.costpercapita_bw35||0), 0.001); end
  def test_costpercapita_bx35; assert_in_delta(0, (worksheet.costpercapita_bx35||0), 0.001); end
  def test_costpercapita_by35; assert_in_delta(0, (worksheet.costpercapita_by35||0), 0.001); end
  def test_costpercapita_bz35; assert_in_delta(0, (worksheet.costpercapita_bz35||0), 0.001); end
  def test_costpercapita_ca35; assert_in_delta(0, (worksheet.costpercapita_ca35||0), 0.001); end
  def test_costpercapita_cc35; assert_in_delta(0, (worksheet.costpercapita_cc35||0), 0.001); end
  def test_costpercapita_cd35; assert_in_delta(0, (worksheet.costpercapita_cd35||0), 0.001); end
  def test_costpercapita_cf35; assert_in_delta(0, (worksheet.costpercapita_cf35||0), 0.001); end
  def test_costpercapita_cg35; assert_in_delta(0, (worksheet.costpercapita_cg35||0), 0.001); end
  def test_costpercapita_ch35; assert_in_delta(0, (worksheet.costpercapita_ch35||0), 0.001); end
  def test_costpercapita_ci35; assert_in_delta(0, (worksheet.costpercapita_ci35||0), 0.001); end
  def test_costpercapita_cj35; assert_in_delta(0, (worksheet.costpercapita_cj35||0), 0.001); end
  def test_costpercapita_ck35; assert_in_delta(0, (worksheet.costpercapita_ck35||0), 0.001); end
  def test_costpercapita_cl35; assert_in_delta(0, (worksheet.costpercapita_cl35||0), 0.001); end
  def test_costpercapita_cm35; assert_in_delta(0, (worksheet.costpercapita_cm35||0), 0.001); end
  def test_costpercapita_cn35; assert_in_delta(0, (worksheet.costpercapita_cn35||0), 0.001); end
  def test_costpercapita_cp35; assert_in_delta(0, (worksheet.costpercapita_cp35||0), 0.001); end
  def test_costpercapita_cq35; assert_in_delta(0, (worksheet.costpercapita_cq35||0), 0.001); end
  def test_costpercapita_cr35; assert_equal("ok", worksheet.costpercapita_cr35); end
  def test_costpercapita_a36; assert_equal("XII.a.Bike", worksheet.costpercapita_a36); end
  def test_costpercapita_b36; assert_equal("Bikes", worksheet.costpercapita_b36); end
  def test_costpercapita_c36; assert_equal("Transport", worksheet.costpercapita_c36); end
  def test_costpercapita_e36; assert_in_epsilon(53.20482346514259, worksheet.costpercapita_e36, 0.001); end
  def test_costpercapita_f36; assert_in_epsilon(48.71019192095353, worksheet.costpercapita_f36, 0.001); end
  def test_costpercapita_g36; assert_in_epsilon(47.91647707232122, worksheet.costpercapita_g36, 0.001); end
  def test_costpercapita_h36; assert_in_epsilon(46.19719773859914, worksheet.costpercapita_h36, 0.001); end
  def test_costpercapita_i36; assert_in_epsilon(43.405771179450916, worksheet.costpercapita_i36, 0.001); end
  def test_costpercapita_j36; assert_in_epsilon(39.706235199126546, worksheet.costpercapita_j36, 0.001); end
  def test_costpercapita_k36; assert_in_epsilon(34.66806458733186, worksheet.costpercapita_k36, 0.001); end
  def test_costpercapita_l36; assert_in_epsilon(28.419029798891355, worksheet.costpercapita_l36, 0.001); end
  def test_costpercapita_m36; assert_in_epsilon(20.745915732453245, worksheet.costpercapita_m36, 0.001); end
  def test_costpercapita_o36; assert_in_epsilon(25.33060278324329, worksheet.costpercapita_o36, 0.001); end
  def test_costpercapita_p36; assert_in_epsilon(27.061217733863067, worksheet.costpercapita_p36, 0.001); end
  def test_costpercapita_q36; assert_in_epsilon(29.947798170200763, worksheet.costpercapita_q36, 0.001); end
  def test_costpercapita_r36; assert_in_epsilon(32.99799838471367, worksheet.costpercapita_r36, 0.001); end
  def test_costpercapita_s36; assert_in_epsilon(36.171475982875755, worksheet.costpercapita_s36, 0.001); end
  def test_costpercapita_t36; assert_in_epsilon(39.70623519912653, worksheet.costpercapita_t36, 0.001); end
  def test_costpercapita_u36; assert_in_epsilon(43.33508073416481, worksheet.costpercapita_u36, 0.001); end
  def test_costpercapita_v36; assert_in_epsilon(47.36504966481889, worksheet.costpercapita_v36, 0.001); end
  def test_costpercapita_w36; assert_in_epsilon(51.86478933113311, worksheet.costpercapita_w36, 0.001); end
  def test_costpercapita_y36; assert_in_delta(0, (worksheet.costpercapita_y36||0), 0.001); end
  def test_costpercapita_z36; assert_in_delta(0, (worksheet.costpercapita_z36||0), 0.001); end
  def test_costpercapita_aa36; assert_in_delta(0, (worksheet.costpercapita_aa36||0), 0.001); end
  def test_costpercapita_ab36; assert_in_delta(0, (worksheet.costpercapita_ab36||0), 0.001); end
  def test_costpercapita_ac36; assert_in_delta(0, (worksheet.costpercapita_ac36||0), 0.001); end
  def test_costpercapita_ad36; assert_in_delta(0, (worksheet.costpercapita_ad36||0), 0.001); end
  def test_costpercapita_ae36; assert_in_delta(0, (worksheet.costpercapita_ae36||0), 0.001); end
  def test_costpercapita_af36; assert_in_delta(0, (worksheet.costpercapita_af36||0), 0.001); end
  def test_costpercapita_ag36; assert_in_delta(0, (worksheet.costpercapita_ag36||0), 0.001); end
  def test_costpercapita_ai36; assert_in_epsilon(78.53542624838589, worksheet.costpercapita_ai36, 0.001); end
  def test_costpercapita_aj36; assert_in_epsilon(75.77140965481658, worksheet.costpercapita_aj36, 0.001); end
  def test_costpercapita_ak36; assert_in_epsilon(77.86427524252198, worksheet.costpercapita_ak36, 0.001); end
  def test_costpercapita_al36; assert_in_epsilon(79.1951961233128, worksheet.costpercapita_al36, 0.001); end
  def test_costpercapita_am36; assert_in_epsilon(79.57724716232667, worksheet.costpercapita_am36, 0.001); end
  def test_costpercapita_an36; assert_in_epsilon(79.41247039825308, worksheet.costpercapita_an36, 0.001); end
  def test_costpercapita_ao36; assert_in_epsilon(78.00314532149666, worksheet.costpercapita_ao36, 0.001); end
  def test_costpercapita_ap36; assert_in_epsilon(75.78407946371024, worksheet.costpercapita_ap36, 0.001); end
  def test_costpercapita_aq36; assert_in_epsilon(72.61070506358637, worksheet.costpercapita_aq36, 0.001); end
  def test_costpercapita_as36; assert_in_epsilon(77.41710607537891, worksheet.costpercapita_as36, 0.001); end
  def test_costpercapita_at36; assert_in_epsilon(1629.5088036515695, worksheet.costpercapita_at36, 0.001); end
  def test_costpercapita_av36; assert_in_delta(0, (worksheet.costpercapita_av36||0), 0.001); end
  def test_costpercapita_aw36; assert_in_epsilon(5, worksheet.costpercapita_aw36, 0.001); end
  def test_costpercapita_ay36; assert_in_epsilon(31.922894079085555, worksheet.costpercapita_ay36, 0.001); end
  def test_costpercapita_az36; assert_in_epsilon(48.71019192095353, worksheet.costpercapita_az36, 0.001); end
  def test_costpercapita_ba36; assert_in_epsilon(47.91647707232122, worksheet.costpercapita_ba36, 0.001); end
  def test_costpercapita_bb36; assert_in_epsilon(46.19719773859914, worksheet.costpercapita_bb36, 0.001); end
  def test_costpercapita_bc36; assert_in_epsilon(43.405771179450916, worksheet.costpercapita_bc36, 0.001); end
  def test_costpercapita_bd36; assert_in_epsilon(39.706235199126546, worksheet.costpercapita_bd36, 0.001); end
  def test_costpercapita_be36; assert_in_epsilon(34.66806458733186, worksheet.costpercapita_be36, 0.001); end
  def test_costpercapita_bf36; assert_in_epsilon(28.419029798891355, worksheet.costpercapita_bf36, 0.001); end
  def test_costpercapita_bg36; assert_in_epsilon(20.745915732453245, worksheet.costpercapita_bg36, 0.001); end
  def test_costpercapita_bi36; assert_in_epsilon(31.922894079085555, worksheet.costpercapita_bi36, 0.001); end
  def test_costpercapita_bj36; assert_in_epsilon(48.71019192095353, worksheet.costpercapita_bj36, 0.001); end
  def test_costpercapita_bk36; assert_in_epsilon(47.91647707232122, worksheet.costpercapita_bk36, 0.001); end
  def test_costpercapita_bl36; assert_in_epsilon(46.19719773859914, worksheet.costpercapita_bl36, 0.001); end
  def test_costpercapita_bm36; assert_in_epsilon(43.405771179450916, worksheet.costpercapita_bm36, 0.001); end
  def test_costpercapita_bn36; assert_in_epsilon(39.706235199126546, worksheet.costpercapita_bn36, 0.001); end
  def test_costpercapita_bo36; assert_in_epsilon(34.66806458733186, worksheet.costpercapita_bo36, 0.001); end
  def test_costpercapita_bp36; assert_in_epsilon(28.419029798891355, worksheet.costpercapita_bp36, 0.001); end
  def test_costpercapita_bq36; assert_in_epsilon(20.745915732453245, worksheet.costpercapita_bq36, 0.001); end
  def test_costpercapita_bs36; assert_in_epsilon(57.253496862328845, worksheet.costpercapita_bs36, 0.001); end
  def test_costpercapita_bt36; assert_in_epsilon(75.77140965481658, worksheet.costpercapita_bt36, 0.001); end
  def test_costpercapita_bu36; assert_in_epsilon(77.86427524252198, worksheet.costpercapita_bu36, 0.001); end
  def test_costpercapita_bv36; assert_in_epsilon(79.1951961233128, worksheet.costpercapita_bv36, 0.001); end
  def test_costpercapita_bw36; assert_in_epsilon(79.57724716232667, worksheet.costpercapita_bw36, 0.001); end
  def test_costpercapita_bx36; assert_in_epsilon(79.41247039825308, worksheet.costpercapita_bx36, 0.001); end
  def test_costpercapita_by36; assert_in_epsilon(78.00314532149666, worksheet.costpercapita_by36, 0.001); end
  def test_costpercapita_bz36; assert_in_epsilon(75.78407946371024, worksheet.costpercapita_bz36, 0.001); end
  def test_costpercapita_ca36; assert_in_epsilon(72.61070506358637, worksheet.costpercapita_ca36, 0.001); end
  def test_costpercapita_cc36; assert_in_epsilon(75.0524472547059, worksheet.costpercapita_cc36, 0.001); end
  def test_costpercapita_cd36; assert_in_epsilon(1608.2268742655124, worksheet.costpercapita_cd36, 0.001); end
  def test_costpercapita_cf36; assert_in_epsilon(-21.281929386057033, worksheet.costpercapita_cf36, 0.001); end
  def test_costpercapita_cg36; assert_in_delta(0, (worksheet.costpercapita_cg36||0), 0.001); end
  def test_costpercapita_ch36; assert_in_delta(0, (worksheet.costpercapita_ch36||0), 0.001); end
  def test_costpercapita_ci36; assert_in_delta(0, (worksheet.costpercapita_ci36||0), 0.001); end
  def test_costpercapita_cj36; assert_in_delta(0, (worksheet.costpercapita_cj36||0), 0.001); end
  def test_costpercapita_ck36; assert_in_delta(0, (worksheet.costpercapita_ck36||0), 0.001); end
  def test_costpercapita_cl36; assert_in_delta(0, (worksheet.costpercapita_cl36||0), 0.001); end
  def test_costpercapita_cm36; assert_in_delta(0, (worksheet.costpercapita_cm36||0), 0.001); end
  def test_costpercapita_cn36; assert_in_delta(0, (worksheet.costpercapita_cn36||0), 0.001); end
  def test_costpercapita_cp36; assert_in_epsilon(-2.3646588206730037, worksheet.costpercapita_cp36, 0.001); end
  def test_costpercapita_cq36; assert_in_epsilon(-21.281929386057033, worksheet.costpercapita_cq36, 0.001); end
  def test_costpercapita_cr36; assert_equal("ok", worksheet.costpercapita_cr36); end
  def test_costpercapita_a37; assert_equal("XII.a.Rail", worksheet.costpercapita_a37); end
  def test_costpercapita_b37; assert_equal("Rail", worksheet.costpercapita_b37); end
  def test_costpercapita_c37; assert_equal("Transport", worksheet.costpercapita_c37); end
  def test_costpercapita_e37; assert_in_epsilon(1.241582045011786, worksheet.costpercapita_e37, 0.001); end
  def test_costpercapita_f37; assert_in_epsilon(1.06016687400555, worksheet.costpercapita_f37, 0.001); end
  def test_costpercapita_g37; assert_in_epsilon(1.2043154576026291, worksheet.costpercapita_g37, 0.001); end
  def test_costpercapita_h37; assert_in_epsilon(1.072946433337215, worksheet.costpercapita_h37, 0.001); end
  def test_costpercapita_i37; assert_in_delta(0.9259176250325403, worksheet.costpercapita_i37, 0.001); end
  def test_costpercapita_j37; assert_in_delta(0.8246749390492312, worksheet.costpercapita_j37, 0.001); end
  def test_costpercapita_k37; assert_in_delta(0.6949089641115102, worksheet.costpercapita_k37, 0.001); end
  def test_costpercapita_l37; assert_in_delta(0.6123614593407295, worksheet.costpercapita_l37, 0.001); end
  def test_costpercapita_m37; assert_in_delta(0.5349416675056703, worksheet.costpercapita_m37, 0.001); end
  def test_costpercapita_o37; assert_in_epsilon(133.70395383068492, worksheet.costpercapita_o37, 0.001); end
  def test_costpercapita_p37; assert_in_epsilon(121.81817064547731, worksheet.costpercapita_p37, 0.001); end
  def test_costpercapita_q37; assert_in_epsilon(114.05108035790569, worksheet.costpercapita_q37, 0.001); end
  def test_costpercapita_r37; assert_in_epsilon(105.80567231108412, worksheet.costpercapita_r37, 0.001); end
  def test_costpercapita_s37; assert_in_epsilon(97.10012153286213, worksheet.costpercapita_s37, 0.001); end
  def test_costpercapita_t37; assert_in_epsilon(88.64587452758086, worksheet.costpercapita_t37, 0.001); end
  def test_costpercapita_u37; assert_in_epsilon(79.83411398716596, worksheet.costpercapita_u37, 0.001); end
  def test_costpercapita_v37; assert_in_epsilon(71.34091018853465, worksheet.costpercapita_v37, 0.001); end
  def test_costpercapita_w37; assert_in_epsilon(63.16793277069767, worksheet.costpercapita_w37, 0.001); end
  def test_costpercapita_y37; assert_in_delta(0, (worksheet.costpercapita_y37||0), 0.001); end
  def test_costpercapita_z37; assert_in_delta(0, (worksheet.costpercapita_z37||0), 0.001); end
  def test_costpercapita_aa37; assert_in_delta(0, (worksheet.costpercapita_aa37||0), 0.001); end
  def test_costpercapita_ab37; assert_in_delta(0, (worksheet.costpercapita_ab37||0), 0.001); end
  def test_costpercapita_ac37; assert_in_delta(0, (worksheet.costpercapita_ac37||0), 0.001); end
  def test_costpercapita_ad37; assert_in_delta(0, (worksheet.costpercapita_ad37||0), 0.001); end
  def test_costpercapita_ae37; assert_in_delta(0, (worksheet.costpercapita_ae37||0), 0.001); end
  def test_costpercapita_af37; assert_in_delta(0, (worksheet.costpercapita_af37||0), 0.001); end
  def test_costpercapita_ag37; assert_in_delta(0, (worksheet.costpercapita_ag37||0), 0.001); end
  def test_costpercapita_ai37; assert_in_epsilon(134.94553587569672, worksheet.costpercapita_ai37, 0.001); end
  def test_costpercapita_aj37; assert_in_epsilon(122.87833751948287, worksheet.costpercapita_aj37, 0.001); end
  def test_costpercapita_ak37; assert_in_epsilon(115.25539581550832, worksheet.costpercapita_ak37, 0.001); end
  def test_costpercapita_al37; assert_in_epsilon(106.87861874442133, worksheet.costpercapita_al37, 0.001); end
  def test_costpercapita_am37; assert_in_epsilon(98.02603915789469, worksheet.costpercapita_am37, 0.001); end
  def test_costpercapita_an37; assert_in_epsilon(89.4705494666301, worksheet.costpercapita_an37, 0.001); end
  def test_costpercapita_ao37; assert_in_epsilon(80.52902295127748, worksheet.costpercapita_ao37, 0.001); end
  def test_costpercapita_ap37; assert_in_epsilon(71.95327164787538, worksheet.costpercapita_ap37, 0.001); end
  def test_costpercapita_aq37; assert_in_epsilon(63.702874438203345, worksheet.costpercapita_aq37, 0.001); end
  def test_costpercapita_as37; assert_in_epsilon(98.18218284633225, worksheet.costpercapita_as37, 0.001); end
  def test_costpercapita_at37; assert_in_epsilon(2153.8333312075147, worksheet.costpercapita_at37, 0.001); end
  def test_costpercapita_av37; assert_in_delta(0, (worksheet.costpercapita_av37||0), 0.001); end
  def test_costpercapita_aw37; assert_in_epsilon(30, worksheet.costpercapita_aw37, 0.001); end
  def test_costpercapita_ay37; assert_in_delta(0.1241582045011786, worksheet.costpercapita_ay37, 0.001); end
  def test_costpercapita_az37; assert_in_delta(0.176694479000925, worksheet.costpercapita_az37, 0.001); end
  def test_costpercapita_ba37; assert_in_delta(0.20071924293377155, worksheet.costpercapita_ba37, 0.001); end
  def test_costpercapita_bb37; assert_in_delta(0.1788244055562025, worksheet.costpercapita_bb37, 0.001); end
  def test_costpercapita_bc37; assert_in_delta(0.15431960417209004, worksheet.costpercapita_bc37, 0.001); end
  def test_costpercapita_bd37; assert_in_delta(0.1374458231748719, worksheet.costpercapita_bd37, 0.001); end
  def test_costpercapita_be37; assert_in_delta(0.11581816068525169, worksheet.costpercapita_be37, 0.001); end
  def test_costpercapita_bf37; assert_in_delta(0.10206024322345492, worksheet.costpercapita_bf37, 0.001); end
  def test_costpercapita_bg37; assert_in_delta(0.08915694458427838, worksheet.costpercapita_bg37, 0.001); end
  def test_costpercapita_bi37; assert_in_delta(0.1241582045011786, worksheet.costpercapita_bi37, 0.001); end
  def test_costpercapita_bj37; assert_in_delta(0.29675855811059193, worksheet.costpercapita_bj37, 0.001); end
  def test_costpercapita_bk37; assert_in_delta(0.48776247472244, worksheet.costpercapita_bk37, 0.001); end
  def test_costpercapita_bl37; assert_in_delta(0.6514840592077092, worksheet.costpercapita_bl37, 0.001); end
  def test_costpercapita_bm37; assert_in_delta(0.7880050191423842, worksheet.costpercapita_bm37, 0.001); end
  def test_costpercapita_bn37; assert_in_delta(0.9068888357848445, worksheet.costpercapita_bn37, 0.001); end
  def test_costpercapita_bo37; assert_in_delta(0.8987613036374043, worksheet.costpercapita_bo37, 0.001); end
  def test_costpercapita_bp37; assert_in_delta(0.9765492971578956, worksheet.costpercapita_bp37, 0.001); end
  def test_costpercapita_bq37; assert_in_delta(0.8736010623432086, worksheet.costpercapita_bq37, 0.001); end
  def test_costpercapita_bs37; assert_in_epsilon(133.8281120351861, worksheet.costpercapita_bs37, 0.001); end
  def test_costpercapita_bt37; assert_in_epsilon(122.1149292035879, worksheet.costpercapita_bt37, 0.001); end
  def test_costpercapita_bu37; assert_in_epsilon(114.53884283262813, worksheet.costpercapita_bu37, 0.001); end
  def test_costpercapita_bv37; assert_in_epsilon(106.45715637029183, worksheet.costpercapita_bv37, 0.001); end
  def test_costpercapita_bw37; assert_in_epsilon(97.88812655200451, worksheet.costpercapita_bw37, 0.001); end
  def test_costpercapita_bx37; assert_in_epsilon(89.55276336336571, worksheet.costpercapita_bx37, 0.001); end
  def test_costpercapita_by37; assert_in_epsilon(80.73287529080336, worksheet.costpercapita_by37, 0.001); end
  def test_costpercapita_bz37; assert_in_epsilon(72.31745948569255, worksheet.costpercapita_bz37, 0.001); end
  def test_costpercapita_ca37; assert_in_epsilon(64.04153383304087, worksheet.costpercapita_ca37, 0.001); end
  def test_costpercapita_cc37; assert_in_epsilon(97.94131099628899, worksheet.costpercapita_cc37, 0.001); end
  def test_costpercapita_cd37; assert_in_epsilon(2146.9033975657244, worksheet.costpercapita_cd37, 0.001); end
  def test_costpercapita_cf37; assert_in_epsilon(-1.1174238405106074, worksheet.costpercapita_cf37, 0.001); end
  def test_costpercapita_cg37; assert_in_delta(-0.7634083158949582, worksheet.costpercapita_cg37, 0.001); end
  def test_costpercapita_ch37; assert_in_delta(-0.7165529828801892, worksheet.costpercapita_ch37, 0.001); end
  def test_costpercapita_ci37; assert_in_delta(-0.42146237412950577, worksheet.costpercapita_ci37, 0.001); end
  def test_costpercapita_cj37; assert_in_delta(-0.1379126058901561, worksheet.costpercapita_cj37, 0.001); end
  def test_costpercapita_ck37; assert_in_delta(0.0822138967356133, worksheet.costpercapita_ck37, 0.001); end
  def test_costpercapita_cl37; assert_in_delta(0.20385233952589404, worksheet.costpercapita_cl37, 0.001); end
  def test_costpercapita_cm37; assert_in_delta(0.3641878378171661, worksheet.costpercapita_cm37, 0.001); end
  def test_costpercapita_cn37; assert_in_delta(0.33865939483753826, worksheet.costpercapita_cn37, 0.001); end
  def test_costpercapita_cp37; assert_in_delta(-0.24087185004324507, worksheet.costpercapita_cp37, 0.001); end
  def test_costpercapita_cq37; assert_in_epsilon(-6.929933641789688, worksheet.costpercapita_cq37, 0.001); end
  def test_costpercapita_cr37; assert_equal("ok", worksheet.costpercapita_cr37); end
  def test_costpercapita_a38; assert_equal("XII.a.Air", worksheet.costpercapita_a38); end
  def test_costpercapita_b38; assert_equal("Domestic aviation", worksheet.costpercapita_b38); end
  def test_costpercapita_c38; assert_equal("Transport", worksheet.costpercapita_c38); end
  def test_costpercapita_e38; assert_in_epsilon(8.896398734813296, worksheet.costpercapita_e38, 0.001); end
  def test_costpercapita_f38; assert_in_epsilon(7.8032685895966845, worksheet.costpercapita_f38, 0.001); end
  def test_costpercapita_g38; assert_in_epsilon(8.530394651621563, worksheet.costpercapita_g38, 0.001); end
  def test_costpercapita_h38; assert_in_epsilon(8.284822778622354, worksheet.costpercapita_h38, 0.001); end
  def test_costpercapita_i38; assert_in_epsilon(7.83114804601581, worksheet.costpercapita_i38, 0.001); end
  def test_costpercapita_j38; assert_in_epsilon(7.437503926271562, worksheet.costpercapita_j38, 0.001); end
  def test_costpercapita_k38; assert_in_epsilon(6.779439968327338, worksheet.costpercapita_k38, 0.001); end
  def test_costpercapita_l38; assert_in_epsilon(6.215576948426715, worksheet.costpercapita_l38, 0.001); end
  def test_costpercapita_m38; assert_in_epsilon(5.570002457215742, worksheet.costpercapita_m38, 0.001); end
  def test_costpercapita_o38; assert_in_epsilon(3.996006703994697, worksheet.costpercapita_o38, 0.001); end
  def test_costpercapita_p38; assert_in_epsilon(4.324014827298457, worksheet.costpercapita_p38, 0.001); end
  def test_costpercapita_q38; assert_in_epsilon(4.793946375544617, worksheet.costpercapita_q38, 0.001); end
  def test_costpercapita_r38; assert_in_epsilon(5.259370767991622, worksheet.costpercapita_r38, 0.001); end
  def test_costpercapita_s38; assert_in_epsilon(5.708482707833969, worksheet.costpercapita_s38, 0.001); end
  def test_costpercapita_t38; assert_in_epsilon(6.173018575666719, worksheet.costpercapita_t38, 0.001); end
  def test_costpercapita_u38; assert_in_epsilon(6.604886414724205, worksheet.costpercapita_u38, 0.001); end
  def test_costpercapita_v38; assert_in_epsilon(7.044498828535568, worksheet.costpercapita_v38, 0.001); end
  def test_costpercapita_w38; assert_in_epsilon(7.492809818930669, worksheet.costpercapita_w38, 0.001); end
  def test_costpercapita_y38; assert_in_delta(0, (worksheet.costpercapita_y38||0), 0.001); end
  def test_costpercapita_z38; assert_in_delta(0, (worksheet.costpercapita_z38||0), 0.001); end
  def test_costpercapita_aa38; assert_in_delta(0, (worksheet.costpercapita_aa38||0), 0.001); end
  def test_costpercapita_ab38; assert_in_delta(0, (worksheet.costpercapita_ab38||0), 0.001); end
  def test_costpercapita_ac38; assert_in_delta(0, (worksheet.costpercapita_ac38||0), 0.001); end
  def test_costpercapita_ad38; assert_in_delta(0, (worksheet.costpercapita_ad38||0), 0.001); end
  def test_costpercapita_ae38; assert_in_delta(0, (worksheet.costpercapita_ae38||0), 0.001); end
  def test_costpercapita_af38; assert_in_delta(0, (worksheet.costpercapita_af38||0), 0.001); end
  def test_costpercapita_ag38; assert_in_delta(0, (worksheet.costpercapita_ag38||0), 0.001); end
  def test_costpercapita_ai38; assert_in_epsilon(12.892405438807991, worksheet.costpercapita_ai38, 0.001); end
  def test_costpercapita_aj38; assert_in_epsilon(12.127283416895143, worksheet.costpercapita_aj38, 0.001); end
  def test_costpercapita_ak38; assert_in_epsilon(13.32434102716618, worksheet.costpercapita_ak38, 0.001); end
  def test_costpercapita_al38; assert_in_epsilon(13.544193546613977, worksheet.costpercapita_al38, 0.001); end
  def test_costpercapita_am38; assert_in_epsilon(13.53963075384978, worksheet.costpercapita_am38, 0.001); end
  def test_costpercapita_an38; assert_in_epsilon(13.61052250193828, worksheet.costpercapita_an38, 0.001); end
  def test_costpercapita_ao38; assert_in_epsilon(13.384326383051544, worksheet.costpercapita_ao38, 0.001); end
  def test_costpercapita_ap38; assert_in_epsilon(13.260075776962283, worksheet.costpercapita_ap38, 0.001); end
  def test_costpercapita_aq38; assert_in_epsilon(13.062812276146412, worksheet.costpercapita_aq38, 0.001); end
  def test_costpercapita_as38; assert_in_epsilon(13.193954569047953, worksheet.costpercapita_as38, 0.001); end
  def test_costpercapita_at38; assert_in_epsilon(275.9508848986674, worksheet.costpercapita_at38, 0.001); end
  def test_costpercapita_av38; assert_in_delta(0, (worksheet.costpercapita_av38||0), 0.001); end
  def test_costpercapita_aw38; assert_in_epsilon(30, worksheet.costpercapita_aw38, 0.001); end
  def test_costpercapita_ay38; assert_in_delta(0.8896398734813294, worksheet.costpercapita_ay38, 0.001); end
  def test_costpercapita_az38; assert_in_epsilon(1.3005447649327806, worksheet.costpercapita_az38, 0.001); end
  def test_costpercapita_ba38; assert_in_epsilon(1.421732441936927, worksheet.costpercapita_ba38, 0.001); end
  def test_costpercapita_bb38; assert_in_epsilon(1.380803796437059, worksheet.costpercapita_bb38, 0.001); end
  def test_costpercapita_bc38; assert_in_epsilon(1.305191341002635, worksheet.costpercapita_bc38, 0.001); end
  def test_costpercapita_bd38; assert_in_epsilon(1.239583987711927, worksheet.costpercapita_bd38, 0.001); end
  def test_costpercapita_be38; assert_in_epsilon(1.1299066613878899, worksheet.costpercapita_be38, 0.001); end
  def test_costpercapita_bf38; assert_in_epsilon(1.0359294914044526, worksheet.costpercapita_bf38, 0.001); end
  def test_costpercapita_bg38; assert_in_delta(0.9283337428692905, worksheet.costpercapita_bg38, 0.001); end
  def test_costpercapita_bi38; assert_in_delta(0.8896398734813294, worksheet.costpercapita_bi38, 0.001); end
  def test_costpercapita_bj38; assert_in_epsilon(2.160848701977573, worksheet.costpercapita_bj38, 0.001); end
  def test_costpercapita_bk38; assert_in_epsilon(3.511838954015486, worksheet.costpercapita_bk38, 0.001); end
  def test_costpercapita_bl38; assert_in_epsilon(4.783904013667575, worksheet.costpercapita_bl38, 0.001); end
  def test_costpercapita_bm38; assert_in_epsilon(5.958398364618356, worksheet.costpercapita_bm38, 0.001); end
  def test_costpercapita_bn38; assert_in_epsilon(7.057628132902688, worksheet.costpercapita_bn38, 0.001); end
  def test_costpercapita_bo38; assert_in_epsilon(7.2874870013058475, worksheet.costpercapita_bo38, 0.001); end
  def test_costpercapita_bp38; assert_in_epsilon(8.289944988663198, worksheet.costpercapita_bp38, 0.001); end
  def test_costpercapita_bq38; assert_in_epsilon(7.831941361686225, worksheet.costpercapita_bq38, 0.001); end
  def test_costpercapita_bs38; assert_in_epsilon(4.8856465774760265, worksheet.costpercapita_bs38, 0.001); end
  def test_costpercapita_bt38; assert_in_epsilon(6.484863529276031, worksheet.costpercapita_bt38, 0.001); end
  def test_costpercapita_bu38; assert_in_epsilon(8.305785329560104, worksheet.costpercapita_bu38, 0.001); end
  def test_costpercapita_bv38; assert_in_epsilon(10.043274781659196, worksheet.costpercapita_bv38, 0.001); end
  def test_costpercapita_bw38; assert_in_epsilon(11.666881072452323, worksheet.costpercapita_bw38, 0.001); end
  def test_costpercapita_bx38; assert_in_epsilon(13.230646708569406, worksheet.costpercapita_bx38, 0.001); end
  def test_costpercapita_by38; assert_in_epsilon(13.89237341603005, worksheet.costpercapita_by38, 0.001); end
  def test_costpercapita_bz38; assert_in_epsilon(15.334443817198764, worksheet.costpercapita_bz38, 0.001); end
  def test_costpercapita_ca38; assert_in_epsilon(15.324751180616893, worksheet.costpercapita_ca38, 0.001); end
  def test_costpercapita_cc38; assert_in_epsilon(11.018740712537644, worksheet.costpercapita_cc38, 0.001); end
  def test_costpercapita_cd38; assert_in_epsilon(217.53445680463645, worksheet.costpercapita_cd38, 0.001); end
  def test_costpercapita_cf38; assert_in_epsilon(-8.006758861331965, worksheet.costpercapita_cf38, 0.001); end
  def test_costpercapita_cg38; assert_in_epsilon(-5.642419887619112, worksheet.costpercapita_cg38, 0.001); end
  def test_costpercapita_ch38; assert_in_epsilon(-5.018555697606077, worksheet.costpercapita_ch38, 0.001); end
  def test_costpercapita_ci38; assert_in_epsilon(-3.5009187649547786, worksheet.costpercapita_ci38, 0.001); end
  def test_costpercapita_cj38; assert_in_epsilon(-1.872749681397454, worksheet.costpercapita_cj38, 0.001); end
  def test_costpercapita_ck38; assert_in_delta(-0.379875793368874, worksheet.costpercapita_ck38, 0.001); end
  def test_costpercapita_cl38; assert_in_delta(0.5080470329785091, worksheet.costpercapita_cl38, 0.001); end
  def test_costpercapita_cm38; assert_in_epsilon(2.0743680402364824, worksheet.costpercapita_cm38, 0.001); end
  def test_costpercapita_cn38; assert_in_epsilon(2.2619389044704823, worksheet.costpercapita_cn38, 0.001); end
  def test_costpercapita_cp38; assert_in_epsilon(-2.1752138565103096, worksheet.costpercapita_cp38, 0.001); end
  def test_costpercapita_cq38; assert_in_epsilon(-58.416428094030984, worksheet.costpercapita_cq38, 0.001); end
  def test_costpercapita_cr38; assert_equal("ok", worksheet.costpercapita_cr38); end
  def test_costpercapita_a39; assert_equal("XII.b", worksheet.costpercapita_a39); end
  def test_costpercapita_b39; assert_equal("Domestic freight", worksheet.costpercapita_b39); end
  def test_costpercapita_c39; assert_equal("Transport", worksheet.costpercapita_c39); end
  def test_costpercapita_e39; assert_in_epsilon(67.56923951216662, worksheet.costpercapita_e39, 0.001); end
  def test_costpercapita_f39; assert_in_epsilon(73.49247588395674, worksheet.costpercapita_f39, 0.001); end
  def test_costpercapita_g39; assert_in_epsilon(69.57366038972941, worksheet.costpercapita_g39, 0.001); end
  def test_costpercapita_h39; assert_in_epsilon(66.70943252644776, worksheet.costpercapita_h39, 0.001); end
  def test_costpercapita_i39; assert_in_epsilon(63.925221028000536, worksheet.costpercapita_i39, 0.001); end
  def test_costpercapita_j39; assert_in_epsilon(61.2156471695725, worksheet.costpercapita_j39, 0.001); end
  def test_costpercapita_k39; assert_in_epsilon(58.472960827359174, worksheet.costpercapita_k39, 0.001); end
  def test_costpercapita_l39; assert_in_epsilon(55.644126479655434, worksheet.costpercapita_l39, 0.001); end
  def test_costpercapita_m39; assert_in_epsilon(52.72514149922843, worksheet.costpercapita_m39, 0.001); end
  def test_costpercapita_o39; assert_in_epsilon(104.33805341280801, worksheet.costpercapita_o39, 0.001); end
  def test_costpercapita_p39; assert_in_epsilon(110.026886244722, worksheet.costpercapita_p39, 0.001); end
  def test_costpercapita_q39; assert_in_epsilon(111.10695824626555, worksheet.costpercapita_q39, 0.001); end
  def test_costpercapita_r39; assert_in_epsilon(112.20387391171141, worksheet.costpercapita_r39, 0.001); end
  def test_costpercapita_s39; assert_in_epsilon(113.55166379487936, worksheet.costpercapita_s39, 0.001); end
  def test_costpercapita_t39; assert_in_epsilon(115.18613584478634, worksheet.costpercapita_t39, 0.001); end
  def test_costpercapita_u39; assert_in_epsilon(116.94699136772934, worksheet.costpercapita_u39, 0.001); end
  def test_costpercapita_v39; assert_in_epsilon(118.74737348640706, worksheet.costpercapita_v39, 0.001); end
  def test_costpercapita_w39; assert_in_epsilon(120.58744013692298, worksheet.costpercapita_w39, 0.001); end
  def test_costpercapita_y39; assert_in_delta(0, (worksheet.costpercapita_y39||0), 0.001); end
  def test_costpercapita_z39; assert_in_delta(0, (worksheet.costpercapita_z39||0), 0.001); end
  def test_costpercapita_aa39; assert_in_delta(0, (worksheet.costpercapita_aa39||0), 0.001); end
  def test_costpercapita_ab39; assert_in_delta(0, (worksheet.costpercapita_ab39||0), 0.001); end
  def test_costpercapita_ac39; assert_in_delta(0, (worksheet.costpercapita_ac39||0), 0.001); end
  def test_costpercapita_ad39; assert_in_delta(0, (worksheet.costpercapita_ad39||0), 0.001); end
  def test_costpercapita_ae39; assert_in_delta(0, (worksheet.costpercapita_ae39||0), 0.001); end
  def test_costpercapita_af39; assert_in_delta(0, (worksheet.costpercapita_af39||0), 0.001); end
  def test_costpercapita_ag39; assert_in_delta(0, (worksheet.costpercapita_ag39||0), 0.001); end
  def test_costpercapita_ai39; assert_in_epsilon(171.90729292497463, worksheet.costpercapita_ai39, 0.001); end
  def test_costpercapita_aj39; assert_in_epsilon(183.51936212867872, worksheet.costpercapita_aj39, 0.001); end
  def test_costpercapita_ak39; assert_in_epsilon(180.68061863599496, worksheet.costpercapita_ak39, 0.001); end
  def test_costpercapita_al39; assert_in_epsilon(178.91330643815917, worksheet.costpercapita_al39, 0.001); end
  def test_costpercapita_am39; assert_in_epsilon(177.4768848228799, worksheet.costpercapita_am39, 0.001); end
  def test_costpercapita_an39; assert_in_epsilon(176.40178301435884, worksheet.costpercapita_an39, 0.001); end
  def test_costpercapita_ao39; assert_in_epsilon(175.4199521950885, worksheet.costpercapita_ao39, 0.001); end
  def test_costpercapita_ap39; assert_in_epsilon(174.39149996606247, worksheet.costpercapita_ap39, 0.001); end
  def test_costpercapita_aq39; assert_in_epsilon(173.3125816361514, worksheet.costpercapita_aq39, 0.001); end
  def test_costpercapita_as39; assert_in_epsilon(176.89147575137204, worksheet.costpercapita_as39, 0.001); end
  def test_costpercapita_at39; assert_in_epsilon(3748.284807528473, worksheet.costpercapita_at39, 0.001); end
  def test_costpercapita_av39; assert_in_delta(0, (worksheet.costpercapita_av39||0), 0.001); end
  def test_costpercapita_aw39; assert_in_epsilon(10, worksheet.costpercapita_aw39, 0.001); end
  def test_costpercapita_ay39; assert_in_epsilon(20.270771853649986, worksheet.costpercapita_ay39, 0.001); end
  def test_costpercapita_az39; assert_in_epsilon(36.74623794197837, worksheet.costpercapita_az39, 0.001); end
  def test_costpercapita_ba39; assert_in_epsilon(34.786830194864706, worksheet.costpercapita_ba39, 0.001); end
  def test_costpercapita_bb39; assert_in_epsilon(33.35471626322388, worksheet.costpercapita_bb39, 0.001); end
  def test_costpercapita_bc39; assert_in_epsilon(31.962610514000268, worksheet.costpercapita_bc39, 0.001); end
  def test_costpercapita_bd39; assert_in_epsilon(30.60782358478625, worksheet.costpercapita_bd39, 0.001); end
  def test_costpercapita_be39; assert_in_epsilon(29.236480413679587, worksheet.costpercapita_be39, 0.001); end
  def test_costpercapita_bf39; assert_in_epsilon(27.822063239827717, worksheet.costpercapita_bf39, 0.001); end
  def test_costpercapita_bg39; assert_in_epsilon(26.362570749614214, worksheet.costpercapita_bg39, 0.001); end
  def test_costpercapita_bi39; assert_in_epsilon(20.270771853649986, worksheet.costpercapita_bi39, 0.001); end
  def test_costpercapita_bj39; assert_in_epsilon(56.348579689982124, worksheet.costpercapita_bj39, 0.001); end
  def test_costpercapita_bk39; assert_in_epsilon(70.33006427072938, worksheet.costpercapita_bk39, 0.001); end
  def test_costpercapita_bl39; assert_in_epsilon(67.06442531965548, worksheet.costpercapita_bl39, 0.001); end
  def test_costpercapita_bm39; assert_in_epsilon(64.40607082242607, worksheet.costpercapita_bm39, 0.001); end
  def test_costpercapita_bn39; assert_in_epsilon(61.817532568032945, worksheet.costpercapita_bn39, 0.001); end
  def test_costpercapita_bo39; assert_in_epsilon(59.19154973013347, worksheet.costpercapita_bo39, 0.001); end
  def test_costpercapita_bp39; assert_in_epsilon(56.47533652426239, worksheet.costpercapita_bp39, 0.001); end
  def test_costpercapita_bq39; assert_in_epsilon(53.66542601177845, worksheet.costpercapita_bq39, 0.001); end
  def test_costpercapita_bs39; assert_in_epsilon(124.608825266458, worksheet.costpercapita_bs39, 0.001); end
  def test_costpercapita_bt39; assert_in_epsilon(166.37546593470412, worksheet.costpercapita_bt39, 0.001); end
  def test_costpercapita_bu39; assert_in_epsilon(181.43702251699492, worksheet.costpercapita_bu39, 0.001); end
  def test_costpercapita_bv39; assert_in_epsilon(179.26829923136688, worksheet.costpercapita_bv39, 0.001); end
  def test_costpercapita_bw39; assert_in_epsilon(177.95773461730542, worksheet.costpercapita_bw39, 0.001); end
  def test_costpercapita_bx39; assert_in_epsilon(177.00366841281928, worksheet.costpercapita_bx39, 0.001); end
  def test_costpercapita_by39; assert_in_epsilon(176.1385410978628, worksheet.costpercapita_by39, 0.001); end
  def test_costpercapita_bz39; assert_in_epsilon(175.22271001066943, worksheet.costpercapita_bz39, 0.001); end
  def test_costpercapita_ca39; assert_in_epsilon(174.2528661487014, worksheet.costpercapita_ca39, 0.001); end
  def test_costpercapita_cc39; assert_in_epsilon(170.2516814707647, worksheet.costpercapita_cc39, 0.001); end
  def test_costpercapita_cd39; assert_in_epsilon(3638.8388961325177, worksheet.costpercapita_cd39, 0.001); end
  def test_costpercapita_cf39; assert_in_epsilon(-47.298467658516635, worksheet.costpercapita_cf39, 0.001); end
  def test_costpercapita_cg39; assert_in_epsilon(-17.143896193974616, worksheet.costpercapita_cg39, 0.001); end
  def test_costpercapita_ch39; assert_in_delta(0.756403880999967, worksheet.costpercapita_ch39, 0.001); end
  def test_costpercapita_ci39; assert_in_delta(0.3549927932077305, worksheet.costpercapita_ci39, 0.001); end
  def test_costpercapita_cj39; assert_in_delta(0.48084979442554093, worksheet.costpercapita_cj39, 0.001); end
  def test_costpercapita_ck39; assert_in_delta(0.6018853984604408, worksheet.costpercapita_ck39, 0.001); end
  def test_costpercapita_cl39; assert_in_delta(0.7185889027742951, worksheet.costpercapita_cl39, 0.001); end
  def test_costpercapita_cm39; assert_in_delta(0.8312100446069555, worksheet.costpercapita_cm39, 0.001); end
  def test_costpercapita_cn39; assert_in_delta(0.9402845125500232, worksheet.costpercapita_cn39, 0.001); end
  def test_costpercapita_cp39; assert_in_epsilon(-6.639794280607368, worksheet.costpercapita_cp39, 0.001); end
  def test_costpercapita_cq39; assert_in_epsilon(-109.44591139595518, worksheet.costpercapita_cq39, 0.001); end
  def test_costpercapita_cr39; assert_equal("ok", worksheet.costpercapita_cr39); end
  def test_costpercapita_a40; assert_equal("XII.c", worksheet.costpercapita_a40); end
  def test_costpercapita_b40; assert_equal("International aviation", worksheet.costpercapita_b40); end
  def test_costpercapita_c40; assert_equal("Transport", worksheet.costpercapita_c40); end
  def test_costpercapita_e40; assert_in_delta(0, (worksheet.costpercapita_e40||0), 0.001); end
  def test_costpercapita_f40; assert_in_delta(0, (worksheet.costpercapita_f40||0), 0.001); end
  def test_costpercapita_g40; assert_in_delta(0, (worksheet.costpercapita_g40||0), 0.001); end
  def test_costpercapita_h40; assert_in_delta(0, (worksheet.costpercapita_h40||0), 0.001); end
  def test_costpercapita_i40; assert_in_delta(0, (worksheet.costpercapita_i40||0), 0.001); end
  def test_costpercapita_j40; assert_in_delta(0, (worksheet.costpercapita_j40||0), 0.001); end
  def test_costpercapita_k40; assert_in_delta(0, (worksheet.costpercapita_k40||0), 0.001); end
  def test_costpercapita_l40; assert_in_delta(0, (worksheet.costpercapita_l40||0), 0.001); end
  def test_costpercapita_m40; assert_in_delta(0, (worksheet.costpercapita_m40||0), 0.001); end
  def test_costpercapita_o40; assert_in_delta(0, (worksheet.costpercapita_o40||0), 0.001); end
  def test_costpercapita_p40; assert_in_delta(0, (worksheet.costpercapita_p40||0), 0.001); end
  def test_costpercapita_q40; assert_in_delta(0, (worksheet.costpercapita_q40||0), 0.001); end
  def test_costpercapita_r40; assert_in_delta(0, (worksheet.costpercapita_r40||0), 0.001); end
  def test_costpercapita_s40; assert_in_delta(0, (worksheet.costpercapita_s40||0), 0.001); end
  def test_costpercapita_t40; assert_in_delta(0, (worksheet.costpercapita_t40||0), 0.001); end
  def test_costpercapita_u40; assert_in_delta(0, (worksheet.costpercapita_u40||0), 0.001); end
  def test_costpercapita_v40; assert_in_delta(0, (worksheet.costpercapita_v40||0), 0.001); end
  def test_costpercapita_w40; assert_in_delta(0, (worksheet.costpercapita_w40||0), 0.001); end
  def test_costpercapita_y40; assert_in_delta(0, (worksheet.costpercapita_y40||0), 0.001); end
  def test_costpercapita_z40; assert_in_delta(0, (worksheet.costpercapita_z40||0), 0.001); end
  def test_costpercapita_aa40; assert_in_delta(0, (worksheet.costpercapita_aa40||0), 0.001); end
  def test_costpercapita_ab40; assert_in_delta(0, (worksheet.costpercapita_ab40||0), 0.001); end
  def test_costpercapita_ac40; assert_in_delta(0, (worksheet.costpercapita_ac40||0), 0.001); end
  def test_costpercapita_ad40; assert_in_delta(0, (worksheet.costpercapita_ad40||0), 0.001); end
  def test_costpercapita_ae40; assert_in_delta(0, (worksheet.costpercapita_ae40||0), 0.001); end
  def test_costpercapita_af40; assert_in_delta(0, (worksheet.costpercapita_af40||0), 0.001); end
  def test_costpercapita_ag40; assert_in_delta(0, (worksheet.costpercapita_ag40||0), 0.001); end
  def test_costpercapita_ai40; assert_in_delta(0, (worksheet.costpercapita_ai40||0), 0.001); end
  def test_costpercapita_aj40; assert_in_delta(0, (worksheet.costpercapita_aj40||0), 0.001); end
  def test_costpercapita_ak40; assert_in_delta(0, (worksheet.costpercapita_ak40||0), 0.001); end
  def test_costpercapita_al40; assert_in_delta(0, (worksheet.costpercapita_al40||0), 0.001); end
  def test_costpercapita_am40; assert_in_delta(0, (worksheet.costpercapita_am40||0), 0.001); end
  def test_costpercapita_an40; assert_in_delta(0, (worksheet.costpercapita_an40||0), 0.001); end
  def test_costpercapita_ao40; assert_in_delta(0, (worksheet.costpercapita_ao40||0), 0.001); end
  def test_costpercapita_ap40; assert_in_delta(0, (worksheet.costpercapita_ap40||0), 0.001); end
  def test_costpercapita_aq40; assert_in_delta(0, (worksheet.costpercapita_aq40||0), 0.001); end
  def test_costpercapita_as40; assert_in_delta(0, (worksheet.costpercapita_as40||0), 0.001); end
  def test_costpercapita_at40; assert_in_delta(0, (worksheet.costpercapita_at40||0), 0.001); end
  def test_costpercapita_av40; assert_in_delta(0, (worksheet.costpercapita_av40||0), 0.001); end
  def test_costpercapita_aw40; assert_in_epsilon(15, worksheet.costpercapita_aw40, 0.001); end
  def test_costpercapita_ay40; assert_in_delta(0, (worksheet.costpercapita_ay40||0), 0.001); end
  def test_costpercapita_az40; assert_in_delta(0, (worksheet.costpercapita_az40||0), 0.001); end
  def test_costpercapita_ba40; assert_in_delta(0, (worksheet.costpercapita_ba40||0), 0.001); end
  def test_costpercapita_bb40; assert_in_delta(0, (worksheet.costpercapita_bb40||0), 0.001); end
  def test_costpercapita_bc40; assert_in_delta(0, (worksheet.costpercapita_bc40||0), 0.001); end
  def test_costpercapita_bd40; assert_in_delta(0, (worksheet.costpercapita_bd40||0), 0.001); end
  def test_costpercapita_be40; assert_in_delta(0, (worksheet.costpercapita_be40||0), 0.001); end
  def test_costpercapita_bf40; assert_in_delta(0, (worksheet.costpercapita_bf40||0), 0.001); end
  def test_costpercapita_bg40; assert_in_delta(0, (worksheet.costpercapita_bg40||0), 0.001); end
  def test_costpercapita_bi40; assert_in_delta(0, (worksheet.costpercapita_bi40||0), 0.001); end
  def test_costpercapita_bj40; assert_in_delta(0, (worksheet.costpercapita_bj40||0), 0.001); end
  def test_costpercapita_bk40; assert_in_delta(0, (worksheet.costpercapita_bk40||0), 0.001); end
  def test_costpercapita_bl40; assert_in_delta(0, (worksheet.costpercapita_bl40||0), 0.001); end
  def test_costpercapita_bm40; assert_in_delta(0, (worksheet.costpercapita_bm40||0), 0.001); end
  def test_costpercapita_bn40; assert_in_delta(0, (worksheet.costpercapita_bn40||0), 0.001); end
  def test_costpercapita_bo40; assert_in_delta(0, (worksheet.costpercapita_bo40||0), 0.001); end
  def test_costpercapita_bp40; assert_in_delta(0, (worksheet.costpercapita_bp40||0), 0.001); end
  def test_costpercapita_bq40; assert_in_delta(0, (worksheet.costpercapita_bq40||0), 0.001); end
  def test_costpercapita_bs40; assert_in_delta(0, (worksheet.costpercapita_bs40||0), 0.001); end
  def test_costpercapita_bt40; assert_in_delta(0, (worksheet.costpercapita_bt40||0), 0.001); end
  def test_costpercapita_bu40; assert_in_delta(0, (worksheet.costpercapita_bu40||0), 0.001); end
  def test_costpercapita_bv40; assert_in_delta(0, (worksheet.costpercapita_bv40||0), 0.001); end
  def test_costpercapita_bw40; assert_in_delta(0, (worksheet.costpercapita_bw40||0), 0.001); end
  def test_costpercapita_bx40; assert_in_delta(0, (worksheet.costpercapita_bx40||0), 0.001); end
  def test_costpercapita_by40; assert_in_delta(0, (worksheet.costpercapita_by40||0), 0.001); end
  def test_costpercapita_bz40; assert_in_delta(0, (worksheet.costpercapita_bz40||0), 0.001); end
  def test_costpercapita_ca40; assert_in_delta(0, (worksheet.costpercapita_ca40||0), 0.001); end
  def test_costpercapita_cc40; assert_in_delta(0, (worksheet.costpercapita_cc40||0), 0.001); end
  def test_costpercapita_cd40; assert_in_delta(0, (worksheet.costpercapita_cd40||0), 0.001); end
  def test_costpercapita_cf40; assert_in_delta(0, (worksheet.costpercapita_cf40||0), 0.001); end
  def test_costpercapita_cg40; assert_in_delta(0, (worksheet.costpercapita_cg40||0), 0.001); end
  def test_costpercapita_ch40; assert_in_delta(0, (worksheet.costpercapita_ch40||0), 0.001); end
  def test_costpercapita_ci40; assert_in_delta(0, (worksheet.costpercapita_ci40||0), 0.001); end
  def test_costpercapita_cj40; assert_in_delta(0, (worksheet.costpercapita_cj40||0), 0.001); end
  def test_costpercapita_ck40; assert_in_delta(0, (worksheet.costpercapita_ck40||0), 0.001); end
  def test_costpercapita_cl40; assert_in_delta(0, (worksheet.costpercapita_cl40||0), 0.001); end
  def test_costpercapita_cm40; assert_in_delta(0, (worksheet.costpercapita_cm40||0), 0.001); end
  def test_costpercapita_cn40; assert_in_delta(0, (worksheet.costpercapita_cn40||0), 0.001); end
  def test_costpercapita_cp40; assert_in_delta(0, (worksheet.costpercapita_cp40||0), 0.001); end
  def test_costpercapita_cq40; assert_in_delta(0, (worksheet.costpercapita_cq40||0), 0.001); end
  def test_costpercapita_cr40; assert_equal("ok", worksheet.costpercapita_cr40); end
  def test_costpercapita_a41; assert_equal("XII.e", worksheet.costpercapita_a41); end
  def test_costpercapita_b41; assert_equal("International shipping (maritime bunkers)", worksheet.costpercapita_b41); end
  def test_costpercapita_c41; assert_equal("Transport", worksheet.costpercapita_c41); end
  def test_costpercapita_e41; assert_in_delta(0, (worksheet.costpercapita_e41||0), 0.001); end
  def test_costpercapita_f41; assert_in_delta(0, (worksheet.costpercapita_f41||0), 0.001); end
  def test_costpercapita_g41; assert_in_delta(0, (worksheet.costpercapita_g41||0), 0.001); end
  def test_costpercapita_h41; assert_in_delta(0, (worksheet.costpercapita_h41||0), 0.001); end
  def test_costpercapita_i41; assert_in_delta(0, (worksheet.costpercapita_i41||0), 0.001); end
  def test_costpercapita_j41; assert_in_delta(0, (worksheet.costpercapita_j41||0), 0.001); end
  def test_costpercapita_k41; assert_in_delta(0, (worksheet.costpercapita_k41||0), 0.001); end
  def test_costpercapita_l41; assert_in_delta(0, (worksheet.costpercapita_l41||0), 0.001); end
  def test_costpercapita_m41; assert_in_delta(0, (worksheet.costpercapita_m41||0), 0.001); end
  def test_costpercapita_o41; assert_in_delta(0, (worksheet.costpercapita_o41||0), 0.001); end
  def test_costpercapita_p41; assert_in_delta(0, (worksheet.costpercapita_p41||0), 0.001); end
  def test_costpercapita_q41; assert_in_delta(0, (worksheet.costpercapita_q41||0), 0.001); end
  def test_costpercapita_r41; assert_in_delta(0, (worksheet.costpercapita_r41||0), 0.001); end
  def test_costpercapita_s41; assert_in_delta(0, (worksheet.costpercapita_s41||0), 0.001); end
  def test_costpercapita_t41; assert_in_delta(0, (worksheet.costpercapita_t41||0), 0.001); end
  def test_costpercapita_u41; assert_in_delta(0, (worksheet.costpercapita_u41||0), 0.001); end
  def test_costpercapita_v41; assert_in_delta(0, (worksheet.costpercapita_v41||0), 0.001); end
  def test_costpercapita_w41; assert_in_delta(0, (worksheet.costpercapita_w41||0), 0.001); end
  def test_costpercapita_y41; assert_in_delta(0, (worksheet.costpercapita_y41||0), 0.001); end
  def test_costpercapita_z41; assert_in_delta(0, (worksheet.costpercapita_z41||0), 0.001); end
  def test_costpercapita_aa41; assert_in_delta(0, (worksheet.costpercapita_aa41||0), 0.001); end
  def test_costpercapita_ab41; assert_in_delta(0, (worksheet.costpercapita_ab41||0), 0.001); end
  def test_costpercapita_ac41; assert_in_delta(0, (worksheet.costpercapita_ac41||0), 0.001); end
  def test_costpercapita_ad41; assert_in_delta(0, (worksheet.costpercapita_ad41||0), 0.001); end
  def test_costpercapita_ae41; assert_in_delta(0, (worksheet.costpercapita_ae41||0), 0.001); end
  def test_costpercapita_af41; assert_in_delta(0, (worksheet.costpercapita_af41||0), 0.001); end
  def test_costpercapita_ag41; assert_in_delta(0, (worksheet.costpercapita_ag41||0), 0.001); end
  def test_costpercapita_ai41; assert_in_delta(0, (worksheet.costpercapita_ai41||0), 0.001); end
  def test_costpercapita_aj41; assert_in_delta(0, (worksheet.costpercapita_aj41||0), 0.001); end
  def test_costpercapita_ak41; assert_in_delta(0, (worksheet.costpercapita_ak41||0), 0.001); end
  def test_costpercapita_al41; assert_in_delta(0, (worksheet.costpercapita_al41||0), 0.001); end
  def test_costpercapita_am41; assert_in_delta(0, (worksheet.costpercapita_am41||0), 0.001); end
  def test_costpercapita_an41; assert_in_delta(0, (worksheet.costpercapita_an41||0), 0.001); end
  def test_costpercapita_ao41; assert_in_delta(0, (worksheet.costpercapita_ao41||0), 0.001); end
  def test_costpercapita_ap41; assert_in_delta(0, (worksheet.costpercapita_ap41||0), 0.001); end
  def test_costpercapita_aq41; assert_in_delta(0, (worksheet.costpercapita_aq41||0), 0.001); end
  def test_costpercapita_as41; assert_in_delta(0, (worksheet.costpercapita_as41||0), 0.001); end
  def test_costpercapita_at41; assert_in_delta(0, (worksheet.costpercapita_at41||0), 0.001); end
  def test_costpercapita_av41; assert_in_delta(0, (worksheet.costpercapita_av41||0), 0.001); end
  def test_costpercapita_aw41; assert_in_epsilon(15, worksheet.costpercapita_aw41, 0.001); end
  def test_costpercapita_ay41; assert_in_delta(0, (worksheet.costpercapita_ay41||0), 0.001); end
  def test_costpercapita_az41; assert_in_delta(0, (worksheet.costpercapita_az41||0), 0.001); end
  def test_costpercapita_ba41; assert_in_delta(0, (worksheet.costpercapita_ba41||0), 0.001); end
  def test_costpercapita_bb41; assert_in_delta(0, (worksheet.costpercapita_bb41||0), 0.001); end
  def test_costpercapita_bc41; assert_in_delta(0, (worksheet.costpercapita_bc41||0), 0.001); end
  def test_costpercapita_bd41; assert_in_delta(0, (worksheet.costpercapita_bd41||0), 0.001); end
  def test_costpercapita_be41; assert_in_delta(0, (worksheet.costpercapita_be41||0), 0.001); end
  def test_costpercapita_bf41; assert_in_delta(0, (worksheet.costpercapita_bf41||0), 0.001); end
  def test_costpercapita_bg41; assert_in_delta(0, (worksheet.costpercapita_bg41||0), 0.001); end
  def test_costpercapita_bi41; assert_in_delta(0, (worksheet.costpercapita_bi41||0), 0.001); end
  def test_costpercapita_bj41; assert_in_delta(0, (worksheet.costpercapita_bj41||0), 0.001); end
  def test_costpercapita_bk41; assert_in_delta(0, (worksheet.costpercapita_bk41||0), 0.001); end
  def test_costpercapita_bl41; assert_in_delta(0, (worksheet.costpercapita_bl41||0), 0.001); end
  def test_costpercapita_bm41; assert_in_delta(0, (worksheet.costpercapita_bm41||0), 0.001); end
  def test_costpercapita_bn41; assert_in_delta(0, (worksheet.costpercapita_bn41||0), 0.001); end
  def test_costpercapita_bo41; assert_in_delta(0, (worksheet.costpercapita_bo41||0), 0.001); end
  def test_costpercapita_bp41; assert_in_delta(0, (worksheet.costpercapita_bp41||0), 0.001); end
  def test_costpercapita_bq41; assert_in_delta(0, (worksheet.costpercapita_bq41||0), 0.001); end
  def test_costpercapita_bs41; assert_in_delta(0, (worksheet.costpercapita_bs41||0), 0.001); end
  def test_costpercapita_bt41; assert_in_delta(0, (worksheet.costpercapita_bt41||0), 0.001); end
  def test_costpercapita_bu41; assert_in_delta(0, (worksheet.costpercapita_bu41||0), 0.001); end
  def test_costpercapita_bv41; assert_in_delta(0, (worksheet.costpercapita_bv41||0), 0.001); end
  def test_costpercapita_bw41; assert_in_delta(0, (worksheet.costpercapita_bw41||0), 0.001); end
  def test_costpercapita_bx41; assert_in_delta(0, (worksheet.costpercapita_bx41||0), 0.001); end
  def test_costpercapita_by41; assert_in_delta(0, (worksheet.costpercapita_by41||0), 0.001); end
  def test_costpercapita_bz41; assert_in_delta(0, (worksheet.costpercapita_bz41||0), 0.001); end
  def test_costpercapita_ca41; assert_in_delta(0, (worksheet.costpercapita_ca41||0), 0.001); end
  def test_costpercapita_cc41; assert_in_delta(0, (worksheet.costpercapita_cc41||0), 0.001); end
  def test_costpercapita_cd41; assert_in_delta(0, (worksheet.costpercapita_cd41||0), 0.001); end
  def test_costpercapita_cf41; assert_in_delta(0, (worksheet.costpercapita_cf41||0), 0.001); end
  def test_costpercapita_cg41; assert_in_delta(0, (worksheet.costpercapita_cg41||0), 0.001); end
  def test_costpercapita_ch41; assert_in_delta(0, (worksheet.costpercapita_ch41||0), 0.001); end
  def test_costpercapita_ci41; assert_in_delta(0, (worksheet.costpercapita_ci41||0), 0.001); end
  def test_costpercapita_cj41; assert_in_delta(0, (worksheet.costpercapita_cj41||0), 0.001); end
  def test_costpercapita_ck41; assert_in_delta(0, (worksheet.costpercapita_ck41||0), 0.001); end
  def test_costpercapita_cl41; assert_in_delta(0, (worksheet.costpercapita_cl41||0), 0.001); end
  def test_costpercapita_cm41; assert_in_delta(0, (worksheet.costpercapita_cm41||0), 0.001); end
  def test_costpercapita_cn41; assert_in_delta(0, (worksheet.costpercapita_cn41||0), 0.001); end
  def test_costpercapita_cp41; assert_in_delta(0, (worksheet.costpercapita_cp41||0), 0.001); end
  def test_costpercapita_cq41; assert_in_delta(0, (worksheet.costpercapita_cq41||0), 0.001); end
  def test_costpercapita_cr41; assert_equal("ok", worksheet.costpercapita_cr41); end
  def test_costpercapita_a42; assert_equal("XIV.a", worksheet.costpercapita_a42); end
  def test_costpercapita_b42; assert_equal("Geosequestration", worksheet.costpercapita_b42); end
  def test_costpercapita_c42; assert_equal("Other", worksheet.costpercapita_c42); end
  def test_costpercapita_e42; assert_in_delta(0, (worksheet.costpercapita_e42||0), 0.001); end
  def test_costpercapita_f42; assert_in_delta(0, (worksheet.costpercapita_f42||0), 0.001); end
  def test_costpercapita_g42; assert_in_delta(0, (worksheet.costpercapita_g42||0), 0.001); end
  def test_costpercapita_h42; assert_in_delta(0, (worksheet.costpercapita_h42||0), 0.001); end
  def test_costpercapita_i42; assert_in_delta(0, (worksheet.costpercapita_i42||0), 0.001); end
  def test_costpercapita_j42; assert_in_delta(0, (worksheet.costpercapita_j42||0), 0.001); end
  def test_costpercapita_k42; assert_in_delta(0, (worksheet.costpercapita_k42||0), 0.001); end
  def test_costpercapita_l42; assert_in_delta(0, (worksheet.costpercapita_l42||0), 0.001); end
  def test_costpercapita_m42; assert_in_delta(0, (worksheet.costpercapita_m42||0), 0.001); end
  def test_costpercapita_o42; assert_in_delta(0, (worksheet.costpercapita_o42||0), 0.001); end
  def test_costpercapita_p42; assert_in_delta(0, (worksheet.costpercapita_p42||0), 0.001); end
  def test_costpercapita_q42; assert_in_delta(0, (worksheet.costpercapita_q42||0), 0.001); end
  def test_costpercapita_r42; assert_in_delta(0, (worksheet.costpercapita_r42||0), 0.001); end
  def test_costpercapita_s42; assert_in_delta(0, (worksheet.costpercapita_s42||0), 0.001); end
  def test_costpercapita_t42; assert_in_delta(0, (worksheet.costpercapita_t42||0), 0.001); end
  def test_costpercapita_u42; assert_in_delta(0, (worksheet.costpercapita_u42||0), 0.001); end
  def test_costpercapita_v42; assert_in_delta(0, (worksheet.costpercapita_v42||0), 0.001); end
  def test_costpercapita_w42; assert_in_delta(0, (worksheet.costpercapita_w42||0), 0.001); end
  def test_costpercapita_y42; assert_in_delta(0, (worksheet.costpercapita_y42||0), 0.001); end
  def test_costpercapita_z42; assert_in_delta(0, (worksheet.costpercapita_z42||0), 0.001); end
  def test_costpercapita_aa42; assert_in_delta(0, (worksheet.costpercapita_aa42||0), 0.001); end
  def test_costpercapita_ab42; assert_in_delta(0, (worksheet.costpercapita_ab42||0), 0.001); end
  def test_costpercapita_ac42; assert_in_delta(0, (worksheet.costpercapita_ac42||0), 0.001); end
  def test_costpercapita_ad42; assert_in_delta(0, (worksheet.costpercapita_ad42||0), 0.001); end
  def test_costpercapita_ae42; assert_in_delta(0, (worksheet.costpercapita_ae42||0), 0.001); end
  def test_costpercapita_af42; assert_in_delta(0, (worksheet.costpercapita_af42||0), 0.001); end
  def test_costpercapita_ag42; assert_in_delta(0, (worksheet.costpercapita_ag42||0), 0.001); end
  def test_costpercapita_ai42; assert_in_delta(0, (worksheet.costpercapita_ai42||0), 0.001); end
  def test_costpercapita_aj42; assert_in_delta(0, (worksheet.costpercapita_aj42||0), 0.001); end
  def test_costpercapita_ak42; assert_in_delta(0, (worksheet.costpercapita_ak42||0), 0.001); end
  def test_costpercapita_al42; assert_in_delta(0, (worksheet.costpercapita_al42||0), 0.001); end
  def test_costpercapita_am42; assert_in_delta(0, (worksheet.costpercapita_am42||0), 0.001); end
  def test_costpercapita_an42; assert_in_delta(0, (worksheet.costpercapita_an42||0), 0.001); end
  def test_costpercapita_ao42; assert_in_delta(0, (worksheet.costpercapita_ao42||0), 0.001); end
  def test_costpercapita_ap42; assert_in_delta(0, (worksheet.costpercapita_ap42||0), 0.001); end
  def test_costpercapita_aq42; assert_in_delta(0, (worksheet.costpercapita_aq42||0), 0.001); end
  def test_costpercapita_as42; assert_in_delta(0, (worksheet.costpercapita_as42||0), 0.001); end
  def test_costpercapita_at42; assert_in_delta(0, (worksheet.costpercapita_at42||0), 0.001); end
  def test_costpercapita_av42; assert_in_delta(0, (worksheet.costpercapita_av42||0), 0.001); end
  def test_costpercapita_aw42; assert_in_epsilon(5, worksheet.costpercapita_aw42, 0.001); end
  def test_costpercapita_ay42; assert_in_delta(0, (worksheet.costpercapita_ay42||0), 0.001); end
  def test_costpercapita_az42; assert_in_delta(0, (worksheet.costpercapita_az42||0), 0.001); end
  def test_costpercapita_ba42; assert_in_delta(0, (worksheet.costpercapita_ba42||0), 0.001); end
  def test_costpercapita_bb42; assert_in_delta(0, (worksheet.costpercapita_bb42||0), 0.001); end
  def test_costpercapita_bc42; assert_in_delta(0, (worksheet.costpercapita_bc42||0), 0.001); end
  def test_costpercapita_bd42; assert_in_delta(0, (worksheet.costpercapita_bd42||0), 0.001); end
  def test_costpercapita_be42; assert_in_delta(0, (worksheet.costpercapita_be42||0), 0.001); end
  def test_costpercapita_bf42; assert_in_delta(0, (worksheet.costpercapita_bf42||0), 0.001); end
  def test_costpercapita_bg42; assert_in_delta(0, (worksheet.costpercapita_bg42||0), 0.001); end
  def test_costpercapita_bi42; assert_in_delta(0, (worksheet.costpercapita_bi42||0), 0.001); end
  def test_costpercapita_bj42; assert_in_delta(0, (worksheet.costpercapita_bj42||0), 0.001); end
  def test_costpercapita_bk42; assert_in_delta(0, (worksheet.costpercapita_bk42||0), 0.001); end
  def test_costpercapita_bl42; assert_in_delta(0, (worksheet.costpercapita_bl42||0), 0.001); end
  def test_costpercapita_bm42; assert_in_delta(0, (worksheet.costpercapita_bm42||0), 0.001); end
  def test_costpercapita_bn42; assert_in_delta(0, (worksheet.costpercapita_bn42||0), 0.001); end
  def test_costpercapita_bo42; assert_in_delta(0, (worksheet.costpercapita_bo42||0), 0.001); end
  def test_costpercapita_bp42; assert_in_delta(0, (worksheet.costpercapita_bp42||0), 0.001); end
  def test_costpercapita_bq42; assert_in_delta(0, (worksheet.costpercapita_bq42||0), 0.001); end
  def test_costpercapita_bs42; assert_in_delta(0, (worksheet.costpercapita_bs42||0), 0.001); end
  def test_costpercapita_bt42; assert_in_delta(0, (worksheet.costpercapita_bt42||0), 0.001); end
  def test_costpercapita_bu42; assert_in_delta(0, (worksheet.costpercapita_bu42||0), 0.001); end
  def test_costpercapita_bv42; assert_in_delta(0, (worksheet.costpercapita_bv42||0), 0.001); end
  def test_costpercapita_bw42; assert_in_delta(0, (worksheet.costpercapita_bw42||0), 0.001); end
  def test_costpercapita_bx42; assert_in_delta(0, (worksheet.costpercapita_bx42||0), 0.001); end
  def test_costpercapita_by42; assert_in_delta(0, (worksheet.costpercapita_by42||0), 0.001); end
  def test_costpercapita_bz42; assert_in_delta(0, (worksheet.costpercapita_bz42||0), 0.001); end
  def test_costpercapita_ca42; assert_in_delta(0, (worksheet.costpercapita_ca42||0), 0.001); end
  def test_costpercapita_cc42; assert_in_delta(0, (worksheet.costpercapita_cc42||0), 0.001); end
  def test_costpercapita_cd42; assert_in_delta(0, (worksheet.costpercapita_cd42||0), 0.001); end
  def test_costpercapita_cf42; assert_in_delta(0, (worksheet.costpercapita_cf42||0), 0.001); end
  def test_costpercapita_cg42; assert_in_delta(0, (worksheet.costpercapita_cg42||0), 0.001); end
  def test_costpercapita_ch42; assert_in_delta(0, (worksheet.costpercapita_ch42||0), 0.001); end
  def test_costpercapita_ci42; assert_in_delta(0, (worksheet.costpercapita_ci42||0), 0.001); end
  def test_costpercapita_cj42; assert_in_delta(0, (worksheet.costpercapita_cj42||0), 0.001); end
  def test_costpercapita_ck42; assert_in_delta(0, (worksheet.costpercapita_ck42||0), 0.001); end
  def test_costpercapita_cl42; assert_in_delta(0, (worksheet.costpercapita_cl42||0), 0.001); end
  def test_costpercapita_cm42; assert_in_delta(0, (worksheet.costpercapita_cm42||0), 0.001); end
  def test_costpercapita_cn42; assert_in_delta(0, (worksheet.costpercapita_cn42||0), 0.001); end
  def test_costpercapita_cp42; assert_in_delta(0, (worksheet.costpercapita_cp42||0), 0.001); end
  def test_costpercapita_cq42; assert_in_delta(0, (worksheet.costpercapita_cq42||0), 0.001); end
  def test_costpercapita_cr42; assert_equal("ok", worksheet.costpercapita_cr42); end
  def test_costpercapita_a43; assert_equal("XV.a", worksheet.costpercapita_a43); end
  def test_costpercapita_b43; assert_equal("Petroleum refineries", worksheet.costpercapita_b43); end
  def test_costpercapita_c43; assert_equal("Industry", worksheet.costpercapita_c43); end
  def test_costpercapita_e43; assert_in_epsilon(4.552297448817079, worksheet.costpercapita_e43, 0.001); end
  def test_costpercapita_f43; assert_in_epsilon(4.146562356901544, worksheet.costpercapita_f43, 0.001); end
  def test_costpercapita_g43; assert_in_epsilon(3.800700172811871, worksheet.costpercapita_g43, 0.001); end
  def test_costpercapita_h43; assert_in_epsilon(3.493374938973205, worksheet.costpercapita_h43, 0.001); end
  def test_costpercapita_i43; assert_in_epsilon(3.25356835628611, worksheet.costpercapita_i43, 0.001); end
  def test_costpercapita_j43; assert_in_epsilon(3.0678511933775083, worksheet.costpercapita_j43, 0.001); end
  def test_costpercapita_k43; assert_in_epsilon(2.919823220851967, worksheet.costpercapita_k43, 0.001); end
  def test_costpercapita_l43; assert_in_epsilon(2.798938097813601, worksheet.costpercapita_l43, 0.001); end
  def test_costpercapita_m43; assert_in_epsilon(2.6991394086203893, worksheet.costpercapita_m43, 0.001); end
  def test_costpercapita_o43; assert_in_epsilon(12.161930899585185, worksheet.costpercapita_o43, 0.001); end
  def test_costpercapita_p43; assert_in_epsilon(11.144781371707587, worksheet.costpercapita_p43, 0.001); end
  def test_costpercapita_q43; assert_in_epsilon(10.224852574354598, worksheet.costpercapita_q43, 0.001); end
  def test_costpercapita_r43; assert_in_epsilon(9.48728657713034, worksheet.costpercapita_r43, 0.001); end
  def test_costpercapita_s43; assert_in_epsilon(8.911253849508986, worksheet.costpercapita_s43, 0.001); end
  def test_costpercapita_t43; assert_in_epsilon(8.461954391926094, worksheet.costpercapita_t43, 0.001); end
  def test_costpercapita_u43; assert_in_epsilon(8.100207472750888, worksheet.costpercapita_u43, 0.001); end
  def test_costpercapita_v43; assert_in_epsilon(7.801149203940404, worksheet.costpercapita_v43, 0.001); end
  def test_costpercapita_w43; assert_in_epsilon(7.551175130946535, worksheet.costpercapita_w43, 0.001); end
  def test_costpercapita_y43; assert_in_delta(0, (worksheet.costpercapita_y43||0), 0.001); end
  def test_costpercapita_z43; assert_in_delta(0, (worksheet.costpercapita_z43||0), 0.001); end
  def test_costpercapita_aa43; assert_in_delta(0, (worksheet.costpercapita_aa43||0), 0.001); end
  def test_costpercapita_ab43; assert_in_delta(0, (worksheet.costpercapita_ab43||0), 0.001); end
  def test_costpercapita_ac43; assert_in_delta(0, (worksheet.costpercapita_ac43||0), 0.001); end
  def test_costpercapita_ad43; assert_in_delta(0, (worksheet.costpercapita_ad43||0), 0.001); end
  def test_costpercapita_ae43; assert_in_delta(0, (worksheet.costpercapita_ae43||0), 0.001); end
  def test_costpercapita_af43; assert_in_delta(0, (worksheet.costpercapita_af43||0), 0.001); end
  def test_costpercapita_ag43; assert_in_delta(0, (worksheet.costpercapita_ag43||0), 0.001); end
  def test_costpercapita_ai43; assert_in_epsilon(16.714228348402266, worksheet.costpercapita_ai43, 0.001); end
  def test_costpercapita_aj43; assert_in_epsilon(15.291343728609132, worksheet.costpercapita_aj43, 0.001); end
  def test_costpercapita_ak43; assert_in_epsilon(14.025552747166468, worksheet.costpercapita_ak43, 0.001); end
  def test_costpercapita_al43; assert_in_epsilon(12.980661516103545, worksheet.costpercapita_al43, 0.001); end
  def test_costpercapita_am43; assert_in_epsilon(12.164822205795096, worksheet.costpercapita_am43, 0.001); end
  def test_costpercapita_an43; assert_in_epsilon(11.5298055853036, worksheet.costpercapita_an43, 0.001); end
  def test_costpercapita_ao43; assert_in_epsilon(11.020030693602857, worksheet.costpercapita_ao43, 0.001); end
  def test_costpercapita_ap43; assert_in_epsilon(10.600087301754005, worksheet.costpercapita_ap43, 0.001); end
  def test_costpercapita_aq43; assert_in_epsilon(10.250314539566924, worksheet.costpercapita_aq43, 0.001); end
  def test_costpercapita_as43; assert_in_epsilon(12.730760740700434, worksheet.costpercapita_as43, 0.001); end
  def test_costpercapita_at43; assert_in_epsilon(274.01252390555754, worksheet.costpercapita_at43, 0.001); end
  def test_costpercapita_av43; assert_in_delta(0, (worksheet.costpercapita_av43||0), 0.001); end
  def test_costpercapita_aw43; assert_in_epsilon(15, worksheet.costpercapita_aw43, 0.001); end
  def test_costpercapita_ay43; assert_in_delta(0.9104594897634157, worksheet.costpercapita_ay43, 0.001); end
  def test_costpercapita_az43; assert_in_epsilon(1.3821874523005149, worksheet.costpercapita_az43, 0.001); end
  def test_costpercapita_ba43; assert_in_epsilon(1.2669000576039569, worksheet.costpercapita_ba43, 0.001); end
  def test_costpercapita_bb43; assert_in_epsilon(1.1644583129910682, worksheet.costpercapita_bb43, 0.001); end
  def test_costpercapita_bc43; assert_in_epsilon(1.0845227854287034, worksheet.costpercapita_bc43, 0.001); end
  def test_costpercapita_bd43; assert_in_epsilon(1.0226170644591697, worksheet.costpercapita_bd43, 0.001); end
  def test_costpercapita_be43; assert_in_delta(0.9732744069506558, worksheet.costpercapita_be43, 0.001); end
  def test_costpercapita_bf43; assert_in_delta(0.9329793659378669, worksheet.costpercapita_bf43, 0.001); end
  def test_costpercapita_bg43; assert_in_delta(0.8997131362067964, worksheet.costpercapita_bg43, 0.001); end
  def test_costpercapita_bi43; assert_in_delta(0.9104594897634157, worksheet.costpercapita_bi43, 0.001); end
  def test_costpercapita_bj43; assert_in_epsilon(2.2626244773387114, worksheet.costpercapita_bj43, 0.001); end
  def test_costpercapita_bk43; assert_in_epsilon(3.4554503943979995, worksheet.costpercapita_bk43, 0.001); end
  def test_costpercapita_bl43; assert_in_epsilon(3.687671713214236, worksheet.costpercapita_bl43, 0.001); end
  def test_costpercapita_bm43; assert_in_epsilon(3.411300149961336, worksheet.costpercapita_bm43, 0.001); end
  def test_costpercapita_bn43; assert_in_epsilon(3.187558050419851, worksheet.costpercapita_bn43, 0.001); end
  def test_costpercapita_bo43; assert_in_epsilon(3.0104747082117327, worksheet.costpercapita_bo43, 0.001); end
  def test_costpercapita_bp43; assert_in_epsilon(2.867683255574724, worksheet.costpercapita_bp43, 0.001); end
  def test_costpercapita_bq43; assert_in_epsilon(2.751340414633912, worksheet.costpercapita_bq43, 0.001); end
  def test_costpercapita_bs43; assert_in_epsilon(13.072390389348602, worksheet.costpercapita_bs43, 0.001); end
  def test_costpercapita_bt43; assert_in_epsilon(13.407405849046299, worksheet.costpercapita_bt43, 0.001); end
  def test_costpercapita_bu43; assert_in_epsilon(13.680302968752597, worksheet.costpercapita_bu43, 0.001); end
  def test_costpercapita_bv43; assert_in_epsilon(13.174958290344577, worksheet.costpercapita_bv43, 0.001); end
  def test_costpercapita_bw43; assert_in_epsilon(12.322553999470323, worksheet.costpercapita_bw43, 0.001); end
  def test_costpercapita_bx43; assert_in_epsilon(11.649512442345943, worksheet.costpercapita_bx43, 0.001); end
  def test_costpercapita_by43; assert_in_epsilon(11.110682180962622, worksheet.costpercapita_by43, 0.001); end
  def test_costpercapita_bz43; assert_in_epsilon(10.668832459515128, worksheet.costpercapita_bz43, 0.001); end
  def test_costpercapita_ca43; assert_in_epsilon(10.302515545580448, worksheet.costpercapita_ca43, 0.001); end
  def test_costpercapita_cc43; assert_in_epsilon(12.154350458374061, worksheet.costpercapita_cc43, 0.001); end
  def test_costpercapita_cd43; assert_in_epsilon(262.7815969348256, worksheet.costpercapita_cd43, 0.001); end
  def test_costpercapita_cf43; assert_in_epsilon(-3.641837959053663, worksheet.costpercapita_cf43, 0.001); end
  def test_costpercapita_cg43; assert_in_epsilon(-1.883937879562833, worksheet.costpercapita_cg43, 0.001); end
  def test_costpercapita_ch43; assert_in_delta(-0.34524977841387133, worksheet.costpercapita_ch43, 0.001); end
  def test_costpercapita_ci43; assert_in_delta(0.19429677424103128, worksheet.costpercapita_ci43, 0.001); end
  def test_costpercapita_cj43; assert_in_delta(0.15773179367522586, worksheet.costpercapita_cj43, 0.001); end
  def test_costpercapita_ck43; assert_in_delta(0.11970685704234267, worksheet.costpercapita_ck43, 0.001); end
  def test_costpercapita_cl43; assert_in_delta(0.09065148735976566, worksheet.costpercapita_cl43, 0.001); end
  def test_costpercapita_cm43; assert_in_delta(0.06874515776112294, worksheet.costpercapita_cm43, 0.001); end
  def test_costpercapita_cn43; assert_in_delta(0.052201006013522865, worksheet.costpercapita_cn43, 0.001); end
  def test_costpercapita_cp43; assert_in_delta(-0.5764102823263728, worksheet.costpercapita_cp43, 0.001); end
  def test_costpercapita_cq43; assert_in_epsilon(-11.230926970731982, worksheet.costpercapita_cq43, 0.001); end
  def test_costpercapita_cr43; assert_equal("ok", worksheet.costpercapita_cr43); end
  def test_costpercapita_a44; assert_equal("XV.b.Coal", worksheet.costpercapita_a44); end
  def test_costpercapita_b44; assert_equal("Indigenous fossil-fuel production - Coal", worksheet.costpercapita_b44); end
  def test_costpercapita_c44; assert_equal("Fossil Fuels", worksheet.costpercapita_c44); end
  def test_costpercapita_e44; assert_in_delta(0, (worksheet.costpercapita_e44||0), 0.001); end
  def test_costpercapita_f44; assert_in_delta(0, (worksheet.costpercapita_f44||0), 0.001); end
  def test_costpercapita_g44; assert_in_delta(0, (worksheet.costpercapita_g44||0), 0.001); end
  def test_costpercapita_h44; assert_in_delta(0, (worksheet.costpercapita_h44||0), 0.001); end
  def test_costpercapita_i44; assert_in_delta(0, (worksheet.costpercapita_i44||0), 0.001); end
  def test_costpercapita_j44; assert_in_delta(0, (worksheet.costpercapita_j44||0), 0.001); end
  def test_costpercapita_k44; assert_in_delta(0, (worksheet.costpercapita_k44||0), 0.001); end
  def test_costpercapita_l44; assert_in_delta(0, (worksheet.costpercapita_l44||0), 0.001); end
  def test_costpercapita_m44; assert_in_delta(0, (worksheet.costpercapita_m44||0), 0.001); end
  def test_costpercapita_o44; assert_in_delta(0, (worksheet.costpercapita_o44||0), 0.001); end
  def test_costpercapita_p44; assert_in_delta(0, (worksheet.costpercapita_p44||0), 0.001); end
  def test_costpercapita_q44; assert_in_delta(0, (worksheet.costpercapita_q44||0), 0.001); end
  def test_costpercapita_r44; assert_in_delta(0, (worksheet.costpercapita_r44||0), 0.001); end
  def test_costpercapita_s44; assert_in_delta(0, (worksheet.costpercapita_s44||0), 0.001); end
  def test_costpercapita_t44; assert_in_delta(0, (worksheet.costpercapita_t44||0), 0.001); end
  def test_costpercapita_u44; assert_in_delta(0, (worksheet.costpercapita_u44||0), 0.001); end
  def test_costpercapita_v44; assert_in_delta(0, (worksheet.costpercapita_v44||0), 0.001); end
  def test_costpercapita_w44; assert_in_delta(0, (worksheet.costpercapita_w44||0), 0.001); end
  def test_costpercapita_y44; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_y44, 0.001); end
  def test_costpercapita_z44; assert_in_epsilon(15.45656653285251, worksheet.costpercapita_z44, 0.001); end
  def test_costpercapita_aa44; assert_in_epsilon(14.409162417205268, worksheet.costpercapita_aa44, 0.001); end
  def test_costpercapita_ab44; assert_in_epsilon(13.438383117365467, worksheet.costpercapita_ab44, 0.001); end
  def test_costpercapita_ac44; assert_in_epsilon(6.280477805756656, worksheet.costpercapita_ac44, 0.001); end
  def test_costpercapita_ad44; assert_in_epsilon(6.132536780985016, worksheet.costpercapita_ad44, 0.001); end
  def test_costpercapita_ae44; assert_in_epsilon(6.001751932843022, worksheet.costpercapita_ae44, 0.001); end
  def test_costpercapita_af44; assert_in_epsilon(5.8820294332238205, worksheet.costpercapita_af44, 0.001); end
  def test_costpercapita_ag44; assert_in_epsilon(5.772260557340837, worksheet.costpercapita_ag44, 0.001); end
  def test_costpercapita_ai44; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_ai44, 0.001); end
  def test_costpercapita_aj44; assert_in_epsilon(15.45656653285251, worksheet.costpercapita_aj44, 0.001); end
  def test_costpercapita_ak44; assert_in_epsilon(14.409162417205268, worksheet.costpercapita_ak44, 0.001); end
  def test_costpercapita_al44; assert_in_epsilon(13.438383117365467, worksheet.costpercapita_al44, 0.001); end
  def test_costpercapita_am44; assert_in_epsilon(6.280477805756656, worksheet.costpercapita_am44, 0.001); end
  def test_costpercapita_an44; assert_in_epsilon(6.132536780985016, worksheet.costpercapita_an44, 0.001); end
  def test_costpercapita_ao44; assert_in_epsilon(6.001751932843022, worksheet.costpercapita_ao44, 0.001); end
  def test_costpercapita_ap44; assert_in_epsilon(5.8820294332238205, worksheet.costpercapita_ap44, 0.001); end
  def test_costpercapita_aq44; assert_in_epsilon(5.772260557340837, worksheet.costpercapita_aq44, 0.001); end
  def test_costpercapita_as44; assert_in_epsilon(9.992843407006715, worksheet.costpercapita_as44, 0.001); end
  def test_costpercapita_at44; assert_in_epsilon(228.95126597509048, worksheet.costpercapita_at44, 0.001); end
  def test_costpercapita_av44; assert_in_delta(0, (worksheet.costpercapita_av44||0), 0.001); end
  def test_costpercapita_aw44; assert_in_epsilon(5, worksheet.costpercapita_aw44, 0.001); end
  def test_costpercapita_ay44; assert_in_delta(0, (worksheet.costpercapita_ay44||0), 0.001); end
  def test_costpercapita_az44; assert_in_delta(0, (worksheet.costpercapita_az44||0), 0.001); end
  def test_costpercapita_ba44; assert_in_delta(0, (worksheet.costpercapita_ba44||0), 0.001); end
  def test_costpercapita_bb44; assert_in_delta(0, (worksheet.costpercapita_bb44||0), 0.001); end
  def test_costpercapita_bc44; assert_in_delta(0, (worksheet.costpercapita_bc44||0), 0.001); end
  def test_costpercapita_bd44; assert_in_delta(0, (worksheet.costpercapita_bd44||0), 0.001); end
  def test_costpercapita_be44; assert_in_delta(0, (worksheet.costpercapita_be44||0), 0.001); end
  def test_costpercapita_bf44; assert_in_delta(0, (worksheet.costpercapita_bf44||0), 0.001); end
  def test_costpercapita_bg44; assert_in_delta(0, (worksheet.costpercapita_bg44||0), 0.001); end
  def test_costpercapita_bi44; assert_in_delta(0, (worksheet.costpercapita_bi44||0), 0.001); end
  def test_costpercapita_bj44; assert_in_delta(0, (worksheet.costpercapita_bj44||0), 0.001); end
  def test_costpercapita_bk44; assert_in_delta(0, (worksheet.costpercapita_bk44||0), 0.001); end
  def test_costpercapita_bl44; assert_in_delta(0, (worksheet.costpercapita_bl44||0), 0.001); end
  def test_costpercapita_bm44; assert_in_delta(0, (worksheet.costpercapita_bm44||0), 0.001); end
  def test_costpercapita_bn44; assert_in_delta(0, (worksheet.costpercapita_bn44||0), 0.001); end
  def test_costpercapita_bo44; assert_in_delta(0, (worksheet.costpercapita_bo44||0), 0.001); end
  def test_costpercapita_bp44; assert_in_delta(0, (worksheet.costpercapita_bp44||0), 0.001); end
  def test_costpercapita_bq44; assert_in_delta(0, (worksheet.costpercapita_bq44||0), 0.001); end
  def test_costpercapita_bs44; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_bs44, 0.001); end
  def test_costpercapita_bt44; assert_in_epsilon(15.45656653285251, worksheet.costpercapita_bt44, 0.001); end
  def test_costpercapita_bu44; assert_in_epsilon(14.409162417205268, worksheet.costpercapita_bu44, 0.001); end
  def test_costpercapita_bv44; assert_in_epsilon(13.438383117365467, worksheet.costpercapita_bv44, 0.001); end
  def test_costpercapita_bw44; assert_in_epsilon(6.280477805756656, worksheet.costpercapita_bw44, 0.001); end
  def test_costpercapita_bx44; assert_in_epsilon(6.132536780985016, worksheet.costpercapita_bx44, 0.001); end
  def test_costpercapita_by44; assert_in_epsilon(6.001751932843022, worksheet.costpercapita_by44, 0.001); end
  def test_costpercapita_bz44; assert_in_epsilon(5.8820294332238205, worksheet.costpercapita_bz44, 0.001); end
  def test_costpercapita_ca44; assert_in_epsilon(5.772260557340837, worksheet.costpercapita_ca44, 0.001); end
  def test_costpercapita_cc44; assert_in_epsilon(9.992843407006715, worksheet.costpercapita_cc44, 0.001); end
  def test_costpercapita_cd44; assert_in_epsilon(228.95126597509048, worksheet.costpercapita_cd44, 0.001); end
  def test_costpercapita_cf44; assert_in_delta(0, (worksheet.costpercapita_cf44||0), 0.001); end
  def test_costpercapita_cg44; assert_in_delta(0, (worksheet.costpercapita_cg44||0), 0.001); end
  def test_costpercapita_ch44; assert_in_delta(0, (worksheet.costpercapita_ch44||0), 0.001); end
  def test_costpercapita_ci44; assert_in_delta(0, (worksheet.costpercapita_ci44||0), 0.001); end
  def test_costpercapita_cj44; assert_in_delta(0, (worksheet.costpercapita_cj44||0), 0.001); end
  def test_costpercapita_ck44; assert_in_delta(0, (worksheet.costpercapita_ck44||0), 0.001); end
  def test_costpercapita_cl44; assert_in_delta(0, (worksheet.costpercapita_cl44||0), 0.001); end
  def test_costpercapita_cm44; assert_in_delta(0, (worksheet.costpercapita_cm44||0), 0.001); end
  def test_costpercapita_cn44; assert_in_delta(0, (worksheet.costpercapita_cn44||0), 0.001); end
  def test_costpercapita_cp44; assert_in_delta(0, (worksheet.costpercapita_cp44||0), 0.001); end
  def test_costpercapita_cq44; assert_in_delta(0, (worksheet.costpercapita_cq44||0), 0.001); end
  def test_costpercapita_cr44; assert_equal("ok", worksheet.costpercapita_cr44); end
  def test_costpercapita_a45; assert_equal("XV.b.Oil", worksheet.costpercapita_a45); end
  def test_costpercapita_b45; assert_equal("Indigenous fossil-fuel production - Oil", worksheet.costpercapita_b45); end
  def test_costpercapita_c45; assert_equal("Fossil Fuels", worksheet.costpercapita_c45); end
  def test_costpercapita_e45; assert_in_delta(0, (worksheet.costpercapita_e45||0), 0.001); end
  def test_costpercapita_f45; assert_in_delta(0, (worksheet.costpercapita_f45||0), 0.001); end
  def test_costpercapita_g45; assert_in_delta(0, (worksheet.costpercapita_g45||0), 0.001); end
  def test_costpercapita_h45; assert_in_delta(0, (worksheet.costpercapita_h45||0), 0.001); end
  def test_costpercapita_i45; assert_in_delta(0, (worksheet.costpercapita_i45||0), 0.001); end
  def test_costpercapita_j45; assert_in_delta(0, (worksheet.costpercapita_j45||0), 0.001); end
  def test_costpercapita_k45; assert_in_delta(0, (worksheet.costpercapita_k45||0), 0.001); end
  def test_costpercapita_l45; assert_in_delta(0, (worksheet.costpercapita_l45||0), 0.001); end
  def test_costpercapita_m45; assert_in_delta(0, (worksheet.costpercapita_m45||0), 0.001); end
  def test_costpercapita_o45; assert_in_delta(0, (worksheet.costpercapita_o45||0), 0.001); end
  def test_costpercapita_p45; assert_in_delta(0, (worksheet.costpercapita_p45||0), 0.001); end
  def test_costpercapita_q45; assert_in_delta(0, (worksheet.costpercapita_q45||0), 0.001); end
  def test_costpercapita_r45; assert_in_delta(0, (worksheet.costpercapita_r45||0), 0.001); end
  def test_costpercapita_s45; assert_in_delta(0, (worksheet.costpercapita_s45||0), 0.001); end
  def test_costpercapita_t45; assert_in_delta(0, (worksheet.costpercapita_t45||0), 0.001); end
  def test_costpercapita_u45; assert_in_delta(0, (worksheet.costpercapita_u45||0), 0.001); end
  def test_costpercapita_v45; assert_in_delta(0, (worksheet.costpercapita_v45||0), 0.001); end
  def test_costpercapita_w45; assert_in_delta(0, (worksheet.costpercapita_w45||0), 0.001); end
  def test_costpercapita_y45; assert_in_epsilon(432.41627381141154, worksheet.costpercapita_y45, 0.001); end
  def test_costpercapita_z45; assert_in_epsilon(329.82933264456, worksheet.costpercapita_z45, 0.001); end
  def test_costpercapita_aa45; assert_in_epsilon(242.0971440096586, worksheet.costpercapita_aa45, 0.001); end
  def test_costpercapita_ab45; assert_in_epsilon(177.48292069161127, worksheet.costpercapita_ab45, 0.001); end
  def test_costpercapita_ac45; assert_in_epsilon(130.53512529867376, worksheet.costpercapita_ac45, 0.001); end
  def test_costpercapita_ad45; assert_in_epsilon(98.62633463812799, worksheet.costpercapita_ad45, 0.001); end
  def test_costpercapita_ae45; assert_in_epsilon(74.6876507218443, worksheet.costpercapita_ae45, 0.001); end
  def test_costpercapita_af45; assert_in_epsilon(56.63905227835964, worksheet.costpercapita_af45, 0.001); end
  def test_costpercapita_ag45; assert_in_epsilon(43.008345676601735, worksheet.costpercapita_ag45, 0.001); end
  def test_costpercapita_ai45; assert_in_epsilon(432.41627381141154, worksheet.costpercapita_ai45, 0.001); end
  def test_costpercapita_aj45; assert_in_epsilon(329.82933264456, worksheet.costpercapita_aj45, 0.001); end
  def test_costpercapita_ak45; assert_in_epsilon(242.0971440096586, worksheet.costpercapita_ak45, 0.001); end
  def test_costpercapita_al45; assert_in_epsilon(177.48292069161127, worksheet.costpercapita_al45, 0.001); end
  def test_costpercapita_am45; assert_in_epsilon(130.53512529867376, worksheet.costpercapita_am45, 0.001); end
  def test_costpercapita_an45; assert_in_epsilon(98.62633463812799, worksheet.costpercapita_an45, 0.001); end
  def test_costpercapita_ao45; assert_in_epsilon(74.6876507218443, worksheet.costpercapita_ao45, 0.001); end
  def test_costpercapita_ap45; assert_in_epsilon(56.63905227835964, worksheet.costpercapita_ap45, 0.001); end
  def test_costpercapita_aq45; assert_in_epsilon(43.008345676601735, worksheet.costpercapita_aq45, 0.001); end
  def test_costpercapita_as45; assert_in_epsilon(176.14690886342765, worksheet.costpercapita_as45, 0.001); end
  def test_costpercapita_at45; assert_in_epsilon(4022.5493737254387, worksheet.costpercapita_at45, 0.001); end
  def test_costpercapita_av45; assert_in_delta(0, (worksheet.costpercapita_av45||0), 0.001); end
  def test_costpercapita_aw45; assert_in_epsilon(5, worksheet.costpercapita_aw45, 0.001); end
  def test_costpercapita_ay45; assert_in_delta(0, (worksheet.costpercapita_ay45||0), 0.001); end
  def test_costpercapita_az45; assert_in_delta(0, (worksheet.costpercapita_az45||0), 0.001); end
  def test_costpercapita_ba45; assert_in_delta(0, (worksheet.costpercapita_ba45||0), 0.001); end
  def test_costpercapita_bb45; assert_in_delta(0, (worksheet.costpercapita_bb45||0), 0.001); end
  def test_costpercapita_bc45; assert_in_delta(0, (worksheet.costpercapita_bc45||0), 0.001); end
  def test_costpercapita_bd45; assert_in_delta(0, (worksheet.costpercapita_bd45||0), 0.001); end
  def test_costpercapita_be45; assert_in_delta(0, (worksheet.costpercapita_be45||0), 0.001); end
  def test_costpercapita_bf45; assert_in_delta(0, (worksheet.costpercapita_bf45||0), 0.001); end
  def test_costpercapita_bg45; assert_in_delta(0, (worksheet.costpercapita_bg45||0), 0.001); end
  def test_costpercapita_bi45; assert_in_delta(0, (worksheet.costpercapita_bi45||0), 0.001); end
  def test_costpercapita_bj45; assert_in_delta(0, (worksheet.costpercapita_bj45||0), 0.001); end
  def test_costpercapita_bk45; assert_in_delta(0, (worksheet.costpercapita_bk45||0), 0.001); end
  def test_costpercapita_bl45; assert_in_delta(0, (worksheet.costpercapita_bl45||0), 0.001); end
  def test_costpercapita_bm45; assert_in_delta(0, (worksheet.costpercapita_bm45||0), 0.001); end
  def test_costpercapita_bn45; assert_in_delta(0, (worksheet.costpercapita_bn45||0), 0.001); end
  def test_costpercapita_bo45; assert_in_delta(0, (worksheet.costpercapita_bo45||0), 0.001); end
  def test_costpercapita_bp45; assert_in_delta(0, (worksheet.costpercapita_bp45||0), 0.001); end
  def test_costpercapita_bq45; assert_in_delta(0, (worksheet.costpercapita_bq45||0), 0.001); end
  def test_costpercapita_bs45; assert_in_epsilon(432.41627381141154, worksheet.costpercapita_bs45, 0.001); end
  def test_costpercapita_bt45; assert_in_epsilon(329.82933264456, worksheet.costpercapita_bt45, 0.001); end
  def test_costpercapita_bu45; assert_in_epsilon(242.0971440096586, worksheet.costpercapita_bu45, 0.001); end
  def test_costpercapita_bv45; assert_in_epsilon(177.48292069161127, worksheet.costpercapita_bv45, 0.001); end
  def test_costpercapita_bw45; assert_in_epsilon(130.53512529867376, worksheet.costpercapita_bw45, 0.001); end
  def test_costpercapita_bx45; assert_in_epsilon(98.62633463812799, worksheet.costpercapita_bx45, 0.001); end
  def test_costpercapita_by45; assert_in_epsilon(74.6876507218443, worksheet.costpercapita_by45, 0.001); end
  def test_costpercapita_bz45; assert_in_epsilon(56.63905227835964, worksheet.costpercapita_bz45, 0.001); end
  def test_costpercapita_ca45; assert_in_epsilon(43.008345676601735, worksheet.costpercapita_ca45, 0.001); end
  def test_costpercapita_cc45; assert_in_epsilon(176.14690886342765, worksheet.costpercapita_cc45, 0.001); end
  def test_costpercapita_cd45; assert_in_epsilon(4022.5493737254387, worksheet.costpercapita_cd45, 0.001); end
  def test_costpercapita_cf45; assert_in_delta(0, (worksheet.costpercapita_cf45||0), 0.001); end
  def test_costpercapita_cg45; assert_in_delta(0, (worksheet.costpercapita_cg45||0), 0.001); end
  def test_costpercapita_ch45; assert_in_delta(0, (worksheet.costpercapita_ch45||0), 0.001); end
  def test_costpercapita_ci45; assert_in_delta(0, (worksheet.costpercapita_ci45||0), 0.001); end
  def test_costpercapita_cj45; assert_in_delta(0, (worksheet.costpercapita_cj45||0), 0.001); end
  def test_costpercapita_ck45; assert_in_delta(0, (worksheet.costpercapita_ck45||0), 0.001); end
  def test_costpercapita_cl45; assert_in_delta(0, (worksheet.costpercapita_cl45||0), 0.001); end
  def test_costpercapita_cm45; assert_in_delta(0, (worksheet.costpercapita_cm45||0), 0.001); end
  def test_costpercapita_cn45; assert_in_delta(0, (worksheet.costpercapita_cn45||0), 0.001); end
  def test_costpercapita_cp45; assert_in_delta(0, (worksheet.costpercapita_cp45||0), 0.001); end
  def test_costpercapita_cq45; assert_in_delta(0, (worksheet.costpercapita_cq45||0), 0.001); end
  def test_costpercapita_cr45; assert_equal("ok", worksheet.costpercapita_cr45); end
  def test_costpercapita_a46; assert_equal("XV.b.Gas", worksheet.costpercapita_a46); end
  def test_costpercapita_b46; assert_equal("Indigenous fossil-fuel production - Gas", worksheet.costpercapita_b46); end
  def test_costpercapita_c46; assert_equal("Fossil Fuels", worksheet.costpercapita_c46); end
  def test_costpercapita_e46; assert_in_delta(0, (worksheet.costpercapita_e46||0), 0.001); end
  def test_costpercapita_f46; assert_in_delta(0, (worksheet.costpercapita_f46||0), 0.001); end
  def test_costpercapita_g46; assert_in_delta(0, (worksheet.costpercapita_g46||0), 0.001); end
  def test_costpercapita_h46; assert_in_delta(0, (worksheet.costpercapita_h46||0), 0.001); end
  def test_costpercapita_i46; assert_in_delta(0, (worksheet.costpercapita_i46||0), 0.001); end
  def test_costpercapita_j46; assert_in_delta(0, (worksheet.costpercapita_j46||0), 0.001); end
  def test_costpercapita_k46; assert_in_delta(0, (worksheet.costpercapita_k46||0), 0.001); end
  def test_costpercapita_l46; assert_in_delta(0, (worksheet.costpercapita_l46||0), 0.001); end
  def test_costpercapita_m46; assert_in_delta(0, (worksheet.costpercapita_m46||0), 0.001); end
  def test_costpercapita_o46; assert_in_delta(0, (worksheet.costpercapita_o46||0), 0.001); end
  def test_costpercapita_p46; assert_in_delta(0, (worksheet.costpercapita_p46||0), 0.001); end
  def test_costpercapita_q46; assert_in_delta(0, (worksheet.costpercapita_q46||0), 0.001); end
  def test_costpercapita_r46; assert_in_delta(0, (worksheet.costpercapita_r46||0), 0.001); end
  def test_costpercapita_s46; assert_in_delta(0, (worksheet.costpercapita_s46||0), 0.001); end
  def test_costpercapita_t46; assert_in_delta(0, (worksheet.costpercapita_t46||0), 0.001); end
  def test_costpercapita_u46; assert_in_delta(0, (worksheet.costpercapita_u46||0), 0.001); end
  def test_costpercapita_v46; assert_in_delta(0, (worksheet.costpercapita_v46||0), 0.001); end
  def test_costpercapita_w46; assert_in_delta(0, (worksheet.costpercapita_w46||0), 0.001); end
  def test_costpercapita_y46; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_y46, 0.001); end
  def test_costpercapita_z46; assert_in_epsilon(112.97307704951542, worksheet.costpercapita_z46, 0.001); end
  def test_costpercapita_aa46; assert_in_epsilon(84.90203013066096, worksheet.costpercapita_aa46, 0.001); end
  def test_costpercapita_ab46; assert_in_epsilon(64.01905763736195, worksheet.costpercapita_ab46, 0.001); end
  def test_costpercapita_ac46; assert_in_epsilon(48.45255635500386, worksheet.costpercapita_ac46, 0.001); end
  def test_costpercapita_ad46; assert_in_epsilon(36.60852223650423, worksheet.costpercapita_ad46, 0.001); end
  def test_costpercapita_ae46; assert_in_epsilon(27.72286461090769, worksheet.costpercapita_ae46, 0.001); end
  def test_costpercapita_af46; assert_in_epsilon(21.023512760508385, worksheet.costpercapita_af46, 0.001); end
  def test_costpercapita_ag46; assert_in_epsilon(15.964011892301023, worksheet.costpercapita_ag46, 0.001); end
  def test_costpercapita_ai46; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_ai46, 0.001); end
  def test_costpercapita_aj46; assert_in_epsilon(112.97307704951542, worksheet.costpercapita_aj46, 0.001); end
  def test_costpercapita_ak46; assert_in_epsilon(84.90203013066096, worksheet.costpercapita_ak46, 0.001); end
  def test_costpercapita_al46; assert_in_epsilon(64.01905763736195, worksheet.costpercapita_al46, 0.001); end
  def test_costpercapita_am46; assert_in_epsilon(48.45255635500386, worksheet.costpercapita_am46, 0.001); end
  def test_costpercapita_an46; assert_in_epsilon(36.60852223650423, worksheet.costpercapita_an46, 0.001); end
  def test_costpercapita_ao46; assert_in_epsilon(27.72286461090769, worksheet.costpercapita_ao46, 0.001); end
  def test_costpercapita_ap46; assert_in_epsilon(21.023512760508385, worksheet.costpercapita_ap46, 0.001); end
  def test_costpercapita_aq46; assert_in_epsilon(15.964011892301023, worksheet.costpercapita_aq46, 0.001); end
  def test_costpercapita_as46; assert_in_epsilon(62.54919551116479, worksheet.costpercapita_as46, 0.001); end
  def test_costpercapita_at46; assert_in_epsilon(1420.9422894853783, worksheet.costpercapita_at46, 0.001); end
  def test_costpercapita_av46; assert_in_delta(0, (worksheet.costpercapita_av46||0), 0.001); end
  def test_costpercapita_aw46; assert_in_epsilon(5, worksheet.costpercapita_aw46, 0.001); end
  def test_costpercapita_ay46; assert_in_delta(0, (worksheet.costpercapita_ay46||0), 0.001); end
  def test_costpercapita_az46; assert_in_delta(0, (worksheet.costpercapita_az46||0), 0.001); end
  def test_costpercapita_ba46; assert_in_delta(0, (worksheet.costpercapita_ba46||0), 0.001); end
  def test_costpercapita_bb46; assert_in_delta(0, (worksheet.costpercapita_bb46||0), 0.001); end
  def test_costpercapita_bc46; assert_in_delta(0, (worksheet.costpercapita_bc46||0), 0.001); end
  def test_costpercapita_bd46; assert_in_delta(0, (worksheet.costpercapita_bd46||0), 0.001); end
  def test_costpercapita_be46; assert_in_delta(0, (worksheet.costpercapita_be46||0), 0.001); end
  def test_costpercapita_bf46; assert_in_delta(0, (worksheet.costpercapita_bf46||0), 0.001); end
  def test_costpercapita_bg46; assert_in_delta(0, (worksheet.costpercapita_bg46||0), 0.001); end
  def test_costpercapita_bi46; assert_in_delta(0, (worksheet.costpercapita_bi46||0), 0.001); end
  def test_costpercapita_bj46; assert_in_delta(0, (worksheet.costpercapita_bj46||0), 0.001); end
  def test_costpercapita_bk46; assert_in_delta(0, (worksheet.costpercapita_bk46||0), 0.001); end
  def test_costpercapita_bl46; assert_in_delta(0, (worksheet.costpercapita_bl46||0), 0.001); end
  def test_costpercapita_bm46; assert_in_delta(0, (worksheet.costpercapita_bm46||0), 0.001); end
  def test_costpercapita_bn46; assert_in_delta(0, (worksheet.costpercapita_bn46||0), 0.001); end
  def test_costpercapita_bo46; assert_in_delta(0, (worksheet.costpercapita_bo46||0), 0.001); end
  def test_costpercapita_bp46; assert_in_delta(0, (worksheet.costpercapita_bp46||0), 0.001); end
  def test_costpercapita_bq46; assert_in_delta(0, (worksheet.costpercapita_bq46||0), 0.001); end
  def test_costpercapita_bs46; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_bs46, 0.001); end
  def test_costpercapita_bt46; assert_in_epsilon(112.97307704951542, worksheet.costpercapita_bt46, 0.001); end
  def test_costpercapita_bu46; assert_in_epsilon(84.90203013066096, worksheet.costpercapita_bu46, 0.001); end
  def test_costpercapita_bv46; assert_in_epsilon(64.01905763736195, worksheet.costpercapita_bv46, 0.001); end
  def test_costpercapita_bw46; assert_in_epsilon(48.45255635500386, worksheet.costpercapita_bw46, 0.001); end
  def test_costpercapita_bx46; assert_in_epsilon(36.60852223650423, worksheet.costpercapita_bx46, 0.001); end
  def test_costpercapita_by46; assert_in_epsilon(27.72286461090769, worksheet.costpercapita_by46, 0.001); end
  def test_costpercapita_bz46; assert_in_epsilon(21.023512760508385, worksheet.costpercapita_bz46, 0.001); end
  def test_costpercapita_ca46; assert_in_epsilon(15.964011892301023, worksheet.costpercapita_ca46, 0.001); end
  def test_costpercapita_cc46; assert_in_epsilon(62.54919551116479, worksheet.costpercapita_cc46, 0.001); end
  def test_costpercapita_cd46; assert_in_epsilon(1420.9422894853783, worksheet.costpercapita_cd46, 0.001); end
  def test_costpercapita_cf46; assert_in_delta(0, (worksheet.costpercapita_cf46||0), 0.001); end
  def test_costpercapita_cg46; assert_in_delta(0, (worksheet.costpercapita_cg46||0), 0.001); end
  def test_costpercapita_ch46; assert_in_delta(0, (worksheet.costpercapita_ch46||0), 0.001); end
  def test_costpercapita_ci46; assert_in_delta(0, (worksheet.costpercapita_ci46||0), 0.001); end
  def test_costpercapita_cj46; assert_in_delta(0, (worksheet.costpercapita_cj46||0), 0.001); end
  def test_costpercapita_ck46; assert_in_delta(0, (worksheet.costpercapita_ck46||0), 0.001); end
  def test_costpercapita_cl46; assert_in_delta(0, (worksheet.costpercapita_cl46||0), 0.001); end
  def test_costpercapita_cm46; assert_in_delta(0, (worksheet.costpercapita_cm46||0), 0.001); end
  def test_costpercapita_cn46; assert_in_delta(0, (worksheet.costpercapita_cn46||0), 0.001); end
  def test_costpercapita_cp46; assert_in_delta(0, (worksheet.costpercapita_cp46||0), 0.001); end
  def test_costpercapita_cq46; assert_in_delta(0, (worksheet.costpercapita_cq46||0), 0.001); end
  def test_costpercapita_cr46; assert_equal("ok", worksheet.costpercapita_cr46); end
  def test_costpercapita_a47; assert_equal("XVI.a", worksheet.costpercapita_a47); end
  def test_costpercapita_b47; assert_equal("Fossil fuel transfers", worksheet.costpercapita_b47); end
  def test_costpercapita_c47; assert_equal("Fossil Fuels", worksheet.costpercapita_c47); end
  def test_costpercapita_e47; assert_in_epsilon(14.315878170689789, worksheet.costpercapita_e47, 0.001); end
  def test_costpercapita_f47; assert_in_epsilon(16.84136020590303, worksheet.costpercapita_f47, 0.001); end
  def test_costpercapita_g47; assert_in_epsilon(20.06513418904686, worksheet.costpercapita_g47, 0.001); end
  def test_costpercapita_h47; assert_in_epsilon(24.86243719461344, worksheet.costpercapita_h47, 0.001); end
  def test_costpercapita_i47; assert_in_epsilon(26.09848608548116, worksheet.costpercapita_i47, 0.001); end
  def test_costpercapita_j47; assert_in_epsilon(25.377038948057052, worksheet.costpercapita_j47, 0.001); end
  def test_costpercapita_k47; assert_in_epsilon(25.13251525451907, worksheet.costpercapita_k47, 0.001); end
  def test_costpercapita_l47; assert_in_epsilon(26.21865938129346, worksheet.costpercapita_l47, 0.001); end
  def test_costpercapita_m47; assert_in_epsilon(25.902606070026803, worksheet.costpercapita_m47, 0.001); end
  def test_costpercapita_o47; assert_in_delta(0.03709437458421908, worksheet.costpercapita_o47, 0.001); end
  def test_costpercapita_p47; assert_in_delta(0.03869169294796451, worksheet.costpercapita_p47, 0.001); end
  def test_costpercapita_q47; assert_in_delta(0.04167084993192971, worksheet.costpercapita_q47, 0.001); end
  def test_costpercapita_r47; assert_in_delta(0.04664025878369184, worksheet.costpercapita_r47, 0.001); end
  def test_costpercapita_s47; assert_in_delta(0.051440605811828785, worksheet.costpercapita_s47, 0.001); end
  def test_costpercapita_t47; assert_in_delta(0.05511604649597045, worksheet.costpercapita_t47, 0.001); end
  def test_costpercapita_u47; assert_in_delta(0.05808140271233135, worksheet.costpercapita_u47, 0.001); end
  def test_costpercapita_v47; assert_in_delta(0.061134025154962475, worksheet.costpercapita_v47, 0.001); end
  def test_costpercapita_w47; assert_in_delta(0.0635275304816177, worksheet.costpercapita_w47, 0.001); end
  def test_costpercapita_y47; assert_in_delta(0, (worksheet.costpercapita_y47||0), 0.001); end
  def test_costpercapita_z47; assert_in_delta(0, (worksheet.costpercapita_z47||0), 0.001); end
  def test_costpercapita_aa47; assert_in_delta(0, (worksheet.costpercapita_aa47||0), 0.001); end
  def test_costpercapita_ab47; assert_in_delta(0, (worksheet.costpercapita_ab47||0), 0.001); end
  def test_costpercapita_ac47; assert_in_delta(0, (worksheet.costpercapita_ac47||0), 0.001); end
  def test_costpercapita_ad47; assert_in_delta(0, (worksheet.costpercapita_ad47||0), 0.001); end
  def test_costpercapita_ae47; assert_in_delta(0, (worksheet.costpercapita_ae47||0), 0.001); end
  def test_costpercapita_af47; assert_in_delta(0, (worksheet.costpercapita_af47||0), 0.001); end
  def test_costpercapita_ag47; assert_in_delta(0, (worksheet.costpercapita_ag47||0), 0.001); end
  def test_costpercapita_ai47; assert_in_epsilon(14.352972545274008, worksheet.costpercapita_ai47, 0.001); end
  def test_costpercapita_aj47; assert_in_epsilon(16.880051898850994, worksheet.costpercapita_aj47, 0.001); end
  def test_costpercapita_ak47; assert_in_epsilon(20.10680503897879, worksheet.costpercapita_ak47, 0.001); end
  def test_costpercapita_al47; assert_in_epsilon(24.909077453397135, worksheet.costpercapita_al47, 0.001); end
  def test_costpercapita_am47; assert_in_epsilon(26.14992669129299, worksheet.costpercapita_am47, 0.001); end
  def test_costpercapita_an47; assert_in_epsilon(25.432154994553024, worksheet.costpercapita_an47, 0.001); end
  def test_costpercapita_ao47; assert_in_epsilon(25.1905966572314, worksheet.costpercapita_ao47, 0.001); end
  def test_costpercapita_ap47; assert_in_epsilon(26.279793406448423, worksheet.costpercapita_ap47, 0.001); end
  def test_costpercapita_aq47; assert_in_epsilon(25.966133600508417, worksheet.costpercapita_aq47, 0.001); end
  def test_costpercapita_as47; assert_in_epsilon(22.807501365170577, worksheet.costpercapita_as47, 0.001); end
  def test_costpercapita_at47; assert_in_epsilon(470.21989961339847, worksheet.costpercapita_at47, 0.001); end
  def test_costpercapita_av47; assert_in_delta(0, (worksheet.costpercapita_av47||0), 0.001); end
  def test_costpercapita_aw47; assert_in_epsilon(15, worksheet.costpercapita_aw47, 0.001); end
  def test_costpercapita_ay47; assert_in_epsilon(2.863175634137958, worksheet.costpercapita_ay47, 0.001); end
  def test_costpercapita_az47; assert_in_epsilon(5.61378673530101, worksheet.costpercapita_az47, 0.001); end
  def test_costpercapita_ba47; assert_in_epsilon(6.6883780630156195, worksheet.costpercapita_ba47, 0.001); end
  def test_costpercapita_bb47; assert_in_epsilon(8.287479064871146, worksheet.costpercapita_bb47, 0.001); end
  def test_costpercapita_bc47; assert_in_epsilon(8.699495361827053, worksheet.costpercapita_bc47, 0.001); end
  def test_costpercapita_bd47; assert_in_epsilon(8.459012982685683, worksheet.costpercapita_bd47, 0.001); end
  def test_costpercapita_be47; assert_in_epsilon(8.37750508483969, worksheet.costpercapita_be47, 0.001); end
  def test_costpercapita_bf47; assert_in_epsilon(8.73955312709782, worksheet.costpercapita_bf47, 0.001); end
  def test_costpercapita_bg47; assert_in_epsilon(8.634202023342267, worksheet.costpercapita_bg47, 0.001); end
  def test_costpercapita_bi47; assert_in_epsilon(2.863175634137958, worksheet.costpercapita_bi47, 0.001); end
  def test_costpercapita_bj47; assert_in_epsilon(8.382548954625365, worksheet.costpercapita_bj47, 0.001); end
  def test_costpercapita_bk47; assert_in_epsilon(14.796497868833304, worksheet.costpercapita_bk47, 0.001); end
  def test_costpercapita_bl47; assert_in_epsilon(20.030631721387742, worksheet.costpercapita_bl47, 0.001); end
  def test_costpercapita_bm47; assert_in_epsilon(23.064772233670027, worksheet.costpercapita_bm47, 0.001); end
  def test_costpercapita_bn47; assert_in_epsilon(24.824765577623477, worksheet.costpercapita_bn47, 0.001); end
  def test_costpercapita_bo47; assert_in_epsilon(24.969532046203152, worksheet.costpercapita_bo47, 0.001); end
  def test_costpercapita_bp47; assert_in_epsilon(25.063416019844105, worksheet.costpercapita_bp47, 0.001); end
  def test_costpercapita_bq47; assert_in_epsilon(25.267831015223457, worksheet.costpercapita_bq47, 0.001); end
  def test_costpercapita_bs47; assert_in_epsilon(2.900270008722177, worksheet.costpercapita_bs47, 0.001); end
  def test_costpercapita_bt47; assert_in_epsilon(8.421240647573331, worksheet.costpercapita_bt47, 0.001); end
  def test_costpercapita_bu47; assert_in_epsilon(14.838168718765234, worksheet.costpercapita_bu47, 0.001); end
  def test_costpercapita_bv47; assert_in_epsilon(20.077271980171435, worksheet.costpercapita_bv47, 0.001); end
  def test_costpercapita_bw47; assert_in_epsilon(23.116212839481857, worksheet.costpercapita_bw47, 0.001); end
  def test_costpercapita_bx47; assert_in_epsilon(24.87988162411945, worksheet.costpercapita_bx47, 0.001); end
  def test_costpercapita_by47; assert_in_epsilon(25.027613448915485, worksheet.costpercapita_by47, 0.001); end
  def test_costpercapita_bz47; assert_in_epsilon(25.12455004499907, worksheet.costpercapita_bz47, 0.001); end
  def test_costpercapita_ca47; assert_in_epsilon(25.331358545705072, worksheet.costpercapita_ca47, 0.001); end
  def test_costpercapita_cc47; assert_in_epsilon(18.857396428717013, worksheet.costpercapita_cc47, 0.001); end
  def test_costpercapita_cd47; assert_in_epsilon(378.3626490573102, worksheet.costpercapita_cd47, 0.001); end
  def test_costpercapita_cf47; assert_in_epsilon(-11.452702536551833, worksheet.costpercapita_cf47, 0.001); end
  def test_costpercapita_cg47; assert_in_epsilon(-8.458811251277663, worksheet.costpercapita_cg47, 0.001); end
  def test_costpercapita_ch47; assert_in_epsilon(-5.268636320213556, worksheet.costpercapita_ch47, 0.001); end
  def test_costpercapita_ci47; assert_in_epsilon(-4.831805473225697, worksheet.costpercapita_ci47, 0.001); end
  def test_costpercapita_cj47; assert_in_epsilon(-3.0337138518111315, worksheet.costpercapita_cj47, 0.001); end
  def test_costpercapita_ck47; assert_in_delta(-0.5522733704335736, worksheet.costpercapita_ck47, 0.001); end
  def test_costpercapita_cl47; assert_in_delta(-0.1629832083159173, worksheet.costpercapita_cl47, 0.001); end
  def test_costpercapita_cm47; assert_in_epsilon(-1.1552433614493554, worksheet.costpercapita_cm47, 0.001); end
  def test_costpercapita_cn47; assert_in_delta(-0.6347750548033452, worksheet.costpercapita_cn47, 0.001); end
  def test_costpercapita_cp47; assert_in_epsilon(-3.950104936453563, worksheet.costpercapita_cp47, 0.001); end
  def test_costpercapita_cq47; assert_in_epsilon(-91.85725055608833, worksheet.costpercapita_cq47, 0.001); end
  def test_costpercapita_cr47; assert_equal("ok", worksheet.costpercapita_cr47); end
  def test_costpercapita_a48; assert_equal("XVI.b.Coal", worksheet.costpercapita_a48); end
  def test_costpercapita_b48; assert_equal("Balancing imports - Coal", worksheet.costpercapita_b48); end
  def test_costpercapita_c48; assert_equal("Fossil Fuels", worksheet.costpercapita_c48); end
  def test_costpercapita_e48; assert_in_delta(0, (worksheet.costpercapita_e48||0), 0.001); end
  def test_costpercapita_f48; assert_in_delta(0, (worksheet.costpercapita_f48||0), 0.001); end
  def test_costpercapita_g48; assert_in_delta(0, (worksheet.costpercapita_g48||0), 0.001); end
  def test_costpercapita_h48; assert_in_delta(0, (worksheet.costpercapita_h48||0), 0.001); end
  def test_costpercapita_i48; assert_in_delta(0, (worksheet.costpercapita_i48||0), 0.001); end
  def test_costpercapita_j48; assert_in_delta(0, (worksheet.costpercapita_j48||0), 0.001); end
  def test_costpercapita_k48; assert_in_delta(0, (worksheet.costpercapita_k48||0), 0.001); end
  def test_costpercapita_l48; assert_in_delta(0, (worksheet.costpercapita_l48||0), 0.001); end
  def test_costpercapita_m48; assert_in_delta(0, (worksheet.costpercapita_m48||0), 0.001); end
  def test_costpercapita_o48; assert_in_delta(0, (worksheet.costpercapita_o48||0), 0.001); end
  def test_costpercapita_p48; assert_in_delta(0, (worksheet.costpercapita_p48||0), 0.001); end
  def test_costpercapita_q48; assert_in_delta(0, (worksheet.costpercapita_q48||0), 0.001); end
  def test_costpercapita_r48; assert_in_delta(0, (worksheet.costpercapita_r48||0), 0.001); end
  def test_costpercapita_s48; assert_in_delta(0, (worksheet.costpercapita_s48||0), 0.001); end
  def test_costpercapita_t48; assert_in_delta(0, (worksheet.costpercapita_t48||0), 0.001); end
  def test_costpercapita_u48; assert_in_delta(0, (worksheet.costpercapita_u48||0), 0.001); end
  def test_costpercapita_v48; assert_in_delta(0, (worksheet.costpercapita_v48||0), 0.001); end
  def test_costpercapita_w48; assert_in_delta(0, (worksheet.costpercapita_w48||0), 0.001); end
  def test_costpercapita_y48; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_y48, 0.001); end
  def test_costpercapita_z48; assert_in_epsilon(35.806752174871015, worksheet.costpercapita_z48, 0.001); end
  def test_costpercapita_aa48; assert_in_epsilon(23.789942621031074, worksheet.costpercapita_aa48, 0.001); end
  def test_costpercapita_ab48; assert_in_epsilon(8.175197926518802, worksheet.costpercapita_ab48, 0.001); end
  def test_costpercapita_ac48; assert_in_epsilon(3.4567797724551492, worksheet.costpercapita_ac48, 0.001); end
  def test_costpercapita_ad48; assert_in_epsilon(1.8319884144507597, worksheet.costpercapita_ad48, 0.001); end
  def test_costpercapita_ae48; assert_in_epsilon(2.145486101656619, worksheet.costpercapita_ae48, 0.001); end
  def test_costpercapita_af48; assert_in_epsilon(2.4641752879422354, worksheet.costpercapita_af48, 0.001); end
  def test_costpercapita_ag48; assert_in_epsilon(2.8314717569526837, worksheet.costpercapita_ag48, 0.001); end
  def test_costpercapita_ai48; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_ai48, 0.001); end
  def test_costpercapita_aj48; assert_in_epsilon(35.806752174871015, worksheet.costpercapita_aj48, 0.001); end
  def test_costpercapita_ak48; assert_in_epsilon(23.789942621031074, worksheet.costpercapita_ak48, 0.001); end
  def test_costpercapita_al48; assert_in_epsilon(8.175197926518802, worksheet.costpercapita_al48, 0.001); end
  def test_costpercapita_am48; assert_in_epsilon(3.4567797724551492, worksheet.costpercapita_am48, 0.001); end
  def test_costpercapita_an48; assert_in_epsilon(1.8319884144507597, worksheet.costpercapita_an48, 0.001); end
  def test_costpercapita_ao48; assert_in_epsilon(2.145486101656619, worksheet.costpercapita_ao48, 0.001); end
  def test_costpercapita_ap48; assert_in_epsilon(2.4641752879422354, worksheet.costpercapita_ap48, 0.001); end
  def test_costpercapita_aq48; assert_in_epsilon(2.8314717569526837, worksheet.costpercapita_aq48, 0.001); end
  def test_costpercapita_as48; assert_in_epsilon(13.976332999954979, worksheet.costpercapita_as48, 0.001); end
  def test_costpercapita_at48; assert_in_epsilon(328.67500366430744, worksheet.costpercapita_at48, 0.001); end
  def test_costpercapita_av48; assert_in_delta(0, (worksheet.costpercapita_av48||0), 0.001); end
  def test_costpercapita_aw48; assert_in_epsilon(5, worksheet.costpercapita_aw48, 0.001); end
  def test_costpercapita_ay48; assert_in_delta(0, (worksheet.costpercapita_ay48||0), 0.001); end
  def test_costpercapita_az48; assert_in_delta(0, (worksheet.costpercapita_az48||0), 0.001); end
  def test_costpercapita_ba48; assert_in_delta(0, (worksheet.costpercapita_ba48||0), 0.001); end
  def test_costpercapita_bb48; assert_in_delta(0, (worksheet.costpercapita_bb48||0), 0.001); end
  def test_costpercapita_bc48; assert_in_delta(0, (worksheet.costpercapita_bc48||0), 0.001); end
  def test_costpercapita_bd48; assert_in_delta(0, (worksheet.costpercapita_bd48||0), 0.001); end
  def test_costpercapita_be48; assert_in_delta(0, (worksheet.costpercapita_be48||0), 0.001); end
  def test_costpercapita_bf48; assert_in_delta(0, (worksheet.costpercapita_bf48||0), 0.001); end
  def test_costpercapita_bg48; assert_in_delta(0, (worksheet.costpercapita_bg48||0), 0.001); end
  def test_costpercapita_bi48; assert_in_delta(0, (worksheet.costpercapita_bi48||0), 0.001); end
  def test_costpercapita_bj48; assert_in_delta(0, (worksheet.costpercapita_bj48||0), 0.001); end
  def test_costpercapita_bk48; assert_in_delta(0, (worksheet.costpercapita_bk48||0), 0.001); end
  def test_costpercapita_bl48; assert_in_delta(0, (worksheet.costpercapita_bl48||0), 0.001); end
  def test_costpercapita_bm48; assert_in_delta(0, (worksheet.costpercapita_bm48||0), 0.001); end
  def test_costpercapita_bn48; assert_in_delta(0, (worksheet.costpercapita_bn48||0), 0.001); end
  def test_costpercapita_bo48; assert_in_delta(0, (worksheet.costpercapita_bo48||0), 0.001); end
  def test_costpercapita_bp48; assert_in_delta(0, (worksheet.costpercapita_bp48||0), 0.001); end
  def test_costpercapita_bq48; assert_in_delta(0, (worksheet.costpercapita_bq48||0), 0.001); end
  def test_costpercapita_bs48; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_bs48, 0.001); end
  def test_costpercapita_bt48; assert_in_epsilon(35.806752174871015, worksheet.costpercapita_bt48, 0.001); end
  def test_costpercapita_bu48; assert_in_epsilon(23.789942621031074, worksheet.costpercapita_bu48, 0.001); end
  def test_costpercapita_bv48; assert_in_epsilon(8.175197926518802, worksheet.costpercapita_bv48, 0.001); end
  def test_costpercapita_bw48; assert_in_epsilon(3.4567797724551492, worksheet.costpercapita_bw48, 0.001); end
  def test_costpercapita_bx48; assert_in_epsilon(1.8319884144507597, worksheet.costpercapita_bx48, 0.001); end
  def test_costpercapita_by48; assert_in_epsilon(2.145486101656619, worksheet.costpercapita_by48, 0.001); end
  def test_costpercapita_bz48; assert_in_epsilon(2.4641752879422354, worksheet.costpercapita_bz48, 0.001); end
  def test_costpercapita_ca48; assert_in_epsilon(2.8314717569526837, worksheet.costpercapita_ca48, 0.001); end
  def test_costpercapita_cc48; assert_in_epsilon(13.976332999954979, worksheet.costpercapita_cc48, 0.001); end
  def test_costpercapita_cd48; assert_in_epsilon(328.67500366430744, worksheet.costpercapita_cd48, 0.001); end
  def test_costpercapita_cf48; assert_in_delta(0, (worksheet.costpercapita_cf48||0), 0.001); end
  def test_costpercapita_cg48; assert_in_delta(0, (worksheet.costpercapita_cg48||0), 0.001); end
  def test_costpercapita_ch48; assert_in_delta(0, (worksheet.costpercapita_ch48||0), 0.001); end
  def test_costpercapita_ci48; assert_in_delta(0, (worksheet.costpercapita_ci48||0), 0.001); end
  def test_costpercapita_cj48; assert_in_delta(0, (worksheet.costpercapita_cj48||0), 0.001); end
  def test_costpercapita_ck48; assert_in_delta(0, (worksheet.costpercapita_ck48||0), 0.001); end
  def test_costpercapita_cl48; assert_in_delta(0, (worksheet.costpercapita_cl48||0), 0.001); end
  def test_costpercapita_cm48; assert_in_delta(0, (worksheet.costpercapita_cm48||0), 0.001); end
  def test_costpercapita_cn48; assert_in_delta(0, (worksheet.costpercapita_cn48||0), 0.001); end
  def test_costpercapita_cp48; assert_in_delta(0, (worksheet.costpercapita_cp48||0), 0.001); end
  def test_costpercapita_cq48; assert_in_delta(0, (worksheet.costpercapita_cq48||0), 0.001); end
  def test_costpercapita_cr48; assert_equal("ok", worksheet.costpercapita_cr48); end
  def test_costpercapita_a49; assert_equal("XVI.b.Oil", worksheet.costpercapita_a49); end
  def test_costpercapita_b49; assert_equal("Balancing imports - Oil", worksheet.costpercapita_b49); end
  def test_costpercapita_c49; assert_equal("Fossil Fuels", worksheet.costpercapita_c49); end
  def test_costpercapita_e49; assert_in_delta(0, (worksheet.costpercapita_e49||0), 0.001); end
  def test_costpercapita_f49; assert_in_delta(0, (worksheet.costpercapita_f49||0), 0.001); end
  def test_costpercapita_g49; assert_in_delta(0, (worksheet.costpercapita_g49||0), 0.001); end
  def test_costpercapita_h49; assert_in_delta(0, (worksheet.costpercapita_h49||0), 0.001); end
  def test_costpercapita_i49; assert_in_delta(0, (worksheet.costpercapita_i49||0), 0.001); end
  def test_costpercapita_j49; assert_in_delta(0, (worksheet.costpercapita_j49||0), 0.001); end
  def test_costpercapita_k49; assert_in_delta(0, (worksheet.costpercapita_k49||0), 0.001); end
  def test_costpercapita_l49; assert_in_delta(0, (worksheet.costpercapita_l49||0), 0.001); end
  def test_costpercapita_m49; assert_in_delta(0, (worksheet.costpercapita_m49||0), 0.001); end
  def test_costpercapita_o49; assert_in_delta(0, (worksheet.costpercapita_o49||0), 0.001); end
  def test_costpercapita_p49; assert_in_delta(0, (worksheet.costpercapita_p49||0), 0.001); end
  def test_costpercapita_q49; assert_in_delta(0, (worksheet.costpercapita_q49||0), 0.001); end
  def test_costpercapita_r49; assert_in_delta(0, (worksheet.costpercapita_r49||0), 0.001); end
  def test_costpercapita_s49; assert_in_delta(0, (worksheet.costpercapita_s49||0), 0.001); end
  def test_costpercapita_t49; assert_in_delta(0, (worksheet.costpercapita_t49||0), 0.001); end
  def test_costpercapita_u49; assert_in_delta(0, (worksheet.costpercapita_u49||0), 0.001); end
  def test_costpercapita_v49; assert_in_delta(0, (worksheet.costpercapita_v49||0), 0.001); end
  def test_costpercapita_w49; assert_in_delta(0, (worksheet.costpercapita_w49||0), 0.001); end
  def test_costpercapita_y49; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_y49, 0.001); end
  def test_costpercapita_z49; assert_in_epsilon(100.22868283828595, worksheet.costpercapita_z49, 0.001); end
  def test_costpercapita_aa49; assert_in_epsilon(162.85330049390853, worksheet.costpercapita_aa49, 0.001); end
  def test_costpercapita_ab49; assert_in_epsilon(197.29339563133786, worksheet.costpercapita_ab49, 0.001); end
  def test_costpercapita_ac49; assert_in_epsilon(216.4347503539412, worksheet.costpercapita_ac49, 0.001); end
  def test_costpercapita_ad49; assert_in_epsilon(246.11473284361242, worksheet.costpercapita_ad49, 0.001); end
  def test_costpercapita_ae49; assert_in_epsilon(265.72809658636646, worksheet.costpercapita_ae49, 0.001); end
  def test_costpercapita_af49; assert_in_epsilon(281.64130369963175, worksheet.costpercapita_af49, 0.001); end
  def test_costpercapita_ag49; assert_in_epsilon(290.9612828110369, worksheet.costpercapita_ag49, 0.001); end
  def test_costpercapita_ai49; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_ai49, 0.001); end
  def test_costpercapita_aj49; assert_in_epsilon(100.22868283828595, worksheet.costpercapita_aj49, 0.001); end
  def test_costpercapita_ak49; assert_in_epsilon(162.85330049390853, worksheet.costpercapita_ak49, 0.001); end
  def test_costpercapita_al49; assert_in_epsilon(197.29339563133786, worksheet.costpercapita_al49, 0.001); end
  def test_costpercapita_am49; assert_in_epsilon(216.4347503539412, worksheet.costpercapita_am49, 0.001); end
  def test_costpercapita_an49; assert_in_epsilon(246.11473284361242, worksheet.costpercapita_an49, 0.001); end
  def test_costpercapita_ao49; assert_in_epsilon(265.72809658636646, worksheet.costpercapita_ao49, 0.001); end
  def test_costpercapita_ap49; assert_in_epsilon(281.64130369963175, worksheet.costpercapita_ap49, 0.001); end
  def test_costpercapita_aq49; assert_in_epsilon(290.9612828110369, worksheet.costpercapita_aq49, 0.001); end
  def test_costpercapita_as49; assert_in_epsilon(199.40237608533428, worksheet.costpercapita_as49, 0.001); end
  def test_costpercapita_at49; assert_in_epsilon(3977.7783542401207, worksheet.costpercapita_at49, 0.001); end
  def test_costpercapita_av49; assert_in_delta(0, (worksheet.costpercapita_av49||0), 0.001); end
  def test_costpercapita_aw49; assert_in_epsilon(5, worksheet.costpercapita_aw49, 0.001); end
  def test_costpercapita_ay49; assert_in_delta(0, (worksheet.costpercapita_ay49||0), 0.001); end
  def test_costpercapita_az49; assert_in_delta(0, (worksheet.costpercapita_az49||0), 0.001); end
  def test_costpercapita_ba49; assert_in_delta(0, (worksheet.costpercapita_ba49||0), 0.001); end
  def test_costpercapita_bb49; assert_in_delta(0, (worksheet.costpercapita_bb49||0), 0.001); end
  def test_costpercapita_bc49; assert_in_delta(0, (worksheet.costpercapita_bc49||0), 0.001); end
  def test_costpercapita_bd49; assert_in_delta(0, (worksheet.costpercapita_bd49||0), 0.001); end
  def test_costpercapita_be49; assert_in_delta(0, (worksheet.costpercapita_be49||0), 0.001); end
  def test_costpercapita_bf49; assert_in_delta(0, (worksheet.costpercapita_bf49||0), 0.001); end
  def test_costpercapita_bg49; assert_in_delta(0, (worksheet.costpercapita_bg49||0), 0.001); end
  def test_costpercapita_bi49; assert_in_delta(0, (worksheet.costpercapita_bi49||0), 0.001); end
  def test_costpercapita_bj49; assert_in_delta(0, (worksheet.costpercapita_bj49||0), 0.001); end
  def test_costpercapita_bk49; assert_in_delta(0, (worksheet.costpercapita_bk49||0), 0.001); end
  def test_costpercapita_bl49; assert_in_delta(0, (worksheet.costpercapita_bl49||0), 0.001); end
  def test_costpercapita_bm49; assert_in_delta(0, (worksheet.costpercapita_bm49||0), 0.001); end
  def test_costpercapita_bn49; assert_in_delta(0, (worksheet.costpercapita_bn49||0), 0.001); end
  def test_costpercapita_bo49; assert_in_delta(0, (worksheet.costpercapita_bo49||0), 0.001); end
  def test_costpercapita_bp49; assert_in_delta(0, (worksheet.costpercapita_bp49||0), 0.001); end
  def test_costpercapita_bq49; assert_in_delta(0, (worksheet.costpercapita_bq49||0), 0.001); end
  def test_costpercapita_bs49; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_bs49, 0.001); end
  def test_costpercapita_bt49; assert_in_epsilon(100.22868283828595, worksheet.costpercapita_bt49, 0.001); end
  def test_costpercapita_bu49; assert_in_epsilon(162.85330049390853, worksheet.costpercapita_bu49, 0.001); end
  def test_costpercapita_bv49; assert_in_epsilon(197.29339563133786, worksheet.costpercapita_bv49, 0.001); end
  def test_costpercapita_bw49; assert_in_epsilon(216.4347503539412, worksheet.costpercapita_bw49, 0.001); end
  def test_costpercapita_bx49; assert_in_epsilon(246.11473284361242, worksheet.costpercapita_bx49, 0.001); end
  def test_costpercapita_by49; assert_in_epsilon(265.72809658636646, worksheet.costpercapita_by49, 0.001); end
  def test_costpercapita_bz49; assert_in_epsilon(281.64130369963175, worksheet.costpercapita_bz49, 0.001); end
  def test_costpercapita_ca49; assert_in_epsilon(290.9612828110369, worksheet.costpercapita_ca49, 0.001); end
  def test_costpercapita_cc49; assert_in_epsilon(199.40237608533428, worksheet.costpercapita_cc49, 0.001); end
  def test_costpercapita_cd49; assert_in_epsilon(3977.7783542401207, worksheet.costpercapita_cd49, 0.001); end
  def test_costpercapita_cf49; assert_in_delta(0, (worksheet.costpercapita_cf49||0), 0.001); end
  def test_costpercapita_cg49; assert_in_delta(0, (worksheet.costpercapita_cg49||0), 0.001); end
  def test_costpercapita_ch49; assert_in_delta(0, (worksheet.costpercapita_ch49||0), 0.001); end
  def test_costpercapita_ci49; assert_in_delta(0, (worksheet.costpercapita_ci49||0), 0.001); end
  def test_costpercapita_cj49; assert_in_delta(0, (worksheet.costpercapita_cj49||0), 0.001); end
  def test_costpercapita_ck49; assert_in_delta(0, (worksheet.costpercapita_ck49||0), 0.001); end
  def test_costpercapita_cl49; assert_in_delta(0, (worksheet.costpercapita_cl49||0), 0.001); end
  def test_costpercapita_cm49; assert_in_delta(0, (worksheet.costpercapita_cm49||0), 0.001); end
  def test_costpercapita_cn49; assert_in_delta(0, (worksheet.costpercapita_cn49||0), 0.001); end
  def test_costpercapita_cp49; assert_in_delta(0, (worksheet.costpercapita_cp49||0), 0.001); end
  def test_costpercapita_cq49; assert_in_delta(0, (worksheet.costpercapita_cq49||0), 0.001); end
  def test_costpercapita_cr49; assert_equal("ok", worksheet.costpercapita_cr49); end
  def test_costpercapita_a50; assert_equal("XVI.b.Gas", worksheet.costpercapita_a50); end
  def test_costpercapita_b50; assert_equal("Balancing imports - Gas", worksheet.costpercapita_b50); end
  def test_costpercapita_c50; assert_equal("Fossil Fuels", worksheet.costpercapita_c50); end
  def test_costpercapita_e50; assert_in_delta(0, (worksheet.costpercapita_e50||0), 0.001); end
  def test_costpercapita_f50; assert_in_delta(0, (worksheet.costpercapita_f50||0), 0.001); end
  def test_costpercapita_g50; assert_in_delta(0, (worksheet.costpercapita_g50||0), 0.001); end
  def test_costpercapita_h50; assert_in_delta(0, (worksheet.costpercapita_h50||0), 0.001); end
  def test_costpercapita_i50; assert_in_delta(0, (worksheet.costpercapita_i50||0), 0.001); end
  def test_costpercapita_j50; assert_in_delta(0, (worksheet.costpercapita_j50||0), 0.001); end
  def test_costpercapita_k50; assert_in_delta(0, (worksheet.costpercapita_k50||0), 0.001); end
  def test_costpercapita_l50; assert_in_delta(0, (worksheet.costpercapita_l50||0), 0.001); end
  def test_costpercapita_m50; assert_in_delta(0, (worksheet.costpercapita_m50||0), 0.001); end
  def test_costpercapita_o50; assert_in_delta(0, (worksheet.costpercapita_o50||0), 0.001); end
  def test_costpercapita_p50; assert_in_delta(0, (worksheet.costpercapita_p50||0), 0.001); end
  def test_costpercapita_q50; assert_in_delta(0, (worksheet.costpercapita_q50||0), 0.001); end
  def test_costpercapita_r50; assert_in_delta(0, (worksheet.costpercapita_r50||0), 0.001); end
  def test_costpercapita_s50; assert_in_delta(0, (worksheet.costpercapita_s50||0), 0.001); end
  def test_costpercapita_t50; assert_in_delta(0, (worksheet.costpercapita_t50||0), 0.001); end
  def test_costpercapita_u50; assert_in_delta(0, (worksheet.costpercapita_u50||0), 0.001); end
  def test_costpercapita_v50; assert_in_delta(0, (worksheet.costpercapita_v50||0), 0.001); end
  def test_costpercapita_w50; assert_in_delta(0, (worksheet.costpercapita_w50||0), 0.001); end
  def test_costpercapita_y50; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_y50, 0.001); end
  def test_costpercapita_z50; assert_in_epsilon(133.1119206996099, worksheet.costpercapita_z50, 0.001); end
  def test_costpercapita_aa50; assert_in_epsilon(181.62821590992309, worksheet.costpercapita_aa50, 0.001); end
  def test_costpercapita_ab50; assert_in_epsilon(235.97187057344536, worksheet.costpercapita_ab50, 0.001); end
  def test_costpercapita_ac50; assert_in_epsilon(284.26270270875665, worksheet.costpercapita_ac50, 0.001); end
  def test_costpercapita_ad50; assert_in_epsilon(319.8793028788886, worksheet.costpercapita_ad50, 0.001); end
  def test_costpercapita_ae50; assert_in_epsilon(347.94473582346046, worksheet.costpercapita_ae50, 0.001); end
  def test_costpercapita_af50; assert_in_epsilon(374.3882965686608, worksheet.costpercapita_af50, 0.001); end
  def test_costpercapita_ag50; assert_in_epsilon(394.92886987488873, worksheet.costpercapita_ag50, 0.001); end
  def test_costpercapita_ai50; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_ai50, 0.001); end
  def test_costpercapita_aj50; assert_in_epsilon(133.1119206996099, worksheet.costpercapita_aj50, 0.001); end
  def test_costpercapita_ak50; assert_in_epsilon(181.62821590992309, worksheet.costpercapita_ak50, 0.001); end
  def test_costpercapita_al50; assert_in_epsilon(235.97187057344536, worksheet.costpercapita_al50, 0.001); end
  def test_costpercapita_am50; assert_in_epsilon(284.26270270875665, worksheet.costpercapita_am50, 0.001); end
  def test_costpercapita_an50; assert_in_epsilon(319.8793028788886, worksheet.costpercapita_an50, 0.001); end
  def test_costpercapita_ao50; assert_in_epsilon(347.94473582346046, worksheet.costpercapita_ao50, 0.001); end
  def test_costpercapita_ap50; assert_in_epsilon(374.3882965686608, worksheet.costpercapita_ap50, 0.001); end
  def test_costpercapita_aq50; assert_in_epsilon(394.92886987488873, worksheet.costpercapita_aq50, 0.001); end
  def test_costpercapita_as50; assert_in_epsilon(261.7146317962298, worksheet.costpercapita_as50, 0.001); end
  def test_costpercapita_at50; assert_in_epsilon(5101.442850988718, worksheet.costpercapita_at50, 0.001); end
  def test_costpercapita_av50; assert_in_delta(0, (worksheet.costpercapita_av50||0), 0.001); end
  def test_costpercapita_aw50; assert_in_epsilon(5, worksheet.costpercapita_aw50, 0.001); end
  def test_costpercapita_ay50; assert_in_delta(0, (worksheet.costpercapita_ay50||0), 0.001); end
  def test_costpercapita_az50; assert_in_delta(0, (worksheet.costpercapita_az50||0), 0.001); end
  def test_costpercapita_ba50; assert_in_delta(0, (worksheet.costpercapita_ba50||0), 0.001); end
  def test_costpercapita_bb50; assert_in_delta(0, (worksheet.costpercapita_bb50||0), 0.001); end
  def test_costpercapita_bc50; assert_in_delta(0, (worksheet.costpercapita_bc50||0), 0.001); end
  def test_costpercapita_bd50; assert_in_delta(0, (worksheet.costpercapita_bd50||0), 0.001); end
  def test_costpercapita_be50; assert_in_delta(0, (worksheet.costpercapita_be50||0), 0.001); end
  def test_costpercapita_bf50; assert_in_delta(0, (worksheet.costpercapita_bf50||0), 0.001); end
  def test_costpercapita_bg50; assert_in_delta(0, (worksheet.costpercapita_bg50||0), 0.001); end
  def test_costpercapita_bi50; assert_in_delta(0, (worksheet.costpercapita_bi50||0), 0.001); end
  def test_costpercapita_bj50; assert_in_delta(0, (worksheet.costpercapita_bj50||0), 0.001); end
  def test_costpercapita_bk50; assert_in_delta(0, (worksheet.costpercapita_bk50||0), 0.001); end
  def test_costpercapita_bl50; assert_in_delta(0, (worksheet.costpercapita_bl50||0), 0.001); end
  def test_costpercapita_bm50; assert_in_delta(0, (worksheet.costpercapita_bm50||0), 0.001); end
  def test_costpercapita_bn50; assert_in_delta(0, (worksheet.costpercapita_bn50||0), 0.001); end
  def test_costpercapita_bo50; assert_in_delta(0, (worksheet.costpercapita_bo50||0), 0.001); end
  def test_costpercapita_bp50; assert_in_delta(0, (worksheet.costpercapita_bp50||0), 0.001); end
  def test_costpercapita_bq50; assert_in_delta(0, (worksheet.costpercapita_bq50||0), 0.001); end
  def test_costpercapita_bs50; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_bs50, 0.001); end
  def test_costpercapita_bt50; assert_in_epsilon(133.1119206996099, worksheet.costpercapita_bt50, 0.001); end
  def test_costpercapita_bu50; assert_in_epsilon(181.62821590992309, worksheet.costpercapita_bu50, 0.001); end
  def test_costpercapita_bv50; assert_in_epsilon(235.97187057344536, worksheet.costpercapita_bv50, 0.001); end
  def test_costpercapita_bw50; assert_in_epsilon(284.26270270875665, worksheet.costpercapita_bw50, 0.001); end
  def test_costpercapita_bx50; assert_in_epsilon(319.8793028788886, worksheet.costpercapita_bx50, 0.001); end
  def test_costpercapita_by50; assert_in_epsilon(347.94473582346046, worksheet.costpercapita_by50, 0.001); end
  def test_costpercapita_bz50; assert_in_epsilon(374.3882965686608, worksheet.costpercapita_bz50, 0.001); end
  def test_costpercapita_ca50; assert_in_epsilon(394.92886987488873, worksheet.costpercapita_ca50, 0.001); end
  def test_costpercapita_cc50; assert_in_epsilon(261.7146317962298, worksheet.costpercapita_cc50, 0.001); end
  def test_costpercapita_cd50; assert_in_epsilon(5101.442850988718, worksheet.costpercapita_cd50, 0.001); end
  def test_costpercapita_cf50; assert_in_delta(0, (worksheet.costpercapita_cf50||0), 0.001); end
  def test_costpercapita_cg50; assert_in_delta(0, (worksheet.costpercapita_cg50||0), 0.001); end
  def test_costpercapita_ch50; assert_in_delta(0, (worksheet.costpercapita_ch50||0), 0.001); end
  def test_costpercapita_ci50; assert_in_delta(0, (worksheet.costpercapita_ci50||0), 0.001); end
  def test_costpercapita_cj50; assert_in_delta(0, (worksheet.costpercapita_cj50||0), 0.001); end
  def test_costpercapita_ck50; assert_in_delta(0, (worksheet.costpercapita_ck50||0), 0.001); end
  def test_costpercapita_cl50; assert_in_delta(0, (worksheet.costpercapita_cl50||0), 0.001); end
  def test_costpercapita_cm50; assert_in_delta(0, (worksheet.costpercapita_cm50||0), 0.001); end
  def test_costpercapita_cn50; assert_in_delta(0, (worksheet.costpercapita_cn50||0), 0.001); end
  def test_costpercapita_cp50; assert_in_delta(0, (worksheet.costpercapita_cp50||0), 0.001); end
  def test_costpercapita_cq50; assert_in_delta(0, (worksheet.costpercapita_cq50||0), 0.001); end
  def test_costpercapita_cr50; assert_equal("ok", worksheet.costpercapita_cr50); end
  def test_costpercapita_a51; assert_equal("XVII.a", worksheet.costpercapita_a51); end
  def test_costpercapita_b51; assert_equal("District heating effective demand", worksheet.costpercapita_b51); end
  def test_costpercapita_c51; assert_equal("Buildings", worksheet.costpercapita_c51); end
  def test_costpercapita_e51; assert_in_delta(0.5253715046833248, worksheet.costpercapita_e51, 0.001); end
  def test_costpercapita_f51; assert_in_delta(0.3504949107810618, worksheet.costpercapita_f51, 0.001); end
  def test_costpercapita_g51; assert_in_delta(0.358213572628712, worksheet.costpercapita_g51, 0.001); end
  def test_costpercapita_h51; assert_in_delta(0.40898521002714755, worksheet.costpercapita_h51, 0.001); end
  def test_costpercapita_i51; assert_in_delta(0.4338321901096749, worksheet.costpercapita_i51, 0.001); end
  def test_costpercapita_j51; assert_in_delta(0.46253289372533507, worksheet.costpercapita_j51, 0.001); end
  def test_costpercapita_k51; assert_in_delta(0.4948642184051349, worksheet.costpercapita_k51, 0.001); end
  def test_costpercapita_l51; assert_in_delta(0.5308440147768441, worksheet.costpercapita_l51, 0.001); end
  def test_costpercapita_m51; assert_in_delta(0.570862139961467, worksheet.costpercapita_m51, 0.001); end
  def test_costpercapita_o51; assert_in_delta(0.0839400630931334, worksheet.costpercapita_o51, 0.001); end
  def test_costpercapita_p51; assert_in_delta(0.08516819028880335, worksheet.costpercapita_p51, 0.001); end
  def test_costpercapita_q51; assert_in_delta(0.08656062968294506, worksheet.costpercapita_q51, 0.001); end
  def test_costpercapita_r51; assert_in_delta(0.09034960367740669, worksheet.costpercapita_r51, 0.001); end
  def test_costpercapita_s51; assert_in_delta(0.09492597506610154, worksheet.costpercapita_s51, 0.001); end
  def test_costpercapita_t51; assert_in_delta(0.10036825107993824, worksheet.costpercapita_t51, 0.001); end
  def test_costpercapita_u51; assert_in_delta(0.10659967674460265, worksheet.costpercapita_u51, 0.001); end
  def test_costpercapita_v51; assert_in_delta(0.11360322936292902, worksheet.costpercapita_v51, 0.001); end
  def test_costpercapita_w51; assert_in_delta(0.12144577031105082, worksheet.costpercapita_w51, 0.001); end
  def test_costpercapita_y51; assert_in_delta(0, (worksheet.costpercapita_y51||0), 0.001); end
  def test_costpercapita_z51; assert_in_delta(0, (worksheet.costpercapita_z51||0), 0.001); end
  def test_costpercapita_aa51; assert_in_delta(0, (worksheet.costpercapita_aa51||0), 0.001); end
  def test_costpercapita_ab51; assert_in_delta(0, (worksheet.costpercapita_ab51||0), 0.001); end
  def test_costpercapita_ac51; assert_in_delta(0, (worksheet.costpercapita_ac51||0), 0.001); end
  def test_costpercapita_ad51; assert_in_delta(0, (worksheet.costpercapita_ad51||0), 0.001); end
  def test_costpercapita_ae51; assert_in_delta(0, (worksheet.costpercapita_ae51||0), 0.001); end
  def test_costpercapita_af51; assert_in_delta(0, (worksheet.costpercapita_af51||0), 0.001); end
  def test_costpercapita_ag51; assert_in_delta(0, (worksheet.costpercapita_ag51||0), 0.001); end
  def test_costpercapita_ai51; assert_in_delta(0.6093115677764582, worksheet.costpercapita_ai51, 0.001); end
  def test_costpercapita_aj51; assert_in_delta(0.4356631010698651, worksheet.costpercapita_aj51, 0.001); end
  def test_costpercapita_ak51; assert_in_delta(0.44477420231165704, worksheet.costpercapita_ak51, 0.001); end
  def test_costpercapita_al51; assert_in_delta(0.4993348137045543, worksheet.costpercapita_al51, 0.001); end
  def test_costpercapita_am51; assert_in_delta(0.5287581651757763, worksheet.costpercapita_am51, 0.001); end
  def test_costpercapita_an51; assert_in_delta(0.5629011448052733, worksheet.costpercapita_an51, 0.001); end
  def test_costpercapita_ao51; assert_in_delta(0.6014638951497375, worksheet.costpercapita_ao51, 0.001); end
  def test_costpercapita_ap51; assert_in_delta(0.6444472441397732, worksheet.costpercapita_ap51, 0.001); end
  def test_costpercapita_aq51; assert_in_delta(0.6923079102725178, worksheet.costpercapita_aq51, 0.001); end
  def test_costpercapita_as51; assert_in_delta(0.5576624493784013, worksheet.costpercapita_as51, 0.001); end
  def test_costpercapita_at51; assert_in_epsilon(11.009208121149028, worksheet.costpercapita_at51, 0.001); end
  def test_costpercapita_av51; assert_in_delta(0, (worksheet.costpercapita_av51||0), 0.001); end
  def test_costpercapita_aw51; assert_in_epsilon(15, worksheet.costpercapita_aw51, 0.001); end
  def test_costpercapita_ay51; assert_in_delta(0.10507430093666496, worksheet.costpercapita_ay51, 0.001); end
  def test_costpercapita_az51; assert_in_delta(0.1168316369270206, worksheet.costpercapita_az51, 0.001); end
  def test_costpercapita_ba51; assert_in_delta(0.11940452420957066, worksheet.costpercapita_ba51, 0.001); end
  def test_costpercapita_bb51; assert_in_delta(0.13632840334238253, worksheet.costpercapita_bb51, 0.001); end
  def test_costpercapita_bc51; assert_in_delta(0.1446107300365583, worksheet.costpercapita_bc51, 0.001); end
  def test_costpercapita_bd51; assert_in_delta(0.15417763124177836, worksheet.costpercapita_bd51, 0.001); end
  def test_costpercapita_be51; assert_in_delta(0.16495473946837833, worksheet.costpercapita_be51, 0.001); end
  def test_costpercapita_bf51; assert_in_delta(0.17694800492561472, worksheet.costpercapita_bf51, 0.001); end
  def test_costpercapita_bg51; assert_in_delta(0.19028737998715564, worksheet.costpercapita_bg51, 0.001); end
  def test_costpercapita_bi51; assert_in_delta(0.10507430093666496, worksheet.costpercapita_bi51, 0.001); end
  def test_costpercapita_bj51; assert_in_delta(0.21844110551379395, worksheet.costpercapita_bj51, 0.001); end
  def test_costpercapita_bk51; assert_in_delta(0.33069427194719775, worksheet.costpercapita_bk51, 0.001); end
  def test_costpercapita_bl51; assert_in_delta(0.3615434510607026, worksheet.costpercapita_bl51, 0.001); end
  def test_costpercapita_bm51; assert_in_delta(0.3897608233808937, worksheet.costpercapita_bm51, 0.001); end
  def test_costpercapita_bn51; assert_in_delta(0.42486226849310293, worksheet.costpercapita_bn51, 0.001); end
  def test_costpercapita_bo51; assert_in_delta(0.45403726471374223, worksheet.costpercapita_bo51, 0.001); end
  def test_costpercapita_bp51; assert_in_delta(0.48649188501689594, worksheet.costpercapita_bp51, 0.001); end
  def test_costpercapita_bq51; assert_in_delta(0.522580527590039, worksheet.costpercapita_bq51, 0.001); end
  def test_costpercapita_bs51; assert_in_delta(0.18901436402979838, worksheet.costpercapita_bs51, 0.001); end
  def test_costpercapita_bt51; assert_in_delta(0.30360929580259727, worksheet.costpercapita_bt51, 0.001); end
  def test_costpercapita_bu51; assert_in_delta(0.41725490163014284, worksheet.costpercapita_bu51, 0.001); end
  def test_costpercapita_bv51; assert_in_delta(0.4518930547381093, worksheet.costpercapita_bv51, 0.001); end
  def test_costpercapita_bw51; assert_in_delta(0.4846867984469952, worksheet.costpercapita_bw51, 0.001); end
  def test_costpercapita_bx51; assert_in_delta(0.5252305195730412, worksheet.costpercapita_bx51, 0.001); end
  def test_costpercapita_by51; assert_in_delta(0.5606369414583449, worksheet.costpercapita_by51, 0.001); end
  def test_costpercapita_bz51; assert_in_delta(0.600095114379825, worksheet.costpercapita_bz51, 0.001); end
  def test_costpercapita_ca51; assert_in_delta(0.6440262979010898, worksheet.costpercapita_ca51, 0.001); end
  def test_costpercapita_cc51; assert_in_delta(0.46404969866221596, worksheet.costpercapita_cc51, 0.001); end
  def test_costpercapita_cd51; assert_in_epsilon(9.39852412362627, worksheet.costpercapita_cd51, 0.001); end
  def test_costpercapita_cf51; assert_in_delta(-0.42029720374665985, worksheet.costpercapita_cf51, 0.001); end
  def test_costpercapita_cg51; assert_in_delta(-0.13205380526726784, worksheet.costpercapita_cg51, 0.001); end
  def test_costpercapita_ch51; assert_in_delta(-0.02751930068151423, worksheet.costpercapita_ch51, 0.001); end
  def test_costpercapita_ci51; assert_in_delta(-0.047441758966444966, worksheet.costpercapita_ci51, 0.001); end
  def test_costpercapita_cj51; assert_in_delta(-0.04407136672878118, worksheet.costpercapita_cj51, 0.001); end
  def test_costpercapita_ck51; assert_in_delta(-0.03767062523223212, worksheet.costpercapita_ck51, 0.001); end
  def test_costpercapita_cl51; assert_in_delta(-0.04082695369139268, worksheet.costpercapita_cl51, 0.001); end
  def test_costpercapita_cm51; assert_in_delta(-0.044352129759948136, worksheet.costpercapita_cm51, 0.001); end
  def test_costpercapita_cn51; assert_in_delta(-0.048281612371427945, worksheet.costpercapita_cn51, 0.001); end
  def test_costpercapita_cp51; assert_in_delta(-0.09361275071618542, worksheet.costpercapita_cp51, 0.001); end
  def test_costpercapita_cq51; assert_in_epsilon(-1.6106839975227576, worksheet.costpercapita_cq51, 0.001); end
  def test_costpercapita_cr51; assert_equal("ok", worksheet.costpercapita_cr51); end
  def test_costpercapita_a52; assert_equal("XVIII.a", worksheet.costpercapita_a52); end
  def test_costpercapita_b52; assert_equal("Storage of captured CO2", worksheet.costpercapita_b52); end
  def test_costpercapita_c52; assert_equal("Other", worksheet.costpercapita_c52); end
  def test_costpercapita_e52; assert_in_delta(0, (worksheet.costpercapita_e52||0), 0.001); end
  def test_costpercapita_f52; assert_in_epsilon(1.4837383107049151, worksheet.costpercapita_f52, 0.001); end
  def test_costpercapita_g52; assert_in_epsilon(3.3808215481063097, worksheet.costpercapita_g52, 0.001); end
  def test_costpercapita_h52; assert_in_epsilon(3.2072609213659082, worksheet.costpercapita_h52, 0.001); end
  def test_costpercapita_i52; assert_in_epsilon(3.055419030477101, worksheet.costpercapita_i52, 0.001); end
  def test_costpercapita_j52; assert_in_epsilon(2.9232864615606666, worksheet.costpercapita_j52, 0.001); end
  def test_costpercapita_k52; assert_in_epsilon(2.854461424010788, worksheet.costpercapita_k52, 0.001); end
  def test_costpercapita_l52; assert_in_epsilon(2.742312481185729, worksheet.costpercapita_l52, 0.001); end
  def test_costpercapita_m52; assert_in_epsilon(2.6390694723840284, worksheet.costpercapita_m52, 0.001); end
  def test_costpercapita_o52; assert_in_delta(0, (worksheet.costpercapita_o52||0), 0.001); end
  def test_costpercapita_p52; assert_in_delta(0.04679482364530887, worksheet.costpercapita_p52, 0.001); end
  def test_costpercapita_q52; assert_in_delta(0.10662591036335284, worksheet.costpercapita_q52, 0.001); end
  def test_costpercapita_r52; assert_in_delta(0.10115207521230941, worksheet.costpercapita_r52, 0.001); end
  def test_costpercapita_s52; assert_in_delta(0.09636321557658548, worksheet.costpercapita_s52, 0.001); end
  def test_costpercapita_t52; assert_in_delta(0.09219595763383641, worksheet.costpercapita_t52, 0.001); end
  def test_costpercapita_u52; assert_in_delta(0.09002532183418638, worksheet.costpercapita_u52, 0.001); end
  def test_costpercapita_v52; assert_in_delta(0.08648831671431914, worksheet.costpercapita_v52, 0.001); end
  def test_costpercapita_w52; assert_in_delta(0.08323219105211166, worksheet.costpercapita_w52, 0.001); end
  def test_costpercapita_y52; assert_in_delta(0, (worksheet.costpercapita_y52||0), 0.001); end
  def test_costpercapita_z52; assert_in_delta(0, (worksheet.costpercapita_z52||0), 0.001); end
  def test_costpercapita_aa52; assert_in_delta(0, (worksheet.costpercapita_aa52||0), 0.001); end
  def test_costpercapita_ab52; assert_in_delta(0, (worksheet.costpercapita_ab52||0), 0.001); end
  def test_costpercapita_ac52; assert_in_delta(0, (worksheet.costpercapita_ac52||0), 0.001); end
  def test_costpercapita_ad52; assert_in_delta(0, (worksheet.costpercapita_ad52||0), 0.001); end
  def test_costpercapita_ae52; assert_in_delta(0, (worksheet.costpercapita_ae52||0), 0.001); end
  def test_costpercapita_af52; assert_in_delta(0, (worksheet.costpercapita_af52||0), 0.001); end
  def test_costpercapita_ag52; assert_in_delta(0, (worksheet.costpercapita_ag52||0), 0.001); end
  def test_costpercapita_ai52; assert_in_delta(0, (worksheet.costpercapita_ai52||0), 0.001); end
  def test_costpercapita_aj52; assert_in_epsilon(1.5305331343502242, worksheet.costpercapita_aj52, 0.001); end
  def test_costpercapita_ak52; assert_in_epsilon(3.487447458469662, worksheet.costpercapita_ak52, 0.001); end
  def test_costpercapita_al52; assert_in_epsilon(3.308412996578218, worksheet.costpercapita_al52, 0.001); end
  def test_costpercapita_am52; assert_in_epsilon(3.1517822460536866, worksheet.costpercapita_am52, 0.001); end
  def test_costpercapita_an52; assert_in_epsilon(3.015482419194503, worksheet.costpercapita_an52, 0.001); end
  def test_costpercapita_ao52; assert_in_epsilon(2.944486745844974, worksheet.costpercapita_ao52, 0.001); end
  def test_costpercapita_ap52; assert_in_epsilon(2.828800797900048, worksheet.costpercapita_ap52, 0.001); end
  def test_costpercapita_aq52; assert_in_epsilon(2.72230166343614, worksheet.costpercapita_aq52, 0.001); end
  def test_costpercapita_as52; assert_in_epsilon(2.5543608290919395, worksheet.costpercapita_as52, 0.001); end
  def test_costpercapita_at52; assert_in_epsilon(56.17920054171995, worksheet.costpercapita_at52, 0.001); end
  def test_costpercapita_av52; assert_in_delta(0, (worksheet.costpercapita_av52||0), 0.001); end
  def test_costpercapita_aw52; assert_in_epsilon(15, worksheet.costpercapita_aw52, 0.001); end
  def test_costpercapita_ay52; assert_in_delta(0, (worksheet.costpercapita_ay52||0), 0.001); end
  def test_costpercapita_az52; assert_in_delta(0.49457943690163836, worksheet.costpercapita_az52, 0.001); end
  def test_costpercapita_ba52; assert_in_epsilon(1.1269405160354367, worksheet.costpercapita_ba52, 0.001); end
  def test_costpercapita_bb52; assert_in_epsilon(1.0690869737886362, worksheet.costpercapita_bb52, 0.001); end
  def test_costpercapita_bc52; assert_in_epsilon(1.0184730101590336, worksheet.costpercapita_bc52, 0.001); end
  def test_costpercapita_bd52; assert_in_delta(0.9744288205202221, worksheet.costpercapita_bd52, 0.001); end
  def test_costpercapita_be52; assert_in_delta(0.9514871413369294, worksheet.costpercapita_be52, 0.001); end
  def test_costpercapita_bf52; assert_in_delta(0.9141041603952431, worksheet.costpercapita_bf52, 0.001); end
  def test_costpercapita_bg52; assert_in_delta(0.8796898241280096, worksheet.costpercapita_bg52, 0.001); end
  def test_costpercapita_bi52; assert_in_delta(0, (worksheet.costpercapita_bi52||0), 0.001); end
  def test_costpercapita_bj52; assert_in_delta(0.49457943690163836, worksheet.costpercapita_bj52, 0.001); end
  def test_costpercapita_bk52; assert_in_epsilon(1.6053283369236895, worksheet.costpercapita_bk52, 0.001); end
  def test_costpercapita_bl52; assert_in_epsilon(2.6247087672836753, worksheet.costpercapita_bl52, 0.001); end
  def test_costpercapita_bm52; assert_in_epsilon(3.1205640078063017, worksheet.costpercapita_bm52, 0.001); end
  def test_costpercapita_bn52; assert_in_epsilon(2.984295262498522, worksheet.costpercapita_bn52, 0.001); end
  def test_costpercapita_bo52; assert_in_epsilon(2.878408375303264, worksheet.costpercapita_bo52, 0.001); end
  def test_costpercapita_bp52; assert_in_epsilon(2.781235587718862, worksheet.costpercapita_bp52, 0.001); end
  def test_costpercapita_bq52; assert_in_epsilon(2.691839963826859, worksheet.costpercapita_bq52, 0.001); end
  def test_costpercapita_bs52; assert_in_delta(0, (worksheet.costpercapita_bs52||0), 0.001); end
  def test_costpercapita_bt52; assert_in_delta(0.5413742605469473, worksheet.costpercapita_bt52, 0.001); end
  def test_costpercapita_bu52; assert_in_epsilon(1.7119542472870424, worksheet.costpercapita_bu52, 0.001); end
  def test_costpercapita_bv52; assert_in_epsilon(2.7258608424959845, worksheet.costpercapita_bv52, 0.001); end
  def test_costpercapita_bw52; assert_in_epsilon(3.2169272233828874, worksheet.costpercapita_bw52, 0.001); end
  def test_costpercapita_bx52; assert_in_epsilon(3.0764912201323584, worksheet.costpercapita_bx52, 0.001); end
  def test_costpercapita_by52; assert_in_epsilon(2.96843369713745, worksheet.costpercapita_by52, 0.001); end
  def test_costpercapita_bz52; assert_in_epsilon(2.867723904433181, worksheet.costpercapita_bz52, 0.001); end
  def test_costpercapita_ca52; assert_in_epsilon(2.7750721548789707, worksheet.costpercapita_ca52, 0.001); end
  def test_costpercapita_cc52; assert_in_epsilon(2.209315283366091, worksheet.costpercapita_cc52, 0.001); end
  def test_costpercapita_cd52; assert_in_epsilon(44.44816716199842, worksheet.costpercapita_cd52, 0.001); end
  def test_costpercapita_cf52; assert_in_delta(0, (worksheet.costpercapita_cf52||0), 0.001); end
  def test_costpercapita_cg52; assert_in_delta(-0.9891588738032768, worksheet.costpercapita_cg52, 0.001); end
  def test_costpercapita_ch52; assert_in_epsilon(-1.77549321118262, worksheet.costpercapita_ch52, 0.001); end
  def test_costpercapita_ci52; assert_in_delta(-0.5825521540822332, worksheet.costpercapita_ci52, 0.001); end
  def test_costpercapita_cj52; assert_in_delta(0.06514497732920085, worksheet.costpercapita_cj52, 0.001); end
  def test_costpercapita_ck52; assert_in_delta(0.06100880093785542, worksheet.costpercapita_ck52, 0.001); end
  def test_costpercapita_cl52; assert_in_delta(0.023946951292475753, worksheet.costpercapita_cl52, 0.001); end
  def test_costpercapita_cm52; assert_in_delta(0.03892310653313308, worksheet.costpercapita_cm52, 0.001); end
  def test_costpercapita_cn52; assert_in_delta(0.05277049144283056, worksheet.costpercapita_cn52, 0.001); end
  def test_costpercapita_cp52; assert_in_delta(-0.3450455457258483, worksheet.costpercapita_cp52, 0.001); end
  def test_costpercapita_cq52; assert_in_epsilon(-11.731033379721524, worksheet.costpercapita_cq52, 0.001); end
  def test_costpercapita_cr52; assert_equal("ok", worksheet.costpercapita_cr52); end
  def test_costpercapita_a53; assert_equal("Total", worksheet.costpercapita_a53); end
  def test_costpercapita_b53; assert_equal("Total", worksheet.costpercapita_b53); end
  def test_costpercapita_c53; assert_equal("Total", worksheet.costpercapita_c53); end
  def test_costpercapita_e53; assert_in_epsilon(1299.7467124661914, worksheet.costpercapita_e53, 0.001); end
  def test_costpercapita_f53; assert_in_epsilon(1281.2172731193082, worksheet.costpercapita_f53, 0.001); end
  def test_costpercapita_g53; assert_in_epsilon(1337.48960325597, worksheet.costpercapita_g53, 0.001); end
  def test_costpercapita_h53; assert_in_epsilon(1378.9525086277738, worksheet.costpercapita_h53, 0.001); end
  def test_costpercapita_i53; assert_in_epsilon(1372.3093407647516, worksheet.costpercapita_i53, 0.001); end
  def test_costpercapita_j53; assert_in_epsilon(1392.1042805809748, worksheet.costpercapita_j53, 0.001); end
  def test_costpercapita_k53; assert_in_epsilon(1388.938978101967, worksheet.costpercapita_k53, 0.001); end
  def test_costpercapita_l53; assert_in_epsilon(1396.0433760659034, worksheet.costpercapita_l53, 0.001); end
  def test_costpercapita_m53; assert_in_epsilon(1401.1289434782493, worksheet.costpercapita_m53, 0.001); end
  def test_costpercapita_o53; assert_in_epsilon(1363.4705210424677, worksheet.costpercapita_o53, 0.001); end
  def test_costpercapita_p53; assert_in_epsilon(1252.809841615066, worksheet.costpercapita_p53, 0.001); end
  def test_costpercapita_q53; assert_in_epsilon(1168.6827746773708, worksheet.costpercapita_q53, 0.001); end
  def test_costpercapita_r53; assert_in_epsilon(1094.5960784071956, worksheet.costpercapita_r53, 0.001); end
  def test_costpercapita_s53; assert_in_epsilon(1007.7599416444975, worksheet.costpercapita_s53, 0.001); end
  def test_costpercapita_t53; assert_in_epsilon(915.424516635853, worksheet.costpercapita_t53, 0.001); end
  def test_costpercapita_u53; assert_in_epsilon(812.0635555185183, worksheet.costpercapita_u53, 0.001); end
  def test_costpercapita_v53; assert_in_epsilon(701.2673395905836, worksheet.costpercapita_v53, 0.001); end
  def test_costpercapita_w53; assert_in_epsilon(585.2124762443846, worksheet.costpercapita_w53, 0.001); end
  def test_costpercapita_y53; assert_in_epsilon(764.7147240467373, worksheet.costpercapita_y53, 0.001); end
  def test_costpercapita_z53; assert_in_epsilon(729.8083357092515, worksheet.costpercapita_z53, 0.001); end
  def test_costpercapita_aa53; assert_in_epsilon(711.9493721888931, worksheet.costpercapita_aa53, 0.001); end
  def test_costpercapita_ab53; assert_in_epsilon(698.5437317041798, worksheet.costpercapita_ab53, 0.001); end
  def test_costpercapita_ac53; assert_in_epsilon(691.574670936203, worksheet.costpercapita_ac53, 0.001); end
  def test_costpercapita_ad53; assert_in_epsilon(711.3099472455426, worksheet.costpercapita_ad53, 0.001); end
  def test_costpercapita_ae53; assert_in_epsilon(726.359804158752, worksheet.costpercapita_ae53, 0.001); end
  def test_costpercapita_af53; assert_in_epsilon(744.1877364749275, worksheet.costpercapita_af53, 0.001); end
  def test_costpercapita_ag53; assert_in_epsilon(755.643003050402, worksheet.costpercapita_ag53, 0.001); end
  def test_costpercapita_ai53; assert_in_epsilon(3427.9319575553955, worksheet.costpercapita_ai53, 0.001); end
  def test_costpercapita_aj53; assert_in_epsilon(3263.835450443626, worksheet.costpercapita_aj53, 0.001); end
  def test_costpercapita_ak53; assert_in_epsilon(3218.121750122234, worksheet.costpercapita_ak53, 0.001); end
  def test_costpercapita_al53; assert_in_epsilon(3172.0923187391495, worksheet.costpercapita_al53, 0.001); end
  def test_costpercapita_am53; assert_in_epsilon(3071.6439533454527, worksheet.costpercapita_am53, 0.001); end
  def test_costpercapita_an53; assert_in_epsilon(3018.8387444623704, worksheet.costpercapita_an53, 0.001); end
  def test_costpercapita_ao53; assert_in_epsilon(2927.3623377792374, worksheet.costpercapita_ao53, 0.001); end
  def test_costpercapita_ap53; assert_in_epsilon(2841.4984521314145, worksheet.costpercapita_ap53, 0.001); end
  def test_costpercapita_aq53; assert_in_epsilon(2741.984422773036, worksheet.costpercapita_aq53, 0.001); end
  def test_costpercapita_as53; assert_in_epsilon(3075.9232652613236, worksheet.costpercapita_as53, 0.001); end
  def test_costpercapita_at53; assert_in_epsilon(65363.43340344249, worksheet.costpercapita_at53, 0.001); end
  def test_costpercapita_ay53; assert_in_epsilon(284.1936857801851, worksheet.costpercapita_ay53, 0.001); end
  def test_costpercapita_az53; assert_in_epsilon(465.02524318554754, worksheet.costpercapita_az53, 0.001); end
  def test_costpercapita_ba53; assert_in_epsilon(482.18246703205443, worksheet.costpercapita_ba53, 0.001); end
  def test_costpercapita_bb53; assert_in_epsilon(494.476640456666, worksheet.costpercapita_bb53, 0.001); end
  def test_costpercapita_bc53; assert_in_epsilon(491.6543020326, worksheet.costpercapita_bc53, 0.001); end
  def test_costpercapita_bd53; assert_in_epsilon(495.4228780808978, worksheet.costpercapita_bd53, 0.001); end
  def test_costpercapita_be53; assert_in_epsilon(490.5871012469604, worksheet.costpercapita_be53, 0.001); end
  def test_costpercapita_bf53; assert_in_epsilon(488.29245535621385, worksheet.costpercapita_bf53, 0.001); end
  def test_costpercapita_bg53; assert_in_epsilon(484.49822218373794, worksheet.costpercapita_bg53, 0.001); end
  def test_costpercapita_bi53; assert_in_epsilon(284.1936857801851, worksheet.costpercapita_bi53, 0.001); end
  def test_costpercapita_bj53; assert_in_epsilon(708.9773880602876, worksheet.costpercapita_bj53, 0.001); end
  def test_costpercapita_bk53; assert_in_epsilon(1101.8731390340774, worksheet.costpercapita_bk53, 0.001); end
  def test_costpercapita_bl53; assert_in_epsilon(1277.781626715978, worksheet.costpercapita_bl53, 0.001); end
  def test_costpercapita_bm53; assert_in_epsilon(1319.814119870273, worksheet.costpercapita_bm53, 0.001); end
  def test_costpercapita_bn53; assert_in_epsilon(1346.8084215976187, worksheet.costpercapita_bn53, 0.001); end
  def test_costpercapita_bo53; assert_in_epsilon(1354.8866715146983, worksheet.costpercapita_bo53, 0.001); end
  def test_costpercapita_bp53; assert_in_epsilon(1370.5492013238834, worksheet.costpercapita_bp53, 0.001); end
  def test_costpercapita_bq53; assert_in_epsilon(1362.8971213378593, worksheet.costpercapita_bq53, 0.001); end
  def test_costpercapita_bs53; assert_in_epsilon(2412.3789308693895, worksheet.costpercapita_bs53, 0.001); end
  def test_costpercapita_bt53; assert_in_epsilon(2691.5955653846054, worksheet.costpercapita_bt53, 0.001); end
  def test_costpercapita_bu53; assert_in_epsilon(2982.5052859003417, worksheet.costpercapita_bu53, 0.001); end
  def test_costpercapita_bv53; assert_in_epsilon(3070.9214368273542, worksheet.costpercapita_bv53, 0.001); end
  def test_costpercapita_bw53; assert_in_epsilon(3019.1487324509735, worksheet.costpercapita_bw53, 0.001); end
  def test_costpercapita_bx53; assert_in_epsilon(2973.542885479015, worksheet.costpercapita_bx53, 0.001); end
  def test_costpercapita_by53; assert_in_epsilon(2893.310031191969, worksheet.costpercapita_by53, 0.001); end
  def test_costpercapita_bz53; assert_in_epsilon(2816.0042773893942, worksheet.costpercapita_bz53, 0.001); end
  def test_costpercapita_ca53; assert_in_epsilon(2703.752600632646, worksheet.costpercapita_ca53, 0.001); end
  def test_costpercapita_cc53; assert_in_epsilon(2840.3510829028546, worksheet.costpercapita_cc53, 0.001); end
  def test_costpercapita_cd53; assert_in_epsilon(60423.46404616361, worksheet.costpercapita_cd53, 0.001); end
  def test_costpercapita_cf53; assert_in_epsilon(-1015.5530266860064, worksheet.costpercapita_cf53, 0.001); end
  def test_costpercapita_cg53; assert_in_epsilon(-572.2398850590204, worksheet.costpercapita_cg53, 0.001); end
  def test_costpercapita_ch53; assert_in_epsilon(-235.6164642218928, worksheet.costpercapita_ch53, 0.001); end
  def test_costpercapita_ci53; assert_in_epsilon(-101.17088191179549, worksheet.costpercapita_ci53, 0.001); end
  def test_costpercapita_cj53; assert_in_epsilon(-52.49522089447842, worksheet.costpercapita_cj53, 0.001); end
  def test_costpercapita_ck53; assert_in_epsilon(-45.295858983356155, worksheet.costpercapita_ck53, 0.001); end
  def test_costpercapita_cl53; assert_in_epsilon(-34.05230658726842, worksheet.costpercapita_cl53, 0.001); end
  def test_costpercapita_cm53; assert_in_epsilon(-25.494174742020046, worksheet.costpercapita_cm53, 0.001); end
  def test_costpercapita_cn53; assert_in_epsilon(-38.23182214039029, worksheet.costpercapita_cn53, 0.001); end
  def test_costpercapita_cp53; assert_in_epsilon(-235.5721823584698, worksheet.costpercapita_cp53, 0.001); end
  def test_costpercapita_cq53; assert_in_epsilon(-4939.9693572788865, worksheet.costpercapita_cq53, 0.001); end
  def test_costpercapita_cr53; assert_equal("ok", worksheet.costpercapita_cr53); end
  def test_costpercapita_b55; assert_equal("£/Capita/yr", worksheet.costpercapita_b55); end
  def test_costpercapita_e55; assert_equal("C1.Point", worksheet.costpercapita_e55); end
  def test_costpercapita_f55; assert_equal("Point estimate of capital costs", worksheet.costpercapita_f55); end
  def test_costpercapita_o55; assert_equal("C2.Point", worksheet.costpercapita_o55); end
  def test_costpercapita_p55; assert_equal("Point estimate of operating costs", worksheet.costpercapita_p55); end
  def test_costpercapita_y55; assert_equal("C3.Point", worksheet.costpercapita_y55); end
  def test_costpercapita_z55; assert_equal("Point estimate of fuel costs", worksheet.costpercapita_z55); end
  def test_costpercapita_ai55; assert_equal("Point estimate of total cost", worksheet.costpercapita_ai55); end
  def test_costpercapita_as55; assert_equal("Cashflow capital basis", worksheet.costpercapita_as55); end
  def test_costpercapita_av55; assert_equal("Loan", worksheet.costpercapita_av55); end
  def test_costpercapita_ay55; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay55); end
  def test_costpercapita_bi55; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi55); end
  def test_costpercapita_br55; assert_equal("Total cost (ammortised capital)", worksheet.costpercapita_br55); end
  def test_costpercapita_cc55; assert_equal("Amortised Capital", worksheet.costpercapita_cc55); end
  def test_costpercapita_cf55; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf55); end
  def test_costpercapita_cp55; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp55); end
  def test_costpercapita_a56; assert_equal("Code", worksheet.costpercapita_a56); end
  def test_costpercapita_b56; assert_equal("Description", worksheet.costpercapita_b56); end
  def test_costpercapita_c56; assert_equal("Category", worksheet.costpercapita_c56); end
  def test_costpercapita_e56; assert_equal("2010", worksheet.costpercapita_e56); end
  def test_costpercapita_f56; assert_equal("2015", worksheet.costpercapita_f56); end
  def test_costpercapita_g56; assert_equal("2020", worksheet.costpercapita_g56); end
  def test_costpercapita_h56; assert_equal("2025", worksheet.costpercapita_h56); end
  def test_costpercapita_i56; assert_equal("2030", worksheet.costpercapita_i56); end
  def test_costpercapita_j56; assert_equal("2035", worksheet.costpercapita_j56); end
  def test_costpercapita_k56; assert_equal("2040", worksheet.costpercapita_k56); end
  def test_costpercapita_l56; assert_equal("2045", worksheet.costpercapita_l56); end
  def test_costpercapita_m56; assert_equal("2050", worksheet.costpercapita_m56); end
  def test_costpercapita_o56; assert_equal("2010", worksheet.costpercapita_o56); end
  def test_costpercapita_p56; assert_equal("2015", worksheet.costpercapita_p56); end
  def test_costpercapita_q56; assert_equal("2020", worksheet.costpercapita_q56); end
  def test_costpercapita_r56; assert_equal("2025", worksheet.costpercapita_r56); end
  def test_costpercapita_s56; assert_equal("2030", worksheet.costpercapita_s56); end
  def test_costpercapita_t56; assert_equal("2035", worksheet.costpercapita_t56); end
  def test_costpercapita_u56; assert_equal("2040", worksheet.costpercapita_u56); end
  def test_costpercapita_v56; assert_equal("2045", worksheet.costpercapita_v56); end
  def test_costpercapita_w56; assert_equal("2050", worksheet.costpercapita_w56); end
  def test_costpercapita_y56; assert_equal("2010", worksheet.costpercapita_y56); end
  def test_costpercapita_z56; assert_equal("2015", worksheet.costpercapita_z56); end
  def test_costpercapita_aa56; assert_equal("2020", worksheet.costpercapita_aa56); end
  def test_costpercapita_ab56; assert_equal("2025", worksheet.costpercapita_ab56); end
  def test_costpercapita_ac56; assert_equal("2030", worksheet.costpercapita_ac56); end
  def test_costpercapita_ad56; assert_equal("2035", worksheet.costpercapita_ad56); end
  def test_costpercapita_ae56; assert_equal("2040", worksheet.costpercapita_ae56); end
  def test_costpercapita_af56; assert_equal("2045", worksheet.costpercapita_af56); end
  def test_costpercapita_ag56; assert_equal("2050", worksheet.costpercapita_ag56); end
  def test_costpercapita_ai56; assert_equal("2010", worksheet.costpercapita_ai56); end
  def test_costpercapita_aj56; assert_equal("2015", worksheet.costpercapita_aj56); end
  def test_costpercapita_ak56; assert_equal("2020", worksheet.costpercapita_ak56); end
  def test_costpercapita_al56; assert_equal("2025", worksheet.costpercapita_al56); end
  def test_costpercapita_am56; assert_equal("2030", worksheet.costpercapita_am56); end
  def test_costpercapita_an56; assert_equal("2035", worksheet.costpercapita_an56); end
  def test_costpercapita_ao56; assert_equal("2040", worksheet.costpercapita_ao56); end
  def test_costpercapita_ap56; assert_equal("2045", worksheet.costpercapita_ap56); end
  def test_costpercapita_aq56; assert_equal("2050", worksheet.costpercapita_aq56); end
  def test_costpercapita_as56; assert_equal("Mean", worksheet.costpercapita_as56); end
  def test_costpercapita_at56; assert_equal("NPV", worksheet.costpercapita_at56); end
  def test_costpercapita_av56; assert_equal("Rate", worksheet.costpercapita_av56); end
  def test_costpercapita_aw56; assert_equal("Years", worksheet.costpercapita_aw56); end
  def test_costpercapita_ay56; assert_in_epsilon(2010, worksheet.costpercapita_ay56, 0.001); end
  def test_costpercapita_az56; assert_in_epsilon(2015, worksheet.costpercapita_az56, 0.001); end
  def test_costpercapita_ba56; assert_in_epsilon(2020, worksheet.costpercapita_ba56, 0.001); end
  def test_costpercapita_bb56; assert_in_epsilon(2025, worksheet.costpercapita_bb56, 0.001); end
  def test_costpercapita_bc56; assert_in_epsilon(2030, worksheet.costpercapita_bc56, 0.001); end
  def test_costpercapita_bd56; assert_in_epsilon(2035, worksheet.costpercapita_bd56, 0.001); end
  def test_costpercapita_be56; assert_in_epsilon(2040, worksheet.costpercapita_be56, 0.001); end
  def test_costpercapita_bf56; assert_in_epsilon(2045, worksheet.costpercapita_bf56, 0.001); end
  def test_costpercapita_bg56; assert_in_epsilon(2050, worksheet.costpercapita_bg56, 0.001); end
  def test_costpercapita_bi56; assert_in_epsilon(2010, worksheet.costpercapita_bi56, 0.001); end
  def test_costpercapita_bj56; assert_in_epsilon(2015, worksheet.costpercapita_bj56, 0.001); end
  def test_costpercapita_bk56; assert_in_epsilon(2020, worksheet.costpercapita_bk56, 0.001); end
  def test_costpercapita_bl56; assert_in_epsilon(2025, worksheet.costpercapita_bl56, 0.001); end
  def test_costpercapita_bm56; assert_in_epsilon(2030, worksheet.costpercapita_bm56, 0.001); end
  def test_costpercapita_bn56; assert_in_epsilon(2035, worksheet.costpercapita_bn56, 0.001); end
  def test_costpercapita_bo56; assert_in_epsilon(2040, worksheet.costpercapita_bo56, 0.001); end
  def test_costpercapita_bp56; assert_in_epsilon(2045, worksheet.costpercapita_bp56, 0.001); end
  def test_costpercapita_bq56; assert_in_epsilon(2050, worksheet.costpercapita_bq56, 0.001); end
  def test_costpercapita_bs56; assert_equal("2010", worksheet.costpercapita_bs56); end
  def test_costpercapita_bt56; assert_equal("2015", worksheet.costpercapita_bt56); end
  def test_costpercapita_bu56; assert_equal("2020", worksheet.costpercapita_bu56); end
  def test_costpercapita_bv56; assert_equal("2025", worksheet.costpercapita_bv56); end
  def test_costpercapita_bw56; assert_equal("2030", worksheet.costpercapita_bw56); end
  def test_costpercapita_bx56; assert_equal("2035", worksheet.costpercapita_bx56); end
  def test_costpercapita_by56; assert_equal("2040", worksheet.costpercapita_by56); end
  def test_costpercapita_bz56; assert_equal("2045", worksheet.costpercapita_bz56); end
  def test_costpercapita_ca56; assert_equal("2050", worksheet.costpercapita_ca56); end
  def test_costpercapita_cc56; assert_equal("Mean", worksheet.costpercapita_cc56); end
  def test_costpercapita_cd56; assert_equal("NPV", worksheet.costpercapita_cd56); end
  def test_costpercapita_cf56; assert_equal("2010", worksheet.costpercapita_cf56); end
  def test_costpercapita_cg56; assert_equal("2015", worksheet.costpercapita_cg56); end
  def test_costpercapita_ch56; assert_equal("2020", worksheet.costpercapita_ch56); end
  def test_costpercapita_ci56; assert_equal("2025", worksheet.costpercapita_ci56); end
  def test_costpercapita_cj56; assert_equal("2030", worksheet.costpercapita_cj56); end
  def test_costpercapita_ck56; assert_equal("2035", worksheet.costpercapita_ck56); end
  def test_costpercapita_cl56; assert_equal("2040", worksheet.costpercapita_cl56); end
  def test_costpercapita_cm56; assert_equal("2045", worksheet.costpercapita_cm56); end
  def test_costpercapita_cn56; assert_equal("2050", worksheet.costpercapita_cn56); end
  def test_costpercapita_cp56; assert_equal("Mean", worksheet.costpercapita_cp56); end
  def test_costpercapita_cq56; assert_equal("NPV", worksheet.costpercapita_cq56); end
  def test_costpercapita_a57; assert_equal("I.a", worksheet.costpercapita_a57); end
  def test_costpercapita_b57; assert_equal("Conventional thermal plant", worksheet.costpercapita_b57); end
  def test_costpercapita_c57; assert_equal("Electricity", worksheet.costpercapita_c57); end
  def test_costpercapita_e57; assert_in_epsilon(6.362815745089527, worksheet.costpercapita_e57, 0.001); end
  def test_costpercapita_f57; assert_in_epsilon(21.12940727269075, worksheet.costpercapita_f57, 0.001); end
  def test_costpercapita_g57; assert_in_epsilon(28.090986856077194, worksheet.costpercapita_g57, 0.001); end
  def test_costpercapita_h57; assert_in_epsilon(33.30034498458158, worksheet.costpercapita_h57, 0.001); end
  def test_costpercapita_i57; assert_in_epsilon(31.575371485570024, worksheet.costpercapita_i57, 0.001); end
  def test_costpercapita_j57; assert_in_epsilon(31.927586182861294, worksheet.costpercapita_j57, 0.001); end
  def test_costpercapita_k57; assert_in_epsilon(62.62093550002423, worksheet.costpercapita_k57, 0.001); end
  def test_costpercapita_l57; assert_in_epsilon(62.564596047612724, worksheet.costpercapita_l57, 0.001); end
  def test_costpercapita_m57; assert_in_epsilon(60.15389280312326, worksheet.costpercapita_m57, 0.001); end
  def test_costpercapita_o57; assert_in_epsilon(53.03487986589885, worksheet.costpercapita_o57, 0.001); end
  def test_costpercapita_p57; assert_in_epsilon(46.23694660581587, worksheet.costpercapita_p57, 0.001); end
  def test_costpercapita_q57; assert_in_epsilon(44.32245220123212, worksheet.costpercapita_q57, 0.001); end
  def test_costpercapita_r57; assert_in_epsilon(43.19243871379865, worksheet.costpercapita_r57, 0.001); end
  def test_costpercapita_s57; assert_in_epsilon(43.27850010234271, worksheet.costpercapita_s57, 0.001); end
  def test_costpercapita_t57; assert_in_epsilon(46.72329647114965, worksheet.costpercapita_t57, 0.001); end
  def test_costpercapita_u57; assert_in_epsilon(50.14680060845675, worksheet.costpercapita_u57, 0.001); end
  def test_costpercapita_v57; assert_in_epsilon(53.175810667679144, worksheet.costpercapita_v57, 0.001); end
  def test_costpercapita_w57; assert_in_epsilon(55.138096208799226, worksheet.costpercapita_w57, 0.001); end
  def test_costpercapita_y57; assert_in_delta(0, (worksheet.costpercapita_y57||0), 0.001); end
  def test_costpercapita_z57; assert_in_delta(0, (worksheet.costpercapita_z57||0), 0.001); end
  def test_costpercapita_aa57; assert_in_delta(0, (worksheet.costpercapita_aa57||0), 0.001); end
  def test_costpercapita_ab57; assert_in_delta(0, (worksheet.costpercapita_ab57||0), 0.001); end
  def test_costpercapita_ac57; assert_in_delta(0, (worksheet.costpercapita_ac57||0), 0.001); end
  def test_costpercapita_ad57; assert_in_delta(0, (worksheet.costpercapita_ad57||0), 0.001); end
  def test_costpercapita_ae57; assert_in_delta(0, (worksheet.costpercapita_ae57||0), 0.001); end
  def test_costpercapita_af57; assert_in_delta(0, (worksheet.costpercapita_af57||0), 0.001); end
  def test_costpercapita_ag57; assert_in_delta(0, (worksheet.costpercapita_ag57||0), 0.001); end
  def test_costpercapita_ai57; assert_in_epsilon(59.397695610988386, worksheet.costpercapita_ai57, 0.001); end
  def test_costpercapita_aj57; assert_in_epsilon(67.36635387850662, worksheet.costpercapita_aj57, 0.001); end
  def test_costpercapita_ak57; assert_in_epsilon(72.41343905730932, worksheet.costpercapita_ak57, 0.001); end
  def test_costpercapita_al57; assert_in_epsilon(76.49278369838024, worksheet.costpercapita_al57, 0.001); end
  def test_costpercapita_am57; assert_in_epsilon(74.85387158791274, worksheet.costpercapita_am57, 0.001); end
  def test_costpercapita_an57; assert_in_epsilon(78.65088265401096, worksheet.costpercapita_an57, 0.001); end
  def test_costpercapita_ao57; assert_in_epsilon(112.76773610848097, worksheet.costpercapita_ao57, 0.001); end
  def test_costpercapita_ap57; assert_in_epsilon(115.74040671529185, worksheet.costpercapita_ap57, 0.001); end
  def test_costpercapita_aq57; assert_in_epsilon(115.29198901192248, worksheet.costpercapita_aq57, 0.001); end
  def test_costpercapita_as57; assert_in_epsilon(85.88612870253374, worksheet.costpercapita_as57, 0.001); end
  def test_costpercapita_at57; assert_in_epsilon(1714.0233927922366, worksheet.costpercapita_at57, 0.001); end
  def test_costpercapita_av57; assert_in_delta(0.07, worksheet.costpercapita_av57, 0.001); end
  def test_costpercapita_aw57; assert_in_epsilon(20, worksheet.costpercapita_aw57, 0.001); end
  def test_costpercapita_ay57; assert_in_epsilon(1.801814382432762, worksheet.costpercapita_ay57, 0.001); end
  def test_costpercapita_az57; assert_in_epsilon(9.972332858450521, worksheet.costpercapita_az57, 0.001); end
  def test_costpercapita_ba57; assert_in_epsilon(13.257952181802333, worksheet.costpercapita_ba57, 0.001); end
  def test_costpercapita_bb57; assert_in_epsilon(15.71658495677203, worksheet.costpercapita_bb57, 0.001); end
  def test_costpercapita_bc57; assert_in_epsilon(14.902458479765622, worksheet.costpercapita_bc57, 0.001); end
  def test_costpercapita_bd57; assert_in_epsilon(15.068691358601114, worksheet.costpercapita_bd57, 0.001); end
  def test_costpercapita_be57; assert_in_epsilon(29.55486657313496, worksheet.costpercapita_be57, 0.001); end
  def test_costpercapita_bf57; assert_in_epsilon(29.528276344395486, worksheet.costpercapita_bf57, 0.001); end
  def test_costpercapita_bg57; assert_in_epsilon(28.39050968266489, worksheet.costpercapita_bg57, 0.001); end
  def test_costpercapita_bi57; assert_in_epsilon(1.801814382432762, worksheet.costpercapita_bi57, 0.001); end
  def test_costpercapita_bj57; assert_in_epsilon(11.714732286845036, worksheet.costpercapita_bj57, 0.001); end
  def test_costpercapita_bk57; assert_in_epsilon(24.589165800591775, worksheet.costpercapita_bk57, 0.001); end
  def test_costpercapita_bl57; assert_in_epsilon(39.54438474292989, worksheet.costpercapita_bl57, 0.001); end
  def test_costpercapita_bm57; assert_in_epsilon(51.777931085977016, worksheet.costpercapita_bm57, 0.001); end
  def test_costpercapita_bn57; assert_in_epsilon(56.7493001583305, worksheet.costpercapita_bn57, 0.001); end
  def test_costpercapita_bo57; assert_in_epsilon(73.15205216964723, worksheet.costpercapita_bo57, 0.001); end
  def test_costpercapita_bp57; assert_in_epsilon(100.86075912532152, worksheet.costpercapita_bp57, 0.001); end
  def test_costpercapita_bq57; assert_in_epsilon(99.97593361867182, worksheet.costpercapita_bq57, 0.001); end
  def test_costpercapita_bs57; assert_in_epsilon(54.83669424833162, worksheet.costpercapita_bs57, 0.001); end
  def test_costpercapita_bt57; assert_in_epsilon(57.95167889266091, worksheet.costpercapita_bt57, 0.001); end
  def test_costpercapita_bu57; assert_in_epsilon(68.9116180018239, worksheet.costpercapita_bu57, 0.001); end
  def test_costpercapita_bv57; assert_in_epsilon(82.73682345672854, worksheet.costpercapita_bv57, 0.001); end
  def test_costpercapita_bw57; assert_in_epsilon(95.05643118831972, worksheet.costpercapita_bw57, 0.001); end
  def test_costpercapita_bx57; assert_in_epsilon(103.47259662948015, worksheet.costpercapita_bx57, 0.001); end
  def test_costpercapita_by57; assert_in_epsilon(123.29885277810398, worksheet.costpercapita_by57, 0.001); end
  def test_costpercapita_bz57; assert_in_epsilon(154.03656979300067, worksheet.costpercapita_bz57, 0.001); end
  def test_costpercapita_ca57; assert_in_epsilon(155.11402982747103, worksheet.costpercapita_ca57, 0.001); end
  def test_costpercapita_cc57; assert_in_epsilon(99.49058831288006, worksheet.costpercapita_cc57, 0.001); end
  def test_costpercapita_cd57; assert_in_epsilon(1909.7248001816845, worksheet.costpercapita_cd57, 0.001); end
  def test_costpercapita_cf57; assert_in_epsilon(-4.561001362656766, worksheet.costpercapita_cf57, 0.001); end
  def test_costpercapita_cg57; assert_in_epsilon(-9.41467498584571, worksheet.costpercapita_cg57, 0.001); end
  def test_costpercapita_ch57; assert_in_epsilon(-3.501821055485418, worksheet.costpercapita_ch57, 0.001); end
  def test_costpercapita_ci57; assert_in_epsilon(6.244039758348313, worksheet.costpercapita_ci57, 0.001); end
  def test_costpercapita_cj57; assert_in_epsilon(20.202559600406996, worksheet.costpercapita_cj57, 0.001); end
  def test_costpercapita_ck57; assert_in_epsilon(24.8217139754692, worksheet.costpercapita_ck57, 0.001); end
  def test_costpercapita_cl57; assert_in_epsilon(10.531116669623005, worksheet.costpercapita_cl57, 0.001); end
  def test_costpercapita_cm57; assert_in_epsilon(38.2961630777088, worksheet.costpercapita_cm57, 0.001); end
  def test_costpercapita_cn57; assert_in_epsilon(39.82204081554855, worksheet.costpercapita_cn57, 0.001); end
  def test_costpercapita_cp57; assert_in_epsilon(13.60445961034633, worksheet.costpercapita_cp57, 0.001); end
  def test_costpercapita_cq57; assert_in_epsilon(195.7014073894476, worksheet.costpercapita_cq57, 0.001); end
  def test_costpercapita_cr57; assert_equal("ok", worksheet.costpercapita_cr57); end
  def test_costpercapita_a58; assert_equal("I.b", worksheet.costpercapita_a58); end
  def test_costpercapita_b58; assert_equal("Combustion + CCS", worksheet.costpercapita_b58); end
  def test_costpercapita_c58; assert_equal("Electricity", worksheet.costpercapita_c58); end
  def test_costpercapita_e58; assert_in_delta(0, (worksheet.costpercapita_e58||0), 0.001); end
  def test_costpercapita_f58; assert_in_epsilon(4.681101831095091, worksheet.costpercapita_f58, 0.001); end
  def test_costpercapita_g58; assert_in_epsilon(2.6927279142049256, worksheet.costpercapita_g58, 0.001); end
  def test_costpercapita_h58; assert_in_delta(-3.3137721246290163e-16, worksheet.costpercapita_h58, 0.001); end
  def test_costpercapita_i58; assert_in_delta(0, (worksheet.costpercapita_i58||0), 0.001); end
  def test_costpercapita_j58; assert_in_delta(0, (worksheet.costpercapita_j58||0), 0.001); end
  def test_costpercapita_k58; assert_in_delta(0, (worksheet.costpercapita_k58||0), 0.001); end
  def test_costpercapita_l58; assert_in_delta(0, (worksheet.costpercapita_l58||0), 0.001); end
  def test_costpercapita_m58; assert_in_delta(0, (worksheet.costpercapita_m58||0), 0.001); end
  def test_costpercapita_o58; assert_in_delta(0, (worksheet.costpercapita_o58||0), 0.001); end
  def test_costpercapita_p58; assert_in_delta(0.9209458388949089, worksheet.costpercapita_p58, 0.001); end
  def test_costpercapita_q58; assert_in_epsilon(1.6881657416213902, worksheet.costpercapita_q58, 0.001); end
  def test_costpercapita_r58; assert_in_epsilon(1.6385468513915973, worksheet.costpercapita_r58, 0.001); end
  def test_costpercapita_s58; assert_in_epsilon(1.5965108140565025, worksheet.costpercapita_s58, 0.001); end
  def test_costpercapita_t58; assert_in_epsilon(1.559619870932544, worksheet.costpercapita_t58, 0.001); end
  def test_costpercapita_u58; assert_in_epsilon(1.527059525860367, worksheet.costpercapita_u58, 0.001); end
  def test_costpercapita_v58; assert_in_epsilon(1.49742431958075, worksheet.costpercapita_v58, 0.001); end
  def test_costpercapita_w58; assert_in_epsilon(1.4717523896007523, worksheet.costpercapita_w58, 0.001); end
  def test_costpercapita_y58; assert_in_delta(0, (worksheet.costpercapita_y58||0), 0.001); end
  def test_costpercapita_z58; assert_in_delta(0, (worksheet.costpercapita_z58||0), 0.001); end
  def test_costpercapita_aa58; assert_in_delta(0, (worksheet.costpercapita_aa58||0), 0.001); end
  def test_costpercapita_ab58; assert_in_delta(0, (worksheet.costpercapita_ab58||0), 0.001); end
  def test_costpercapita_ac58; assert_in_delta(0, (worksheet.costpercapita_ac58||0), 0.001); end
  def test_costpercapita_ad58; assert_in_delta(0, (worksheet.costpercapita_ad58||0), 0.001); end
  def test_costpercapita_ae58; assert_in_delta(0, (worksheet.costpercapita_ae58||0), 0.001); end
  def test_costpercapita_af58; assert_in_delta(0, (worksheet.costpercapita_af58||0), 0.001); end
  def test_costpercapita_ag58; assert_in_delta(0, (worksheet.costpercapita_ag58||0), 0.001); end
  def test_costpercapita_ai58; assert_in_delta(0, (worksheet.costpercapita_ai58||0), 0.001); end
  def test_costpercapita_aj58; assert_in_epsilon(5.60204766999, worksheet.costpercapita_aj58, 0.001); end
  def test_costpercapita_ak58; assert_in_epsilon(4.380893655826316, worksheet.costpercapita_ak58, 0.001); end
  def test_costpercapita_al58; assert_in_epsilon(1.6385468513915968, worksheet.costpercapita_al58, 0.001); end
  def test_costpercapita_am58; assert_in_epsilon(1.5965108140565025, worksheet.costpercapita_am58, 0.001); end
  def test_costpercapita_an58; assert_in_epsilon(1.559619870932544, worksheet.costpercapita_an58, 0.001); end
  def test_costpercapita_ao58; assert_in_epsilon(1.527059525860367, worksheet.costpercapita_ao58, 0.001); end
  def test_costpercapita_ap58; assert_in_epsilon(1.49742431958075, worksheet.costpercapita_ap58, 0.001); end
  def test_costpercapita_aq58; assert_in_epsilon(1.4717523896007523, worksheet.costpercapita_aq58, 0.001); end
  def test_costpercapita_as58; assert_in_epsilon(2.141539455248759, worksheet.costpercapita_as58, 0.001); end
  def test_costpercapita_at58; assert_in_epsilon(58.286168656566204, worksheet.costpercapita_at58, 0.001); end
  def test_costpercapita_av58; assert_in_delta(0.07, worksheet.costpercapita_av58, 0.001); end
  def test_costpercapita_aw58; assert_in_epsilon(30, worksheet.costpercapita_aw58, 0.001); end
  def test_costpercapita_ay58; assert_in_delta(0, (worksheet.costpercapita_ay58||0), 0.001); end
  def test_costpercapita_az58; assert_in_epsilon(1.886165805186153, worksheet.costpercapita_az58, 0.001); end
  def test_costpercapita_ba58; assert_in_epsilon(1.084986291198755, worksheet.costpercapita_ba58, 0.001); end
  def test_costpercapita_bb58; assert_in_delta(-1.3352248878961311e-16, worksheet.costpercapita_bb58, 0.001); end
  def test_costpercapita_bc58; assert_in_delta(0, (worksheet.costpercapita_bc58||0), 0.001); end
  def test_costpercapita_bd58; assert_in_delta(0, (worksheet.costpercapita_bd58||0), 0.001); end
  def test_costpercapita_be58; assert_in_delta(0, (worksheet.costpercapita_be58||0), 0.001); end
  def test_costpercapita_bf58; assert_in_delta(0, (worksheet.costpercapita_bf58||0), 0.001); end
  def test_costpercapita_bg58; assert_in_delta(0, (worksheet.costpercapita_bg58||0), 0.001); end
  def test_costpercapita_bi58; assert_in_delta(0, (worksheet.costpercapita_bi58||0), 0.001); end
  def test_costpercapita_bj58; assert_in_epsilon(1.886165805186153, worksheet.costpercapita_bj58, 0.001); end
  def test_costpercapita_bk58; assert_in_epsilon(2.909402516486329, worksheet.costpercapita_bk58, 0.001); end
  def test_costpercapita_bl58; assert_in_epsilon(2.819317305124344, worksheet.costpercapita_bl58, 0.001); end
  def test_costpercapita_bm58; assert_in_epsilon(2.7422931247210327, worksheet.costpercapita_bm58, 0.001); end
  def test_costpercapita_bn58; assert_in_epsilon(2.6776965020367536, worksheet.costpercapita_bn58, 0.001); end
  def test_costpercapita_bo58; assert_in_epsilon(2.6205909121485544, worksheet.costpercapita_bo58, 0.001); end
  def test_costpercapita_bp58; assert_in_delta(0.9577867478012898, worksheet.costpercapita_bp58, 0.001); end
  def test_costpercapita_bq58; assert_in_delta(-1.1936515821853695e-16, worksheet.costpercapita_bq58, 0.001); end
  def test_costpercapita_bs58; assert_in_delta(0, (worksheet.costpercapita_bs58||0), 0.001); end
  def test_costpercapita_bt58; assert_in_epsilon(2.8071116440810617, worksheet.costpercapita_bt58, 0.001); end
  def test_costpercapita_bu58; assert_in_epsilon(4.597568258107719, worksheet.costpercapita_bu58, 0.001); end
  def test_costpercapita_bv58; assert_in_epsilon(4.457864156515941, worksheet.costpercapita_bv58, 0.001); end
  def test_costpercapita_bw58; assert_in_epsilon(4.338803938777536, worksheet.costpercapita_bw58, 0.001); end
  def test_costpercapita_bx58; assert_in_epsilon(4.237316372969297, worksheet.costpercapita_bx58, 0.001); end
  def test_costpercapita_by58; assert_in_epsilon(4.147650438008922, worksheet.costpercapita_by58, 0.001); end
  def test_costpercapita_bz58; assert_in_epsilon(2.45521106738204, worksheet.costpercapita_bz58, 0.001); end
  def test_costpercapita_ca58; assert_in_epsilon(1.471752389600752, worksheet.costpercapita_ca58, 0.001); end
  def test_costpercapita_cc58; assert_in_epsilon(3.168142029493697, worksheet.costpercapita_cc58, 0.001); end
  def test_costpercapita_cd58; assert_in_epsilon(74.39829514639693, worksheet.costpercapita_cd58, 0.001); end
  def test_costpercapita_cf58; assert_in_delta(0, (worksheet.costpercapita_cf58||0), 0.001); end
  def test_costpercapita_cg58; assert_in_epsilon(-2.7949360259089384, worksheet.costpercapita_cg58, 0.001); end
  def test_costpercapita_ch58; assert_in_delta(0.2166746022814032, worksheet.costpercapita_ch58, 0.001); end
  def test_costpercapita_ci58; assert_in_epsilon(2.8193173051243443, worksheet.costpercapita_ci58, 0.001); end
  def test_costpercapita_cj58; assert_in_epsilon(2.7422931247210327, worksheet.costpercapita_cj58, 0.001); end
  def test_costpercapita_ck58; assert_in_epsilon(2.6776965020367536, worksheet.costpercapita_ck58, 0.001); end
  def test_costpercapita_cl58; assert_in_epsilon(2.6205909121485544, worksheet.costpercapita_cl58, 0.001); end
  def test_costpercapita_cm58; assert_in_delta(0.9577867478012898, worksheet.costpercapita_cm58, 0.001); end
  def test_costpercapita_cn58; assert_in_delta(-1.1936515821853695e-16, worksheet.costpercapita_cn58, 0.001); end
  def test_costpercapita_cp58; assert_in_epsilon(1.0266025742449376, worksheet.costpercapita_cp58, 0.001); end
  def test_costpercapita_cq58; assert_in_epsilon(16.11212648983072, worksheet.costpercapita_cq58, 0.001); end
  def test_costpercapita_cr58; assert_equal("ok", worksheet.costpercapita_cr58); end
  def test_costpercapita_a59; assert_equal("II.a", worksheet.costpercapita_a59); end
  def test_costpercapita_b59; assert_equal("Nuclear power", worksheet.costpercapita_b59); end
  def test_costpercapita_c59; assert_equal("Electricity", worksheet.costpercapita_c59); end
  def test_costpercapita_e59; assert_in_delta(0, (worksheet.costpercapita_e59||0), 0.001); end
  def test_costpercapita_f59; assert_in_delta(0, (worksheet.costpercapita_f59||0), 0.001); end
  def test_costpercapita_g59; assert_in_delta(0, (worksheet.costpercapita_g59||0), 0.001); end
  def test_costpercapita_h59; assert_in_delta(0, (worksheet.costpercapita_h59||0), 0.001); end
  def test_costpercapita_i59; assert_in_delta(0, (worksheet.costpercapita_i59||0), 0.001); end
  def test_costpercapita_j59; assert_in_delta(0, (worksheet.costpercapita_j59||0), 0.001); end
  def test_costpercapita_k59; assert_in_delta(0, (worksheet.costpercapita_k59||0), 0.001); end
  def test_costpercapita_l59; assert_in_delta(0, (worksheet.costpercapita_l59||0), 0.001); end
  def test_costpercapita_m59; assert_in_delta(0, (worksheet.costpercapita_m59||0), 0.001); end
  def test_costpercapita_o59; assert_in_epsilon(13.53940128645524, worksheet.costpercapita_o59, 0.001); end
  def test_costpercapita_p59; assert_in_epsilon(9.964227768093629, worksheet.costpercapita_p59, 0.001); end
  def test_costpercapita_q59; assert_in_epsilon(5.505946521757337, worksheet.costpercapita_q59, 0.001); end
  def test_costpercapita_r59; assert_in_epsilon(1.7784877618820878, worksheet.costpercapita_r59, 0.001); end
  def test_costpercapita_s59; assert_in_epsilon(1.729899203947405, worksheet.costpercapita_s59, 0.001); end
  def test_costpercapita_t59; assert_in_delta(0, (worksheet.costpercapita_t59||0), 0.001); end
  def test_costpercapita_u59; assert_in_delta(0, (worksheet.costpercapita_u59||0), 0.001); end
  def test_costpercapita_v59; assert_in_delta(0, (worksheet.costpercapita_v59||0), 0.001); end
  def test_costpercapita_w59; assert_in_delta(0, (worksheet.costpercapita_w59||0), 0.001); end
  def test_costpercapita_y59; assert_in_epsilon(1.0513578545511342, worksheet.costpercapita_y59, 0.001); end
  def test_costpercapita_z59; assert_in_delta(0.8540189754513322, worksheet.costpercapita_z59, 0.001); end
  def test_costpercapita_aa59; assert_in_delta(0.4720342707132738, worksheet.costpercapita_aa59, 0.001); end
  def test_costpercapita_ab59; assert_in_delta(0.1524728164966898, worksheet.costpercapita_ab59, 0.001); end
  def test_costpercapita_ac59; assert_in_delta(0.14830723580696178, worksheet.costpercapita_ac59, 0.001); end
  def test_costpercapita_ad59; assert_in_delta(0, (worksheet.costpercapita_ad59||0), 0.001); end
  def test_costpercapita_ae59; assert_in_delta(0, (worksheet.costpercapita_ae59||0), 0.001); end
  def test_costpercapita_af59; assert_in_delta(0, (worksheet.costpercapita_af59||0), 0.001); end
  def test_costpercapita_ag59; assert_in_delta(0, (worksheet.costpercapita_ag59||0), 0.001); end
  def test_costpercapita_ai59; assert_in_epsilon(14.590759141006375, worksheet.costpercapita_ai59, 0.001); end
  def test_costpercapita_aj59; assert_in_epsilon(10.81824674354496, worksheet.costpercapita_aj59, 0.001); end
  def test_costpercapita_ak59; assert_in_epsilon(5.97798079247061, worksheet.costpercapita_ak59, 0.001); end
  def test_costpercapita_al59; assert_in_epsilon(1.9309605783787778, worksheet.costpercapita_al59, 0.001); end
  def test_costpercapita_am59; assert_in_epsilon(1.878206439754367, worksheet.costpercapita_am59, 0.001); end
  def test_costpercapita_an59; assert_in_delta(0, (worksheet.costpercapita_an59||0), 0.001); end
  def test_costpercapita_ao59; assert_in_delta(0, (worksheet.costpercapita_ao59||0), 0.001); end
  def test_costpercapita_ap59; assert_in_delta(0, (worksheet.costpercapita_ap59||0), 0.001); end
  def test_costpercapita_aq59; assert_in_delta(0, (worksheet.costpercapita_aq59||0), 0.001); end
  def test_costpercapita_as59; assert_in_epsilon(3.9106837439061213, worksheet.costpercapita_as59, 0.001); end
  def test_costpercapita_at59; assert_in_epsilon(91.80611542603921, worksheet.costpercapita_at59, 0.001); end
  def test_costpercapita_av59; assert_in_delta(0.07, worksheet.costpercapita_av59, 0.001); end
  def test_costpercapita_aw59; assert_in_epsilon(30, worksheet.costpercapita_aw59, 0.001); end
  def test_costpercapita_ay59; assert_in_delta(0, (worksheet.costpercapita_ay59||0), 0.001); end
  def test_costpercapita_az59; assert_in_delta(0, (worksheet.costpercapita_az59||0), 0.001); end
  def test_costpercapita_ba59; assert_in_delta(0, (worksheet.costpercapita_ba59||0), 0.001); end
  def test_costpercapita_bb59; assert_in_delta(0, (worksheet.costpercapita_bb59||0), 0.001); end
  def test_costpercapita_bc59; assert_in_delta(0, (worksheet.costpercapita_bc59||0), 0.001); end
  def test_costpercapita_bd59; assert_in_delta(0, (worksheet.costpercapita_bd59||0), 0.001); end
  def test_costpercapita_be59; assert_in_delta(0, (worksheet.costpercapita_be59||0), 0.001); end
  def test_costpercapita_bf59; assert_in_delta(0, (worksheet.costpercapita_bf59||0), 0.001); end
  def test_costpercapita_bg59; assert_in_delta(0, (worksheet.costpercapita_bg59||0), 0.001); end
  def test_costpercapita_bi59; assert_in_delta(0, (worksheet.costpercapita_bi59||0), 0.001); end
  def test_costpercapita_bj59; assert_in_delta(0, (worksheet.costpercapita_bj59||0), 0.001); end
  def test_costpercapita_bk59; assert_in_delta(0, (worksheet.costpercapita_bk59||0), 0.001); end
  def test_costpercapita_bl59; assert_in_delta(0, (worksheet.costpercapita_bl59||0), 0.001); end
  def test_costpercapita_bm59; assert_in_delta(0, (worksheet.costpercapita_bm59||0), 0.001); end
  def test_costpercapita_bn59; assert_in_delta(0, (worksheet.costpercapita_bn59||0), 0.001); end
  def test_costpercapita_bo59; assert_in_delta(0, (worksheet.costpercapita_bo59||0), 0.001); end
  def test_costpercapita_bp59; assert_in_delta(0, (worksheet.costpercapita_bp59||0), 0.001); end
  def test_costpercapita_bq59; assert_in_delta(0, (worksheet.costpercapita_bq59||0), 0.001); end
  def test_costpercapita_bs59; assert_in_epsilon(14.590759141006375, worksheet.costpercapita_bs59, 0.001); end
  def test_costpercapita_bt59; assert_in_epsilon(10.81824674354496, worksheet.costpercapita_bt59, 0.001); end
  def test_costpercapita_bu59; assert_in_epsilon(5.97798079247061, worksheet.costpercapita_bu59, 0.001); end
  def test_costpercapita_bv59; assert_in_epsilon(1.9309605783787778, worksheet.costpercapita_bv59, 0.001); end
  def test_costpercapita_bw59; assert_in_epsilon(1.878206439754367, worksheet.costpercapita_bw59, 0.001); end
  def test_costpercapita_bx59; assert_in_delta(0, (worksheet.costpercapita_bx59||0), 0.001); end
  def test_costpercapita_by59; assert_in_delta(0, (worksheet.costpercapita_by59||0), 0.001); end
  def test_costpercapita_bz59; assert_in_delta(0, (worksheet.costpercapita_bz59||0), 0.001); end
  def test_costpercapita_ca59; assert_in_delta(0, (worksheet.costpercapita_ca59||0), 0.001); end
  def test_costpercapita_cc59; assert_in_epsilon(3.9106837439061213, worksheet.costpercapita_cc59, 0.001); end
  def test_costpercapita_cd59; assert_in_epsilon(91.80611542603921, worksheet.costpercapita_cd59, 0.001); end
  def test_costpercapita_cf59; assert_in_delta(0, (worksheet.costpercapita_cf59||0), 0.001); end
  def test_costpercapita_cg59; assert_in_delta(0, (worksheet.costpercapita_cg59||0), 0.001); end
  def test_costpercapita_ch59; assert_in_delta(0, (worksheet.costpercapita_ch59||0), 0.001); end
  def test_costpercapita_ci59; assert_in_delta(0, (worksheet.costpercapita_ci59||0), 0.001); end
  def test_costpercapita_cj59; assert_in_delta(0, (worksheet.costpercapita_cj59||0), 0.001); end
  def test_costpercapita_ck59; assert_in_delta(0, (worksheet.costpercapita_ck59||0), 0.001); end
  def test_costpercapita_cl59; assert_in_delta(0, (worksheet.costpercapita_cl59||0), 0.001); end
  def test_costpercapita_cm59; assert_in_delta(0, (worksheet.costpercapita_cm59||0), 0.001); end
  def test_costpercapita_cn59; assert_in_delta(0, (worksheet.costpercapita_cn59||0), 0.001); end
  def test_costpercapita_cp59; assert_in_delta(0, (worksheet.costpercapita_cp59||0), 0.001); end
  def test_costpercapita_cq59; assert_in_delta(0, (worksheet.costpercapita_cq59||0), 0.001); end
  def test_costpercapita_cr59; assert_equal("ok", worksheet.costpercapita_cr59); end
  def test_costpercapita_a60; assert_equal("III.a.1", worksheet.costpercapita_a60); end
  def test_costpercapita_b60; assert_equal("Onshore wind", worksheet.costpercapita_b60); end
  def test_costpercapita_c60; assert_equal("Electricity", worksheet.costpercapita_c60); end
  def test_costpercapita_e60; assert_in_epsilon(15.422487276184361, worksheet.costpercapita_e60, 0.001); end
  def test_costpercapita_f60; assert_in_epsilon(13.160785419116324, worksheet.costpercapita_f60, 0.001); end
  def test_costpercapita_g60; assert_in_epsilon(12.523783842750143, worksheet.costpercapita_g60, 0.001); end
  def test_costpercapita_h60; assert_in_epsilon(11.936245041148924, worksheet.costpercapita_h60, 0.001); end
  def test_costpercapita_i60; assert_in_delta(0, (worksheet.costpercapita_i60||0), 0.001); end
  def test_costpercapita_j60; assert_in_delta(0, (worksheet.costpercapita_j60||0), 0.001); end
  def test_costpercapita_k60; assert_in_delta(0, (worksheet.costpercapita_k60||0), 0.001); end
  def test_costpercapita_l60; assert_in_delta(0, (worksheet.costpercapita_l60||0), 0.001); end
  def test_costpercapita_m60; assert_in_delta(0, (worksheet.costpercapita_m60||0), 0.001); end
  def test_costpercapita_o60; assert_in_delta(0.869767375652915, worksheet.costpercapita_o60, 0.001); end
  def test_costpercapita_p60; assert_in_epsilon(1.430623496307678, worksheet.costpercapita_p60, 0.001); end
  def test_costpercapita_q60; assert_in_epsilon(1.9540239460051594, worksheet.costpercapita_q60, 0.001); end
  def test_costpercapita_r60; assert_in_epsilon(2.21301223544355, worksheet.costpercapita_r60, 0.001); end
  def test_costpercapita_s60; assert_in_epsilon(1.618978024022293, worksheet.costpercapita_s60, 0.001); end
  def test_costpercapita_t60; assert_in_epsilon(1.056019316261324, worksheet.costpercapita_t60, 0.001); end
  def test_costpercapita_u60; assert_in_delta(0.5198682550329926, worksheet.costpercapita_u60, 0.001); end
  def test_costpercapita_v60; assert_in_delta(0.006113829103559086, worksheet.costpercapita_v60, 0.001); end
  def test_costpercapita_w60; assert_in_delta(0.005999734443602492, worksheet.costpercapita_w60, 0.001); end
  def test_costpercapita_y60; assert_in_delta(0, (worksheet.costpercapita_y60||0), 0.001); end
  def test_costpercapita_z60; assert_in_delta(0, (worksheet.costpercapita_z60||0), 0.001); end
  def test_costpercapita_aa60; assert_in_delta(0, (worksheet.costpercapita_aa60||0), 0.001); end
  def test_costpercapita_ab60; assert_in_delta(0, (worksheet.costpercapita_ab60||0), 0.001); end
  def test_costpercapita_ac60; assert_in_delta(0, (worksheet.costpercapita_ac60||0), 0.001); end
  def test_costpercapita_ad60; assert_in_delta(0, (worksheet.costpercapita_ad60||0), 0.001); end
  def test_costpercapita_ae60; assert_in_delta(0, (worksheet.costpercapita_ae60||0), 0.001); end
  def test_costpercapita_af60; assert_in_delta(0, (worksheet.costpercapita_af60||0), 0.001); end
  def test_costpercapita_ag60; assert_in_delta(0, (worksheet.costpercapita_ag60||0), 0.001); end
  def test_costpercapita_ai60; assert_in_epsilon(16.292254651837276, worksheet.costpercapita_ai60, 0.001); end
  def test_costpercapita_aj60; assert_in_epsilon(14.591408915424003, worksheet.costpercapita_aj60, 0.001); end
  def test_costpercapita_ak60; assert_in_epsilon(14.477807788755303, worksheet.costpercapita_ak60, 0.001); end
  def test_costpercapita_al60; assert_in_epsilon(14.149257276592472, worksheet.costpercapita_al60, 0.001); end
  def test_costpercapita_am60; assert_in_epsilon(1.618978024022293, worksheet.costpercapita_am60, 0.001); end
  def test_costpercapita_an60; assert_in_epsilon(1.056019316261324, worksheet.costpercapita_an60, 0.001); end
  def test_costpercapita_ao60; assert_in_delta(0.5198682550329926, worksheet.costpercapita_ao60, 0.001); end
  def test_costpercapita_ap60; assert_in_delta(0.006113829103559086, worksheet.costpercapita_ap60, 0.001); end
  def test_costpercapita_aq60; assert_in_delta(0.005999734443602492, worksheet.costpercapita_aq60, 0.001); end
  def test_costpercapita_as60; assert_in_epsilon(6.968634199052536, worksheet.costpercapita_as60, 0.001); end
  def test_costpercapita_at60; assert_in_epsilon(178.51178410675206, worksheet.costpercapita_at60, 0.001); end
  def test_costpercapita_av60; assert_in_delta(0.07, worksheet.costpercapita_av60, 0.001); end
  def test_costpercapita_aw60; assert_in_epsilon(20, worksheet.costpercapita_aw60, 0.001); end
  def test_costpercapita_ay60; assert_in_epsilon(4.367321088711529, worksheet.costpercapita_ay60, 0.001); end
  def test_costpercapita_az60; assert_in_epsilon(6.211425203947848, worksheet.costpercapita_az60, 0.001); end
  def test_costpercapita_ba60; assert_in_epsilon(5.910782991466499, worksheet.costpercapita_ba60, 0.001); end
  def test_costpercapita_bb60; assert_in_epsilon(5.633485459112372, worksheet.costpercapita_bb60, 0.001); end
  def test_costpercapita_bc60; assert_in_delta(0, (worksheet.costpercapita_bc60||0), 0.001); end
  def test_costpercapita_bd60; assert_in_delta(0, (worksheet.costpercapita_bd60||0), 0.001); end
  def test_costpercapita_be60; assert_in_delta(0, (worksheet.costpercapita_be60||0), 0.001); end
  def test_costpercapita_bf60; assert_in_delta(0, (worksheet.costpercapita_bf60||0), 0.001); end
  def test_costpercapita_bg60; assert_in_delta(0, (worksheet.costpercapita_bg60||0), 0.001); end
  def test_costpercapita_bi60; assert_in_epsilon(4.367321088711529, worksheet.costpercapita_bi60, 0.001); end
  def test_costpercapita_bj60; assert_in_epsilon(10.434733577317568, worksheet.costpercapita_bj60, 0.001); end
  def test_costpercapita_bk60; assert_in_epsilon(16.003902691053227, worksheet.costpercapita_bk60, 0.001); end
  def test_costpercapita_bl60; assert_in_epsilon(21.141851713261254, worksheet.costpercapita_bl60, 0.001); end
  def test_costpercapita_bm60; assert_in_epsilon(16.713843616378234, worksheet.costpercapita_bm60, 0.001); end
  def test_costpercapita_bn60; assert_in_epsilon(10.790548306738975, worksheet.costpercapita_bn60, 0.001); end
  def test_costpercapita_bo60; assert_in_epsilon(5.2363956235212745, worksheet.costpercapita_bo60, 0.001); end
  def test_costpercapita_bp60; assert_in_delta(0, (worksheet.costpercapita_bp60||0), 0.001); end
  def test_costpercapita_bq60; assert_in_delta(0, (worksheet.costpercapita_bq60||0), 0.001); end
  def test_costpercapita_bs60; assert_in_epsilon(5.237088464364445, worksheet.costpercapita_bs60, 0.001); end
  def test_costpercapita_bt60; assert_in_epsilon(11.865357073625246, worksheet.costpercapita_bt60, 0.001); end
  def test_costpercapita_bu60; assert_in_epsilon(17.95792663705839, worksheet.costpercapita_bu60, 0.001); end
  def test_costpercapita_bv60; assert_in_epsilon(23.354863948704804, worksheet.costpercapita_bv60, 0.001); end
  def test_costpercapita_bw60; assert_in_epsilon(18.332821640400528, worksheet.costpercapita_bw60, 0.001); end
  def test_costpercapita_bx60; assert_in_epsilon(11.846567623000299, worksheet.costpercapita_bx60, 0.001); end
  def test_costpercapita_by60; assert_in_epsilon(5.756263878554267, worksheet.costpercapita_by60, 0.001); end
  def test_costpercapita_bz60; assert_in_delta(0.006113829103559086, worksheet.costpercapita_bz60, 0.001); end
  def test_costpercapita_ca60; assert_in_delta(0.005999734443602492, worksheet.costpercapita_ca60, 0.001); end
  def test_costpercapita_cc60; assert_in_epsilon(10.484778092139459, worksheet.costpercapita_cc60, 0.001); end
  def test_costpercapita_cd60; assert_in_epsilon(269.9466670317879, worksheet.costpercapita_cd60, 0.001); end
  def test_costpercapita_cf60; assert_in_epsilon(-11.055166187472834, worksheet.costpercapita_cf60, 0.001); end
  def test_costpercapita_cg60; assert_in_epsilon(-2.7260518417987565, worksheet.costpercapita_cg60, 0.001); end
  def test_costpercapita_ch60; assert_in_epsilon(3.480118848303084, worksheet.costpercapita_ch60, 0.001); end
  def test_costpercapita_ci60; assert_in_epsilon(9.20560667211233, worksheet.costpercapita_ci60, 0.001); end
  def test_costpercapita_cj60; assert_in_epsilon(16.713843616378234, worksheet.costpercapita_cj60, 0.001); end
  def test_costpercapita_ck60; assert_in_epsilon(10.790548306738975, worksheet.costpercapita_ck60, 0.001); end
  def test_costpercapita_cl60; assert_in_epsilon(5.2363956235212745, worksheet.costpercapita_cl60, 0.001); end
  def test_costpercapita_cm60; assert_in_delta(0, (worksheet.costpercapita_cm60||0), 0.001); end
  def test_costpercapita_cn60; assert_in_delta(0, (worksheet.costpercapita_cn60||0), 0.001); end
  def test_costpercapita_cp60; assert_in_epsilon(3.516143893086923, worksheet.costpercapita_cp60, 0.001); end
  def test_costpercapita_cq60; assert_in_epsilon(91.43488292503582, worksheet.costpercapita_cq60, 0.001); end
  def test_costpercapita_cr60; assert_equal("ok", worksheet.costpercapita_cr60); end
  def test_costpercapita_a61; assert_equal("III.a.2", worksheet.costpercapita_a61); end
  def test_costpercapita_b61; assert_equal("Offshore wind", worksheet.costpercapita_b61); end
  def test_costpercapita_c61; assert_equal("Electricity", worksheet.costpercapita_c61); end
  def test_costpercapita_e61; assert_in_epsilon(11.705323134712977, worksheet.costpercapita_e61, 0.001); end
  def test_costpercapita_f61; assert_in_epsilon(17.572655307167363, worksheet.costpercapita_f61, 0.001); end
  def test_costpercapita_g61; assert_in_epsilon(16.707194367436266, worksheet.costpercapita_g61, 0.001); end
  def test_costpercapita_h61; assert_in_epsilon(12.726961102002848, worksheet.costpercapita_h61, 0.001); end
  def test_costpercapita_i61; assert_in_delta(0, (worksheet.costpercapita_i61||0), 0.001); end
  def test_costpercapita_j61; assert_in_delta(0, (worksheet.costpercapita_j61||0), 0.001); end
  def test_costpercapita_k61; assert_in_delta(0, (worksheet.costpercapita_k61||0), 0.001); end
  def test_costpercapita_l61; assert_in_delta(0, (worksheet.costpercapita_l61||0), 0.001); end
  def test_costpercapita_m61; assert_in_delta(0, (worksheet.costpercapita_m61||0), 0.001); end
  def test_costpercapita_o61; assert_in_epsilon(1.583222619409944, worksheet.costpercapita_o61, 0.001); end
  def test_costpercapita_p61; assert_in_epsilon(4.3793111448012425, worksheet.costpercapita_p61, 0.001); end
  def test_costpercapita_q61; assert_in_epsilon(6.990988075240749, worksheet.costpercapita_q61, 0.001); end
  def test_costpercapita_r61; assert_in_epsilon(8.75013160204414, worksheet.costpercapita_r61, 0.001); end
  def test_costpercapita_s61; assert_in_epsilon(7.2710508762038195, worksheet.costpercapita_s61, 0.001); end
  def test_costpercapita_t61; assert_in_epsilon(4.564141851536479, worksheet.costpercapita_t61, 0.001); end
  def test_costpercapita_u61; assert_in_epsilon(1.9852467553188333, worksheet.costpercapita_u61, 0.001); end
  def test_costpercapita_v61; assert_in_delta(0, (worksheet.costpercapita_v61||0), 0.001); end
  def test_costpercapita_w61; assert_in_delta(0, (worksheet.costpercapita_w61||0), 0.001); end
  def test_costpercapita_y61; assert_in_delta(0, (worksheet.costpercapita_y61||0), 0.001); end
  def test_costpercapita_z61; assert_in_delta(0, (worksheet.costpercapita_z61||0), 0.001); end
  def test_costpercapita_aa61; assert_in_delta(0, (worksheet.costpercapita_aa61||0), 0.001); end
  def test_costpercapita_ab61; assert_in_delta(0, (worksheet.costpercapita_ab61||0), 0.001); end
  def test_costpercapita_ac61; assert_in_delta(0, (worksheet.costpercapita_ac61||0), 0.001); end
  def test_costpercapita_ad61; assert_in_delta(0, (worksheet.costpercapita_ad61||0), 0.001); end
  def test_costpercapita_ae61; assert_in_delta(0, (worksheet.costpercapita_ae61||0), 0.001); end
  def test_costpercapita_af61; assert_in_delta(0, (worksheet.costpercapita_af61||0), 0.001); end
  def test_costpercapita_ag61; assert_in_delta(0, (worksheet.costpercapita_ag61||0), 0.001); end
  def test_costpercapita_ai61; assert_in_epsilon(13.288545754122921, worksheet.costpercapita_ai61, 0.001); end
  def test_costpercapita_aj61; assert_in_epsilon(21.95196645196861, worksheet.costpercapita_aj61, 0.001); end
  def test_costpercapita_ak61; assert_in_epsilon(23.698182442677016, worksheet.costpercapita_ak61, 0.001); end
  def test_costpercapita_al61; assert_in_epsilon(21.477092704046992, worksheet.costpercapita_al61, 0.001); end
  def test_costpercapita_am61; assert_in_epsilon(7.2710508762038195, worksheet.costpercapita_am61, 0.001); end
  def test_costpercapita_an61; assert_in_epsilon(4.564141851536479, worksheet.costpercapita_an61, 0.001); end
  def test_costpercapita_ao61; assert_in_epsilon(1.9852467553188333, worksheet.costpercapita_ao61, 0.001); end
  def test_costpercapita_ap61; assert_in_delta(0, (worksheet.costpercapita_ap61||0), 0.001); end
  def test_costpercapita_aq61; assert_in_delta(0, (worksheet.costpercapita_aq61||0), 0.001); end
  def test_costpercapita_as61; assert_in_epsilon(10.470691870652741, worksheet.costpercapita_as61, 0.001); end
  def test_costpercapita_at61; assert_in_epsilon(285.26511976973075, worksheet.costpercapita_at61, 0.001); end
  def test_costpercapita_av61; assert_in_delta(0.07, worksheet.costpercapita_av61, 0.001); end
  def test_costpercapita_aw61; assert_in_epsilon(20, worksheet.costpercapita_aw61, 0.001); end
  def test_costpercapita_ay61; assert_in_epsilon(3.314699092367326, worksheet.costpercapita_ay61, 0.001); end
  def test_costpercapita_az61; assert_in_epsilon(8.293671737606385, worksheet.costpercapita_az61, 0.001); end
  def test_costpercapita_ba61; assert_in_epsilon(7.8852047865177575, worksheet.costpercapita_ba61, 0.001); end
  def test_costpercapita_bb61; assert_in_epsilon(6.006675471193293, worksheet.costpercapita_bb61, 0.001); end
  def test_costpercapita_bc61; assert_in_delta(0, (worksheet.costpercapita_bc61||0), 0.001); end
  def test_costpercapita_bd61; assert_in_delta(0, (worksheet.costpercapita_bd61||0), 0.001); end
  def test_costpercapita_be61; assert_in_delta(0, (worksheet.costpercapita_be61||0), 0.001); end
  def test_costpercapita_bf61; assert_in_delta(0, (worksheet.costpercapita_bf61||0), 0.001); end
  def test_costpercapita_bg61; assert_in_delta(0, (worksheet.costpercapita_bg61||0), 0.001); end
  def test_costpercapita_bi61; assert_in_epsilon(3.314699092367326, worksheet.costpercapita_bi61, 0.001); end
  def test_costpercapita_bj61; assert_in_epsilon(11.499068397856524, worksheet.costpercapita_bj61, 0.001); end
  def test_costpercapita_bk61; assert_in_epsilon(19.007814953162427, worksheet.costpercapita_bk61, 0.001); end
  def test_costpercapita_bl61; assert_in_epsilon(24.425942425967, worksheet.costpercapita_bl61, 0.001); end
  def test_costpercapita_bm61; assert_in_epsilon(20.836247211098843, worksheet.costpercapita_bm61, 0.001); end
  def test_costpercapita_bn61; assert_in_epsilon(12.962170155060619, worksheet.costpercapita_bn61, 0.001); end
  def test_costpercapita_bo61; assert_in_epsilon(5.583280435807678, worksheet.costpercapita_bo61, 0.001); end
  def test_costpercapita_bp61; assert_in_delta(0, (worksheet.costpercapita_bp61||0), 0.001); end
  def test_costpercapita_bq61; assert_in_delta(0, (worksheet.costpercapita_bq61||0), 0.001); end
  def test_costpercapita_bs61; assert_in_epsilon(4.89792171177727, worksheet.costpercapita_bs61, 0.001); end
  def test_costpercapita_bt61; assert_in_epsilon(15.878379542657767, worksheet.costpercapita_bt61, 0.001); end
  def test_costpercapita_bu61; assert_in_epsilon(25.998803028403174, worksheet.costpercapita_bu61, 0.001); end
  def test_costpercapita_bv61; assert_in_epsilon(33.176074028011136, worksheet.costpercapita_bv61, 0.001); end
  def test_costpercapita_bw61; assert_in_epsilon(28.10729808730266, worksheet.costpercapita_bw61, 0.001); end
  def test_costpercapita_bx61; assert_in_epsilon(17.526312006597095, worksheet.costpercapita_bx61, 0.001); end
  def test_costpercapita_by61; assert_in_epsilon(7.5685271911265115, worksheet.costpercapita_by61, 0.001); end
  def test_costpercapita_bz61; assert_in_delta(0, (worksheet.costpercapita_bz61||0), 0.001); end
  def test_costpercapita_ca61; assert_in_delta(0, (worksheet.costpercapita_ca61||0), 0.001); end
  def test_costpercapita_cc61; assert_in_epsilon(14.79481284398618, worksheet.costpercapita_cc61, 0.001); end
  def test_costpercapita_cd61; assert_in_epsilon(384.1037996022143, worksheet.costpercapita_cd61, 0.001); end
  def test_costpercapita_cf61; assert_in_epsilon(-8.390624042345651, worksheet.costpercapita_cf61, 0.001); end
  def test_costpercapita_cg61; assert_in_epsilon(-6.073586909310839, worksheet.costpercapita_cg61, 0.001); end
  def test_costpercapita_ch61; assert_in_epsilon(2.300620585726158, worksheet.costpercapita_ch61, 0.001); end
  def test_costpercapita_ci61; assert_in_epsilon(11.698981323964153, worksheet.costpercapita_ci61, 0.001); end
  def test_costpercapita_cj61; assert_in_epsilon(20.836247211098843, worksheet.costpercapita_cj61, 0.001); end
  def test_costpercapita_ck61; assert_in_epsilon(12.962170155060619, worksheet.costpercapita_ck61, 0.001); end
  def test_costpercapita_cl61; assert_in_epsilon(5.583280435807678, worksheet.costpercapita_cl61, 0.001); end
  def test_costpercapita_cm61; assert_in_delta(0, (worksheet.costpercapita_cm61||0), 0.001); end
  def test_costpercapita_cn61; assert_in_delta(0, (worksheet.costpercapita_cn61||0), 0.001); end
  def test_costpercapita_cp61; assert_in_epsilon(4.32412097333344, worksheet.costpercapita_cp61, 0.001); end
  def test_costpercapita_cq61; assert_in_epsilon(98.83867983248366, worksheet.costpercapita_cq61, 0.001); end
  def test_costpercapita_cr61; assert_equal("ok", worksheet.costpercapita_cr61); end
  def test_costpercapita_a62; assert_equal("III.b", worksheet.costpercapita_a62); end
  def test_costpercapita_b62; assert_equal("Hydroelectric", worksheet.costpercapita_b62); end
  def test_costpercapita_c62; assert_equal("Electricity", worksheet.costpercapita_c62); end
  def test_costpercapita_e62; assert_in_epsilon(1.7041115727715976, worksheet.costpercapita_e62, 0.001); end
  def test_costpercapita_f62; assert_in_delta(0, (worksheet.costpercapita_f62||0), 0.001); end
  def test_costpercapita_g62; assert_in_delta(0, (worksheet.costpercapita_g62||0), 0.001); end
  def test_costpercapita_h62; assert_in_delta(0, (worksheet.costpercapita_h62||0), 0.001); end
  def test_costpercapita_i62; assert_in_delta(0, (worksheet.costpercapita_i62||0), 0.001); end
  def test_costpercapita_j62; assert_in_delta(0, (worksheet.costpercapita_j62||0), 0.001); end
  def test_costpercapita_k62; assert_in_delta(0, (worksheet.costpercapita_k62||0), 0.001); end
  def test_costpercapita_l62; assert_in_delta(0, (worksheet.costpercapita_l62||0), 0.001); end
  def test_costpercapita_m62; assert_in_delta(0, (worksheet.costpercapita_m62||0), 0.001); end
  def test_costpercapita_o62; assert_in_epsilon(2.6644089737145475, worksheet.costpercapita_o62, 0.001); end
  def test_costpercapita_p62; assert_in_epsilon(2.5765499032932064, worksheet.costpercapita_p62, 0.001); end
  def test_costpercapita_q62; assert_in_epsilon(2.4921984249244327, worksheet.costpercapita_q62, 0.001); end
  def test_costpercapita_r62; assert_in_epsilon(2.4150313019178635, worksheet.costpercapita_r62, 0.001); end
  def test_costpercapita_s62; assert_in_epsilon(2.3490522770168827, worksheet.costpercapita_s62, 0.001); end
  def test_costpercapita_t62; assert_in_epsilon(2.2937187161235544, worksheet.costpercapita_t62, 0.001); end
  def test_costpercapita_u62; assert_in_epsilon(2.244801984812815, worksheet.costpercapita_u62, 0.001); end
  def test_costpercapita_v62; assert_in_epsilon(2.200022842359217, worksheet.costpercapita_v62, 0.001); end
  def test_costpercapita_w62; assert_in_epsilon(2.158966598580733, worksheet.costpercapita_w62, 0.001); end
  def test_costpercapita_y62; assert_in_delta(0, (worksheet.costpercapita_y62||0), 0.001); end
  def test_costpercapita_z62; assert_in_delta(0, (worksheet.costpercapita_z62||0), 0.001); end
  def test_costpercapita_aa62; assert_in_delta(0, (worksheet.costpercapita_aa62||0), 0.001); end
  def test_costpercapita_ab62; assert_in_delta(0, (worksheet.costpercapita_ab62||0), 0.001); end
  def test_costpercapita_ac62; assert_in_delta(0, (worksheet.costpercapita_ac62||0), 0.001); end
  def test_costpercapita_ad62; assert_in_delta(0, (worksheet.costpercapita_ad62||0), 0.001); end
  def test_costpercapita_ae62; assert_in_delta(0, (worksheet.costpercapita_ae62||0), 0.001); end
  def test_costpercapita_af62; assert_in_delta(0, (worksheet.costpercapita_af62||0), 0.001); end
  def test_costpercapita_ag62; assert_in_delta(0, (worksheet.costpercapita_ag62||0), 0.001); end
  def test_costpercapita_ai62; assert_in_epsilon(4.368520546486145, worksheet.costpercapita_ai62, 0.001); end
  def test_costpercapita_aj62; assert_in_epsilon(2.5765499032932064, worksheet.costpercapita_aj62, 0.001); end
  def test_costpercapita_ak62; assert_in_epsilon(2.4921984249244327, worksheet.costpercapita_ak62, 0.001); end
  def test_costpercapita_al62; assert_in_epsilon(2.4150313019178635, worksheet.costpercapita_al62, 0.001); end
  def test_costpercapita_am62; assert_in_epsilon(2.3490522770168827, worksheet.costpercapita_am62, 0.001); end
  def test_costpercapita_an62; assert_in_epsilon(2.2937187161235544, worksheet.costpercapita_an62, 0.001); end
  def test_costpercapita_ao62; assert_in_epsilon(2.244801984812815, worksheet.costpercapita_ao62, 0.001); end
  def test_costpercapita_ap62; assert_in_epsilon(2.200022842359217, worksheet.costpercapita_ap62, 0.001); end
  def test_costpercapita_aq62; assert_in_epsilon(2.158966598580733, worksheet.costpercapita_aq62, 0.001); end
  def test_costpercapita_as62; assert_in_epsilon(2.5665402883905393, worksheet.costpercapita_as62, 0.001); end
  def test_costpercapita_at62; assert_in_epsilon(52.253782993243114, worksheet.costpercapita_at62, 0.001); end
  def test_costpercapita_av62; assert_in_delta(0.07, worksheet.costpercapita_av62, 0.001); end
  def test_costpercapita_aw62; assert_in_epsilon(30, worksheet.costpercapita_aw62, 0.001); end
  def test_costpercapita_ay62; assert_in_delta(0.41198466849397897, worksheet.costpercapita_ay62, 0.001); end
  def test_costpercapita_az62; assert_in_delta(0, (worksheet.costpercapita_az62||0), 0.001); end
  def test_costpercapita_ba62; assert_in_delta(0, (worksheet.costpercapita_ba62||0), 0.001); end
  def test_costpercapita_bb62; assert_in_delta(0, (worksheet.costpercapita_bb62||0), 0.001); end
  def test_costpercapita_bc62; assert_in_delta(0, (worksheet.costpercapita_bc62||0), 0.001); end
  def test_costpercapita_bd62; assert_in_delta(0, (worksheet.costpercapita_bd62||0), 0.001); end
  def test_costpercapita_be62; assert_in_delta(0, (worksheet.costpercapita_be62||0), 0.001); end
  def test_costpercapita_bf62; assert_in_delta(0, (worksheet.costpercapita_bf62||0), 0.001); end
  def test_costpercapita_bg62; assert_in_delta(0, (worksheet.costpercapita_bg62||0), 0.001); end
  def test_costpercapita_bi62; assert_in_delta(0.41198466849397897, worksheet.costpercapita_bi62, 0.001); end
  def test_costpercapita_bj62; assert_in_delta(0.39839944552002143, worksheet.costpercapita_bj62, 0.001); end
  def test_costpercapita_bk62; assert_in_delta(0.38535658453449945, worksheet.costpercapita_bk62, 0.001); end
  def test_costpercapita_bl62; assert_in_delta(0.37342460565883395, worksheet.costpercapita_bl62, 0.001); end
  def test_costpercapita_bm62; assert_in_delta(0.3632225882622739, worksheet.costpercapita_bm62, 0.001); end
  def test_costpercapita_bn62; assert_in_delta(0.3546666274596619, worksheet.costpercapita_bn62, 0.001); end
  def test_costpercapita_bo62; assert_in_delta(0, (worksheet.costpercapita_bo62||0), 0.001); end
  def test_costpercapita_bp62; assert_in_delta(0, (worksheet.costpercapita_bp62||0), 0.001); end
  def test_costpercapita_bq62; assert_in_delta(0, (worksheet.costpercapita_bq62||0), 0.001); end
  def test_costpercapita_bs62; assert_in_epsilon(3.0763936422085263, worksheet.costpercapita_bs62, 0.001); end
  def test_costpercapita_bt62; assert_in_epsilon(2.9749493488132277, worksheet.costpercapita_bt62, 0.001); end
  def test_costpercapita_bu62; assert_in_epsilon(2.877555009458932, worksheet.costpercapita_bu62, 0.001); end
  def test_costpercapita_bv62; assert_in_epsilon(2.7884559075766973, worksheet.costpercapita_bv62, 0.001); end
  def test_costpercapita_bw62; assert_in_epsilon(2.712274865279156, worksheet.costpercapita_bw62, 0.001); end
  def test_costpercapita_bx62; assert_in_epsilon(2.648385343583216, worksheet.costpercapita_bx62, 0.001); end
  def test_costpercapita_by62; assert_in_epsilon(2.244801984812815, worksheet.costpercapita_by62, 0.001); end
  def test_costpercapita_bz62; assert_in_epsilon(2.200022842359217, worksheet.costpercapita_bz62, 0.001); end
  def test_costpercapita_ca62; assert_in_epsilon(2.158966598580733, worksheet.costpercapita_ca62, 0.001); end
  def test_costpercapita_cc62; assert_in_epsilon(2.6313117269636135, worksheet.costpercapita_cc62, 0.001); end
  def test_costpercapita_cd62; assert_in_epsilon(56.782362170884156, worksheet.costpercapita_cd62, 0.001); end
  def test_costpercapita_cf62; assert_in_epsilon(-1.2921269042776187, worksheet.costpercapita_cf62, 0.001); end
  def test_costpercapita_cg62; assert_in_delta(0.39839944552002143, worksheet.costpercapita_cg62, 0.001); end
  def test_costpercapita_ch62; assert_in_delta(0.38535658453449945, worksheet.costpercapita_ch62, 0.001); end
  def test_costpercapita_ci62; assert_in_delta(0.37342460565883395, worksheet.costpercapita_ci62, 0.001); end
  def test_costpercapita_cj62; assert_in_delta(0.3632225882622739, worksheet.costpercapita_cj62, 0.001); end
  def test_costpercapita_ck62; assert_in_delta(0.3546666274596619, worksheet.costpercapita_ck62, 0.001); end
  def test_costpercapita_cl62; assert_in_delta(0, (worksheet.costpercapita_cl62||0), 0.001); end
  def test_costpercapita_cm62; assert_in_delta(0, (worksheet.costpercapita_cm62||0), 0.001); end
  def test_costpercapita_cn62; assert_in_delta(0, (worksheet.costpercapita_cn62||0), 0.001); end
  def test_costpercapita_cp62; assert_in_delta(0.06477143857307467, worksheet.costpercapita_cp62, 0.001); end
  def test_costpercapita_cq62; assert_in_epsilon(4.528579177641039, worksheet.costpercapita_cq62, 0.001); end
  def test_costpercapita_cr62; assert_equal("ok", worksheet.costpercapita_cr62); end
  def test_costpercapita_a63; assert_equal("III.c", worksheet.costpercapita_a63); end
  def test_costpercapita_b63; assert_equal("Wave and Tidal", worksheet.costpercapita_b63); end
  def test_costpercapita_c63; assert_equal("Electricity", worksheet.costpercapita_c63); end
  def test_costpercapita_e63; assert_in_delta(0.03695638113144954, worksheet.costpercapita_e63, 0.001); end
  def test_costpercapita_f63; assert_in_delta(0.08715075100571623, worksheet.costpercapita_f63, 0.001); end
  def test_costpercapita_g63; assert_in_epsilon(1.3494408789524168, worksheet.costpercapita_g63, 0.001); end
  def test_costpercapita_h63; assert_in_epsilon(2.0457091727267356, worksheet.costpercapita_h63, 0.001); end
  def test_costpercapita_i63; assert_in_delta(0, (worksheet.costpercapita_i63||0), 0.001); end
  def test_costpercapita_j63; assert_in_delta(0, (worksheet.costpercapita_j63||0), 0.001); end
  def test_costpercapita_k63; assert_in_delta(0.0764175375020142, worksheet.costpercapita_k63, 0.001); end
  def test_costpercapita_l63; assert_in_epsilon(1.0926346297851943, worksheet.costpercapita_l63, 0.001); end
  def test_costpercapita_m63; assert_in_epsilon(2.1782304932851195, worksheet.costpercapita_m63, 0.001); end
  def test_costpercapita_o63; assert_in_delta(0.0016129478578417319, worksheet.costpercapita_o63, 0.001); end
  def test_costpercapita_p63; assert_in_delta(0.01267324122884587, worksheet.costpercapita_p63, 0.001); end
  def test_costpercapita_q63; assert_in_delta(0.3435523380869643, worksheet.costpercapita_q63, 0.001); end
  def test_costpercapita_r63; assert_in_delta(0.8322869098517341, worksheet.costpercapita_r63, 0.001); end
  def test_costpercapita_s63; assert_in_delta(0.8095487040544598, worksheet.costpercapita_s63, 0.001); end
  def test_costpercapita_t63; assert_in_delta(0, (worksheet.costpercapita_t63||0), 0.001); end
  def test_costpercapita_u63; assert_in_delta(0, (worksheet.costpercapita_u63||0), 0.001); end
  def test_costpercapita_v63; assert_in_delta(0, (worksheet.costpercapita_v63||0), 0.001); end
  def test_costpercapita_w63; assert_in_delta(0, (worksheet.costpercapita_w63||0), 0.001); end
  def test_costpercapita_y63; assert_in_delta(0, (worksheet.costpercapita_y63||0), 0.001); end
  def test_costpercapita_z63; assert_in_delta(0, (worksheet.costpercapita_z63||0), 0.001); end
  def test_costpercapita_aa63; assert_in_delta(0, (worksheet.costpercapita_aa63||0), 0.001); end
  def test_costpercapita_ab63; assert_in_delta(0, (worksheet.costpercapita_ab63||0), 0.001); end
  def test_costpercapita_ac63; assert_in_delta(0, (worksheet.costpercapita_ac63||0), 0.001); end
  def test_costpercapita_ad63; assert_in_delta(0, (worksheet.costpercapita_ad63||0), 0.001); end
  def test_costpercapita_ae63; assert_in_delta(0, (worksheet.costpercapita_ae63||0), 0.001); end
  def test_costpercapita_af63; assert_in_delta(0, (worksheet.costpercapita_af63||0), 0.001); end
  def test_costpercapita_ag63; assert_in_delta(0, (worksheet.costpercapita_ag63||0), 0.001); end
  def test_costpercapita_ai63; assert_in_delta(0.03856932898929128, worksheet.costpercapita_ai63, 0.001); end
  def test_costpercapita_aj63; assert_in_delta(0.0998239922345621, worksheet.costpercapita_aj63, 0.001); end
  def test_costpercapita_ak63; assert_in_epsilon(1.692993217039381, worksheet.costpercapita_ak63, 0.001); end
  def test_costpercapita_al63; assert_in_epsilon(2.87799608257847, worksheet.costpercapita_al63, 0.001); end
  def test_costpercapita_am63; assert_in_delta(0.8095487040544598, worksheet.costpercapita_am63, 0.001); end
  def test_costpercapita_an63; assert_in_delta(0, (worksheet.costpercapita_an63||0), 0.001); end
  def test_costpercapita_ao63; assert_in_delta(0.0764175375020142, worksheet.costpercapita_ao63, 0.001); end
  def test_costpercapita_ap63; assert_in_epsilon(1.0926346297851943, worksheet.costpercapita_ap63, 0.001); end
  def test_costpercapita_aq63; assert_in_epsilon(2.1782304932851195, worksheet.costpercapita_aq63, 0.001); end
  def test_costpercapita_as63; assert_in_delta(0.985134887274277, worksheet.costpercapita_as63, 0.001); end
  def test_costpercapita_at63; assert_in_epsilon(21.78570587615355, worksheet.costpercapita_at63, 0.001); end
  def test_costpercapita_av63; assert_in_delta(0.07, worksheet.costpercapita_av63, 0.001); end
  def test_costpercapita_aw63; assert_in_epsilon(30, worksheet.costpercapita_aw63, 0.001); end
  def test_costpercapita_ay63; assert_in_delta(0.008934545526508228, worksheet.costpercapita_ay63, 0.001); end
  def test_costpercapita_az63; assert_in_delta(0.035115827934215145, worksheet.costpercapita_az63, 0.001); end
  def test_costpercapita_ba63; assert_in_delta(0.5437329359282402, worksheet.costpercapita_ba63, 0.001); end
  def test_costpercapita_bb63; assert_in_delta(0.8242817242986911, worksheet.costpercapita_bb63, 0.001); end
  def test_costpercapita_bc63; assert_in_delta(0, (worksheet.costpercapita_bc63||0), 0.001); end
  def test_costpercapita_bd63; assert_in_delta(0, (worksheet.costpercapita_bd63||0), 0.001); end
  def test_costpercapita_be63; assert_in_delta(0.030791072562313945, worksheet.costpercapita_be63, 0.001); end
  def test_costpercapita_bf63; assert_in_delta(0.44025747583041647, worksheet.costpercapita_bf63, 0.001); end
  def test_costpercapita_bg63; assert_in_delta(0.8776788073604072, worksheet.costpercapita_bg63, 0.001); end
  def test_costpercapita_bi63; assert_in_delta(0.008934545526508228, worksheet.costpercapita_bi63, 0.001); end
  def test_costpercapita_bj63; assert_in_delta(0.04375575620326016, worksheet.costpercapita_bj63, 0.001); end
  def test_costpercapita_bk63; assert_in_delta(0.5860562096019863, worksheet.costpercapita_bk63, 0.001); end
  def test_costpercapita_bl63; assert_in_epsilon(1.3921915972515435, worksheet.costpercapita_bl63, 0.001); end
  def test_costpercapita_bm63; assert_in_epsilon(1.3541567096751173, worksheet.costpercapita_bm63, 0.001); end
  def test_costpercapita_bn63; assert_in_epsilon(1.3222586061347938, worksheet.costpercapita_bn63, 0.001); end
  def test_costpercapita_bo63; assert_in_epsilon(1.3173232008264246, worksheet.costpercapita_bo63, 0.001); end
  def test_costpercapita_bp63; assert_in_epsilon(1.701318675425751, worksheet.costpercapita_bp63, 0.001); end
  def test_costpercapita_bq63; assert_in_epsilon(2.0762175135966427, worksheet.costpercapita_bq63, 0.001); end
  def test_costpercapita_bs63; assert_in_delta(0.010547493384349961, worksheet.costpercapita_bs63, 0.001); end
  def test_costpercapita_bt63; assert_in_delta(0.056428997432106026, worksheet.costpercapita_bt63, 0.001); end
  def test_costpercapita_bu63; assert_in_delta(0.9296085476889506, worksheet.costpercapita_bu63, 0.001); end
  def test_costpercapita_bv63; assert_in_epsilon(2.2244785071032775, worksheet.costpercapita_bv63, 0.001); end
  def test_costpercapita_bw63; assert_in_epsilon(2.163705413729577, worksheet.costpercapita_bw63, 0.001); end
  def test_costpercapita_bx63; assert_in_epsilon(1.3222586061347938, worksheet.costpercapita_bx63, 0.001); end
  def test_costpercapita_by63; assert_in_epsilon(1.3173232008264246, worksheet.costpercapita_by63, 0.001); end
  def test_costpercapita_bz63; assert_in_epsilon(1.701318675425751, worksheet.costpercapita_bz63, 0.001); end
  def test_costpercapita_ca63; assert_in_epsilon(2.0762175135966427, worksheet.costpercapita_ca63, 0.001); end
  def test_costpercapita_cc63; assert_in_epsilon(1.3113207728135414, worksheet.costpercapita_cc63, 0.001); end
  def test_costpercapita_cd63; assert_in_epsilon(26.129679065481724, worksheet.costpercapita_cd63, 0.001); end
  def test_costpercapita_cf63; assert_in_delta(-0.028021835604941318, worksheet.costpercapita_cf63, 0.001); end
  def test_costpercapita_cg63; assert_in_delta(-0.04339499480245608, worksheet.costpercapita_cg63, 0.001); end
  def test_costpercapita_ch63; assert_in_delta(-0.7633846693504305, worksheet.costpercapita_ch63, 0.001); end
  def test_costpercapita_ci63; assert_in_delta(-0.6535175754751922, worksheet.costpercapita_ci63, 0.001); end
  def test_costpercapita_cj63; assert_in_epsilon(1.3541567096751173, worksheet.costpercapita_cj63, 0.001); end
  def test_costpercapita_ck63; assert_in_epsilon(1.3222586061347938, worksheet.costpercapita_ck63, 0.001); end
  def test_costpercapita_cl63; assert_in_epsilon(1.2409056633244104, worksheet.costpercapita_cl63, 0.001); end
  def test_costpercapita_cm63; assert_in_delta(0.6086840456405567, worksheet.costpercapita_cm63, 0.001); end
  def test_costpercapita_cn63; assert_in_delta(-0.10201297968847647, worksheet.costpercapita_cn63, 0.001); end
  def test_costpercapita_cp63; assert_in_delta(0.32618588553926464, worksheet.costpercapita_cp63, 0.001); end
  def test_costpercapita_cq63; assert_in_epsilon(4.343973189328173, worksheet.costpercapita_cq63, 0.001); end
  def test_costpercapita_cr63; assert_equal("ok", worksheet.costpercapita_cr63); end
  def test_costpercapita_a64; assert_equal("III.d", worksheet.costpercapita_a64); end
  def test_costpercapita_b64; assert_equal("Geothermal", worksheet.costpercapita_b64); end
  def test_costpercapita_c64; assert_equal("Electricity", worksheet.costpercapita_c64); end
  def test_costpercapita_e64; assert_in_delta(0, (worksheet.costpercapita_e64||0), 0.001); end
  def test_costpercapita_f64; assert_in_delta(0, (worksheet.costpercapita_f64||0), 0.001); end
  def test_costpercapita_g64; assert_in_delta(0, (worksheet.costpercapita_g64||0), 0.001); end
  def test_costpercapita_h64; assert_in_delta(0, (worksheet.costpercapita_h64||0), 0.001); end
  def test_costpercapita_i64; assert_in_delta(0, (worksheet.costpercapita_i64||0), 0.001); end
  def test_costpercapita_j64; assert_in_delta(0, (worksheet.costpercapita_j64||0), 0.001); end
  def test_costpercapita_k64; assert_in_delta(0, (worksheet.costpercapita_k64||0), 0.001); end
  def test_costpercapita_l64; assert_in_delta(0, (worksheet.costpercapita_l64||0), 0.001); end
  def test_costpercapita_m64; assert_in_delta(0, (worksheet.costpercapita_m64||0), 0.001); end
  def test_costpercapita_o64; assert_in_delta(0, (worksheet.costpercapita_o64||0), 0.001); end
  def test_costpercapita_p64; assert_in_delta(0, (worksheet.costpercapita_p64||0), 0.001); end
  def test_costpercapita_q64; assert_in_delta(0, (worksheet.costpercapita_q64||0), 0.001); end
  def test_costpercapita_r64; assert_in_delta(0, (worksheet.costpercapita_r64||0), 0.001); end
  def test_costpercapita_s64; assert_in_delta(0, (worksheet.costpercapita_s64||0), 0.001); end
  def test_costpercapita_t64; assert_in_delta(0, (worksheet.costpercapita_t64||0), 0.001); end
  def test_costpercapita_u64; assert_in_delta(0, (worksheet.costpercapita_u64||0), 0.001); end
  def test_costpercapita_v64; assert_in_delta(0, (worksheet.costpercapita_v64||0), 0.001); end
  def test_costpercapita_w64; assert_in_delta(0, (worksheet.costpercapita_w64||0), 0.001); end
  def test_costpercapita_y64; assert_in_delta(0, (worksheet.costpercapita_y64||0), 0.001); end
  def test_costpercapita_z64; assert_in_delta(0, (worksheet.costpercapita_z64||0), 0.001); end
  def test_costpercapita_aa64; assert_in_delta(0, (worksheet.costpercapita_aa64||0), 0.001); end
  def test_costpercapita_ab64; assert_in_delta(0, (worksheet.costpercapita_ab64||0), 0.001); end
  def test_costpercapita_ac64; assert_in_delta(0, (worksheet.costpercapita_ac64||0), 0.001); end
  def test_costpercapita_ad64; assert_in_delta(0, (worksheet.costpercapita_ad64||0), 0.001); end
  def test_costpercapita_ae64; assert_in_delta(0, (worksheet.costpercapita_ae64||0), 0.001); end
  def test_costpercapita_af64; assert_in_delta(0, (worksheet.costpercapita_af64||0), 0.001); end
  def test_costpercapita_ag64; assert_in_delta(0, (worksheet.costpercapita_ag64||0), 0.001); end
  def test_costpercapita_ai64; assert_in_delta(0, (worksheet.costpercapita_ai64||0), 0.001); end
  def test_costpercapita_aj64; assert_in_delta(0, (worksheet.costpercapita_aj64||0), 0.001); end
  def test_costpercapita_ak64; assert_in_delta(0, (worksheet.costpercapita_ak64||0), 0.001); end
  def test_costpercapita_al64; assert_in_delta(0, (worksheet.costpercapita_al64||0), 0.001); end
  def test_costpercapita_am64; assert_in_delta(0, (worksheet.costpercapita_am64||0), 0.001); end
  def test_costpercapita_an64; assert_in_delta(0, (worksheet.costpercapita_an64||0), 0.001); end
  def test_costpercapita_ao64; assert_in_delta(0, (worksheet.costpercapita_ao64||0), 0.001); end
  def test_costpercapita_ap64; assert_in_delta(0, (worksheet.costpercapita_ap64||0), 0.001); end
  def test_costpercapita_aq64; assert_in_delta(0, (worksheet.costpercapita_aq64||0), 0.001); end
  def test_costpercapita_as64; assert_in_delta(0, (worksheet.costpercapita_as64||0), 0.001); end
  def test_costpercapita_at64; assert_in_delta(0, (worksheet.costpercapita_at64||0), 0.001); end
  def test_costpercapita_av64; assert_in_delta(0.07, worksheet.costpercapita_av64, 0.001); end
  def test_costpercapita_aw64; assert_in_epsilon(25, worksheet.costpercapita_aw64, 0.001); end
  def test_costpercapita_ay64; assert_in_delta(0, (worksheet.costpercapita_ay64||0), 0.001); end
  def test_costpercapita_az64; assert_in_delta(0, (worksheet.costpercapita_az64||0), 0.001); end
  def test_costpercapita_ba64; assert_in_delta(0, (worksheet.costpercapita_ba64||0), 0.001); end
  def test_costpercapita_bb64; assert_in_delta(0, (worksheet.costpercapita_bb64||0), 0.001); end
  def test_costpercapita_bc64; assert_in_delta(0, (worksheet.costpercapita_bc64||0), 0.001); end
  def test_costpercapita_bd64; assert_in_delta(0, (worksheet.costpercapita_bd64||0), 0.001); end
  def test_costpercapita_be64; assert_in_delta(0, (worksheet.costpercapita_be64||0), 0.001); end
  def test_costpercapita_bf64; assert_in_delta(0, (worksheet.costpercapita_bf64||0), 0.001); end
  def test_costpercapita_bg64; assert_in_delta(0, (worksheet.costpercapita_bg64||0), 0.001); end
  def test_costpercapita_bi64; assert_in_delta(0, (worksheet.costpercapita_bi64||0), 0.001); end
  def test_costpercapita_bj64; assert_in_delta(0, (worksheet.costpercapita_bj64||0), 0.001); end
  def test_costpercapita_bk64; assert_in_delta(0, (worksheet.costpercapita_bk64||0), 0.001); end
  def test_costpercapita_bl64; assert_in_delta(0, (worksheet.costpercapita_bl64||0), 0.001); end
  def test_costpercapita_bm64; assert_in_delta(0, (worksheet.costpercapita_bm64||0), 0.001); end
  def test_costpercapita_bn64; assert_in_delta(0, (worksheet.costpercapita_bn64||0), 0.001); end
  def test_costpercapita_bo64; assert_in_delta(0, (worksheet.costpercapita_bo64||0), 0.001); end
  def test_costpercapita_bp64; assert_in_delta(0, (worksheet.costpercapita_bp64||0), 0.001); end
  def test_costpercapita_bq64; assert_in_delta(0, (worksheet.costpercapita_bq64||0), 0.001); end
  def test_costpercapita_bs64; assert_in_delta(0, (worksheet.costpercapita_bs64||0), 0.001); end
  def test_costpercapita_bt64; assert_in_delta(0, (worksheet.costpercapita_bt64||0), 0.001); end
  def test_costpercapita_bu64; assert_in_delta(0, (worksheet.costpercapita_bu64||0), 0.001); end
  def test_costpercapita_bv64; assert_in_delta(0, (worksheet.costpercapita_bv64||0), 0.001); end
  def test_costpercapita_bw64; assert_in_delta(0, (worksheet.costpercapita_bw64||0), 0.001); end
  def test_costpercapita_bx64; assert_in_delta(0, (worksheet.costpercapita_bx64||0), 0.001); end
  def test_costpercapita_by64; assert_in_delta(0, (worksheet.costpercapita_by64||0), 0.001); end
  def test_costpercapita_bz64; assert_in_delta(0, (worksheet.costpercapita_bz64||0), 0.001); end
  def test_costpercapita_ca64; assert_in_delta(0, (worksheet.costpercapita_ca64||0), 0.001); end
  def test_costpercapita_cc64; assert_in_delta(0, (worksheet.costpercapita_cc64||0), 0.001); end
  def test_costpercapita_cd64; assert_in_delta(0, (worksheet.costpercapita_cd64||0), 0.001); end
  def test_costpercapita_cf64; assert_in_delta(0, (worksheet.costpercapita_cf64||0), 0.001); end
  def test_costpercapita_cg64; assert_in_delta(0, (worksheet.costpercapita_cg64||0), 0.001); end
  def test_costpercapita_ch64; assert_in_delta(0, (worksheet.costpercapita_ch64||0), 0.001); end
  def test_costpercapita_ci64; assert_in_delta(0, (worksheet.costpercapita_ci64||0), 0.001); end
  def test_costpercapita_cj64; assert_in_delta(0, (worksheet.costpercapita_cj64||0), 0.001); end
  def test_costpercapita_ck64; assert_in_delta(0, (worksheet.costpercapita_ck64||0), 0.001); end
  def test_costpercapita_cl64; assert_in_delta(0, (worksheet.costpercapita_cl64||0), 0.001); end
  def test_costpercapita_cm64; assert_in_delta(0, (worksheet.costpercapita_cm64||0), 0.001); end
  def test_costpercapita_cn64; assert_in_delta(0, (worksheet.costpercapita_cn64||0), 0.001); end
  def test_costpercapita_cp64; assert_in_delta(0, (worksheet.costpercapita_cp64||0), 0.001); end
  def test_costpercapita_cq64; assert_in_delta(0, (worksheet.costpercapita_cq64||0), 0.001); end
  def test_costpercapita_cr64; assert_equal("ok", worksheet.costpercapita_cr64); end
  def test_costpercapita_a65; assert_equal("IV.a", worksheet.costpercapita_a65); end
  def test_costpercapita_b65; assert_equal("Distributed solar PV", worksheet.costpercapita_b65); end
  def test_costpercapita_c65; assert_equal("Electricity", worksheet.costpercapita_c65); end
  def test_costpercapita_e65; assert_in_delta(0.231788165858311, worksheet.costpercapita_e65, 0.001); end
  def test_costpercapita_f65; assert_in_delta(0, (worksheet.costpercapita_f65||0), 0.001); end
  def test_costpercapita_g65; assert_in_delta(0, (worksheet.costpercapita_g65||0), 0.001); end
  def test_costpercapita_h65; assert_in_delta(0, (worksheet.costpercapita_h65||0), 0.001); end
  def test_costpercapita_i65; assert_in_delta(0, (worksheet.costpercapita_i65||0), 0.001); end
  def test_costpercapita_j65; assert_in_delta(0, (worksheet.costpercapita_j65||0), 0.001); end
  def test_costpercapita_k65; assert_in_delta(0, (worksheet.costpercapita_k65||0), 0.001); end
  def test_costpercapita_l65; assert_in_delta(0, (worksheet.costpercapita_l65||0), 0.001); end
  def test_costpercapita_m65; assert_in_delta(0, (worksheet.costpercapita_m65||0), 0.001); end
  def test_costpercapita_o65; assert_in_delta(0, (worksheet.costpercapita_o65||0), 0.001); end
  def test_costpercapita_p65; assert_in_delta(0, (worksheet.costpercapita_p65||0), 0.001); end
  def test_costpercapita_q65; assert_in_delta(0, (worksheet.costpercapita_q65||0), 0.001); end
  def test_costpercapita_r65; assert_in_delta(0, (worksheet.costpercapita_r65||0), 0.001); end
  def test_costpercapita_s65; assert_in_delta(0, (worksheet.costpercapita_s65||0), 0.001); end
  def test_costpercapita_t65; assert_in_delta(0, (worksheet.costpercapita_t65||0), 0.001); end
  def test_costpercapita_u65; assert_in_delta(0, (worksheet.costpercapita_u65||0), 0.001); end
  def test_costpercapita_v65; assert_in_delta(0, (worksheet.costpercapita_v65||0), 0.001); end
  def test_costpercapita_w65; assert_in_delta(0, (worksheet.costpercapita_w65||0), 0.001); end
  def test_costpercapita_y65; assert_in_delta(0, (worksheet.costpercapita_y65||0), 0.001); end
  def test_costpercapita_z65; assert_in_delta(0, (worksheet.costpercapita_z65||0), 0.001); end
  def test_costpercapita_aa65; assert_in_delta(0, (worksheet.costpercapita_aa65||0), 0.001); end
  def test_costpercapita_ab65; assert_in_delta(0, (worksheet.costpercapita_ab65||0), 0.001); end
  def test_costpercapita_ac65; assert_in_delta(0, (worksheet.costpercapita_ac65||0), 0.001); end
  def test_costpercapita_ad65; assert_in_delta(0, (worksheet.costpercapita_ad65||0), 0.001); end
  def test_costpercapita_ae65; assert_in_delta(0, (worksheet.costpercapita_ae65||0), 0.001); end
  def test_costpercapita_af65; assert_in_delta(0, (worksheet.costpercapita_af65||0), 0.001); end
  def test_costpercapita_ag65; assert_in_delta(0, (worksheet.costpercapita_ag65||0), 0.001); end
  def test_costpercapita_ai65; assert_in_delta(0.231788165858311, worksheet.costpercapita_ai65, 0.001); end
  def test_costpercapita_aj65; assert_in_delta(0, (worksheet.costpercapita_aj65||0), 0.001); end
  def test_costpercapita_ak65; assert_in_delta(0, (worksheet.costpercapita_ak65||0), 0.001); end
  def test_costpercapita_al65; assert_in_delta(0, (worksheet.costpercapita_al65||0), 0.001); end
  def test_costpercapita_am65; assert_in_delta(0, (worksheet.costpercapita_am65||0), 0.001); end
  def test_costpercapita_an65; assert_in_delta(0, (worksheet.costpercapita_an65||0), 0.001); end
  def test_costpercapita_ao65; assert_in_delta(0, (worksheet.costpercapita_ao65||0), 0.001); end
  def test_costpercapita_ap65; assert_in_delta(0, (worksheet.costpercapita_ap65||0), 0.001); end
  def test_costpercapita_aq65; assert_in_delta(0, (worksheet.costpercapita_aq65||0), 0.001); end
  def test_costpercapita_as65; assert_in_delta(0.025754240650923445, worksheet.costpercapita_as65, 0.001); end
  def test_costpercapita_at65; assert_in_delta(0.231788165858311, worksheet.costpercapita_at65, 0.001); end
  def test_costpercapita_av65; assert_in_delta(0.07, worksheet.costpercapita_av65, 0.001); end
  def test_costpercapita_aw65; assert_in_epsilon(25, worksheet.costpercapita_aw65, 0.001); end
  def test_costpercapita_ay65; assert_in_delta(0.05966958719379329, worksheet.costpercapita_ay65, 0.001); end
  def test_costpercapita_az65; assert_in_delta(0, (worksheet.costpercapita_az65||0), 0.001); end
  def test_costpercapita_ba65; assert_in_delta(0, (worksheet.costpercapita_ba65||0), 0.001); end
  def test_costpercapita_bb65; assert_in_delta(0, (worksheet.costpercapita_bb65||0), 0.001); end
  def test_costpercapita_bc65; assert_in_delta(0, (worksheet.costpercapita_bc65||0), 0.001); end
  def test_costpercapita_bd65; assert_in_delta(0, (worksheet.costpercapita_bd65||0), 0.001); end
  def test_costpercapita_be65; assert_in_delta(0, (worksheet.costpercapita_be65||0), 0.001); end
  def test_costpercapita_bf65; assert_in_delta(0, (worksheet.costpercapita_bf65||0), 0.001); end
  def test_costpercapita_bg65; assert_in_delta(0, (worksheet.costpercapita_bg65||0), 0.001); end
  def test_costpercapita_bi65; assert_in_delta(0.05966958719379329, worksheet.costpercapita_bi65, 0.001); end
  def test_costpercapita_bj65; assert_in_delta(0.05770197842389673, worksheet.costpercapita_bj65, 0.001); end
  def test_costpercapita_bk65; assert_in_delta(0.05581292237315317, worksheet.costpercapita_bk65, 0.001); end
  def test_costpercapita_bl65; assert_in_delta(0.054084760360429085, worksheet.costpercapita_bl65, 0.001); end
  def test_costpercapita_bm65; assert_in_delta(0.052607156427200354, worksheet.costpercapita_bm65, 0.001); end
  def test_costpercapita_bn65; assert_in_delta(0, (worksheet.costpercapita_bn65||0), 0.001); end
  def test_costpercapita_bo65; assert_in_delta(0, (worksheet.costpercapita_bo65||0), 0.001); end
  def test_costpercapita_bp65; assert_in_delta(0, (worksheet.costpercapita_bp65||0), 0.001); end
  def test_costpercapita_bq65; assert_in_delta(0, (worksheet.costpercapita_bq65||0), 0.001); end
  def test_costpercapita_bs65; assert_in_delta(0.05966958719379329, worksheet.costpercapita_bs65, 0.001); end
  def test_costpercapita_bt65; assert_in_delta(0.05770197842389673, worksheet.costpercapita_bt65, 0.001); end
  def test_costpercapita_bu65; assert_in_delta(0.05581292237315317, worksheet.costpercapita_bu65, 0.001); end
  def test_costpercapita_bv65; assert_in_delta(0.054084760360429085, worksheet.costpercapita_bv65, 0.001); end
  def test_costpercapita_bw65; assert_in_delta(0.052607156427200354, worksheet.costpercapita_bw65, 0.001); end
  def test_costpercapita_bx65; assert_in_delta(0, (worksheet.costpercapita_bx65||0), 0.001); end
  def test_costpercapita_by65; assert_in_delta(0, (worksheet.costpercapita_by65||0), 0.001); end
  def test_costpercapita_bz65; assert_in_delta(0, (worksheet.costpercapita_bz65||0), 0.001); end
  def test_costpercapita_ca65; assert_in_delta(0, (worksheet.costpercapita_ca65||0), 0.001); end
  def test_costpercapita_cc65; assert_in_delta(0.031097378308719184, worksheet.costpercapita_cc65, 0.001); end
  def test_costpercapita_cd65; assert_in_delta(0.7940275691588131, worksheet.costpercapita_cd65, 0.001); end
  def test_costpercapita_cf65; assert_in_delta(-0.1721185786645177, worksheet.costpercapita_cf65, 0.001); end
  def test_costpercapita_cg65; assert_in_delta(0.05770197842389673, worksheet.costpercapita_cg65, 0.001); end
  def test_costpercapita_ch65; assert_in_delta(0.05581292237315317, worksheet.costpercapita_ch65, 0.001); end
  def test_costpercapita_ci65; assert_in_delta(0.054084760360429085, worksheet.costpercapita_ci65, 0.001); end
  def test_costpercapita_cj65; assert_in_delta(0.052607156427200354, worksheet.costpercapita_cj65, 0.001); end
  def test_costpercapita_ck65; assert_in_delta(0, (worksheet.costpercapita_ck65||0), 0.001); end
  def test_costpercapita_cl65; assert_in_delta(0, (worksheet.costpercapita_cl65||0), 0.001); end
  def test_costpercapita_cm65; assert_in_delta(0, (worksheet.costpercapita_cm65||0), 0.001); end
  def test_costpercapita_cn65; assert_in_delta(0, (worksheet.costpercapita_cn65||0), 0.001); end
  def test_costpercapita_cp65; assert_in_delta(0.005343137657795737, worksheet.costpercapita_cp65, 0.001); end
  def test_costpercapita_cq65; assert_in_delta(0.562239403300502, worksheet.costpercapita_cq65, 0.001); end
  def test_costpercapita_cr65; assert_equal("ok", worksheet.costpercapita_cr65); end
  def test_costpercapita_a66; assert_equal("IV.b", worksheet.costpercapita_a66); end
  def test_costpercapita_b66; assert_equal("Distributed solar thermal", worksheet.costpercapita_b66); end
  def test_costpercapita_c66; assert_equal("Buildings", worksheet.costpercapita_c66); end
  def test_costpercapita_e66; assert_in_delta(0, (worksheet.costpercapita_e66||0), 0.001); end
  def test_costpercapita_f66; assert_in_delta(0, (worksheet.costpercapita_f66||0), 0.001); end
  def test_costpercapita_g66; assert_in_delta(0, (worksheet.costpercapita_g66||0), 0.001); end
  def test_costpercapita_h66; assert_in_delta(0, (worksheet.costpercapita_h66||0), 0.001); end
  def test_costpercapita_i66; assert_in_delta(0, (worksheet.costpercapita_i66||0), 0.001); end
  def test_costpercapita_j66; assert_in_delta(0, (worksheet.costpercapita_j66||0), 0.001); end
  def test_costpercapita_k66; assert_in_delta(0, (worksheet.costpercapita_k66||0), 0.001); end
  def test_costpercapita_l66; assert_in_delta(0, (worksheet.costpercapita_l66||0), 0.001); end
  def test_costpercapita_m66; assert_in_delta(0, (worksheet.costpercapita_m66||0), 0.001); end
  def test_costpercapita_o66; assert_in_delta(0, (worksheet.costpercapita_o66||0), 0.001); end
  def test_costpercapita_p66; assert_in_delta(0, (worksheet.costpercapita_p66||0), 0.001); end
  def test_costpercapita_q66; assert_in_delta(0, (worksheet.costpercapita_q66||0), 0.001); end
  def test_costpercapita_r66; assert_in_delta(0, (worksheet.costpercapita_r66||0), 0.001); end
  def test_costpercapita_s66; assert_in_delta(0, (worksheet.costpercapita_s66||0), 0.001); end
  def test_costpercapita_t66; assert_in_delta(0, (worksheet.costpercapita_t66||0), 0.001); end
  def test_costpercapita_u66; assert_in_delta(0, (worksheet.costpercapita_u66||0), 0.001); end
  def test_costpercapita_v66; assert_in_delta(0, (worksheet.costpercapita_v66||0), 0.001); end
  def test_costpercapita_w66; assert_in_delta(0, (worksheet.costpercapita_w66||0), 0.001); end
  def test_costpercapita_y66; assert_in_delta(0, (worksheet.costpercapita_y66||0), 0.001); end
  def test_costpercapita_z66; assert_in_delta(0, (worksheet.costpercapita_z66||0), 0.001); end
  def test_costpercapita_aa66; assert_in_delta(0, (worksheet.costpercapita_aa66||0), 0.001); end
  def test_costpercapita_ab66; assert_in_delta(0, (worksheet.costpercapita_ab66||0), 0.001); end
  def test_costpercapita_ac66; assert_in_delta(0, (worksheet.costpercapita_ac66||0), 0.001); end
  def test_costpercapita_ad66; assert_in_delta(0, (worksheet.costpercapita_ad66||0), 0.001); end
  def test_costpercapita_ae66; assert_in_delta(0, (worksheet.costpercapita_ae66||0), 0.001); end
  def test_costpercapita_af66; assert_in_delta(0, (worksheet.costpercapita_af66||0), 0.001); end
  def test_costpercapita_ag66; assert_in_delta(0, (worksheet.costpercapita_ag66||0), 0.001); end
  def test_costpercapita_ai66; assert_in_delta(0, (worksheet.costpercapita_ai66||0), 0.001); end
  def test_costpercapita_aj66; assert_in_delta(0, (worksheet.costpercapita_aj66||0), 0.001); end
  def test_costpercapita_ak66; assert_in_delta(0, (worksheet.costpercapita_ak66||0), 0.001); end
  def test_costpercapita_al66; assert_in_delta(0, (worksheet.costpercapita_al66||0), 0.001); end
  def test_costpercapita_am66; assert_in_delta(0, (worksheet.costpercapita_am66||0), 0.001); end
  def test_costpercapita_an66; assert_in_delta(0, (worksheet.costpercapita_an66||0), 0.001); end
  def test_costpercapita_ao66; assert_in_delta(0, (worksheet.costpercapita_ao66||0), 0.001); end
  def test_costpercapita_ap66; assert_in_delta(0, (worksheet.costpercapita_ap66||0), 0.001); end
  def test_costpercapita_aq66; assert_in_delta(0, (worksheet.costpercapita_aq66||0), 0.001); end
  def test_costpercapita_as66; assert_in_delta(0, (worksheet.costpercapita_as66||0), 0.001); end
  def test_costpercapita_at66; assert_in_delta(0, (worksheet.costpercapita_at66||0), 0.001); end
  def test_costpercapita_av66; assert_in_delta(0.07, worksheet.costpercapita_av66, 0.001); end
  def test_costpercapita_aw66; assert_in_epsilon(20, worksheet.costpercapita_aw66, 0.001); end
  def test_costpercapita_ay66; assert_in_delta(0, (worksheet.costpercapita_ay66||0), 0.001); end
  def test_costpercapita_az66; assert_in_delta(0, (worksheet.costpercapita_az66||0), 0.001); end
  def test_costpercapita_ba66; assert_in_delta(0, (worksheet.costpercapita_ba66||0), 0.001); end
  def test_costpercapita_bb66; assert_in_delta(0, (worksheet.costpercapita_bb66||0), 0.001); end
  def test_costpercapita_bc66; assert_in_delta(0, (worksheet.costpercapita_bc66||0), 0.001); end
  def test_costpercapita_bd66; assert_in_delta(0, (worksheet.costpercapita_bd66||0), 0.001); end
  def test_costpercapita_be66; assert_in_delta(0, (worksheet.costpercapita_be66||0), 0.001); end
  def test_costpercapita_bf66; assert_in_delta(0, (worksheet.costpercapita_bf66||0), 0.001); end
  def test_costpercapita_bg66; assert_in_delta(0, (worksheet.costpercapita_bg66||0), 0.001); end
  def test_costpercapita_bi66; assert_in_delta(0, (worksheet.costpercapita_bi66||0), 0.001); end
  def test_costpercapita_bj66; assert_in_delta(0, (worksheet.costpercapita_bj66||0), 0.001); end
  def test_costpercapita_bk66; assert_in_delta(0, (worksheet.costpercapita_bk66||0), 0.001); end
  def test_costpercapita_bl66; assert_in_delta(0, (worksheet.costpercapita_bl66||0), 0.001); end
  def test_costpercapita_bm66; assert_in_delta(0, (worksheet.costpercapita_bm66||0), 0.001); end
  def test_costpercapita_bn66; assert_in_delta(0, (worksheet.costpercapita_bn66||0), 0.001); end
  def test_costpercapita_bo66; assert_in_delta(0, (worksheet.costpercapita_bo66||0), 0.001); end
  def test_costpercapita_bp66; assert_in_delta(0, (worksheet.costpercapita_bp66||0), 0.001); end
  def test_costpercapita_bq66; assert_in_delta(0, (worksheet.costpercapita_bq66||0), 0.001); end
  def test_costpercapita_bs66; assert_in_delta(0, (worksheet.costpercapita_bs66||0), 0.001); end
  def test_costpercapita_bt66; assert_in_delta(0, (worksheet.costpercapita_bt66||0), 0.001); end
  def test_costpercapita_bu66; assert_in_delta(0, (worksheet.costpercapita_bu66||0), 0.001); end
  def test_costpercapita_bv66; assert_in_delta(0, (worksheet.costpercapita_bv66||0), 0.001); end
  def test_costpercapita_bw66; assert_in_delta(0, (worksheet.costpercapita_bw66||0), 0.001); end
  def test_costpercapita_bx66; assert_in_delta(0, (worksheet.costpercapita_bx66||0), 0.001); end
  def test_costpercapita_by66; assert_in_delta(0, (worksheet.costpercapita_by66||0), 0.001); end
  def test_costpercapita_bz66; assert_in_delta(0, (worksheet.costpercapita_bz66||0), 0.001); end
  def test_costpercapita_ca66; assert_in_delta(0, (worksheet.costpercapita_ca66||0), 0.001); end
  def test_costpercapita_cc66; assert_in_delta(0, (worksheet.costpercapita_cc66||0), 0.001); end
  def test_costpercapita_cd66; assert_in_delta(0, (worksheet.costpercapita_cd66||0), 0.001); end
  def test_costpercapita_cf66; assert_in_delta(0, (worksheet.costpercapita_cf66||0), 0.001); end
  def test_costpercapita_cg66; assert_in_delta(0, (worksheet.costpercapita_cg66||0), 0.001); end
  def test_costpercapita_ch66; assert_in_delta(0, (worksheet.costpercapita_ch66||0), 0.001); end
  def test_costpercapita_ci66; assert_in_delta(0, (worksheet.costpercapita_ci66||0), 0.001); end
  def test_costpercapita_cj66; assert_in_delta(0, (worksheet.costpercapita_cj66||0), 0.001); end
  def test_costpercapita_ck66; assert_in_delta(0, (worksheet.costpercapita_ck66||0), 0.001); end
  def test_costpercapita_cl66; assert_in_delta(0, (worksheet.costpercapita_cl66||0), 0.001); end
  def test_costpercapita_cm66; assert_in_delta(0, (worksheet.costpercapita_cm66||0), 0.001); end
  def test_costpercapita_cn66; assert_in_delta(0, (worksheet.costpercapita_cn66||0), 0.001); end
  def test_costpercapita_cp66; assert_in_delta(0, (worksheet.costpercapita_cp66||0), 0.001); end
  def test_costpercapita_cq66; assert_in_delta(0, (worksheet.costpercapita_cq66||0), 0.001); end
  def test_costpercapita_cr66; assert_equal("ok", worksheet.costpercapita_cr66); end
  def test_costpercapita_a67; assert_equal("IV.c", worksheet.costpercapita_a67); end
  def test_costpercapita_b67; assert_equal("Micro wind", worksheet.costpercapita_b67); end
  def test_costpercapita_c67; assert_equal("Electricity", worksheet.costpercapita_c67); end
  def test_costpercapita_e67; assert_in_delta(0, (worksheet.costpercapita_e67||0), 0.001); end
  def test_costpercapita_f67; assert_in_delta(0, (worksheet.costpercapita_f67||0), 0.001); end
  def test_costpercapita_g67; assert_in_delta(0, (worksheet.costpercapita_g67||0), 0.001); end
  def test_costpercapita_h67; assert_in_delta(0, (worksheet.costpercapita_h67||0), 0.001); end
  def test_costpercapita_i67; assert_in_delta(0, (worksheet.costpercapita_i67||0), 0.001); end
  def test_costpercapita_j67; assert_in_delta(0, (worksheet.costpercapita_j67||0), 0.001); end
  def test_costpercapita_k67; assert_in_delta(0, (worksheet.costpercapita_k67||0), 0.001); end
  def test_costpercapita_l67; assert_in_delta(0, (worksheet.costpercapita_l67||0), 0.001); end
  def test_costpercapita_m67; assert_in_delta(0, (worksheet.costpercapita_m67||0), 0.001); end
  def test_costpercapita_o67; assert_in_delta(0, (worksheet.costpercapita_o67||0), 0.001); end
  def test_costpercapita_p67; assert_in_delta(0, (worksheet.costpercapita_p67||0), 0.001); end
  def test_costpercapita_q67; assert_in_delta(0, (worksheet.costpercapita_q67||0), 0.001); end
  def test_costpercapita_r67; assert_in_delta(0, (worksheet.costpercapita_r67||0), 0.001); end
  def test_costpercapita_s67; assert_in_delta(0, (worksheet.costpercapita_s67||0), 0.001); end
  def test_costpercapita_t67; assert_in_delta(0, (worksheet.costpercapita_t67||0), 0.001); end
  def test_costpercapita_u67; assert_in_delta(0, (worksheet.costpercapita_u67||0), 0.001); end
  def test_costpercapita_v67; assert_in_delta(0, (worksheet.costpercapita_v67||0), 0.001); end
  def test_costpercapita_w67; assert_in_delta(0, (worksheet.costpercapita_w67||0), 0.001); end
  def test_costpercapita_y67; assert_in_delta(0, (worksheet.costpercapita_y67||0), 0.001); end
  def test_costpercapita_z67; assert_in_delta(0, (worksheet.costpercapita_z67||0), 0.001); end
  def test_costpercapita_aa67; assert_in_delta(0, (worksheet.costpercapita_aa67||0), 0.001); end
  def test_costpercapita_ab67; assert_in_delta(0, (worksheet.costpercapita_ab67||0), 0.001); end
  def test_costpercapita_ac67; assert_in_delta(0, (worksheet.costpercapita_ac67||0), 0.001); end
  def test_costpercapita_ad67; assert_in_delta(0, (worksheet.costpercapita_ad67||0), 0.001); end
  def test_costpercapita_ae67; assert_in_delta(0, (worksheet.costpercapita_ae67||0), 0.001); end
  def test_costpercapita_af67; assert_in_delta(0, (worksheet.costpercapita_af67||0), 0.001); end
  def test_costpercapita_ag67; assert_in_delta(0, (worksheet.costpercapita_ag67||0), 0.001); end
  def test_costpercapita_ai67; assert_in_delta(0, (worksheet.costpercapita_ai67||0), 0.001); end
  def test_costpercapita_aj67; assert_in_delta(0, (worksheet.costpercapita_aj67||0), 0.001); end
  def test_costpercapita_ak67; assert_in_delta(0, (worksheet.costpercapita_ak67||0), 0.001); end
  def test_costpercapita_al67; assert_in_delta(0, (worksheet.costpercapita_al67||0), 0.001); end
  def test_costpercapita_am67; assert_in_delta(0, (worksheet.costpercapita_am67||0), 0.001); end
  def test_costpercapita_an67; assert_in_delta(0, (worksheet.costpercapita_an67||0), 0.001); end
  def test_costpercapita_ao67; assert_in_delta(0, (worksheet.costpercapita_ao67||0), 0.001); end
  def test_costpercapita_ap67; assert_in_delta(0, (worksheet.costpercapita_ap67||0), 0.001); end
  def test_costpercapita_aq67; assert_in_delta(0, (worksheet.costpercapita_aq67||0), 0.001); end
  def test_costpercapita_as67; assert_in_delta(0, (worksheet.costpercapita_as67||0), 0.001); end
  def test_costpercapita_at67; assert_in_delta(0, (worksheet.costpercapita_at67||0), 0.001); end
  def test_costpercapita_av67; assert_in_delta(0.07, worksheet.costpercapita_av67, 0.001); end
  def test_costpercapita_aw67; assert_in_epsilon(25, worksheet.costpercapita_aw67, 0.001); end
  def test_costpercapita_ay67; assert_in_delta(0, (worksheet.costpercapita_ay67||0), 0.001); end
  def test_costpercapita_az67; assert_in_delta(0, (worksheet.costpercapita_az67||0), 0.001); end
  def test_costpercapita_ba67; assert_in_delta(0, (worksheet.costpercapita_ba67||0), 0.001); end
  def test_costpercapita_bb67; assert_in_delta(0, (worksheet.costpercapita_bb67||0), 0.001); end
  def test_costpercapita_bc67; assert_in_delta(0, (worksheet.costpercapita_bc67||0), 0.001); end
  def test_costpercapita_bd67; assert_in_delta(0, (worksheet.costpercapita_bd67||0), 0.001); end
  def test_costpercapita_be67; assert_in_delta(0, (worksheet.costpercapita_be67||0), 0.001); end
  def test_costpercapita_bf67; assert_in_delta(0, (worksheet.costpercapita_bf67||0), 0.001); end
  def test_costpercapita_bg67; assert_in_delta(0, (worksheet.costpercapita_bg67||0), 0.001); end
  def test_costpercapita_bi67; assert_in_delta(0, (worksheet.costpercapita_bi67||0), 0.001); end
  def test_costpercapita_bj67; assert_in_delta(0, (worksheet.costpercapita_bj67||0), 0.001); end
  def test_costpercapita_bk67; assert_in_delta(0, (worksheet.costpercapita_bk67||0), 0.001); end
  def test_costpercapita_bl67; assert_in_delta(0, (worksheet.costpercapita_bl67||0), 0.001); end
  def test_costpercapita_bm67; assert_in_delta(0, (worksheet.costpercapita_bm67||0), 0.001); end
  def test_costpercapita_bn67; assert_in_delta(0, (worksheet.costpercapita_bn67||0), 0.001); end
  def test_costpercapita_bo67; assert_in_delta(0, (worksheet.costpercapita_bo67||0), 0.001); end
  def test_costpercapita_bp67; assert_in_delta(0, (worksheet.costpercapita_bp67||0), 0.001); end
  def test_costpercapita_bq67; assert_in_delta(0, (worksheet.costpercapita_bq67||0), 0.001); end
  def test_costpercapita_bs67; assert_in_delta(0, (worksheet.costpercapita_bs67||0), 0.001); end
  def test_costpercapita_bt67; assert_in_delta(0, (worksheet.costpercapita_bt67||0), 0.001); end
  def test_costpercapita_bu67; assert_in_delta(0, (worksheet.costpercapita_bu67||0), 0.001); end
  def test_costpercapita_bv67; assert_in_delta(0, (worksheet.costpercapita_bv67||0), 0.001); end
  def test_costpercapita_bw67; assert_in_delta(0, (worksheet.costpercapita_bw67||0), 0.001); end
  def test_costpercapita_bx67; assert_in_delta(0, (worksheet.costpercapita_bx67||0), 0.001); end
  def test_costpercapita_by67; assert_in_delta(0, (worksheet.costpercapita_by67||0), 0.001); end
  def test_costpercapita_bz67; assert_in_delta(0, (worksheet.costpercapita_bz67||0), 0.001); end
  def test_costpercapita_ca67; assert_in_delta(0, (worksheet.costpercapita_ca67||0), 0.001); end
  def test_costpercapita_cc67; assert_in_delta(0, (worksheet.costpercapita_cc67||0), 0.001); end
  def test_costpercapita_cd67; assert_in_delta(0, (worksheet.costpercapita_cd67||0), 0.001); end
  def test_costpercapita_cf67; assert_in_delta(0, (worksheet.costpercapita_cf67||0), 0.001); end
  def test_costpercapita_cg67; assert_in_delta(0, (worksheet.costpercapita_cg67||0), 0.001); end
  def test_costpercapita_ch67; assert_in_delta(0, (worksheet.costpercapita_ch67||0), 0.001); end
  def test_costpercapita_ci67; assert_in_delta(0, (worksheet.costpercapita_ci67||0), 0.001); end
  def test_costpercapita_cj67; assert_in_delta(0, (worksheet.costpercapita_cj67||0), 0.001); end
  def test_costpercapita_ck67; assert_in_delta(0, (worksheet.costpercapita_ck67||0), 0.001); end
  def test_costpercapita_cl67; assert_in_delta(0, (worksheet.costpercapita_cl67||0), 0.001); end
  def test_costpercapita_cm67; assert_in_delta(0, (worksheet.costpercapita_cm67||0), 0.001); end
  def test_costpercapita_cn67; assert_in_delta(0, (worksheet.costpercapita_cn67||0), 0.001); end
  def test_costpercapita_cp67; assert_in_delta(0, (worksheet.costpercapita_cp67||0), 0.001); end
  def test_costpercapita_cq67; assert_in_delta(0, (worksheet.costpercapita_cq67||0), 0.001); end
  def test_costpercapita_cr67; assert_equal("ok", worksheet.costpercapita_cr67); end
  def test_costpercapita_a68; assert_equal("V.a", worksheet.costpercapita_a68); end
  def test_costpercapita_b68; assert_equal("Biomatter to fuel conversion", worksheet.costpercapita_b68); end
  def test_costpercapita_c68; assert_equal("Bioenergy", worksheet.costpercapita_c68); end
  def test_costpercapita_e68; assert_in_epsilon(7.837305121361291, worksheet.costpercapita_e68, 0.001); end
  def test_costpercapita_f68; assert_in_epsilon(19.13187373869311, worksheet.costpercapita_f68, 0.001); end
  def test_costpercapita_g68; assert_in_epsilon(11.509493416109793, worksheet.costpercapita_g68, 0.001); end
  def test_costpercapita_h68; assert_in_epsilon(8.385883296981334, worksheet.costpercapita_h68, 0.001); end
  def test_costpercapita_i68; assert_in_epsilon(8.262228583384037, worksheet.costpercapita_i68, 0.001); end
  def test_costpercapita_j68; assert_in_epsilon(8.477342027863205, worksheet.costpercapita_j68, 0.001); end
  def test_costpercapita_k68; assert_in_epsilon(8.728391390881963, worksheet.costpercapita_k68, 0.001); end
  def test_costpercapita_l68; assert_in_epsilon(9.005932524673305, worksheet.costpercapita_l68, 0.001); end
  def test_costpercapita_m68; assert_in_epsilon(7.002931137249619, worksheet.costpercapita_m68, 0.001); end
  def test_costpercapita_o68; assert_in_epsilon(8.358939981441136, worksheet.costpercapita_o68, 0.001); end
  def test_costpercapita_p68; assert_in_epsilon(9.68685913297867, worksheet.costpercapita_p68, 0.001); end
  def test_costpercapita_q68; assert_in_epsilon(14.229204380457073, worksheet.costpercapita_q68, 0.001); end
  def test_costpercapita_r68; assert_in_epsilon(16.144007052728025, worksheet.costpercapita_r68, 0.001); end
  def test_costpercapita_s68; assert_in_epsilon(16.673719599244137, worksheet.costpercapita_s68, 0.001); end
  def test_costpercapita_t68; assert_in_epsilon(17.106511469899967, worksheet.costpercapita_t68, 0.001); end
  def test_costpercapita_u68; assert_in_epsilon(17.606895707881886, worksheet.costpercapita_u68, 0.001); end
  def test_costpercapita_v68; assert_in_epsilon(18.162415226992465, worksheet.costpercapita_v68, 0.001); end
  def test_costpercapita_w68; assert_in_epsilon(18.785771152809943, worksheet.costpercapita_w68, 0.001); end
  def test_costpercapita_y68; assert_in_delta(0, (worksheet.costpercapita_y68||0), 0.001); end
  def test_costpercapita_z68; assert_in_delta(0, (worksheet.costpercapita_z68||0), 0.001); end
  def test_costpercapita_aa68; assert_in_delta(0, (worksheet.costpercapita_aa68||0), 0.001); end
  def test_costpercapita_ab68; assert_in_delta(0, (worksheet.costpercapita_ab68||0), 0.001); end
  def test_costpercapita_ac68; assert_in_delta(0, (worksheet.costpercapita_ac68||0), 0.001); end
  def test_costpercapita_ad68; assert_in_delta(0, (worksheet.costpercapita_ad68||0), 0.001); end
  def test_costpercapita_ae68; assert_in_delta(0, (worksheet.costpercapita_ae68||0), 0.001); end
  def test_costpercapita_af68; assert_in_delta(0, (worksheet.costpercapita_af68||0), 0.001); end
  def test_costpercapita_ag68; assert_in_delta(0, (worksheet.costpercapita_ag68||0), 0.001); end
  def test_costpercapita_ai68; assert_in_epsilon(16.19624510280243, worksheet.costpercapita_ai68, 0.001); end
  def test_costpercapita_aj68; assert_in_epsilon(28.81873287167178, worksheet.costpercapita_aj68, 0.001); end
  def test_costpercapita_ak68; assert_in_epsilon(25.738697796566868, worksheet.costpercapita_ak68, 0.001); end
  def test_costpercapita_al68; assert_in_epsilon(24.52989034970936, worksheet.costpercapita_al68, 0.001); end
  def test_costpercapita_am68; assert_in_epsilon(24.935948182628174, worksheet.costpercapita_am68, 0.001); end
  def test_costpercapita_an68; assert_in_epsilon(25.58385349776317, worksheet.costpercapita_an68, 0.001); end
  def test_costpercapita_ao68; assert_in_epsilon(26.33528709876385, worksheet.costpercapita_ao68, 0.001); end
  def test_costpercapita_ap68; assert_in_epsilon(27.16834775166577, worksheet.costpercapita_ap68, 0.001); end
  def test_costpercapita_aq68; assert_in_epsilon(25.78870229005956, worksheet.costpercapita_aq68, 0.001); end
  def test_costpercapita_as68; assert_in_epsilon(25.01063388240344, worksheet.costpercapita_as68, 0.001); end
  def test_costpercapita_at68; assert_in_epsilon(541.5943030172721, worksheet.costpercapita_at68, 0.001); end
  def test_costpercapita_av68; assert_in_delta(0.07, worksheet.costpercapita_av68, 0.001); end
  def test_costpercapita_aw68; assert_in_epsilon(30, worksheet.costpercapita_aw68, 0.001); end
  def test_costpercapita_ay68; assert_in_epsilon(1.8947406988491582, worksheet.costpercapita_ay68, 0.001); end
  def test_costpercapita_az68; assert_in_epsilon(7.708844485149773, worksheet.costpercapita_az68, 0.001); end
  def test_costpercapita_ba68; assert_in_epsilon(4.637543403195507, worksheet.costpercapita_ba68, 0.001); end
  def test_costpercapita_bb68; assert_in_epsilon(3.3789408758381265, worksheet.costpercapita_bb68, 0.001); end
  def test_costpercapita_bc68; assert_in_epsilon(3.3291164326081137, worksheet.costpercapita_bc68, 0.001); end
  def test_costpercapita_bd68; assert_in_epsilon(3.4157925267954297, worksheet.costpercapita_bd68, 0.001); end
  def test_costpercapita_be68; assert_in_epsilon(3.516948353142616, worksheet.costpercapita_be68, 0.001); end
  def test_costpercapita_bf68; assert_in_epsilon(3.6287785621358175, worksheet.costpercapita_bf68, 0.001); end
  def test_costpercapita_bg68; assert_in_epsilon(2.821705171934614, worksheet.costpercapita_bg68, 0.001); end
  def test_costpercapita_bi68; assert_in_epsilon(1.8947406988491582, worksheet.costpercapita_bi68, 0.001); end
  def test_costpercapita_bj68; assert_in_epsilon(9.541105978241609, worksheet.costpercapita_bj68, 0.001); end
  def test_costpercapita_bk68; assert_in_epsilon(13.866291218488607, worksheet.costpercapita_bk68, 0.001); end
  def test_costpercapita_bl68; assert_in_epsilon(16.815883536282257, worksheet.costpercapita_bl68, 0.001); end
  def test_costpercapita_bm68; assert_in_epsilon(19.685587456228003, worksheet.costpercapita_bm68, 0.001); end
  def test_costpercapita_bn68; assert_in_epsilon(22.63767227294495, worksheet.costpercapita_bn68, 0.001); end
  def test_costpercapita_bo68; assert_in_epsilon(24.075495230749272, worksheet.costpercapita_bo68, 0.001); end
  def test_costpercapita_bp68; assert_in_epsilon(23.759623322215493, worksheet.costpercapita_bp68, 0.001); end
  def test_costpercapita_bq68; assert_in_epsilon(22.12047517323323, worksheet.costpercapita_bq68, 0.001); end
  def test_costpercapita_bs68; assert_in_epsilon(10.253680680290294, worksheet.costpercapita_bs68, 0.001); end
  def test_costpercapita_bt68; assert_in_epsilon(19.22796511122028, worksheet.costpercapita_bt68, 0.001); end
  def test_costpercapita_bu68; assert_in_epsilon(28.095495598945682, worksheet.costpercapita_bu68, 0.001); end
  def test_costpercapita_bv68; assert_in_epsilon(32.95989058901028, worksheet.costpercapita_bv68, 0.001); end
  def test_costpercapita_bw68; assert_in_epsilon(36.35930705547214, worksheet.costpercapita_bw68, 0.001); end
  def test_costpercapita_bx68; assert_in_epsilon(39.74418374284492, worksheet.costpercapita_bx68, 0.001); end
  def test_costpercapita_by68; assert_in_epsilon(41.68239093863115, worksheet.costpercapita_by68, 0.001); end
  def test_costpercapita_bz68; assert_in_epsilon(41.922038549207954, worksheet.costpercapita_bz68, 0.001); end
  def test_costpercapita_ca68; assert_in_epsilon(40.906246326043174, worksheet.costpercapita_ca68, 0.001); end
  def test_costpercapita_cc68; assert_in_epsilon(32.35013317685176, worksheet.costpercapita_cc68, 0.001); end
  def test_costpercapita_cd68; assert_in_epsilon(657.5022204772818, worksheet.costpercapita_cd68, 0.001); end
  def test_costpercapita_cf68; assert_in_epsilon(-5.942564422512134, worksheet.costpercapita_cf68, 0.001); end
  def test_costpercapita_cg68; assert_in_epsilon(-9.590767760451502, worksheet.costpercapita_cg68, 0.001); end
  def test_costpercapita_ch68; assert_in_epsilon(2.356797802378815, worksheet.costpercapita_ch68, 0.001); end
  def test_costpercapita_ci68; assert_in_epsilon(8.430000239300922, worksheet.costpercapita_ci68, 0.001); end
  def test_costpercapita_cj68; assert_in_epsilon(11.423358872843965, worksheet.costpercapita_cj68, 0.001); end
  def test_costpercapita_ck68; assert_in_epsilon(14.160330245081745, worksheet.costpercapita_ck68, 0.001); end
  def test_costpercapita_cl68; assert_in_epsilon(15.347103839867307, worksheet.costpercapita_cl68, 0.001); end
  def test_costpercapita_cm68; assert_in_epsilon(14.753690797542184, worksheet.costpercapita_cm68, 0.001); end
  def test_costpercapita_cn68; assert_in_epsilon(15.117544035983611, worksheet.costpercapita_cn68, 0.001); end
  def test_costpercapita_cp68; assert_in_epsilon(7.339499294448323, worksheet.costpercapita_cp68, 0.001); end
  def test_costpercapita_cq68; assert_in_epsilon(115.90791746000983, worksheet.costpercapita_cq68, 0.001); end
  def test_costpercapita_cr68; assert_equal("ok", worksheet.costpercapita_cr68); end
  def test_costpercapita_a69; assert_equal("V.b", worksheet.costpercapita_a69); end
  def test_costpercapita_b69; assert_equal("Bioenergy imports", worksheet.costpercapita_b69); end
  def test_costpercapita_c69; assert_equal("Bioenergy", worksheet.costpercapita_c69); end
  def test_costpercapita_e69; assert_in_delta(0, (worksheet.costpercapita_e69||0), 0.001); end
  def test_costpercapita_f69; assert_in_delta(0, (worksheet.costpercapita_f69||0), 0.001); end
  def test_costpercapita_g69; assert_in_delta(0, (worksheet.costpercapita_g69||0), 0.001); end
  def test_costpercapita_h69; assert_in_delta(0, (worksheet.costpercapita_h69||0), 0.001); end
  def test_costpercapita_i69; assert_in_delta(0, (worksheet.costpercapita_i69||0), 0.001); end
  def test_costpercapita_j69; assert_in_delta(0, (worksheet.costpercapita_j69||0), 0.001); end
  def test_costpercapita_k69; assert_in_delta(0, (worksheet.costpercapita_k69||0), 0.001); end
  def test_costpercapita_l69; assert_in_delta(0, (worksheet.costpercapita_l69||0), 0.001); end
  def test_costpercapita_m69; assert_in_delta(0, (worksheet.costpercapita_m69||0), 0.001); end
  def test_costpercapita_o69; assert_in_delta(0, (worksheet.costpercapita_o69||0), 0.001); end
  def test_costpercapita_p69; assert_in_delta(0, (worksheet.costpercapita_p69||0), 0.001); end
  def test_costpercapita_q69; assert_in_delta(0, (worksheet.costpercapita_q69||0), 0.001); end
  def test_costpercapita_r69; assert_in_delta(0, (worksheet.costpercapita_r69||0), 0.001); end
  def test_costpercapita_s69; assert_in_delta(0, (worksheet.costpercapita_s69||0), 0.001); end
  def test_costpercapita_t69; assert_in_delta(0, (worksheet.costpercapita_t69||0), 0.001); end
  def test_costpercapita_u69; assert_in_delta(0, (worksheet.costpercapita_u69||0), 0.001); end
  def test_costpercapita_v69; assert_in_delta(0, (worksheet.costpercapita_v69||0), 0.001); end
  def test_costpercapita_w69; assert_in_delta(0, (worksheet.costpercapita_w69||0), 0.001); end
  def test_costpercapita_y69; assert_in_epsilon(3.3035069891591418, worksheet.costpercapita_y69, 0.001); end
  def test_costpercapita_z69; assert_in_epsilon(2.820209521628868, worksheet.costpercapita_z69, 0.001); end
  def test_costpercapita_aa69; assert_in_epsilon(2.3588756730261733, worksheet.costpercapita_aa69, 0.001); end
  def test_costpercapita_ab69; assert_in_epsilon(1.9215732372325443, worksheet.costpercapita_ab69, 0.001); end
  def test_costpercapita_ac69; assert_in_epsilon(1.5082627145448928, worksheet.costpercapita_ac69, 0.001); end
  def test_costpercapita_ad69; assert_in_epsilon(1.1140728931626787, worksheet.costpercapita_ad69, 0.001); end
  def test_costpercapita_ae69; assert_in_delta(0.7330884434756474, worksheet.costpercapita_ae69, 0.001); end
  def test_costpercapita_af69; assert_in_delta(0.3622767675438072, worksheet.costpercapita_af69, 0.001); end
  def test_costpercapita_ag69; assert_in_delta(0, (worksheet.costpercapita_ag69||0), 0.001); end
  def test_costpercapita_ai69; assert_in_epsilon(3.3035069891591418, worksheet.costpercapita_ai69, 0.001); end
  def test_costpercapita_aj69; assert_in_epsilon(2.820209521628868, worksheet.costpercapita_aj69, 0.001); end
  def test_costpercapita_ak69; assert_in_epsilon(2.3588756730261733, worksheet.costpercapita_ak69, 0.001); end
  def test_costpercapita_al69; assert_in_epsilon(1.9215732372325443, worksheet.costpercapita_al69, 0.001); end
  def test_costpercapita_am69; assert_in_epsilon(1.5082627145448928, worksheet.costpercapita_am69, 0.001); end
  def test_costpercapita_an69; assert_in_epsilon(1.1140728931626787, worksheet.costpercapita_an69, 0.001); end
  def test_costpercapita_ao69; assert_in_delta(0.7330884434756474, worksheet.costpercapita_ao69, 0.001); end
  def test_costpercapita_ap69; assert_in_delta(0.3622767675438072, worksheet.costpercapita_ap69, 0.001); end
  def test_costpercapita_aq69; assert_in_delta(0, (worksheet.costpercapita_aq69||0), 0.001); end
  def test_costpercapita_as69; assert_in_epsilon(1.5690962488637503, worksheet.costpercapita_as69, 0.001); end
  def test_costpercapita_at69; assert_in_epsilon(37.28201099422924, worksheet.costpercapita_at69, 0.001); end
  def test_costpercapita_av69; assert_in_delta(0, (worksheet.costpercapita_av69||0), 0.001); end
  def test_costpercapita_aw69; assert_in_epsilon(5, worksheet.costpercapita_aw69, 0.001); end
  def test_costpercapita_ay69; assert_in_delta(0, (worksheet.costpercapita_ay69||0), 0.001); end
  def test_costpercapita_az69; assert_in_delta(0, (worksheet.costpercapita_az69||0), 0.001); end
  def test_costpercapita_ba69; assert_in_delta(0, (worksheet.costpercapita_ba69||0), 0.001); end
  def test_costpercapita_bb69; assert_in_delta(0, (worksheet.costpercapita_bb69||0), 0.001); end
  def test_costpercapita_bc69; assert_in_delta(0, (worksheet.costpercapita_bc69||0), 0.001); end
  def test_costpercapita_bd69; assert_in_delta(0, (worksheet.costpercapita_bd69||0), 0.001); end
  def test_costpercapita_be69; assert_in_delta(0, (worksheet.costpercapita_be69||0), 0.001); end
  def test_costpercapita_bf69; assert_in_delta(0, (worksheet.costpercapita_bf69||0), 0.001); end
  def test_costpercapita_bg69; assert_in_delta(0, (worksheet.costpercapita_bg69||0), 0.001); end
  def test_costpercapita_bi69; assert_in_delta(0, (worksheet.costpercapita_bi69||0), 0.001); end
  def test_costpercapita_bj69; assert_in_delta(0, (worksheet.costpercapita_bj69||0), 0.001); end
  def test_costpercapita_bk69; assert_in_delta(0, (worksheet.costpercapita_bk69||0), 0.001); end
  def test_costpercapita_bl69; assert_in_delta(0, (worksheet.costpercapita_bl69||0), 0.001); end
  def test_costpercapita_bm69; assert_in_delta(0, (worksheet.costpercapita_bm69||0), 0.001); end
  def test_costpercapita_bn69; assert_in_delta(0, (worksheet.costpercapita_bn69||0), 0.001); end
  def test_costpercapita_bo69; assert_in_delta(0, (worksheet.costpercapita_bo69||0), 0.001); end
  def test_costpercapita_bp69; assert_in_delta(0, (worksheet.costpercapita_bp69||0), 0.001); end
  def test_costpercapita_bq69; assert_in_delta(0, (worksheet.costpercapita_bq69||0), 0.001); end
  def test_costpercapita_bs69; assert_in_epsilon(3.3035069891591418, worksheet.costpercapita_bs69, 0.001); end
  def test_costpercapita_bt69; assert_in_epsilon(2.820209521628868, worksheet.costpercapita_bt69, 0.001); end
  def test_costpercapita_bu69; assert_in_epsilon(2.3588756730261733, worksheet.costpercapita_bu69, 0.001); end
  def test_costpercapita_bv69; assert_in_epsilon(1.9215732372325443, worksheet.costpercapita_bv69, 0.001); end
  def test_costpercapita_bw69; assert_in_epsilon(1.5082627145448928, worksheet.costpercapita_bw69, 0.001); end
  def test_costpercapita_bx69; assert_in_epsilon(1.1140728931626787, worksheet.costpercapita_bx69, 0.001); end
  def test_costpercapita_by69; assert_in_delta(0.7330884434756474, worksheet.costpercapita_by69, 0.001); end
  def test_costpercapita_bz69; assert_in_delta(0.3622767675438072, worksheet.costpercapita_bz69, 0.001); end
  def test_costpercapita_ca69; assert_in_delta(0, (worksheet.costpercapita_ca69||0), 0.001); end
  def test_costpercapita_cc69; assert_in_epsilon(1.5690962488637503, worksheet.costpercapita_cc69, 0.001); end
  def test_costpercapita_cd69; assert_in_epsilon(37.28201099422924, worksheet.costpercapita_cd69, 0.001); end
  def test_costpercapita_cf69; assert_in_delta(0, (worksheet.costpercapita_cf69||0), 0.001); end
  def test_costpercapita_cg69; assert_in_delta(0, (worksheet.costpercapita_cg69||0), 0.001); end
  def test_costpercapita_ch69; assert_in_delta(0, (worksheet.costpercapita_ch69||0), 0.001); end
  def test_costpercapita_ci69; assert_in_delta(0, (worksheet.costpercapita_ci69||0), 0.001); end
  def test_costpercapita_cj69; assert_in_delta(0, (worksheet.costpercapita_cj69||0), 0.001); end
  def test_costpercapita_ck69; assert_in_delta(0, (worksheet.costpercapita_ck69||0), 0.001); end
  def test_costpercapita_cl69; assert_in_delta(0, (worksheet.costpercapita_cl69||0), 0.001); end
  def test_costpercapita_cm69; assert_in_delta(0, (worksheet.costpercapita_cm69||0), 0.001); end
  def test_costpercapita_cn69; assert_in_delta(0, (worksheet.costpercapita_cn69||0), 0.001); end
  def test_costpercapita_cp69; assert_in_delta(0, (worksheet.costpercapita_cp69||0), 0.001); end
  def test_costpercapita_cq69; assert_in_delta(0, (worksheet.costpercapita_cq69||0), 0.001); end
  def test_costpercapita_cr69; assert_equal("ok", worksheet.costpercapita_cr69); end
  def test_costpercapita_a70; assert_equal("VI.a.Bioenergy", worksheet.costpercapita_a70); end
  def test_costpercapita_b70; assert_equal("Agriculture and land use", worksheet.costpercapita_b70); end
  def test_costpercapita_c70; assert_equal("Bioenergy", worksheet.costpercapita_c70); end
  def test_costpercapita_e70; assert_in_delta(0, (worksheet.costpercapita_e70||0), 0.001); end
  def test_costpercapita_f70; assert_in_delta(0, (worksheet.costpercapita_f70||0), 0.001); end
  def test_costpercapita_g70; assert_in_delta(0, (worksheet.costpercapita_g70||0), 0.001); end
  def test_costpercapita_h70; assert_in_delta(0, (worksheet.costpercapita_h70||0), 0.001); end
  def test_costpercapita_i70; assert_in_delta(0, (worksheet.costpercapita_i70||0), 0.001); end
  def test_costpercapita_j70; assert_in_delta(0, (worksheet.costpercapita_j70||0), 0.001); end
  def test_costpercapita_k70; assert_in_delta(0, (worksheet.costpercapita_k70||0), 0.001); end
  def test_costpercapita_l70; assert_in_delta(0, (worksheet.costpercapita_l70||0), 0.001); end
  def test_costpercapita_m70; assert_in_delta(0, (worksheet.costpercapita_m70||0), 0.001); end
  def test_costpercapita_o70; assert_in_delta(0, (worksheet.costpercapita_o70||0), 0.001); end
  def test_costpercapita_p70; assert_in_delta(0, (worksheet.costpercapita_p70||0), 0.001); end
  def test_costpercapita_q70; assert_in_delta(0, (worksheet.costpercapita_q70||0), 0.001); end
  def test_costpercapita_r70; assert_in_delta(0, (worksheet.costpercapita_r70||0), 0.001); end
  def test_costpercapita_s70; assert_in_delta(0, (worksheet.costpercapita_s70||0), 0.001); end
  def test_costpercapita_t70; assert_in_delta(0, (worksheet.costpercapita_t70||0), 0.001); end
  def test_costpercapita_u70; assert_in_delta(0, (worksheet.costpercapita_u70||0), 0.001); end
  def test_costpercapita_v70; assert_in_delta(0, (worksheet.costpercapita_v70||0), 0.001); end
  def test_costpercapita_w70; assert_in_delta(0, (worksheet.costpercapita_w70||0), 0.001); end
  def test_costpercapita_y70; assert_in_epsilon(5.261715332251098, worksheet.costpercapita_y70, 0.001); end
  def test_costpercapita_z70; assert_in_epsilon(7.571114975637427, worksheet.costpercapita_z70, 0.001); end
  def test_costpercapita_aa70; assert_in_epsilon(13.446240392791303, worksheet.costpercapita_aa70, 0.001); end
  def test_costpercapita_ab70; assert_in_epsilon(13.98429272578636, worksheet.costpercapita_ab70, 0.001); end
  def test_costpercapita_ac70; assert_in_epsilon(14.561785765485338, worksheet.costpercapita_ac70, 0.001); end
  def test_costpercapita_ad70; assert_in_epsilon(15.187358335766367, worksheet.costpercapita_ad70, 0.001); end
  def test_costpercapita_ae70; assert_in_epsilon(15.843547354038474, worksheet.costpercapita_ae70, 0.001); end
  def test_costpercapita_af70; assert_in_epsilon(16.520760152773093, worksheet.costpercapita_af70, 0.001); end
  def test_costpercapita_ag70; assert_in_epsilon(17.220551901899274, worksheet.costpercapita_ag70, 0.001); end
  def test_costpercapita_ai70; assert_in_epsilon(5.261715332251098, worksheet.costpercapita_ai70, 0.001); end
  def test_costpercapita_aj70; assert_in_epsilon(7.571114975637427, worksheet.costpercapita_aj70, 0.001); end
  def test_costpercapita_ak70; assert_in_epsilon(13.446240392791303, worksheet.costpercapita_ak70, 0.001); end
  def test_costpercapita_al70; assert_in_epsilon(13.98429272578636, worksheet.costpercapita_al70, 0.001); end
  def test_costpercapita_am70; assert_in_epsilon(14.561785765485338, worksheet.costpercapita_am70, 0.001); end
  def test_costpercapita_an70; assert_in_epsilon(15.187358335766367, worksheet.costpercapita_an70, 0.001); end
  def test_costpercapita_ao70; assert_in_epsilon(15.843547354038474, worksheet.costpercapita_ao70, 0.001); end
  def test_costpercapita_ap70; assert_in_epsilon(16.520760152773093, worksheet.costpercapita_ap70, 0.001); end
  def test_costpercapita_aq70; assert_in_epsilon(17.220551901899274, worksheet.costpercapita_aq70, 0.001); end
  def test_costpercapita_as70; assert_in_epsilon(13.28859632626986, worksheet.costpercapita_as70, 0.001); end
  def test_costpercapita_at70; assert_in_epsilon(271.69207256238695, worksheet.costpercapita_at70, 0.001); end
  def test_costpercapita_av70; assert_in_delta(0, (worksheet.costpercapita_av70||0), 0.001); end
  def test_costpercapita_aw70; assert_in_epsilon(5, worksheet.costpercapita_aw70, 0.001); end
  def test_costpercapita_ay70; assert_in_delta(0, (worksheet.costpercapita_ay70||0), 0.001); end
  def test_costpercapita_az70; assert_in_delta(0, (worksheet.costpercapita_az70||0), 0.001); end
  def test_costpercapita_ba70; assert_in_delta(0, (worksheet.costpercapita_ba70||0), 0.001); end
  def test_costpercapita_bb70; assert_in_delta(0, (worksheet.costpercapita_bb70||0), 0.001); end
  def test_costpercapita_bc70; assert_in_delta(0, (worksheet.costpercapita_bc70||0), 0.001); end
  def test_costpercapita_bd70; assert_in_delta(0, (worksheet.costpercapita_bd70||0), 0.001); end
  def test_costpercapita_be70; assert_in_delta(0, (worksheet.costpercapita_be70||0), 0.001); end
  def test_costpercapita_bf70; assert_in_delta(0, (worksheet.costpercapita_bf70||0), 0.001); end
  def test_costpercapita_bg70; assert_in_delta(0, (worksheet.costpercapita_bg70||0), 0.001); end
  def test_costpercapita_bi70; assert_in_delta(0, (worksheet.costpercapita_bi70||0), 0.001); end
  def test_costpercapita_bj70; assert_in_delta(0, (worksheet.costpercapita_bj70||0), 0.001); end
  def test_costpercapita_bk70; assert_in_delta(0, (worksheet.costpercapita_bk70||0), 0.001); end
  def test_costpercapita_bl70; assert_in_delta(0, (worksheet.costpercapita_bl70||0), 0.001); end
  def test_costpercapita_bm70; assert_in_delta(0, (worksheet.costpercapita_bm70||0), 0.001); end
  def test_costpercapita_bn70; assert_in_delta(0, (worksheet.costpercapita_bn70||0), 0.001); end
  def test_costpercapita_bo70; assert_in_delta(0, (worksheet.costpercapita_bo70||0), 0.001); end
  def test_costpercapita_bp70; assert_in_delta(0, (worksheet.costpercapita_bp70||0), 0.001); end
  def test_costpercapita_bq70; assert_in_delta(0, (worksheet.costpercapita_bq70||0), 0.001); end
  def test_costpercapita_bs70; assert_in_epsilon(5.261715332251098, worksheet.costpercapita_bs70, 0.001); end
  def test_costpercapita_bt70; assert_in_epsilon(7.571114975637427, worksheet.costpercapita_bt70, 0.001); end
  def test_costpercapita_bu70; assert_in_epsilon(13.446240392791303, worksheet.costpercapita_bu70, 0.001); end
  def test_costpercapita_bv70; assert_in_epsilon(13.98429272578636, worksheet.costpercapita_bv70, 0.001); end
  def test_costpercapita_bw70; assert_in_epsilon(14.561785765485338, worksheet.costpercapita_bw70, 0.001); end
  def test_costpercapita_bx70; assert_in_epsilon(15.187358335766367, worksheet.costpercapita_bx70, 0.001); end
  def test_costpercapita_by70; assert_in_epsilon(15.843547354038474, worksheet.costpercapita_by70, 0.001); end
  def test_costpercapita_bz70; assert_in_epsilon(16.520760152773093, worksheet.costpercapita_bz70, 0.001); end
  def test_costpercapita_ca70; assert_in_epsilon(17.220551901899274, worksheet.costpercapita_ca70, 0.001); end
  def test_costpercapita_cc70; assert_in_epsilon(13.28859632626986, worksheet.costpercapita_cc70, 0.001); end
  def test_costpercapita_cd70; assert_in_epsilon(271.69207256238695, worksheet.costpercapita_cd70, 0.001); end
  def test_costpercapita_cf70; assert_in_delta(0, (worksheet.costpercapita_cf70||0), 0.001); end
  def test_costpercapita_cg70; assert_in_delta(0, (worksheet.costpercapita_cg70||0), 0.001); end
  def test_costpercapita_ch70; assert_in_delta(0, (worksheet.costpercapita_ch70||0), 0.001); end
  def test_costpercapita_ci70; assert_in_delta(0, (worksheet.costpercapita_ci70||0), 0.001); end
  def test_costpercapita_cj70; assert_in_delta(0, (worksheet.costpercapita_cj70||0), 0.001); end
  def test_costpercapita_ck70; assert_in_delta(0, (worksheet.costpercapita_ck70||0), 0.001); end
  def test_costpercapita_cl70; assert_in_delta(0, (worksheet.costpercapita_cl70||0), 0.001); end
  def test_costpercapita_cm70; assert_in_delta(0, (worksheet.costpercapita_cm70||0), 0.001); end
  def test_costpercapita_cn70; assert_in_delta(0, (worksheet.costpercapita_cn70||0), 0.001); end
  def test_costpercapita_cp70; assert_in_delta(0, (worksheet.costpercapita_cp70||0), 0.001); end
  def test_costpercapita_cq70; assert_in_delta(0, (worksheet.costpercapita_cq70||0), 0.001); end
  def test_costpercapita_cr70; assert_equal("ok", worksheet.costpercapita_cr70); end
  def test_costpercapita_a71; assert_equal("VI.a.Emissions", worksheet.costpercapita_a71); end
  def test_costpercapita_b71; assert_equal("Agriculture and land use", worksheet.costpercapita_b71); end
  def test_costpercapita_c71; assert_equal("Bioenergy", worksheet.costpercapita_c71); end
  def test_costpercapita_e71; assert_in_delta(0, (worksheet.costpercapita_e71||0), 0.001); end
  def test_costpercapita_f71; assert_in_delta(0, (worksheet.costpercapita_f71||0), 0.001); end
  def test_costpercapita_g71; assert_in_delta(0, (worksheet.costpercapita_g71||0), 0.001); end
  def test_costpercapita_h71; assert_in_delta(0, (worksheet.costpercapita_h71||0), 0.001); end
  def test_costpercapita_i71; assert_in_delta(0, (worksheet.costpercapita_i71||0), 0.001); end
  def test_costpercapita_j71; assert_in_delta(0, (worksheet.costpercapita_j71||0), 0.001); end
  def test_costpercapita_k71; assert_in_delta(0, (worksheet.costpercapita_k71||0), 0.001); end
  def test_costpercapita_l71; assert_in_delta(0, (worksheet.costpercapita_l71||0), 0.001); end
  def test_costpercapita_m71; assert_in_delta(0, (worksheet.costpercapita_m71||0), 0.001); end
  def test_costpercapita_o71; assert_in_delta(1.3456920160395821e-07, worksheet.costpercapita_o71, 0.001); end
  def test_costpercapita_p71; assert_in_delta(3.4874728689075726e-07, worksheet.costpercapita_p71, 0.001); end
  def test_costpercapita_q71; assert_in_delta(5.508995943824567e-07, worksheet.costpercapita_q71, 0.001); end
  def test_costpercapita_r71; assert_in_delta(6.016656735781708e-07, worksheet.costpercapita_r71, 0.001); end
  def test_costpercapita_s71; assert_in_delta(6.523790898562707e-07, worksheet.costpercapita_s71, 0.001); end
  def test_costpercapita_t71; assert_in_delta(7.037494546507406e-07, worksheet.costpercapita_t71, 0.001); end
  def test_costpercapita_u71; assert_in_delta(7.552147328468237e-07, worksheet.costpercapita_u71, 0.001); end
  def test_costpercapita_v71; assert_in_delta(8.064495005481148e-07, worksheet.costpercapita_v71, 0.001); end
  def test_costpercapita_w71; assert_in_delta(8.576084474434369e-07, worksheet.costpercapita_w71, 0.001); end
  def test_costpercapita_y71; assert_in_delta(0, (worksheet.costpercapita_y71||0), 0.001); end
  def test_costpercapita_z71; assert_in_delta(0, (worksheet.costpercapita_z71||0), 0.001); end
  def test_costpercapita_aa71; assert_in_delta(0, (worksheet.costpercapita_aa71||0), 0.001); end
  def test_costpercapita_ab71; assert_in_delta(0, (worksheet.costpercapita_ab71||0), 0.001); end
  def test_costpercapita_ac71; assert_in_delta(0, (worksheet.costpercapita_ac71||0), 0.001); end
  def test_costpercapita_ad71; assert_in_delta(0, (worksheet.costpercapita_ad71||0), 0.001); end
  def test_costpercapita_ae71; assert_in_delta(0, (worksheet.costpercapita_ae71||0), 0.001); end
  def test_costpercapita_af71; assert_in_delta(0, (worksheet.costpercapita_af71||0), 0.001); end
  def test_costpercapita_ag71; assert_in_delta(0, (worksheet.costpercapita_ag71||0), 0.001); end
  def test_costpercapita_ai71; assert_in_delta(1.3456920160395821e-07, worksheet.costpercapita_ai71, 0.001); end
  def test_costpercapita_aj71; assert_in_delta(3.4874728689075726e-07, worksheet.costpercapita_aj71, 0.001); end
  def test_costpercapita_ak71; assert_in_delta(5.508995943824567e-07, worksheet.costpercapita_ak71, 0.001); end
  def test_costpercapita_al71; assert_in_delta(6.016656735781708e-07, worksheet.costpercapita_al71, 0.001); end
  def test_costpercapita_am71; assert_in_delta(6.523790898562707e-07, worksheet.costpercapita_am71, 0.001); end
  def test_costpercapita_an71; assert_in_delta(7.037494546507406e-07, worksheet.costpercapita_an71, 0.001); end
  def test_costpercapita_ao71; assert_in_delta(7.552147328468237e-07, worksheet.costpercapita_ao71, 0.001); end
  def test_costpercapita_ap71; assert_in_delta(8.064495005481148e-07, worksheet.costpercapita_ap71, 0.001); end
  def test_costpercapita_aq71; assert_in_delta(8.576084474434369e-07, worksheet.costpercapita_aq71, 0.001); end
  def test_costpercapita_as71; assert_in_delta(6.012536646445256e-07, worksheet.costpercapita_as71, 0.001); end
  def test_costpercapita_at71; assert_in_delta(1.2200710960590093e-05, worksheet.costpercapita_at71, 0.001); end
  def test_costpercapita_av71; assert_in_delta(0, (worksheet.costpercapita_av71||0), 0.001); end
  def test_costpercapita_aw71; assert_in_epsilon(5, worksheet.costpercapita_aw71, 0.001); end
  def test_costpercapita_ay71; assert_in_delta(0, (worksheet.costpercapita_ay71||0), 0.001); end
  def test_costpercapita_az71; assert_in_delta(0, (worksheet.costpercapita_az71||0), 0.001); end
  def test_costpercapita_ba71; assert_in_delta(0, (worksheet.costpercapita_ba71||0), 0.001); end
  def test_costpercapita_bb71; assert_in_delta(0, (worksheet.costpercapita_bb71||0), 0.001); end
  def test_costpercapita_bc71; assert_in_delta(0, (worksheet.costpercapita_bc71||0), 0.001); end
  def test_costpercapita_bd71; assert_in_delta(0, (worksheet.costpercapita_bd71||0), 0.001); end
  def test_costpercapita_be71; assert_in_delta(0, (worksheet.costpercapita_be71||0), 0.001); end
  def test_costpercapita_bf71; assert_in_delta(0, (worksheet.costpercapita_bf71||0), 0.001); end
  def test_costpercapita_bg71; assert_in_delta(0, (worksheet.costpercapita_bg71||0), 0.001); end
  def test_costpercapita_bi71; assert_in_delta(0, (worksheet.costpercapita_bi71||0), 0.001); end
  def test_costpercapita_bj71; assert_in_delta(0, (worksheet.costpercapita_bj71||0), 0.001); end
  def test_costpercapita_bk71; assert_in_delta(0, (worksheet.costpercapita_bk71||0), 0.001); end
  def test_costpercapita_bl71; assert_in_delta(0, (worksheet.costpercapita_bl71||0), 0.001); end
  def test_costpercapita_bm71; assert_in_delta(0, (worksheet.costpercapita_bm71||0), 0.001); end
  def test_costpercapita_bn71; assert_in_delta(0, (worksheet.costpercapita_bn71||0), 0.001); end
  def test_costpercapita_bo71; assert_in_delta(0, (worksheet.costpercapita_bo71||0), 0.001); end
  def test_costpercapita_bp71; assert_in_delta(0, (worksheet.costpercapita_bp71||0), 0.001); end
  def test_costpercapita_bq71; assert_in_delta(0, (worksheet.costpercapita_bq71||0), 0.001); end
  def test_costpercapita_bs71; assert_in_delta(1.3456920160395821e-07, worksheet.costpercapita_bs71, 0.001); end
  def test_costpercapita_bt71; assert_in_delta(3.4874728689075726e-07, worksheet.costpercapita_bt71, 0.001); end
  def test_costpercapita_bu71; assert_in_delta(5.508995943824567e-07, worksheet.costpercapita_bu71, 0.001); end
  def test_costpercapita_bv71; assert_in_delta(6.016656735781708e-07, worksheet.costpercapita_bv71, 0.001); end
  def test_costpercapita_bw71; assert_in_delta(6.523790898562707e-07, worksheet.costpercapita_bw71, 0.001); end
  def test_costpercapita_bx71; assert_in_delta(7.037494546507406e-07, worksheet.costpercapita_bx71, 0.001); end
  def test_costpercapita_by71; assert_in_delta(7.552147328468237e-07, worksheet.costpercapita_by71, 0.001); end
  def test_costpercapita_bz71; assert_in_delta(8.064495005481148e-07, worksheet.costpercapita_bz71, 0.001); end
  def test_costpercapita_ca71; assert_in_delta(8.576084474434369e-07, worksheet.costpercapita_ca71, 0.001); end
  def test_costpercapita_cc71; assert_in_delta(6.012536646445256e-07, worksheet.costpercapita_cc71, 0.001); end
  def test_costpercapita_cd71; assert_in_delta(1.2200710960590093e-05, worksheet.costpercapita_cd71, 0.001); end
  def test_costpercapita_cf71; assert_in_delta(0, (worksheet.costpercapita_cf71||0), 0.001); end
  def test_costpercapita_cg71; assert_in_delta(0, (worksheet.costpercapita_cg71||0), 0.001); end
  def test_costpercapita_ch71; assert_in_delta(0, (worksheet.costpercapita_ch71||0), 0.001); end
  def test_costpercapita_ci71; assert_in_delta(0, (worksheet.costpercapita_ci71||0), 0.001); end
  def test_costpercapita_cj71; assert_in_delta(0, (worksheet.costpercapita_cj71||0), 0.001); end
  def test_costpercapita_ck71; assert_in_delta(0, (worksheet.costpercapita_ck71||0), 0.001); end
  def test_costpercapita_cl71; assert_in_delta(0, (worksheet.costpercapita_cl71||0), 0.001); end
  def test_costpercapita_cm71; assert_in_delta(0, (worksheet.costpercapita_cm71||0), 0.001); end
  def test_costpercapita_cn71; assert_in_delta(0, (worksheet.costpercapita_cn71||0), 0.001); end
  def test_costpercapita_cp71; assert_in_delta(0, (worksheet.costpercapita_cp71||0), 0.001); end
  def test_costpercapita_cq71; assert_in_delta(0, (worksheet.costpercapita_cq71||0), 0.001); end
  def test_costpercapita_cr71; assert_equal("ok", worksheet.costpercapita_cr71); end
  def test_costpercapita_a72; assert_equal("VI.b.Bioenergy", worksheet.costpercapita_a72); end
  def test_costpercapita_b72; assert_equal("Energy from waste", worksheet.costpercapita_b72); end
  def test_costpercapita_c72; assert_equal("Bioenergy", worksheet.costpercapita_c72); end
  def test_costpercapita_e72; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_e72, 0.001); end
  def test_costpercapita_f72; assert_in_epsilon(3.163751694170952, worksheet.costpercapita_f72, 0.001); end
  def test_costpercapita_g72; assert_in_epsilon(3.3344820770620087, worksheet.costpercapita_g72, 0.001); end
  def test_costpercapita_h72; assert_in_epsilon(4.10486233002682, worksheet.costpercapita_h72, 0.001); end
  def test_costpercapita_i72; assert_in_epsilon(4.946292422698839, worksheet.costpercapita_i72, 0.001); end
  def test_costpercapita_j72; assert_in_epsilon(5.413123221570472, worksheet.costpercapita_j72, 0.001); end
  def test_costpercapita_k72; assert_in_epsilon(5.915526003929274, worksheet.costpercapita_k72, 0.001); end
  def test_costpercapita_l72; assert_in_epsilon(6.4510686303048175, worksheet.costpercapita_l72, 0.001); end
  def test_costpercapita_m72; assert_in_epsilon(7.021139555613964, worksheet.costpercapita_m72, 0.001); end
  def test_costpercapita_o72; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_o72, 0.001); end
  def test_costpercapita_p72; assert_in_epsilon(3.163751694170952, worksheet.costpercapita_p72, 0.001); end
  def test_costpercapita_q72; assert_in_epsilon(3.3344820770620087, worksheet.costpercapita_q72, 0.001); end
  def test_costpercapita_r72; assert_in_epsilon(4.013727649779479, worksheet.costpercapita_r72, 0.001); end
  def test_costpercapita_s72; assert_in_epsilon(4.751632718872863, worksheet.costpercapita_s72, 0.001); end
  def test_costpercapita_t72; assert_in_epsilon(5.149196891170851, worksheet.costpercapita_t72, 0.001); end
  def test_costpercapita_u72; assert_in_epsilon(5.574866909780351, worksheet.costpercapita_u72, 0.001); end
  def test_costpercapita_v72; assert_in_epsilon(6.026049104788923, worksheet.costpercapita_v72, 0.001); end
  def test_costpercapita_w72; assert_in_epsilon(6.503810323183469, worksheet.costpercapita_w72, 0.001); end
  def test_costpercapita_y72; assert_in_delta(0, (worksheet.costpercapita_y72||0), 0.001); end
  def test_costpercapita_z72; assert_in_delta(0, (worksheet.costpercapita_z72||0), 0.001); end
  def test_costpercapita_aa72; assert_in_delta(0, (worksheet.costpercapita_aa72||0), 0.001); end
  def test_costpercapita_ab72; assert_in_delta(0, (worksheet.costpercapita_ab72||0), 0.001); end
  def test_costpercapita_ac72; assert_in_delta(0, (worksheet.costpercapita_ac72||0), 0.001); end
  def test_costpercapita_ad72; assert_in_delta(0, (worksheet.costpercapita_ad72||0), 0.001); end
  def test_costpercapita_ae72; assert_in_delta(0, (worksheet.costpercapita_ae72||0), 0.001); end
  def test_costpercapita_af72; assert_in_delta(0, (worksheet.costpercapita_af72||0), 0.001); end
  def test_costpercapita_ag72; assert_in_delta(0, (worksheet.costpercapita_ag72||0), 0.001); end
  def test_costpercapita_ai72; assert_in_epsilon(5.976545007430845, worksheet.costpercapita_ai72, 0.001); end
  def test_costpercapita_aj72; assert_in_epsilon(6.327503388341904, worksheet.costpercapita_aj72, 0.001); end
  def test_costpercapita_ak72; assert_in_epsilon(6.668964154124017, worksheet.costpercapita_ak72, 0.001); end
  def test_costpercapita_al72; assert_in_epsilon(8.118589979806298, worksheet.costpercapita_al72, 0.001); end
  def test_costpercapita_am72; assert_in_epsilon(9.697925141571702, worksheet.costpercapita_am72, 0.001); end
  def test_costpercapita_an72; assert_in_epsilon(10.562320112741324, worksheet.costpercapita_an72, 0.001); end
  def test_costpercapita_ao72; assert_in_epsilon(11.490392913709625, worksheet.costpercapita_ao72, 0.001); end
  def test_costpercapita_ap72; assert_in_epsilon(12.47711773509374, worksheet.costpercapita_ap72, 0.001); end
  def test_costpercapita_aq72; assert_in_epsilon(13.524949878797434, worksheet.costpercapita_aq72, 0.001); end
  def test_costpercapita_as72; assert_in_epsilon(9.427145367957431, worksheet.costpercapita_as72, 0.001); end
  def test_costpercapita_at72; assert_in_epsilon(184.76852859884877, worksheet.costpercapita_at72, 0.001); end
  def test_costpercapita_av72; assert_in_delta(0.07, worksheet.costpercapita_av72, 0.001); end
  def test_costpercapita_aw72; assert_in_epsilon(15, worksheet.costpercapita_aw72, 0.001); end
  def test_costpercapita_ay72; assert_in_delta(0.9842887741493158, worksheet.costpercapita_ay72, 0.001); end
  def test_costpercapita_az72; assert_in_epsilon(1.736814649543366, worksheet.costpercapita_az72, 0.001); end
  def test_costpercapita_ba72; assert_in_epsilon(1.83054104111628, worksheet.costpercapita_ba72, 0.001); end
  def test_costpercapita_bb72; assert_in_epsilon(2.2534590948729694, worksheet.costpercapita_bb72, 0.001); end
  def test_costpercapita_bc72; assert_in_epsilon(2.7153816010582568, worksheet.costpercapita_bc72, 0.001); end
  def test_costpercapita_bd72; assert_in_epsilon(2.971659162863167, worksheet.costpercapita_bd72, 0.001); end
  def test_costpercapita_be72; assert_in_epsilon(3.247464787552297, worksheet.costpercapita_be72, 0.001); end
  def test_costpercapita_bf72; assert_in_epsilon(3.5414632959237675, worksheet.costpercapita_bf72, 0.001); end
  def test_costpercapita_bg72; assert_in_epsilon(3.854416912410135, worksheet.costpercapita_bg72, 0.001); end
  def test_costpercapita_bi72; assert_in_delta(0.9842887741493158, worksheet.costpercapita_bi72, 0.001); end
  def test_costpercapita_bj72; assert_in_epsilon(2.6886464332020825, worksheet.costpercapita_bj72, 0.001); end
  def test_costpercapita_bk72; assert_in_epsilon(4.431166162888821, worksheet.costpercapita_bk72, 0.001); end
  def test_costpercapita_bl72; assert_in_epsilon(5.655257544627507, worksheet.costpercapita_bl72, 0.001); end
  def test_costpercapita_bm72; assert_in_epsilon(6.632674820632329, worksheet.costpercapita_bm72, 0.001); end
  def test_costpercapita_bn72; assert_in_epsilon(7.76334071415433, worksheet.costpercapita_bn72, 0.001); end
  def test_costpercapita_bo72; assert_in_epsilon(8.750622913760553, worksheet.costpercapita_bo72, 0.001); end
  def test_costpercapita_bp72; assert_in_epsilon(9.574418069603848, worksheet.costpercapita_bp72, 0.001); end
  def test_costpercapita_bq72; assert_in_epsilon(10.45308054296892, worksheet.costpercapita_bq72, 0.001); end
  def test_costpercapita_bs72; assert_in_epsilon(3.972561277864738, worksheet.costpercapita_bs72, 0.001); end
  def test_costpercapita_bt72; assert_in_epsilon(5.852398127373035, worksheet.costpercapita_bt72, 0.001); end
  def test_costpercapita_bu72; assert_in_epsilon(7.7656482399508295, worksheet.costpercapita_bu72, 0.001); end
  def test_costpercapita_bv72; assert_in_epsilon(9.668985194406988, worksheet.costpercapita_bv72, 0.001); end
  def test_costpercapita_bw72; assert_in_epsilon(11.384307539505192, worksheet.costpercapita_bw72, 0.001); end
  def test_costpercapita_bx72; assert_in_epsilon(12.91253760532518, worksheet.costpercapita_bx72, 0.001); end
  def test_costpercapita_by72; assert_in_epsilon(14.325489823540906, worksheet.costpercapita_by72, 0.001); end
  def test_costpercapita_bz72; assert_in_epsilon(15.60046717439277, worksheet.costpercapita_bz72, 0.001); end
  def test_costpercapita_ca72; assert_in_epsilon(16.95689086615239, worksheet.costpercapita_ca72, 0.001); end
  def test_costpercapita_cc72; assert_in_epsilon(10.93769842761245, worksheet.costpercapita_cc72, 0.001); end
  def test_costpercapita_cd72; assert_in_epsilon(212.8878390517647, worksheet.costpercapita_cd72, 0.001); end
  def test_costpercapita_cf72; assert_in_epsilon(-2.0039837295661065, worksheet.costpercapita_cf72, 0.001); end
  def test_costpercapita_cg72; assert_in_delta(-0.4751052609688693, worksheet.costpercapita_cg72, 0.001); end
  def test_costpercapita_ch72; assert_in_epsilon(1.0966840858268125, worksheet.costpercapita_ch72, 0.001); end
  def test_costpercapita_ci72; assert_in_epsilon(1.5503952146006879, worksheet.costpercapita_ci72, 0.001); end
  def test_costpercapita_cj72; assert_in_epsilon(1.6863823979334904, worksheet.costpercapita_cj72, 0.001); end
  def test_costpercapita_ck72; assert_in_epsilon(2.350217492583858, worksheet.costpercapita_ck72, 0.001); end
  def test_costpercapita_cl72; assert_in_epsilon(2.8350969098312797, worksheet.costpercapita_cl72, 0.001); end
  def test_costpercapita_cm72; assert_in_epsilon(3.12334943929903, worksheet.costpercapita_cm72, 0.001); end
  def test_costpercapita_cn72; assert_in_epsilon(3.4319409873549547, worksheet.costpercapita_cn72, 0.001); end
  def test_costpercapita_cp72; assert_in_epsilon(1.5105530596550154, worksheet.costpercapita_cp72, 0.001); end
  def test_costpercapita_cq72; assert_in_epsilon(28.119310452915897, worksheet.costpercapita_cq72, 0.001); end
  def test_costpercapita_cr72; assert_equal("ok", worksheet.costpercapita_cr72); end
  def test_costpercapita_a73; assert_equal("VI.b.Waste", worksheet.costpercapita_a73); end
  def test_costpercapita_b73; assert_equal("Waste arising", worksheet.costpercapita_b73); end
  def test_costpercapita_c73; assert_equal("Bioenergy", worksheet.costpercapita_c73); end
  def test_costpercapita_e73; assert_in_epsilon(40.270645622606374, worksheet.costpercapita_e73, 0.001); end
  def test_costpercapita_f73; assert_in_epsilon(39.852508870319944, worksheet.costpercapita_f73, 0.001); end
  def test_costpercapita_g73; assert_in_epsilon(42.73324421444755, worksheet.costpercapita_g73, 0.001); end
  def test_costpercapita_h73; assert_in_epsilon(42.233974724262474, worksheet.costpercapita_h73, 0.001); end
  def test_costpercapita_i73; assert_in_epsilon(44.97217134539262, worksheet.costpercapita_i73, 0.001); end
  def test_costpercapita_j73; assert_in_epsilon(50.17539007815597, worksheet.costpercapita_j73, 0.001); end
  def test_costpercapita_k73; assert_in_epsilon(49.6179949490512, worksheet.costpercapita_k73, 0.001); end
  def test_costpercapita_l73; assert_in_epsilon(52.07489653317105, worksheet.costpercapita_l73, 0.001); end
  def test_costpercapita_m73; assert_in_epsilon(57.13881504379448, worksheet.costpercapita_m73, 0.001); end
  def test_costpercapita_o73; assert_in_epsilon(76.84680545526342, worksheet.costpercapita_o73, 0.001); end
  def test_costpercapita_p73; assert_in_epsilon(76.01638681551846, worksheet.costpercapita_p73, 0.001); end
  def test_costpercapita_q73; assert_in_epsilon(75.17225827763093, worksheet.costpercapita_q73, 0.001); end
  def test_costpercapita_r73; assert_in_epsilon(79.88999961742068, worksheet.costpercapita_r73, 0.001); end
  def test_costpercapita_s73; assert_in_epsilon(84.66694517696794, worksheet.costpercapita_s73, 0.001); end
  def test_costpercapita_t73; assert_in_epsilon(88.20793997855102, worksheet.costpercapita_t73, 0.001); end
  def test_costpercapita_u73; assert_in_epsilon(91.87984271413711, worksheet.costpercapita_u73, 0.001); end
  def test_costpercapita_v73; assert_in_epsilon(95.62233580517288, worksheet.costpercapita_v73, 0.001); end
  def test_costpercapita_w73; assert_in_epsilon(99.43965322421822, worksheet.costpercapita_w73, 0.001); end
  def test_costpercapita_y73; assert_in_delta(0, (worksheet.costpercapita_y73||0), 0.001); end
  def test_costpercapita_z73; assert_in_delta(0, (worksheet.costpercapita_z73||0), 0.001); end
  def test_costpercapita_aa73; assert_in_delta(0, (worksheet.costpercapita_aa73||0), 0.001); end
  def test_costpercapita_ab73; assert_in_delta(0, (worksheet.costpercapita_ab73||0), 0.001); end
  def test_costpercapita_ac73; assert_in_delta(0, (worksheet.costpercapita_ac73||0), 0.001); end
  def test_costpercapita_ad73; assert_in_delta(0, (worksheet.costpercapita_ad73||0), 0.001); end
  def test_costpercapita_ae73; assert_in_delta(0, (worksheet.costpercapita_ae73||0), 0.001); end
  def test_costpercapita_af73; assert_in_delta(0, (worksheet.costpercapita_af73||0), 0.001); end
  def test_costpercapita_ag73; assert_in_delta(0, (worksheet.costpercapita_ag73||0), 0.001); end
  def test_costpercapita_ai73; assert_in_epsilon(117.1174510778698, worksheet.costpercapita_ai73, 0.001); end
  def test_costpercapita_aj73; assert_in_epsilon(115.86889568583841, worksheet.costpercapita_aj73, 0.001); end
  def test_costpercapita_ak73; assert_in_epsilon(117.90550249207848, worksheet.costpercapita_ak73, 0.001); end
  def test_costpercapita_al73; assert_in_epsilon(122.12397434168314, worksheet.costpercapita_al73, 0.001); end
  def test_costpercapita_am73; assert_in_epsilon(129.63911652236055, worksheet.costpercapita_am73, 0.001); end
  def test_costpercapita_an73; assert_in_epsilon(138.383330056707, worksheet.costpercapita_an73, 0.001); end
  def test_costpercapita_ao73; assert_in_epsilon(141.49783766318834, worksheet.costpercapita_ao73, 0.001); end
  def test_costpercapita_ap73; assert_in_epsilon(147.69723233834392, worksheet.costpercapita_ap73, 0.001); end
  def test_costpercapita_aq73; assert_in_epsilon(156.5784682680127, worksheet.costpercapita_aq73, 0.001); end
  def test_costpercapita_as73; assert_in_epsilon(131.86797871623136, worksheet.costpercapita_as73, 0.001); end
  def test_costpercapita_at73; assert_in_epsilon(2692.4234200245314, worksheet.costpercapita_at73, 0.001); end
  def test_costpercapita_av73; assert_in_delta(0.07, worksheet.costpercapita_av73, 0.001); end
  def test_costpercapita_aw73; assert_in_epsilon(15, worksheet.costpercapita_aw73, 0.001); end
  def test_costpercapita_ay73; assert_in_epsilon(13.264501267803894, worksheet.costpercapita_ay73, 0.001); end
  def test_costpercapita_az73; assert_in_epsilon(21.877956274051556, worksheet.costpercapita_az73, 0.001); end
  def test_costpercapita_ba73; assert_in_epsilon(23.45940255390864, worksheet.costpercapita_ba73, 0.001); end
  def test_costpercapita_bb73; assert_in_epsilon(23.185317022410967, worksheet.costpercapita_bb73, 0.001); end
  def test_costpercapita_bc73; assert_in_epsilon(24.68851337428371, worksheet.costpercapita_bc73, 0.001); end
  def test_costpercapita_bd73; assert_in_epsilon(27.544940614288706, worksheet.costpercapita_bd73, 0.001); end
  def test_costpercapita_be73; assert_in_epsilon(27.23894566923757, worksheet.costpercapita_be73, 0.001); end
  def test_costpercapita_bf73; assert_in_epsilon(28.587718606016306, worksheet.costpercapita_bf73, 0.001); end
  def test_costpercapita_bg73; assert_in_epsilon(31.3676737679682, worksheet.costpercapita_bg73, 0.001); end
  def test_costpercapita_bi73; assert_in_epsilon(13.264501267803894, worksheet.costpercapita_bi73, 0.001); end
  def test_costpercapita_bj73; assert_in_epsilon(34.70505969396905, worksheet.costpercapita_bj73, 0.001); end
  def test_costpercapita_bk73; assert_in_epsilon(57.0282827823369, worksheet.costpercapita_bk73, 0.001); end
  def test_costpercapita_bl73; assert_in_epsilon(66.42480725857165, worksheet.costpercapita_bl73, 0.001); end
  def test_costpercapita_bm73; assert_in_epsilon(69.35235239095906, worksheet.costpercapita_bm73, 0.001); end
  def test_costpercapita_bn73; assert_in_epsilon(73.6725640138215, worksheet.costpercapita_bn73, 0.001); end
  def test_costpercapita_bo73; assert_in_epsilon(77.78929620011914, worksheet.costpercapita_bo73, 0.001); end
  def test_costpercapita_bp73; assert_in_epsilon(81.70306406213311, worksheet.costpercapita_bp73, 0.001); end
  def test_costpercapita_bq73; assert_in_epsilon(85.61929520958597, worksheet.costpercapita_bq73, 0.001); end
  def test_costpercapita_bs73; assert_in_epsilon(90.11130672306733, worksheet.costpercapita_bs73, 0.001); end
  def test_costpercapita_bt73; assert_in_epsilon(110.7214465094875, worksheet.costpercapita_bt73, 0.001); end
  def test_costpercapita_bu73; assert_in_epsilon(132.20054105996783, worksheet.costpercapita_bu73, 0.001); end
  def test_costpercapita_bv73; assert_in_epsilon(146.31480687599233, worksheet.costpercapita_bv73, 0.001); end
  def test_costpercapita_bw73; assert_in_epsilon(154.019297567927, worksheet.costpercapita_bw73, 0.001); end
  def test_costpercapita_bx73; assert_in_epsilon(161.88050399237252, worksheet.costpercapita_bx73, 0.001); end
  def test_costpercapita_by73; assert_in_epsilon(169.66913891425625, worksheet.costpercapita_by73, 0.001); end
  def test_costpercapita_bz73; assert_in_epsilon(177.32539986730598, worksheet.costpercapita_bz73, 0.001); end
  def test_costpercapita_ca73; assert_in_epsilon(185.05894843380418, worksheet.costpercapita_ca73, 0.001); end
  def test_costpercapita_cc73; assert_in_epsilon(147.4779322160201, worksheet.costpercapita_cc73, 0.001); end
  def test_costpercapita_cd73; assert_in_epsilon(3011.054369440571, worksheet.costpercapita_cd73, 0.001); end
  def test_costpercapita_cf73; assert_in_epsilon(-27.006144354802483, worksheet.costpercapita_cf73, 0.001); end
  def test_costpercapita_cg73; assert_in_epsilon(-5.147449176350898, worksheet.costpercapita_cg73, 0.001); end
  def test_costpercapita_ch73; assert_in_epsilon(14.295038567889351, worksheet.costpercapita_ch73, 0.001); end
  def test_costpercapita_ci73; assert_in_epsilon(24.19083253430917, worksheet.costpercapita_ci73, 0.001); end
  def test_costpercapita_cj73; assert_in_epsilon(24.38018104556643, worksheet.costpercapita_cj73, 0.001); end
  def test_costpercapita_ck73; assert_in_epsilon(23.497173935665522, worksheet.costpercapita_ck73, 0.001); end
  def test_costpercapita_cl73; assert_in_epsilon(28.171301251067934, worksheet.costpercapita_cl73, 0.001); end
  def test_costpercapita_cm73; assert_in_epsilon(29.62816752896205, worksheet.costpercapita_cm73, 0.001); end
  def test_costpercapita_cn73; assert_in_epsilon(28.48048016579149, worksheet.costpercapita_cn73, 0.001); end
  def test_costpercapita_cp73; assert_in_epsilon(15.60995349978873, worksheet.costpercapita_cp73, 0.001); end
  def test_costpercapita_cq73; assert_in_epsilon(318.63094941603936, worksheet.costpercapita_cq73, 0.001); end
  def test_costpercapita_cr73; assert_equal("ok", worksheet.costpercapita_cr73); end
  def test_costpercapita_a74; assert_equal("VI.c", worksheet.costpercapita_a74); end
  def test_costpercapita_b74; assert_equal("Marine algae", worksheet.costpercapita_b74); end
  def test_costpercapita_c74; assert_equal("Bioenergy", worksheet.costpercapita_c74); end
  def test_costpercapita_e74; assert_in_delta(0, (worksheet.costpercapita_e74||0), 0.001); end
  def test_costpercapita_f74; assert_in_delta(0, (worksheet.costpercapita_f74||0), 0.001); end
  def test_costpercapita_g74; assert_in_delta(0, (worksheet.costpercapita_g74||0), 0.001); end
  def test_costpercapita_h74; assert_in_delta(0, (worksheet.costpercapita_h74||0), 0.001); end
  def test_costpercapita_i74; assert_in_delta(0, (worksheet.costpercapita_i74||0), 0.001); end
  def test_costpercapita_j74; assert_in_delta(0, (worksheet.costpercapita_j74||0), 0.001); end
  def test_costpercapita_k74; assert_in_delta(0, (worksheet.costpercapita_k74||0), 0.001); end
  def test_costpercapita_l74; assert_in_delta(0, (worksheet.costpercapita_l74||0), 0.001); end
  def test_costpercapita_m74; assert_in_delta(0, (worksheet.costpercapita_m74||0), 0.001); end
  def test_costpercapita_o74; assert_in_delta(0, (worksheet.costpercapita_o74||0), 0.001); end
  def test_costpercapita_p74; assert_in_delta(0, (worksheet.costpercapita_p74||0), 0.001); end
  def test_costpercapita_q74; assert_in_delta(0, (worksheet.costpercapita_q74||0), 0.001); end
  def test_costpercapita_r74; assert_in_delta(0, (worksheet.costpercapita_r74||0), 0.001); end
  def test_costpercapita_s74; assert_in_delta(0, (worksheet.costpercapita_s74||0), 0.001); end
  def test_costpercapita_t74; assert_in_delta(0, (worksheet.costpercapita_t74||0), 0.001); end
  def test_costpercapita_u74; assert_in_delta(0, (worksheet.costpercapita_u74||0), 0.001); end
  def test_costpercapita_v74; assert_in_delta(0, (worksheet.costpercapita_v74||0), 0.001); end
  def test_costpercapita_w74; assert_in_delta(0, (worksheet.costpercapita_w74||0), 0.001); end
  def test_costpercapita_y74; assert_in_delta(0, (worksheet.costpercapita_y74||0), 0.001); end
  def test_costpercapita_z74; assert_in_delta(0, (worksheet.costpercapita_z74||0), 0.001); end
  def test_costpercapita_aa74; assert_in_delta(0, (worksheet.costpercapita_aa74||0), 0.001); end
  def test_costpercapita_ab74; assert_in_delta(0, (worksheet.costpercapita_ab74||0), 0.001); end
  def test_costpercapita_ac74; assert_in_delta(0, (worksheet.costpercapita_ac74||0), 0.001); end
  def test_costpercapita_ad74; assert_in_delta(0, (worksheet.costpercapita_ad74||0), 0.001); end
  def test_costpercapita_ae74; assert_in_delta(0, (worksheet.costpercapita_ae74||0), 0.001); end
  def test_costpercapita_af74; assert_in_delta(0, (worksheet.costpercapita_af74||0), 0.001); end
  def test_costpercapita_ag74; assert_in_delta(0, (worksheet.costpercapita_ag74||0), 0.001); end
  def test_costpercapita_ai74; assert_in_delta(0, (worksheet.costpercapita_ai74||0), 0.001); end
  def test_costpercapita_aj74; assert_in_delta(0, (worksheet.costpercapita_aj74||0), 0.001); end
  def test_costpercapita_ak74; assert_in_delta(0, (worksheet.costpercapita_ak74||0), 0.001); end
  def test_costpercapita_al74; assert_in_delta(0, (worksheet.costpercapita_al74||0), 0.001); end
  def test_costpercapita_am74; assert_in_delta(0, (worksheet.costpercapita_am74||0), 0.001); end
  def test_costpercapita_an74; assert_in_delta(0, (worksheet.costpercapita_an74||0), 0.001); end
  def test_costpercapita_ao74; assert_in_delta(0, (worksheet.costpercapita_ao74||0), 0.001); end
  def test_costpercapita_ap74; assert_in_delta(0, (worksheet.costpercapita_ap74||0), 0.001); end
  def test_costpercapita_aq74; assert_in_delta(0, (worksheet.costpercapita_aq74||0), 0.001); end
  def test_costpercapita_as74; assert_in_delta(0, (worksheet.costpercapita_as74||0), 0.001); end
  def test_costpercapita_at74; assert_in_delta(0, (worksheet.costpercapita_at74||0), 0.001); end
  def test_costpercapita_av74; assert_in_delta(0, (worksheet.costpercapita_av74||0), 0.001); end
  def test_costpercapita_aw74; assert_in_epsilon(5, worksheet.costpercapita_aw74, 0.001); end
  def test_costpercapita_ay74; assert_in_delta(0, (worksheet.costpercapita_ay74||0), 0.001); end
  def test_costpercapita_az74; assert_in_delta(0, (worksheet.costpercapita_az74||0), 0.001); end
  def test_costpercapita_ba74; assert_in_delta(0, (worksheet.costpercapita_ba74||0), 0.001); end
  def test_costpercapita_bb74; assert_in_delta(0, (worksheet.costpercapita_bb74||0), 0.001); end
  def test_costpercapita_bc74; assert_in_delta(0, (worksheet.costpercapita_bc74||0), 0.001); end
  def test_costpercapita_bd74; assert_in_delta(0, (worksheet.costpercapita_bd74||0), 0.001); end
  def test_costpercapita_be74; assert_in_delta(0, (worksheet.costpercapita_be74||0), 0.001); end
  def test_costpercapita_bf74; assert_in_delta(0, (worksheet.costpercapita_bf74||0), 0.001); end
  def test_costpercapita_bg74; assert_in_delta(0, (worksheet.costpercapita_bg74||0), 0.001); end
  def test_costpercapita_bi74; assert_in_delta(0, (worksheet.costpercapita_bi74||0), 0.001); end
  def test_costpercapita_bj74; assert_in_delta(0, (worksheet.costpercapita_bj74||0), 0.001); end
  def test_costpercapita_bk74; assert_in_delta(0, (worksheet.costpercapita_bk74||0), 0.001); end
  def test_costpercapita_bl74; assert_in_delta(0, (worksheet.costpercapita_bl74||0), 0.001); end
  def test_costpercapita_bm74; assert_in_delta(0, (worksheet.costpercapita_bm74||0), 0.001); end
  def test_costpercapita_bn74; assert_in_delta(0, (worksheet.costpercapita_bn74||0), 0.001); end
  def test_costpercapita_bo74; assert_in_delta(0, (worksheet.costpercapita_bo74||0), 0.001); end
  def test_costpercapita_bp74; assert_in_delta(0, (worksheet.costpercapita_bp74||0), 0.001); end
  def test_costpercapita_bq74; assert_in_delta(0, (worksheet.costpercapita_bq74||0), 0.001); end
  def test_costpercapita_bs74; assert_in_delta(0, (worksheet.costpercapita_bs74||0), 0.001); end
  def test_costpercapita_bt74; assert_in_delta(0, (worksheet.costpercapita_bt74||0), 0.001); end
  def test_costpercapita_bu74; assert_in_delta(0, (worksheet.costpercapita_bu74||0), 0.001); end
  def test_costpercapita_bv74; assert_in_delta(0, (worksheet.costpercapita_bv74||0), 0.001); end
  def test_costpercapita_bw74; assert_in_delta(0, (worksheet.costpercapita_bw74||0), 0.001); end
  def test_costpercapita_bx74; assert_in_delta(0, (worksheet.costpercapita_bx74||0), 0.001); end
  def test_costpercapita_by74; assert_in_delta(0, (worksheet.costpercapita_by74||0), 0.001); end
  def test_costpercapita_bz74; assert_in_delta(0, (worksheet.costpercapita_bz74||0), 0.001); end
  def test_costpercapita_ca74; assert_in_delta(0, (worksheet.costpercapita_ca74||0), 0.001); end
  def test_costpercapita_cc74; assert_in_delta(0, (worksheet.costpercapita_cc74||0), 0.001); end
  def test_costpercapita_cd74; assert_in_delta(0, (worksheet.costpercapita_cd74||0), 0.001); end
  def test_costpercapita_cf74; assert_in_delta(0, (worksheet.costpercapita_cf74||0), 0.001); end
  def test_costpercapita_cg74; assert_in_delta(0, (worksheet.costpercapita_cg74||0), 0.001); end
  def test_costpercapita_ch74; assert_in_delta(0, (worksheet.costpercapita_ch74||0), 0.001); end
  def test_costpercapita_ci74; assert_in_delta(0, (worksheet.costpercapita_ci74||0), 0.001); end
  def test_costpercapita_cj74; assert_in_delta(0, (worksheet.costpercapita_cj74||0), 0.001); end
  def test_costpercapita_ck74; assert_in_delta(0, (worksheet.costpercapita_ck74||0), 0.001); end
  def test_costpercapita_cl74; assert_in_delta(0, (worksheet.costpercapita_cl74||0), 0.001); end
  def test_costpercapita_cm74; assert_in_delta(0, (worksheet.costpercapita_cm74||0), 0.001); end
  def test_costpercapita_cn74; assert_in_delta(0, (worksheet.costpercapita_cn74||0), 0.001); end
  def test_costpercapita_cp74; assert_in_delta(0, (worksheet.costpercapita_cp74||0), 0.001); end
  def test_costpercapita_cq74; assert_in_delta(0, (worksheet.costpercapita_cq74||0), 0.001); end
  def test_costpercapita_cr74; assert_equal("ok", worksheet.costpercapita_cr74); end
  def test_costpercapita_a75; assert_equal("VII.a.Imports", worksheet.costpercapita_a75); end
  def test_costpercapita_b75; assert_equal("Electricity imports", worksheet.costpercapita_b75); end
  def test_costpercapita_c75; assert_equal("Electricity", worksheet.costpercapita_c75); end
  def test_costpercapita_e75; assert_in_delta(0, (worksheet.costpercapita_e75||0), 0.001); end
  def test_costpercapita_f75; assert_in_delta(0, (worksheet.costpercapita_f75||0), 0.001); end
  def test_costpercapita_g75; assert_in_delta(0, (worksheet.costpercapita_g75||0), 0.001); end
  def test_costpercapita_h75; assert_in_delta(0, (worksheet.costpercapita_h75||0), 0.001); end
  def test_costpercapita_i75; assert_in_delta(0, (worksheet.costpercapita_i75||0), 0.001); end
  def test_costpercapita_j75; assert_in_delta(0, (worksheet.costpercapita_j75||0), 0.001); end
  def test_costpercapita_k75; assert_in_delta(0, (worksheet.costpercapita_k75||0), 0.001); end
  def test_costpercapita_l75; assert_in_delta(0, (worksheet.costpercapita_l75||0), 0.001); end
  def test_costpercapita_m75; assert_in_delta(0, (worksheet.costpercapita_m75||0), 0.001); end
  def test_costpercapita_o75; assert_in_delta(0, (worksheet.costpercapita_o75||0), 0.001); end
  def test_costpercapita_p75; assert_in_delta(0, (worksheet.costpercapita_p75||0), 0.001); end
  def test_costpercapita_q75; assert_in_delta(0, (worksheet.costpercapita_q75||0), 0.001); end
  def test_costpercapita_r75; assert_in_delta(0, (worksheet.costpercapita_r75||0), 0.001); end
  def test_costpercapita_s75; assert_in_delta(0, (worksheet.costpercapita_s75||0), 0.001); end
  def test_costpercapita_t75; assert_in_delta(0, (worksheet.costpercapita_t75||0), 0.001); end
  def test_costpercapita_u75; assert_in_delta(0, (worksheet.costpercapita_u75||0), 0.001); end
  def test_costpercapita_v75; assert_in_delta(0, (worksheet.costpercapita_v75||0), 0.001); end
  def test_costpercapita_w75; assert_in_delta(0, (worksheet.costpercapita_w75||0), 0.001); end
  def test_costpercapita_y75; assert_in_delta(0, (worksheet.costpercapita_y75||0), 0.001); end
  def test_costpercapita_z75; assert_in_delta(0, (worksheet.costpercapita_z75||0), 0.001); end
  def test_costpercapita_aa75; assert_in_delta(0, (worksheet.costpercapita_aa75||0), 0.001); end
  def test_costpercapita_ab75; assert_in_delta(0, (worksheet.costpercapita_ab75||0), 0.001); end
  def test_costpercapita_ac75; assert_in_delta(0, (worksheet.costpercapita_ac75||0), 0.001); end
  def test_costpercapita_ad75; assert_in_delta(0, (worksheet.costpercapita_ad75||0), 0.001); end
  def test_costpercapita_ae75; assert_in_delta(0, (worksheet.costpercapita_ae75||0), 0.001); end
  def test_costpercapita_af75; assert_in_delta(0, (worksheet.costpercapita_af75||0), 0.001); end
  def test_costpercapita_ag75; assert_in_delta(0, (worksheet.costpercapita_ag75||0), 0.001); end
  def test_costpercapita_ai75; assert_in_delta(0, (worksheet.costpercapita_ai75||0), 0.001); end
  def test_costpercapita_aj75; assert_in_delta(0, (worksheet.costpercapita_aj75||0), 0.001); end
  def test_costpercapita_ak75; assert_in_delta(0, (worksheet.costpercapita_ak75||0), 0.001); end
  def test_costpercapita_al75; assert_in_delta(0, (worksheet.costpercapita_al75||0), 0.001); end
  def test_costpercapita_am75; assert_in_delta(0, (worksheet.costpercapita_am75||0), 0.001); end
  def test_costpercapita_an75; assert_in_delta(0, (worksheet.costpercapita_an75||0), 0.001); end
  def test_costpercapita_ao75; assert_in_delta(0, (worksheet.costpercapita_ao75||0), 0.001); end
  def test_costpercapita_ap75; assert_in_delta(0, (worksheet.costpercapita_ap75||0), 0.001); end
  def test_costpercapita_aq75; assert_in_delta(0, (worksheet.costpercapita_aq75||0), 0.001); end
  def test_costpercapita_as75; assert_in_delta(0, (worksheet.costpercapita_as75||0), 0.001); end
  def test_costpercapita_at75; assert_in_delta(0, (worksheet.costpercapita_at75||0), 0.001); end
  def test_costpercapita_av75; assert_in_delta(0, (worksheet.costpercapita_av75||0), 0.001); end
  def test_costpercapita_aw75; assert_in_epsilon(5, worksheet.costpercapita_aw75, 0.001); end
  def test_costpercapita_ay75; assert_in_delta(0, (worksheet.costpercapita_ay75||0), 0.001); end
  def test_costpercapita_az75; assert_in_delta(0, (worksheet.costpercapita_az75||0), 0.001); end
  def test_costpercapita_ba75; assert_in_delta(0, (worksheet.costpercapita_ba75||0), 0.001); end
  def test_costpercapita_bb75; assert_in_delta(0, (worksheet.costpercapita_bb75||0), 0.001); end
  def test_costpercapita_bc75; assert_in_delta(0, (worksheet.costpercapita_bc75||0), 0.001); end
  def test_costpercapita_bd75; assert_in_delta(0, (worksheet.costpercapita_bd75||0), 0.001); end
  def test_costpercapita_be75; assert_in_delta(0, (worksheet.costpercapita_be75||0), 0.001); end
  def test_costpercapita_bf75; assert_in_delta(0, (worksheet.costpercapita_bf75||0), 0.001); end
  def test_costpercapita_bg75; assert_in_delta(0, (worksheet.costpercapita_bg75||0), 0.001); end
  def test_costpercapita_bi75; assert_in_delta(0, (worksheet.costpercapita_bi75||0), 0.001); end
  def test_costpercapita_bj75; assert_in_delta(0, (worksheet.costpercapita_bj75||0), 0.001); end
  def test_costpercapita_bk75; assert_in_delta(0, (worksheet.costpercapita_bk75||0), 0.001); end
  def test_costpercapita_bl75; assert_in_delta(0, (worksheet.costpercapita_bl75||0), 0.001); end
  def test_costpercapita_bm75; assert_in_delta(0, (worksheet.costpercapita_bm75||0), 0.001); end
  def test_costpercapita_bn75; assert_in_delta(0, (worksheet.costpercapita_bn75||0), 0.001); end
  def test_costpercapita_bo75; assert_in_delta(0, (worksheet.costpercapita_bo75||0), 0.001); end
  def test_costpercapita_bp75; assert_in_delta(0, (worksheet.costpercapita_bp75||0), 0.001); end
  def test_costpercapita_bq75; assert_in_delta(0, (worksheet.costpercapita_bq75||0), 0.001); end
  def test_costpercapita_bs75; assert_in_delta(0, (worksheet.costpercapita_bs75||0), 0.001); end
  def test_costpercapita_bt75; assert_in_delta(0, (worksheet.costpercapita_bt75||0), 0.001); end
  def test_costpercapita_bu75; assert_in_delta(0, (worksheet.costpercapita_bu75||0), 0.001); end
  def test_costpercapita_bv75; assert_in_delta(0, (worksheet.costpercapita_bv75||0), 0.001); end
  def test_costpercapita_bw75; assert_in_delta(0, (worksheet.costpercapita_bw75||0), 0.001); end
  def test_costpercapita_bx75; assert_in_delta(0, (worksheet.costpercapita_bx75||0), 0.001); end
  def test_costpercapita_by75; assert_in_delta(0, (worksheet.costpercapita_by75||0), 0.001); end
  def test_costpercapita_bz75; assert_in_delta(0, (worksheet.costpercapita_bz75||0), 0.001); end
  def test_costpercapita_ca75; assert_in_delta(0, (worksheet.costpercapita_ca75||0), 0.001); end
  def test_costpercapita_cc75; assert_in_delta(0, (worksheet.costpercapita_cc75||0), 0.001); end
  def test_costpercapita_cd75; assert_in_delta(0, (worksheet.costpercapita_cd75||0), 0.001); end
  def test_costpercapita_cf75; assert_in_delta(0, (worksheet.costpercapita_cf75||0), 0.001); end
  def test_costpercapita_cg75; assert_in_delta(0, (worksheet.costpercapita_cg75||0), 0.001); end
  def test_costpercapita_ch75; assert_in_delta(0, (worksheet.costpercapita_ch75||0), 0.001); end
  def test_costpercapita_ci75; assert_in_delta(0, (worksheet.costpercapita_ci75||0), 0.001); end
  def test_costpercapita_cj75; assert_in_delta(0, (worksheet.costpercapita_cj75||0), 0.001); end
  def test_costpercapita_ck75; assert_in_delta(0, (worksheet.costpercapita_ck75||0), 0.001); end
  def test_costpercapita_cl75; assert_in_delta(0, (worksheet.costpercapita_cl75||0), 0.001); end
  def test_costpercapita_cm75; assert_in_delta(0, (worksheet.costpercapita_cm75||0), 0.001); end
  def test_costpercapita_cn75; assert_in_delta(0, (worksheet.costpercapita_cn75||0), 0.001); end
  def test_costpercapita_cp75; assert_in_delta(0, (worksheet.costpercapita_cp75||0), 0.001); end
  def test_costpercapita_cq75; assert_in_delta(0, (worksheet.costpercapita_cq75||0), 0.001); end
  def test_costpercapita_cr75; assert_equal("ok", worksheet.costpercapita_cr75); end
  def test_costpercapita_a76; assert_equal("VII.a.Exports", worksheet.costpercapita_a76); end
  def test_costpercapita_b76; assert_equal("Electricity Exports", worksheet.costpercapita_b76); end
  def test_costpercapita_c76; assert_equal("Electricity", worksheet.costpercapita_c76); end
  def test_costpercapita_e76; assert_in_delta(0, (worksheet.costpercapita_e76||0), 0.001); end
  def test_costpercapita_f76; assert_in_delta(0, (worksheet.costpercapita_f76||0), 0.001); end
  def test_costpercapita_g76; assert_in_delta(0, (worksheet.costpercapita_g76||0), 0.001); end
  def test_costpercapita_h76; assert_in_delta(0, (worksheet.costpercapita_h76||0), 0.001); end
  def test_costpercapita_i76; assert_in_delta(0, (worksheet.costpercapita_i76||0), 0.001); end
  def test_costpercapita_j76; assert_in_delta(0, (worksheet.costpercapita_j76||0), 0.001); end
  def test_costpercapita_k76; assert_in_delta(0, (worksheet.costpercapita_k76||0), 0.001); end
  def test_costpercapita_l76; assert_in_delta(0, (worksheet.costpercapita_l76||0), 0.001); end
  def test_costpercapita_m76; assert_in_delta(0, (worksheet.costpercapita_m76||0), 0.001); end
  def test_costpercapita_o76; assert_in_delta(0, (worksheet.costpercapita_o76||0), 0.001); end
  def test_costpercapita_p76; assert_in_delta(0, (worksheet.costpercapita_p76||0), 0.001); end
  def test_costpercapita_q76; assert_in_delta(0, (worksheet.costpercapita_q76||0), 0.001); end
  def test_costpercapita_r76; assert_in_delta(0, (worksheet.costpercapita_r76||0), 0.001); end
  def test_costpercapita_s76; assert_in_delta(0, (worksheet.costpercapita_s76||0), 0.001); end
  def test_costpercapita_t76; assert_in_delta(0, (worksheet.costpercapita_t76||0), 0.001); end
  def test_costpercapita_u76; assert_in_delta(0, (worksheet.costpercapita_u76||0), 0.001); end
  def test_costpercapita_v76; assert_in_delta(0, (worksheet.costpercapita_v76||0), 0.001); end
  def test_costpercapita_w76; assert_in_delta(0, (worksheet.costpercapita_w76||0), 0.001); end
  def test_costpercapita_y76; assert_in_delta(-1.3374405551682554e-13, worksheet.costpercapita_y76, 0.001); end
  def test_costpercapita_z76; assert_in_delta(0, (worksheet.costpercapita_z76||0), 0.001); end
  def test_costpercapita_aa76; assert_in_delta(0, (worksheet.costpercapita_aa76||0), 0.001); end
  def test_costpercapita_ab76; assert_in_delta(0, (worksheet.costpercapita_ab76||0), 0.001); end
  def test_costpercapita_ac76; assert_in_delta(0, (worksheet.costpercapita_ac76||0), 0.001); end
  def test_costpercapita_ad76; assert_in_delta(0, (worksheet.costpercapita_ad76||0), 0.001); end
  def test_costpercapita_ae76; assert_in_delta(0, (worksheet.costpercapita_ae76||0), 0.001); end
  def test_costpercapita_af76; assert_in_delta(0, (worksheet.costpercapita_af76||0), 0.001); end
  def test_costpercapita_ag76; assert_in_delta(0, (worksheet.costpercapita_ag76||0), 0.001); end
  def test_costpercapita_ai76; assert_in_delta(-1.3374405551682554e-13, worksheet.costpercapita_ai76, 0.001); end
  def test_costpercapita_aj76; assert_in_delta(0, (worksheet.costpercapita_aj76||0), 0.001); end
  def test_costpercapita_ak76; assert_in_delta(0, (worksheet.costpercapita_ak76||0), 0.001); end
  def test_costpercapita_al76; assert_in_delta(0, (worksheet.costpercapita_al76||0), 0.001); end
  def test_costpercapita_am76; assert_in_delta(0, (worksheet.costpercapita_am76||0), 0.001); end
  def test_costpercapita_an76; assert_in_delta(0, (worksheet.costpercapita_an76||0), 0.001); end
  def test_costpercapita_ao76; assert_in_delta(0, (worksheet.costpercapita_ao76||0), 0.001); end
  def test_costpercapita_ap76; assert_in_delta(0, (worksheet.costpercapita_ap76||0), 0.001); end
  def test_costpercapita_aq76; assert_in_delta(0, (worksheet.costpercapita_aq76||0), 0.001); end
  def test_costpercapita_as76; assert_in_delta(-1.4860450612980615e-14, worksheet.costpercapita_as76, 0.001); end
  def test_costpercapita_at76; assert_in_delta(-1.3374405551682554e-13, worksheet.costpercapita_at76, 0.001); end
  def test_costpercapita_av76; assert_in_delta(0, (worksheet.costpercapita_av76||0), 0.001); end
  def test_costpercapita_aw76; assert_in_epsilon(5, worksheet.costpercapita_aw76, 0.001); end
  def test_costpercapita_ay76; assert_in_delta(0, (worksheet.costpercapita_ay76||0), 0.001); end
  def test_costpercapita_az76; assert_in_delta(0, (worksheet.costpercapita_az76||0), 0.001); end
  def test_costpercapita_ba76; assert_in_delta(0, (worksheet.costpercapita_ba76||0), 0.001); end
  def test_costpercapita_bb76; assert_in_delta(0, (worksheet.costpercapita_bb76||0), 0.001); end
  def test_costpercapita_bc76; assert_in_delta(0, (worksheet.costpercapita_bc76||0), 0.001); end
  def test_costpercapita_bd76; assert_in_delta(0, (worksheet.costpercapita_bd76||0), 0.001); end
  def test_costpercapita_be76; assert_in_delta(0, (worksheet.costpercapita_be76||0), 0.001); end
  def test_costpercapita_bf76; assert_in_delta(0, (worksheet.costpercapita_bf76||0), 0.001); end
  def test_costpercapita_bg76; assert_in_delta(0, (worksheet.costpercapita_bg76||0), 0.001); end
  def test_costpercapita_bi76; assert_in_delta(0, (worksheet.costpercapita_bi76||0), 0.001); end
  def test_costpercapita_bj76; assert_in_delta(0, (worksheet.costpercapita_bj76||0), 0.001); end
  def test_costpercapita_bk76; assert_in_delta(0, (worksheet.costpercapita_bk76||0), 0.001); end
  def test_costpercapita_bl76; assert_in_delta(0, (worksheet.costpercapita_bl76||0), 0.001); end
  def test_costpercapita_bm76; assert_in_delta(0, (worksheet.costpercapita_bm76||0), 0.001); end
  def test_costpercapita_bn76; assert_in_delta(0, (worksheet.costpercapita_bn76||0), 0.001); end
  def test_costpercapita_bo76; assert_in_delta(0, (worksheet.costpercapita_bo76||0), 0.001); end
  def test_costpercapita_bp76; assert_in_delta(0, (worksheet.costpercapita_bp76||0), 0.001); end
  def test_costpercapita_bq76; assert_in_delta(0, (worksheet.costpercapita_bq76||0), 0.001); end
  def test_costpercapita_bs76; assert_in_delta(-1.3374405551682554e-13, worksheet.costpercapita_bs76, 0.001); end
  def test_costpercapita_bt76; assert_in_delta(0, (worksheet.costpercapita_bt76||0), 0.001); end
  def test_costpercapita_bu76; assert_in_delta(0, (worksheet.costpercapita_bu76||0), 0.001); end
  def test_costpercapita_bv76; assert_in_delta(0, (worksheet.costpercapita_bv76||0), 0.001); end
  def test_costpercapita_bw76; assert_in_delta(0, (worksheet.costpercapita_bw76||0), 0.001); end
  def test_costpercapita_bx76; assert_in_delta(0, (worksheet.costpercapita_bx76||0), 0.001); end
  def test_costpercapita_by76; assert_in_delta(0, (worksheet.costpercapita_by76||0), 0.001); end
  def test_costpercapita_bz76; assert_in_delta(0, (worksheet.costpercapita_bz76||0), 0.001); end
  def test_costpercapita_ca76; assert_in_delta(0, (worksheet.costpercapita_ca76||0), 0.001); end
  def test_costpercapita_cc76; assert_in_delta(-1.4860450612980615e-14, worksheet.costpercapita_cc76, 0.001); end
  def test_costpercapita_cd76; assert_in_delta(-1.3374405551682554e-13, worksheet.costpercapita_cd76, 0.001); end
  def test_costpercapita_cf76; assert_in_delta(0, (worksheet.costpercapita_cf76||0), 0.001); end
  def test_costpercapita_cg76; assert_in_delta(0, (worksheet.costpercapita_cg76||0), 0.001); end
  def test_costpercapita_ch76; assert_in_delta(0, (worksheet.costpercapita_ch76||0), 0.001); end
  def test_costpercapita_ci76; assert_in_delta(0, (worksheet.costpercapita_ci76||0), 0.001); end
  def test_costpercapita_cj76; assert_in_delta(0, (worksheet.costpercapita_cj76||0), 0.001); end
  def test_costpercapita_ck76; assert_in_delta(0, (worksheet.costpercapita_ck76||0), 0.001); end
  def test_costpercapita_cl76; assert_in_delta(0, (worksheet.costpercapita_cl76||0), 0.001); end
  def test_costpercapita_cm76; assert_in_delta(0, (worksheet.costpercapita_cm76||0), 0.001); end
  def test_costpercapita_cn76; assert_in_delta(0, (worksheet.costpercapita_cn76||0), 0.001); end
  def test_costpercapita_cp76; assert_in_delta(0, (worksheet.costpercapita_cp76||0), 0.001); end
  def test_costpercapita_cq76; assert_in_delta(0, (worksheet.costpercapita_cq76||0), 0.001); end
  def test_costpercapita_cr76; assert_equal("ok", worksheet.costpercapita_cr76); end
  def test_costpercapita_a77; assert_equal("VII.b", worksheet.costpercapita_a77); end
  def test_costpercapita_b77; assert_equal("Electricity grid distribution", worksheet.costpercapita_b77); end
  def test_costpercapita_c77; assert_equal("Electricity", worksheet.costpercapita_c77); end
  def test_costpercapita_e77; assert_in_epsilon(17.861486699313737, worksheet.costpercapita_e77, 0.001); end
  def test_costpercapita_f77; assert_in_epsilon(15.947623231497717, worksheet.costpercapita_f77, 0.001); end
  def test_costpercapita_g77; assert_in_epsilon(20.613298832741837, worksheet.costpercapita_g77, 0.001); end
  def test_costpercapita_h77; assert_in_epsilon(21.290151879103046, worksheet.costpercapita_h77, 0.001); end
  def test_costpercapita_i77; assert_in_epsilon(18.30909268632223, worksheet.costpercapita_i77, 0.001); end
  def test_costpercapita_j77; assert_in_epsilon(18.724238729451674, worksheet.costpercapita_j77, 0.001); end
  def test_costpercapita_k77; assert_in_epsilon(19.142802876182433, worksheet.costpercapita_k77, 0.001); end
  def test_costpercapita_l77; assert_in_epsilon(19.563334364068933, worksheet.costpercapita_l77, 0.001); end
  def test_costpercapita_m77; assert_in_epsilon(21.841086018715007, worksheet.costpercapita_m77, 0.001); end
  def test_costpercapita_o77; assert_in_epsilon(18.44720405796029, worksheet.costpercapita_o77, 0.001); end
  def test_costpercapita_p77; assert_in_epsilon(17.359623940871135, worksheet.costpercapita_p77, 0.001); end
  def test_costpercapita_q77; assert_in_epsilon(17.738449238582007, worksheet.costpercapita_q77, 0.001); end
  def test_costpercapita_r77; assert_in_epsilon(18.20581569763449, worksheet.costpercapita_r77, 0.001); end
  def test_costpercapita_s77; assert_in_epsilon(17.851177351450257, worksheet.costpercapita_s77, 0.001); end
  def test_costpercapita_t77; assert_in_epsilon(17.74648347321178, worksheet.costpercapita_t77, 0.001); end
  def test_costpercapita_u77; assert_in_epsilon(17.80395591733292, worksheet.costpercapita_u77, 0.001); end
  def test_costpercapita_v77; assert_in_epsilon(17.96951001772224, worksheet.costpercapita_v77, 0.001); end
  def test_costpercapita_w77; assert_in_epsilon(18.677047933839848, worksheet.costpercapita_w77, 0.001); end
  def test_costpercapita_y77; assert_in_delta(0, (worksheet.costpercapita_y77||0), 0.001); end
  def test_costpercapita_z77; assert_in_delta(0, (worksheet.costpercapita_z77||0), 0.001); end
  def test_costpercapita_aa77; assert_in_delta(0, (worksheet.costpercapita_aa77||0), 0.001); end
  def test_costpercapita_ab77; assert_in_delta(0, (worksheet.costpercapita_ab77||0), 0.001); end
  def test_costpercapita_ac77; assert_in_delta(0, (worksheet.costpercapita_ac77||0), 0.001); end
  def test_costpercapita_ad77; assert_in_delta(0, (worksheet.costpercapita_ad77||0), 0.001); end
  def test_costpercapita_ae77; assert_in_delta(0, (worksheet.costpercapita_ae77||0), 0.001); end
  def test_costpercapita_af77; assert_in_delta(0, (worksheet.costpercapita_af77||0), 0.001); end
  def test_costpercapita_ag77; assert_in_delta(0, (worksheet.costpercapita_ag77||0), 0.001); end
  def test_costpercapita_ai77; assert_in_epsilon(36.30869075727403, worksheet.costpercapita_ai77, 0.001); end
  def test_costpercapita_aj77; assert_in_epsilon(33.307247172368854, worksheet.costpercapita_aj77, 0.001); end
  def test_costpercapita_ak77; assert_in_epsilon(38.35174807132384, worksheet.costpercapita_ak77, 0.001); end
  def test_costpercapita_al77; assert_in_epsilon(39.495967576737534, worksheet.costpercapita_al77, 0.001); end
  def test_costpercapita_am77; assert_in_epsilon(36.160270037772484, worksheet.costpercapita_am77, 0.001); end
  def test_costpercapita_an77; assert_in_epsilon(36.47072220266345, worksheet.costpercapita_an77, 0.001); end
  def test_costpercapita_ao77; assert_in_epsilon(36.94675879351535, worksheet.costpercapita_ao77, 0.001); end
  def test_costpercapita_ap77; assert_in_epsilon(37.53284438179117, worksheet.costpercapita_ap77, 0.001); end
  def test_costpercapita_aq77; assert_in_epsilon(40.518133952554855, worksheet.costpercapita_aq77, 0.001); end
  def test_costpercapita_as77; assert_in_epsilon(37.232486994000176, worksheet.costpercapita_as77, 0.001); end
  def test_costpercapita_at77; assert_in_epsilon(775.5689627605758, worksheet.costpercapita_at77, 0.001); end
  def test_costpercapita_av77; assert_in_delta(0.07, worksheet.costpercapita_av77, 0.001); end
  def test_costpercapita_aw77; assert_in_epsilon(20, worksheet.costpercapita_aw77, 0.001); end
  def test_costpercapita_ay77; assert_in_epsilon(5.057993963017412, worksheet.costpercapita_ay77, 0.001); end
  def test_costpercapita_az77; assert_in_epsilon(7.526714077360916, worksheet.costpercapita_az77, 0.001); end
  def test_costpercapita_ba77; assert_in_epsilon(9.7287479302127, worksheet.costpercapita_ba77, 0.001); end
  def test_costpercapita_bb77; assert_in_epsilon(10.048198626934049, worksheet.costpercapita_bb77, 0.001); end
  def test_costpercapita_bc77; assert_in_epsilon(8.641244131832002, worksheet.costpercapita_bc77, 0.001); end
  def test_costpercapita_bd77; assert_in_epsilon(8.837178379940621, worksheet.costpercapita_bd77, 0.001); end
  def test_costpercapita_be77; assert_in_epsilon(9.03472585204635, worksheet.costpercapita_be77, 0.001); end
  def test_costpercapita_bf77; assert_in_epsilon(9.233201839590206, worksheet.costpercapita_bf77, 0.001); end
  def test_costpercapita_bg77; assert_in_epsilon(10.308220053583131, worksheet.costpercapita_bg77, 0.001); end
  def test_costpercapita_bi77; assert_in_epsilon(5.057993963017412, worksheet.costpercapita_bi77, 0.001); end
  def test_costpercapita_bj77; assert_in_epsilon(12.417920339176465, worksheet.costpercapita_bj77, 0.001); end
  def test_costpercapita_bk77; assert_in_epsilon(21.74012852508366, worksheet.costpercapita_bk77, 0.001); end
  def test_costpercapita_bl77; assert_in_epsilon(31.11517723133086, worksheet.costpercapita_bl77, 0.001); end
  def test_costpercapita_bm77; assert_in_epsilon(34.44701494063048, worksheet.costpercapita_bm77, 0.001); end
  def test_costpercapita_bn77; assert_in_epsilon(35.77227289437241, worksheet.costpercapita_bn77, 0.001); end
  def test_costpercapita_bo77; assert_in_epsilon(35.28111431865903, worksheet.costpercapita_bo77, 0.001); end
  def test_costpercapita_bp77; assert_in_epsilon(42.749939382886964, worksheet.costpercapita_bp77, 0.001); end
  def test_costpercapita_bq77; assert_in_epsilon(36.37638478212803, worksheet.costpercapita_bq77, 0.001); end
  def test_costpercapita_bs77; assert_in_epsilon(23.5051980209777, worksheet.costpercapita_bs77, 0.001); end
  def test_costpercapita_bt77; assert_in_epsilon(29.7775442800476, worksheet.costpercapita_bt77, 0.001); end
  def test_costpercapita_bu77; assert_in_epsilon(39.47857776366567, worksheet.costpercapita_bu77, 0.001); end
  def test_costpercapita_bv77; assert_in_epsilon(49.32099292896535, worksheet.costpercapita_bv77, 0.001); end
  def test_costpercapita_bw77; assert_in_epsilon(52.298192292080735, worksheet.costpercapita_bw77, 0.001); end
  def test_costpercapita_bx77; assert_in_epsilon(53.518756367584196, worksheet.costpercapita_bx77, 0.001); end
  def test_costpercapita_by77; assert_in_epsilon(53.08507023599194, worksheet.costpercapita_by77, 0.001); end
  def test_costpercapita_bz77; assert_in_epsilon(60.7194494006092, worksheet.costpercapita_bz77, 0.001); end
  def test_costpercapita_ca77; assert_in_epsilon(55.05343271596788, worksheet.costpercapita_ca77, 0.001); end
  def test_costpercapita_cc77; assert_in_epsilon(46.306357111765585, worksheet.costpercapita_cc77, 0.001); end
  def test_costpercapita_cd77; assert_in_epsilon(941.4884429739928, worksheet.costpercapita_cd77, 0.001); end
  def test_costpercapita_cf77; assert_in_epsilon(-12.803492736296324, worksheet.costpercapita_cf77, 0.001); end
  def test_costpercapita_cg77; assert_in_epsilon(-3.529702892321253, worksheet.costpercapita_cg77, 0.001); end
  def test_costpercapita_ch77; assert_in_epsilon(1.1268296923418217, worksheet.costpercapita_ch77, 0.001); end
  def test_costpercapita_ci77; assert_in_epsilon(9.825025352227815, worksheet.costpercapita_ci77, 0.001); end
  def test_costpercapita_cj77; assert_in_epsilon(16.13792225430825, worksheet.costpercapita_cj77, 0.001); end
  def test_costpercapita_ck77; assert_in_epsilon(17.04803416492074, worksheet.costpercapita_ck77, 0.001); end
  def test_costpercapita_cl77; assert_in_epsilon(16.138311442476592, worksheet.costpercapita_cl77, 0.001); end
  def test_costpercapita_cm77; assert_in_epsilon(23.18660501881803, worksheet.costpercapita_cm77, 0.001); end
  def test_costpercapita_cn77; assert_in_epsilon(14.535298763413019, worksheet.costpercapita_cn77, 0.001); end
  def test_costpercapita_cp77; assert_in_epsilon(9.073870117765411, worksheet.costpercapita_cp77, 0.001); end
  def test_costpercapita_cq77; assert_in_epsilon(165.919480213417, worksheet.costpercapita_cq77, 0.001); end
  def test_costpercapita_cr77; assert_equal("ok", worksheet.costpercapita_cr77); end
  def test_costpercapita_a78; assert_equal("VII.c", worksheet.costpercapita_a78); end
  def test_costpercapita_b78; assert_equal("Storage, demand shifting, backup", worksheet.costpercapita_b78); end
  def test_costpercapita_c78; assert_equal("Electricity", worksheet.costpercapita_c78); end
  def test_costpercapita_e78; assert_in_delta(0, (worksheet.costpercapita_e78||0), 0.001); end
  def test_costpercapita_f78; assert_in_epsilon(2.068719341038524, worksheet.costpercapita_f78, 0.001); end
  def test_costpercapita_g78; assert_in_delta(0, (worksheet.costpercapita_g78||0), 0.001); end
  def test_costpercapita_h78; assert_in_delta(0, (worksheet.costpercapita_h78||0), 0.001); end
  def test_costpercapita_i78; assert_in_delta(0, (worksheet.costpercapita_i78||0), 0.001); end
  def test_costpercapita_j78; assert_in_delta(0, (worksheet.costpercapita_j78||0), 0.001); end
  def test_costpercapita_k78; assert_in_delta(0, (worksheet.costpercapita_k78||0), 0.001); end
  def test_costpercapita_l78; assert_in_delta(0, (worksheet.costpercapita_l78||0), 0.001); end
  def test_costpercapita_m78; assert_in_delta(0, (worksheet.costpercapita_m78||0), 0.001); end
  def test_costpercapita_o78; assert_in_epsilon(1.2737786045972503, worksheet.costpercapita_o78, 0.001); end
  def test_costpercapita_p78; assert_in_epsilon(1.2394237929607532, worksheet.costpercapita_p78, 0.001); end
  def test_costpercapita_q78; assert_in_epsilon(1.1988473503589445, worksheet.costpercapita_q78, 0.001); end
  def test_costpercapita_r78; assert_in_epsilon(1.1617268706948691, worksheet.costpercapita_r78, 0.001); end
  def test_costpercapita_s78; assert_in_epsilon(1.12998831473129, worksheet.costpercapita_s78, 0.001); end
  def test_costpercapita_t78; assert_in_epsilon(1.1033706537138277, worksheet.costpercapita_t78, 0.001); end
  def test_costpercapita_u78; assert_in_epsilon(1.0798397449653085, worksheet.costpercapita_u78, 0.001); end
  def test_costpercapita_v78; assert_in_epsilon(1.0582991823259316, worksheet.costpercapita_v78, 0.001); end
  def test_costpercapita_w78; assert_in_epsilon(1.0385494831939213, worksheet.costpercapita_w78, 0.001); end
  def test_costpercapita_y78; assert_in_delta(0, (worksheet.costpercapita_y78||0), 0.001); end
  def test_costpercapita_z78; assert_in_delta(0, (worksheet.costpercapita_z78||0), 0.001); end
  def test_costpercapita_aa78; assert_in_delta(0, (worksheet.costpercapita_aa78||0), 0.001); end
  def test_costpercapita_ab78; assert_in_delta(0, (worksheet.costpercapita_ab78||0), 0.001); end
  def test_costpercapita_ac78; assert_in_delta(0, (worksheet.costpercapita_ac78||0), 0.001); end
  def test_costpercapita_ad78; assert_in_delta(0, (worksheet.costpercapita_ad78||0), 0.001); end
  def test_costpercapita_ae78; assert_in_delta(0, (worksheet.costpercapita_ae78||0), 0.001); end
  def test_costpercapita_af78; assert_in_delta(0, (worksheet.costpercapita_af78||0), 0.001); end
  def test_costpercapita_ag78; assert_in_delta(0, (worksheet.costpercapita_ag78||0), 0.001); end
  def test_costpercapita_ai78; assert_in_epsilon(1.2737786045972503, worksheet.costpercapita_ai78, 0.001); end
  def test_costpercapita_aj78; assert_in_epsilon(3.3081431339992773, worksheet.costpercapita_aj78, 0.001); end
  def test_costpercapita_ak78; assert_in_epsilon(1.1988473503589445, worksheet.costpercapita_ak78, 0.001); end
  def test_costpercapita_al78; assert_in_epsilon(1.1617268706948691, worksheet.costpercapita_al78, 0.001); end
  def test_costpercapita_am78; assert_in_epsilon(1.12998831473129, worksheet.costpercapita_am78, 0.001); end
  def test_costpercapita_an78; assert_in_epsilon(1.1033706537138277, worksheet.costpercapita_an78, 0.001); end
  def test_costpercapita_ao78; assert_in_epsilon(1.0798397449653085, worksheet.costpercapita_ao78, 0.001); end
  def test_costpercapita_ap78; assert_in_epsilon(1.0582991823259316, worksheet.costpercapita_ap78, 0.001); end
  def test_costpercapita_aq78; assert_in_epsilon(1.0385494831939213, worksheet.costpercapita_aq78, 0.001); end
  def test_costpercapita_as78; assert_in_epsilon(1.3725048153978467, worksheet.costpercapita_as78, 0.001); end
  def test_costpercapita_at78; assert_in_epsilon(33.017540354297694, worksheet.costpercapita_at78, 0.001); end
  def test_costpercapita_av78; assert_in_delta(0.07, worksheet.costpercapita_av78, 0.001); end
  def test_costpercapita_aw78; assert_in_epsilon(15, worksheet.costpercapita_aw78, 0.001); end
  def test_costpercapita_ay78; assert_in_delta(0, (worksheet.costpercapita_ay78||0), 0.001); end
  def test_costpercapita_az78; assert_in_epsilon(1.1356713183051914, worksheet.costpercapita_az78, 0.001); end
  def test_costpercapita_ba78; assert_in_delta(0, (worksheet.costpercapita_ba78||0), 0.001); end
  def test_costpercapita_bb78; assert_in_delta(0, (worksheet.costpercapita_bb78||0), 0.001); end
  def test_costpercapita_bc78; assert_in_delta(0, (worksheet.costpercapita_bc78||0), 0.001); end
  def test_costpercapita_bd78; assert_in_delta(0, (worksheet.costpercapita_bd78||0), 0.001); end
  def test_costpercapita_be78; assert_in_delta(0, (worksheet.costpercapita_be78||0), 0.001); end
  def test_costpercapita_bf78; assert_in_delta(0, (worksheet.costpercapita_bf78||0), 0.001); end
  def test_costpercapita_bg78; assert_in_delta(0, (worksheet.costpercapita_bg78||0), 0.001); end
  def test_costpercapita_bi78; assert_in_delta(0, (worksheet.costpercapita_bi78||0), 0.001); end
  def test_costpercapita_bj78; assert_in_epsilon(1.1356713183051914, worksheet.costpercapita_bj78, 0.001); end
  def test_costpercapita_bk78; assert_in_epsilon(1.0984915398279276, worksheet.costpercapita_bk78, 0.001); end
  def test_costpercapita_bl78; assert_in_epsilon(1.0644784247694234, worksheet.costpercapita_bl78, 0.001); end
  def test_costpercapita_bm78; assert_in_delta(0, (worksheet.costpercapita_bm78||0), 0.001); end
  def test_costpercapita_bn78; assert_in_delta(0, (worksheet.costpercapita_bn78||0), 0.001); end
  def test_costpercapita_bo78; assert_in_delta(0, (worksheet.costpercapita_bo78||0), 0.001); end
  def test_costpercapita_bp78; assert_in_delta(0, (worksheet.costpercapita_bp78||0), 0.001); end
  def test_costpercapita_bq78; assert_in_delta(0, (worksheet.costpercapita_bq78||0), 0.001); end
  def test_costpercapita_bs78; assert_in_epsilon(1.2737786045972503, worksheet.costpercapita_bs78, 0.001); end
  def test_costpercapita_bt78; assert_in_epsilon(2.375095111265945, worksheet.costpercapita_bt78, 0.001); end
  def test_costpercapita_bu78; assert_in_epsilon(2.2973388901868725, worksheet.costpercapita_bu78, 0.001); end
  def test_costpercapita_bv78; assert_in_epsilon(2.226205295464293, worksheet.costpercapita_bv78, 0.001); end
  def test_costpercapita_bw78; assert_in_epsilon(1.12998831473129, worksheet.costpercapita_bw78, 0.001); end
  def test_costpercapita_bx78; assert_in_epsilon(1.1033706537138277, worksheet.costpercapita_bx78, 0.001); end
  def test_costpercapita_by78; assert_in_epsilon(1.0798397449653085, worksheet.costpercapita_by78, 0.001); end
  def test_costpercapita_bz78; assert_in_epsilon(1.0582991823259316, worksheet.costpercapita_bz78, 0.001); end
  def test_costpercapita_ca78; assert_in_epsilon(1.0385494831939213, worksheet.costpercapita_ca78, 0.001); end
  def test_costpercapita_cc78; assert_in_epsilon(1.5091628089382934, worksheet.costpercapita_cc78, 0.001); end
  def test_costpercapita_cd78; assert_in_epsilon(36.160125885430425, worksheet.costpercapita_cd78, 0.001); end
  def test_costpercapita_cf78; assert_in_delta(0, (worksheet.costpercapita_cf78||0), 0.001); end
  def test_costpercapita_cg78; assert_in_delta(-0.9330480227333326, worksheet.costpercapita_cg78, 0.001); end
  def test_costpercapita_ch78; assert_in_epsilon(1.0984915398279276, worksheet.costpercapita_ch78, 0.001); end
  def test_costpercapita_ci78; assert_in_epsilon(1.0644784247694234, worksheet.costpercapita_ci78, 0.001); end
  def test_costpercapita_cj78; assert_in_delta(0, (worksheet.costpercapita_cj78||0), 0.001); end
  def test_costpercapita_ck78; assert_in_delta(0, (worksheet.costpercapita_ck78||0), 0.001); end
  def test_costpercapita_cl78; assert_in_delta(0, (worksheet.costpercapita_cl78||0), 0.001); end
  def test_costpercapita_cm78; assert_in_delta(0, (worksheet.costpercapita_cm78||0), 0.001); end
  def test_costpercapita_cn78; assert_in_delta(0, (worksheet.costpercapita_cn78||0), 0.001); end
  def test_costpercapita_cp78; assert_in_delta(0.1366579935404465, worksheet.costpercapita_cp78, 0.001); end
  def test_costpercapita_cq78; assert_in_epsilon(3.14258553113273, worksheet.costpercapita_cq78, 0.001); end
  def test_costpercapita_cr78; assert_equal("ok", worksheet.costpercapita_cr78); end
  def test_costpercapita_a79; assert_equal("VIII.a", worksheet.costpercapita_a79); end
  def test_costpercapita_b79; assert_equal("H2 Production", worksheet.costpercapita_b79); end
  def test_costpercapita_c79; assert_equal("Transport", worksheet.costpercapita_c79); end
  def test_costpercapita_e79; assert_in_delta(0, (worksheet.costpercapita_e79||0), 0.001); end
  def test_costpercapita_f79; assert_in_delta(0, (worksheet.costpercapita_f79||0), 0.001); end
  def test_costpercapita_g79; assert_in_delta(0, (worksheet.costpercapita_g79||0), 0.001); end
  def test_costpercapita_h79; assert_in_delta(0, (worksheet.costpercapita_h79||0), 0.001); end
  def test_costpercapita_i79; assert_in_delta(0, (worksheet.costpercapita_i79||0), 0.001); end
  def test_costpercapita_j79; assert_in_delta(0, (worksheet.costpercapita_j79||0), 0.001); end
  def test_costpercapita_k79; assert_in_delta(0, (worksheet.costpercapita_k79||0), 0.001); end
  def test_costpercapita_l79; assert_in_delta(0, (worksheet.costpercapita_l79||0), 0.001); end
  def test_costpercapita_m79; assert_in_delta(0, (worksheet.costpercapita_m79||0), 0.001); end
  def test_costpercapita_o79; assert_in_delta(0, (worksheet.costpercapita_o79||0), 0.001); end
  def test_costpercapita_p79; assert_in_delta(0, (worksheet.costpercapita_p79||0), 0.001); end
  def test_costpercapita_q79; assert_in_delta(0, (worksheet.costpercapita_q79||0), 0.001); end
  def test_costpercapita_r79; assert_in_delta(0, (worksheet.costpercapita_r79||0), 0.001); end
  def test_costpercapita_s79; assert_in_delta(0, (worksheet.costpercapita_s79||0), 0.001); end
  def test_costpercapita_t79; assert_in_delta(0, (worksheet.costpercapita_t79||0), 0.001); end
  def test_costpercapita_u79; assert_in_delta(0, (worksheet.costpercapita_u79||0), 0.001); end
  def test_costpercapita_v79; assert_in_delta(0, (worksheet.costpercapita_v79||0), 0.001); end
  def test_costpercapita_w79; assert_in_delta(0, (worksheet.costpercapita_w79||0), 0.001); end
  def test_costpercapita_y79; assert_in_delta(0, (worksheet.costpercapita_y79||0), 0.001); end
  def test_costpercapita_z79; assert_in_delta(0, (worksheet.costpercapita_z79||0), 0.001); end
  def test_costpercapita_aa79; assert_in_delta(0, (worksheet.costpercapita_aa79||0), 0.001); end
  def test_costpercapita_ab79; assert_in_delta(0, (worksheet.costpercapita_ab79||0), 0.001); end
  def test_costpercapita_ac79; assert_in_delta(0, (worksheet.costpercapita_ac79||0), 0.001); end
  def test_costpercapita_ad79; assert_in_delta(0, (worksheet.costpercapita_ad79||0), 0.001); end
  def test_costpercapita_ae79; assert_in_delta(0, (worksheet.costpercapita_ae79||0), 0.001); end
  def test_costpercapita_af79; assert_in_delta(0, (worksheet.costpercapita_af79||0), 0.001); end
  def test_costpercapita_ag79; assert_in_delta(0, (worksheet.costpercapita_ag79||0), 0.001); end
  def test_costpercapita_ai79; assert_in_delta(0, (worksheet.costpercapita_ai79||0), 0.001); end
  def test_costpercapita_aj79; assert_in_delta(0, (worksheet.costpercapita_aj79||0), 0.001); end
  def test_costpercapita_ak79; assert_in_delta(0, (worksheet.costpercapita_ak79||0), 0.001); end
  def test_costpercapita_al79; assert_in_delta(0, (worksheet.costpercapita_al79||0), 0.001); end
  def test_costpercapita_am79; assert_in_delta(0, (worksheet.costpercapita_am79||0), 0.001); end
  def test_costpercapita_an79; assert_in_delta(0, (worksheet.costpercapita_an79||0), 0.001); end
  def test_costpercapita_ao79; assert_in_delta(0, (worksheet.costpercapita_ao79||0), 0.001); end
  def test_costpercapita_ap79; assert_in_delta(0, (worksheet.costpercapita_ap79||0), 0.001); end
  def test_costpercapita_aq79; assert_in_delta(0, (worksheet.costpercapita_aq79||0), 0.001); end
  def test_costpercapita_as79; assert_in_delta(0, (worksheet.costpercapita_as79||0), 0.001); end
  def test_costpercapita_at79; assert_in_delta(0, (worksheet.costpercapita_at79||0), 0.001); end
  def test_costpercapita_av79; assert_in_delta(0.07, worksheet.costpercapita_av79, 0.001); end
  def test_costpercapita_aw79; assert_in_epsilon(25, worksheet.costpercapita_aw79, 0.001); end
  def test_costpercapita_ay79; assert_in_delta(0, (worksheet.costpercapita_ay79||0), 0.001); end
  def test_costpercapita_az79; assert_in_delta(0, (worksheet.costpercapita_az79||0), 0.001); end
  def test_costpercapita_ba79; assert_in_delta(0, (worksheet.costpercapita_ba79||0), 0.001); end
  def test_costpercapita_bb79; assert_in_delta(0, (worksheet.costpercapita_bb79||0), 0.001); end
  def test_costpercapita_bc79; assert_in_delta(0, (worksheet.costpercapita_bc79||0), 0.001); end
  def test_costpercapita_bd79; assert_in_delta(0, (worksheet.costpercapita_bd79||0), 0.001); end
  def test_costpercapita_be79; assert_in_delta(0, (worksheet.costpercapita_be79||0), 0.001); end
  def test_costpercapita_bf79; assert_in_delta(0, (worksheet.costpercapita_bf79||0), 0.001); end
  def test_costpercapita_bg79; assert_in_delta(0, (worksheet.costpercapita_bg79||0), 0.001); end
  def test_costpercapita_bi79; assert_in_delta(0, (worksheet.costpercapita_bi79||0), 0.001); end
  def test_costpercapita_bj79; assert_in_delta(0, (worksheet.costpercapita_bj79||0), 0.001); end
  def test_costpercapita_bk79; assert_in_delta(0, (worksheet.costpercapita_bk79||0), 0.001); end
  def test_costpercapita_bl79; assert_in_delta(0, (worksheet.costpercapita_bl79||0), 0.001); end
  def test_costpercapita_bm79; assert_in_delta(0, (worksheet.costpercapita_bm79||0), 0.001); end
  def test_costpercapita_bn79; assert_in_delta(0, (worksheet.costpercapita_bn79||0), 0.001); end
  def test_costpercapita_bo79; assert_in_delta(0, (worksheet.costpercapita_bo79||0), 0.001); end
  def test_costpercapita_bp79; assert_in_delta(0, (worksheet.costpercapita_bp79||0), 0.001); end
  def test_costpercapita_bq79; assert_in_delta(0, (worksheet.costpercapita_bq79||0), 0.001); end
  def test_costpercapita_bs79; assert_in_delta(0, (worksheet.costpercapita_bs79||0), 0.001); end
  def test_costpercapita_bt79; assert_in_delta(0, (worksheet.costpercapita_bt79||0), 0.001); end
  def test_costpercapita_bu79; assert_in_delta(0, (worksheet.costpercapita_bu79||0), 0.001); end
  def test_costpercapita_bv79; assert_in_delta(0, (worksheet.costpercapita_bv79||0), 0.001); end
  def test_costpercapita_bw79; assert_in_delta(0, (worksheet.costpercapita_bw79||0), 0.001); end
  def test_costpercapita_bx79; assert_in_delta(0, (worksheet.costpercapita_bx79||0), 0.001); end
  def test_costpercapita_by79; assert_in_delta(0, (worksheet.costpercapita_by79||0), 0.001); end
  def test_costpercapita_bz79; assert_in_delta(0, (worksheet.costpercapita_bz79||0), 0.001); end
  def test_costpercapita_ca79; assert_in_delta(0, (worksheet.costpercapita_ca79||0), 0.001); end
  def test_costpercapita_cc79; assert_in_delta(0, (worksheet.costpercapita_cc79||0), 0.001); end
  def test_costpercapita_cd79; assert_in_delta(0, (worksheet.costpercapita_cd79||0), 0.001); end
  def test_costpercapita_cf79; assert_in_delta(0, (worksheet.costpercapita_cf79||0), 0.001); end
  def test_costpercapita_cg79; assert_in_delta(0, (worksheet.costpercapita_cg79||0), 0.001); end
  def test_costpercapita_ch79; assert_in_delta(0, (worksheet.costpercapita_ch79||0), 0.001); end
  def test_costpercapita_ci79; assert_in_delta(0, (worksheet.costpercapita_ci79||0), 0.001); end
  def test_costpercapita_cj79; assert_in_delta(0, (worksheet.costpercapita_cj79||0), 0.001); end
  def test_costpercapita_ck79; assert_in_delta(0, (worksheet.costpercapita_ck79||0), 0.001); end
  def test_costpercapita_cl79; assert_in_delta(0, (worksheet.costpercapita_cl79||0), 0.001); end
  def test_costpercapita_cm79; assert_in_delta(0, (worksheet.costpercapita_cm79||0), 0.001); end
  def test_costpercapita_cn79; assert_in_delta(0, (worksheet.costpercapita_cn79||0), 0.001); end
  def test_costpercapita_cp79; assert_in_delta(0, (worksheet.costpercapita_cp79||0), 0.001); end
  def test_costpercapita_cq79; assert_in_delta(0, (worksheet.costpercapita_cq79||0), 0.001); end
  def test_costpercapita_cr79; assert_equal("ok", worksheet.costpercapita_cr79); end
  def test_costpercapita_a80; assert_equal("IX.a.Heating", worksheet.costpercapita_a80); end
  def test_costpercapita_b80; assert_equal("Domestic heating", worksheet.costpercapita_b80); end
  def test_costpercapita_c80; assert_equal("Buildings", worksheet.costpercapita_c80); end
  def test_costpercapita_e80; assert_in_epsilon(149.0328812205539, worksheet.costpercapita_e80, 0.001); end
  def test_costpercapita_f80; assert_in_epsilon(118.56835907033512, worksheet.costpercapita_f80, 0.001); end
  def test_costpercapita_g80; assert_in_epsilon(120.60074463900256, worksheet.costpercapita_g80, 0.001); end
  def test_costpercapita_h80; assert_in_epsilon(144.06909791036918, worksheet.costpercapita_h80, 0.001); end
  def test_costpercapita_i80; assert_in_epsilon(166.14493443387622, worksheet.costpercapita_i80, 0.001); end
  def test_costpercapita_j80; assert_in_epsilon(191.09498899249968, worksheet.costpercapita_j80, 0.001); end
  def test_costpercapita_k80; assert_in_epsilon(213.95503717051812, worksheet.costpercapita_k80, 0.001); end
  def test_costpercapita_l80; assert_in_epsilon(242.54407620341144, worksheet.costpercapita_l80, 0.001); end
  def test_costpercapita_m80; assert_in_epsilon(273.1283640403973, worksheet.costpercapita_m80, 0.001); end
  def test_costpercapita_o80; assert_in_epsilon(80.6053851697113, worksheet.costpercapita_o80, 0.001); end
  def test_costpercapita_p80; assert_in_epsilon(81.77389658728958, worksheet.costpercapita_p80, 0.001); end
  def test_costpercapita_q80; assert_in_epsilon(83.15620090041844, worksheet.costpercapita_q80, 0.001); end
  def test_costpercapita_r80; assert_in_epsilon(84.21111367349611, worksheet.costpercapita_r80, 0.001); end
  def test_costpercapita_s80; assert_in_epsilon(85.11045434057436, worksheet.costpercapita_s80, 0.001); end
  def test_costpercapita_t80; assert_in_epsilon(87.12573624698048, worksheet.costpercapita_t80, 0.001); end
  def test_costpercapita_u80; assert_in_epsilon(89.39179737903514, worksheet.costpercapita_u80, 0.001); end
  def test_costpercapita_v80; assert_in_epsilon(91.84539593708288, worksheet.costpercapita_v80, 0.001); end
  def test_costpercapita_w80; assert_in_epsilon(94.48957995625537, worksheet.costpercapita_w80, 0.001); end
  def test_costpercapita_y80; assert_in_delta(0, (worksheet.costpercapita_y80||0), 0.001); end
  def test_costpercapita_z80; assert_in_delta(0, (worksheet.costpercapita_z80||0), 0.001); end
  def test_costpercapita_aa80; assert_in_delta(0, (worksheet.costpercapita_aa80||0), 0.001); end
  def test_costpercapita_ab80; assert_in_delta(0, (worksheet.costpercapita_ab80||0), 0.001); end
  def test_costpercapita_ac80; assert_in_delta(0, (worksheet.costpercapita_ac80||0), 0.001); end
  def test_costpercapita_ad80; assert_in_delta(0, (worksheet.costpercapita_ad80||0), 0.001); end
  def test_costpercapita_ae80; assert_in_delta(0, (worksheet.costpercapita_ae80||0), 0.001); end
  def test_costpercapita_af80; assert_in_delta(0, (worksheet.costpercapita_af80||0), 0.001); end
  def test_costpercapita_ag80; assert_in_delta(0, (worksheet.costpercapita_ag80||0), 0.001); end
  def test_costpercapita_ai80; assert_in_epsilon(229.6382663902652, worksheet.costpercapita_ai80, 0.001); end
  def test_costpercapita_aj80; assert_in_epsilon(200.3422556576247, worksheet.costpercapita_aj80, 0.001); end
  def test_costpercapita_ak80; assert_in_epsilon(203.756945539421, worksheet.costpercapita_ak80, 0.001); end
  def test_costpercapita_al80; assert_in_epsilon(228.2802115838653, worksheet.costpercapita_al80, 0.001); end
  def test_costpercapita_am80; assert_in_epsilon(251.25538877445055, worksheet.costpercapita_am80, 0.001); end
  def test_costpercapita_an80; assert_in_epsilon(278.22072523948015, worksheet.costpercapita_an80, 0.001); end
  def test_costpercapita_ao80; assert_in_epsilon(303.34683454955325, worksheet.costpercapita_ao80, 0.001); end
  def test_costpercapita_ap80; assert_in_epsilon(334.3894721404943, worksheet.costpercapita_ap80, 0.001); end
  def test_costpercapita_aq80; assert_in_epsilon(367.6179439966527, worksheet.costpercapita_aq80, 0.001); end
  def test_costpercapita_as80; assert_in_epsilon(266.31644931908966, worksheet.costpercapita_as80, 0.001); end
  def test_costpercapita_at80; assert_in_epsilon(5238.086168769172, worksheet.costpercapita_at80, 0.001); end
  def test_costpercapita_av80; assert_in_delta(0.07, worksheet.costpercapita_av80, 0.001); end
  def test_costpercapita_aw80; assert_in_epsilon(15, worksheet.costpercapita_aw80, 0.001); end
  def test_costpercapita_ay80; assert_in_epsilon(49.089027785161186, worksheet.costpercapita_ay80, 0.001); end
  def test_costpercapita_az80; assert_in_epsilon(65.09084242770814, worksheet.costpercapita_az80, 0.001); end
  def test_costpercapita_ba80; assert_in_epsilon(66.20656748150606, worksheet.costpercapita_ba80, 0.001); end
  def test_costpercapita_bb80; assert_in_epsilon(79.09006268040774, worksheet.costpercapita_bb80, 0.001); end
  def test_costpercapita_bc80; assert_in_epsilon(91.20910361070388, worksheet.costpercapita_bc80, 0.001); end
  def test_costpercapita_bd80; assert_in_epsilon(104.90601299337239, worksheet.costpercapita_bd80, 0.001); end
  def test_costpercapita_be80; assert_in_epsilon(117.45556504513469, worksheet.costpercapita_be80, 0.001); end
  def test_costpercapita_bf80; assert_in_epsilon(133.15017910102944, worksheet.costpercapita_bf80, 0.001); end
  def test_costpercapita_bg80; assert_in_epsilon(149.94013112507653, worksheet.costpercapita_bg80, 0.001); end
  def test_costpercapita_bi80; assert_in_epsilon(49.089027785161186, worksheet.costpercapita_bi80, 0.001); end
  def test_costpercapita_bj80; assert_in_epsilon(112.56115612218719, worksheet.costpercapita_bj80, 0.001); end
  def test_costpercapita_bk80; assert_in_epsilon(175.0826795400525, worksheet.costpercapita_bk80, 0.001); end
  def test_costpercapita_bl80; assert_in_epsilon(204.25707649472972, worksheet.costpercapita_bl80, 0.001); end
  def test_costpercapita_bm80; assert_in_epsilon(230.54222812603223, worksheet.costpercapita_bm80, 0.001); end
  def test_costpercapita_bn80; assert_in_epsilon(269.0838093362473, worksheet.costpercapita_bn80, 0.001); end
  def test_costpercapita_bo80; assert_in_epsilon(307.28558063167077, worksheet.costpercapita_bo80, 0.001); end
  def test_costpercapita_bp80; assert_in_epsilon(348.8834676408683, worksheet.costpercapita_bp80, 0.001); end
  def test_costpercapita_bq80; assert_in_epsilon(393.56986673165034, worksheet.costpercapita_bq80, 0.001); end
  def test_costpercapita_bs80; assert_in_epsilon(129.6944129548725, worksheet.costpercapita_bs80, 0.001); end
  def test_costpercapita_bt80; assert_in_epsilon(194.33505270947677, worksheet.costpercapita_bt80, 0.001); end
  def test_costpercapita_bu80; assert_in_epsilon(258.23888044047095, worksheet.costpercapita_bu80, 0.001); end
  def test_costpercapita_bv80; assert_in_epsilon(288.4681901682258, worksheet.costpercapita_bv80, 0.001); end
  def test_costpercapita_bw80; assert_in_epsilon(315.6526824666066, worksheet.costpercapita_bw80, 0.001); end
  def test_costpercapita_bx80; assert_in_epsilon(356.2095455832278, worksheet.costpercapita_bx80, 0.001); end
  def test_costpercapita_by80; assert_in_epsilon(396.6773780107059, worksheet.costpercapita_by80, 0.001); end
  def test_costpercapita_bz80; assert_in_epsilon(440.7288635779512, worksheet.costpercapita_bz80, 0.001); end
  def test_costpercapita_ca80; assert_in_epsilon(488.0594466879057, worksheet.costpercapita_ca80, 0.001); end
  def test_costpercapita_cc80; assert_in_epsilon(318.67382806660476, worksheet.costpercapita_cc80, 0.001); end
  def test_costpercapita_cd80; assert_in_epsilon(6301.73252864699, worksheet.costpercapita_cd80, 0.001); end
  def test_costpercapita_cf80; assert_in_epsilon(-99.9438534353927, worksheet.costpercapita_cf80, 0.001); end
  def test_costpercapita_cg80; assert_in_epsilon(-6.007202948147936, worksheet.costpercapita_cg80, 0.001); end
  def test_costpercapita_ch80; assert_in_epsilon(54.48193490104994, worksheet.costpercapita_ch80, 0.001); end
  def test_costpercapita_ci80; assert_in_epsilon(60.18797858436052, worksheet.costpercapita_ci80, 0.001); end
  def test_costpercapita_cj80; assert_in_epsilon(64.39729369215601, worksheet.costpercapita_cj80, 0.001); end
  def test_costpercapita_ck80; assert_in_epsilon(77.98882034374765, worksheet.costpercapita_ck80, 0.001); end
  def test_costpercapita_cl80; assert_in_epsilon(93.33054346115262, worksheet.costpercapita_cl80, 0.001); end
  def test_costpercapita_cm80; assert_in_epsilon(106.33939143745684, worksheet.costpercapita_cm80, 0.001); end
  def test_costpercapita_cn80; assert_in_epsilon(120.44150269125302, worksheet.costpercapita_cn80, 0.001); end
  def test_costpercapita_cp80; assert_in_epsilon(52.357378747515114, worksheet.costpercapita_cp80, 0.001); end
  def test_costpercapita_cq80; assert_in_epsilon(1063.6463598778173, worksheet.costpercapita_cq80, 0.001); end
  def test_costpercapita_cr80; assert_equal("ok", worksheet.costpercapita_cr80); end
  def test_costpercapita_a81; assert_equal("IX.a.Insulation", worksheet.costpercapita_a81); end
  def test_costpercapita_b81; assert_equal("Domestic insulation", worksheet.costpercapita_b81); end
  def test_costpercapita_c81; assert_equal("Buildings", worksheet.costpercapita_c81); end
  def test_costpercapita_e81; assert_in_epsilon(15.848341600878902, worksheet.costpercapita_e81, 0.001); end
  def test_costpercapita_f81; assert_in_epsilon(9.03660058092714, worksheet.costpercapita_f81, 0.001); end
  def test_costpercapita_g81; assert_in_epsilon(4.685261645876832, worksheet.costpercapita_g81, 0.001); end
  def test_costpercapita_h81; assert_in_epsilon(4.540189665199249, worksheet.costpercapita_h81, 0.001); end
  def test_costpercapita_i81; assert_in_epsilon(4.416150988459336, worksheet.costpercapita_i81, 0.001); end
  def test_costpercapita_j81; assert_in_epsilon(4.312125479097593, worksheet.costpercapita_j81, 0.001); end
  def test_costpercapita_k81; assert_in_epsilon(4.220163425530844, worksheet.costpercapita_k81, 0.001); end
  def test_costpercapita_l81; assert_in_epsilon(4.135979920487718, worksheet.costpercapita_l81, 0.001); end
  def test_costpercapita_m81; assert_in_epsilon(4.05879535830546, worksheet.costpercapita_m81, 0.001); end
  def test_costpercapita_o81; assert_in_delta(0, (worksheet.costpercapita_o81||0), 0.001); end
  def test_costpercapita_p81; assert_in_delta(0, (worksheet.costpercapita_p81||0), 0.001); end
  def test_costpercapita_q81; assert_in_delta(0, (worksheet.costpercapita_q81||0), 0.001); end
  def test_costpercapita_r81; assert_in_delta(0, (worksheet.costpercapita_r81||0), 0.001); end
  def test_costpercapita_s81; assert_in_delta(0, (worksheet.costpercapita_s81||0), 0.001); end
  def test_costpercapita_t81; assert_in_delta(0, (worksheet.costpercapita_t81||0), 0.001); end
  def test_costpercapita_u81; assert_in_delta(0, (worksheet.costpercapita_u81||0), 0.001); end
  def test_costpercapita_v81; assert_in_delta(0, (worksheet.costpercapita_v81||0), 0.001); end
  def test_costpercapita_w81; assert_in_delta(0, (worksheet.costpercapita_w81||0), 0.001); end
  def test_costpercapita_y81; assert_in_delta(0, (worksheet.costpercapita_y81||0), 0.001); end
  def test_costpercapita_z81; assert_in_delta(0, (worksheet.costpercapita_z81||0), 0.001); end
  def test_costpercapita_aa81; assert_in_delta(0, (worksheet.costpercapita_aa81||0), 0.001); end
  def test_costpercapita_ab81; assert_in_delta(0, (worksheet.costpercapita_ab81||0), 0.001); end
  def test_costpercapita_ac81; assert_in_delta(0, (worksheet.costpercapita_ac81||0), 0.001); end
  def test_costpercapita_ad81; assert_in_delta(0, (worksheet.costpercapita_ad81||0), 0.001); end
  def test_costpercapita_ae81; assert_in_delta(0, (worksheet.costpercapita_ae81||0), 0.001); end
  def test_costpercapita_af81; assert_in_delta(0, (worksheet.costpercapita_af81||0), 0.001); end
  def test_costpercapita_ag81; assert_in_delta(0, (worksheet.costpercapita_ag81||0), 0.001); end
  def test_costpercapita_ai81; assert_in_epsilon(15.848341600878902, worksheet.costpercapita_ai81, 0.001); end
  def test_costpercapita_aj81; assert_in_epsilon(9.03660058092714, worksheet.costpercapita_aj81, 0.001); end
  def test_costpercapita_ak81; assert_in_epsilon(4.685261645876832, worksheet.costpercapita_ak81, 0.001); end
  def test_costpercapita_al81; assert_in_epsilon(4.540189665199249, worksheet.costpercapita_al81, 0.001); end
  def test_costpercapita_am81; assert_in_epsilon(4.416150988459336, worksheet.costpercapita_am81, 0.001); end
  def test_costpercapita_an81; assert_in_epsilon(4.312125479097593, worksheet.costpercapita_an81, 0.001); end
  def test_costpercapita_ao81; assert_in_epsilon(4.220163425530844, worksheet.costpercapita_ao81, 0.001); end
  def test_costpercapita_ap81; assert_in_epsilon(4.135979920487718, worksheet.costpercapita_ap81, 0.001); end
  def test_costpercapita_aq81; assert_in_epsilon(4.05879535830546, worksheet.costpercapita_aq81, 0.001); end
  def test_costpercapita_as81; assert_in_epsilon(6.139289851640341, worksheet.costpercapita_as81, 0.001); end
  def test_costpercapita_at81; assert_in_epsilon(123.52222273525388, worksheet.costpercapita_at81, 0.001); end
  def test_costpercapita_av81; assert_in_delta(0.07, worksheet.costpercapita_av81, 0.001); end
  def test_costpercapita_aw81; assert_in_epsilon(30, worksheet.costpercapita_aw81, 0.001); end
  def test_costpercapita_ay81; assert_in_epsilon(3.831482553691071, worksheet.costpercapita_ay81, 0.001); end
  def test_costpercapita_az81; assert_in_epsilon(3.641135703916682, worksheet.costpercapita_az81, 0.001); end
  def test_costpercapita_ba81; assert_in_epsilon(1.887841927748817, worksheet.costpercapita_ba81, 0.001); end
  def test_costpercapita_bb81; assert_in_epsilon(1.829387781883618, worksheet.costpercapita_bb81, 0.001); end
  def test_costpercapita_bc81; assert_in_epsilon(1.7794086276098833, worksheet.costpercapita_bc81, 0.001); end
  def test_costpercapita_bd81; assert_in_epsilon(1.7374934192455118, worksheet.costpercapita_bd81, 0.001); end
  def test_costpercapita_be81; assert_in_epsilon(1.7004389634633095, worksheet.costpercapita_be81, 0.001); end
  def test_costpercapita_bf81; assert_in_epsilon(1.6665187339313845, worksheet.costpercapita_bf81, 0.001); end
  def test_costpercapita_bg81; assert_in_epsilon(1.6354186025671449, worksheet.costpercapita_bg81, 0.001); end
  def test_costpercapita_bi81; assert_in_epsilon(3.831482553691071, worksheet.costpercapita_bi81, 0.001); end
  def test_costpercapita_bj81; assert_in_epsilon(7.346274855065623, worksheet.costpercapita_bj81, 0.001); end
  def test_costpercapita_bk81; assert_in_epsilon(8.993613331382699, worksheet.costpercapita_bk81, 0.001); end
  def test_costpercapita_bl81; assert_in_epsilon(10.544527593952793, worksheet.costpercapita_bl81, 0.001); end
  def test_costpercapita_bm81; assert_in_epsilon(12.03585811336673, worksheet.costpercapita_bm81, 0.001); end
  def test_costpercapita_bn81; assert_in_epsilon(13.489838520009052, worksheet.costpercapita_bn81, 0.001); end
  def test_costpercapita_bo81; assert_in_epsilon(11.674510107883163, worksheet.costpercapita_bo81, 0.001); end
  def test_costpercapita_bp81; assert_in_epsilon(11.665631137519691, worksheet.costpercapita_bp81, 0.001); end
  def test_costpercapita_bq81; assert_in_epsilon(11.447930217970017, worksheet.costpercapita_bq81, 0.001); end
  def test_costpercapita_bs81; assert_in_epsilon(3.831482553691071, worksheet.costpercapita_bs81, 0.001); end
  def test_costpercapita_bt81; assert_in_epsilon(7.346274855065623, worksheet.costpercapita_bt81, 0.001); end
  def test_costpercapita_bu81; assert_in_epsilon(8.993613331382699, worksheet.costpercapita_bu81, 0.001); end
  def test_costpercapita_bv81; assert_in_epsilon(10.544527593952793, worksheet.costpercapita_bv81, 0.001); end
  def test_costpercapita_bw81; assert_in_epsilon(12.03585811336673, worksheet.costpercapita_bw81, 0.001); end
  def test_costpercapita_bx81; assert_in_epsilon(13.489838520009052, worksheet.costpercapita_bx81, 0.001); end
  def test_costpercapita_by81; assert_in_epsilon(11.674510107883163, worksheet.costpercapita_by81, 0.001); end
  def test_costpercapita_bz81; assert_in_epsilon(11.665631137519691, worksheet.costpercapita_bz81, 0.001); end
  def test_costpercapita_ca81; assert_in_epsilon(11.447930217970017, worksheet.costpercapita_ca81, 0.001); end
  def test_costpercapita_cc81; assert_in_epsilon(10.114407381204536, worksheet.costpercapita_cc81, 0.001); end
  def test_costpercapita_cd81; assert_in_epsilon(210.78895303553347, worksheet.costpercapita_cd81, 0.001); end
  def test_costpercapita_cf81; assert_in_epsilon(-12.01685904718783, worksheet.costpercapita_cf81, 0.001); end
  def test_costpercapita_cg81; assert_in_epsilon(-1.6903257258615174, worksheet.costpercapita_cg81, 0.001); end
  def test_costpercapita_ch81; assert_in_epsilon(4.308351685505867, worksheet.costpercapita_ch81, 0.001); end
  def test_costpercapita_ci81; assert_in_epsilon(6.004337928753543, worksheet.costpercapita_ci81, 0.001); end
  def test_costpercapita_cj81; assert_in_epsilon(7.619707124907395, worksheet.costpercapita_cj81, 0.001); end
  def test_costpercapita_ck81; assert_in_epsilon(9.177713040911458, worksheet.costpercapita_ck81, 0.001); end
  def test_costpercapita_cl81; assert_in_epsilon(7.45434668235232, worksheet.costpercapita_cl81, 0.001); end
  def test_costpercapita_cm81; assert_in_epsilon(7.529651217031972, worksheet.costpercapita_cm81, 0.001); end
  def test_costpercapita_cn81; assert_in_epsilon(7.389134859664556, worksheet.costpercapita_cn81, 0.001); end
  def test_costpercapita_cp81; assert_in_epsilon(3.975117529564196, worksheet.costpercapita_cp81, 0.001); end
  def test_costpercapita_cq81; assert_in_epsilon(87.2667303002795, worksheet.costpercapita_cq81, 0.001); end
  def test_costpercapita_cr81; assert_equal("ok", worksheet.costpercapita_cr81); end
  def test_costpercapita_a82; assert_equal("IX.c", worksheet.costpercapita_a82); end
  def test_costpercapita_b82; assert_equal("Commercial heating and cooling", worksheet.costpercapita_b82); end
  def test_costpercapita_c82; assert_equal("Buildings", worksheet.costpercapita_c82); end
  def test_costpercapita_e82; assert_in_epsilon(96.33993094912718, worksheet.costpercapita_e82, 0.001); end
  def test_costpercapita_f82; assert_in_epsilon(159.66139630547684, worksheet.costpercapita_f82, 0.001); end
  def test_costpercapita_g82; assert_in_epsilon(171.82608451209538, worksheet.costpercapita_g82, 0.001); end
  def test_costpercapita_h82; assert_in_epsilon(183.24127264849938, worksheet.costpercapita_h82, 0.001); end
  def test_costpercapita_i82; assert_in_epsilon(194.27110668406775, worksheet.costpercapita_i82, 0.001); end
  def test_costpercapita_j82; assert_in_epsilon(205.16748500028476, worksheet.costpercapita_j82, 0.001); end
  def test_costpercapita_k82; assert_in_epsilon(216.1110924876329, worksheet.costpercapita_k82, 0.001); end
  def test_costpercapita_l82; assert_in_epsilon(227.22597851539916, worksheet.costpercapita_l82, 0.001); end
  def test_costpercapita_m82; assert_in_epsilon(238.20319146193754, worksheet.costpercapita_m82, 0.001); end
  def test_costpercapita_o82; assert_in_epsilon(13.800347720140973, worksheet.costpercapita_o82, 0.001); end
  def test_costpercapita_p82; assert_in_epsilon(14.183444433689148, worksheet.costpercapita_p82, 0.001); end
  def test_costpercapita_q82; assert_in_epsilon(14.835571809878175, worksheet.costpercapita_q82, 0.001); end
  def test_costpercapita_r82; assert_in_epsilon(15.561751519132722, worksheet.costpercapita_r82, 0.001); end
  def test_costpercapita_s82; assert_in_epsilon(16.400216250037403, worksheet.costpercapita_s82, 0.001); end
  def test_costpercapita_t82; assert_in_epsilon(17.365873474418752, worksheet.costpercapita_t82, 0.001); end
  def test_costpercapita_u82; assert_in_epsilon(18.445217770407602, worksheet.costpercapita_u82, 0.001); end
  def test_costpercapita_v82; assert_in_epsilon(19.633764062219754, worksheet.costpercapita_v82, 0.001); end
  def test_costpercapita_w82; assert_in_epsilon(20.940477821523046, worksheet.costpercapita_w82, 0.001); end
  def test_costpercapita_y82; assert_in_delta(0, (worksheet.costpercapita_y82||0), 0.001); end
  def test_costpercapita_z82; assert_in_delta(0, (worksheet.costpercapita_z82||0), 0.001); end
  def test_costpercapita_aa82; assert_in_delta(0, (worksheet.costpercapita_aa82||0), 0.001); end
  def test_costpercapita_ab82; assert_in_delta(0, (worksheet.costpercapita_ab82||0), 0.001); end
  def test_costpercapita_ac82; assert_in_delta(0, (worksheet.costpercapita_ac82||0), 0.001); end
  def test_costpercapita_ad82; assert_in_delta(0, (worksheet.costpercapita_ad82||0), 0.001); end
  def test_costpercapita_ae82; assert_in_delta(0, (worksheet.costpercapita_ae82||0), 0.001); end
  def test_costpercapita_af82; assert_in_delta(0, (worksheet.costpercapita_af82||0), 0.001); end
  def test_costpercapita_ag82; assert_in_delta(0, (worksheet.costpercapita_ag82||0), 0.001); end
  def test_costpercapita_ai82; assert_in_epsilon(110.14027866926814, worksheet.costpercapita_ai82, 0.001); end
  def test_costpercapita_aj82; assert_in_epsilon(173.844840739166, worksheet.costpercapita_aj82, 0.001); end
  def test_costpercapita_ak82; assert_in_epsilon(186.66165632197357, worksheet.costpercapita_ak82, 0.001); end
  def test_costpercapita_al82; assert_in_epsilon(198.8030241676321, worksheet.costpercapita_al82, 0.001); end
  def test_costpercapita_am82; assert_in_epsilon(210.67132293410515, worksheet.costpercapita_am82, 0.001); end
  def test_costpercapita_an82; assert_in_epsilon(222.5333584747035, worksheet.costpercapita_an82, 0.001); end
  def test_costpercapita_ao82; assert_in_epsilon(234.55631025804053, worksheet.costpercapita_ao82, 0.001); end
  def test_costpercapita_ap82; assert_in_epsilon(246.85974257761893, worksheet.costpercapita_ap82, 0.001); end
  def test_costpercapita_aq82; assert_in_epsilon(259.14366928346055, worksheet.costpercapita_aq82, 0.001); end
  def test_costpercapita_as82; assert_in_epsilon(204.80157815844092, worksheet.costpercapita_as82, 0.001); end
  def test_costpercapita_at82; assert_in_epsilon(4237.837823137058, worksheet.costpercapita_at82, 0.001); end
  def test_costpercapita_av82; assert_in_delta(0.07, worksheet.costpercapita_av82, 0.001); end
  def test_costpercapita_aw82; assert_in_epsilon(15, worksheet.costpercapita_aw82, 0.001); end
  def test_costpercapita_ay82; assert_in_epsilon(31.732819686840905, worksheet.costpercapita_ay82, 0.001); end
  def test_costpercapita_az82; assert_in_epsilon(87.6498154329925, worksheet.costpercapita_az82, 0.001); end
  def test_costpercapita_ba82; assert_in_epsilon(94.32790231424471, worksheet.costpercapita_ba82, 0.001); end
  def test_costpercapita_bb82; assert_in_epsilon(100.59453380088401, worksheet.costpercapita_bb82, 0.001); end
  def test_costpercapita_bc82; assert_in_epsilon(106.64961624313209, worksheet.costpercapita_bc82, 0.001); end
  def test_costpercapita_bd82; assert_in_epsilon(112.63143508227824, worksheet.costpercapita_bd82, 0.001); end
  def test_costpercapita_be82; assert_in_epsilon(118.63918146702082, worksheet.costpercapita_be82, 0.001); end
  def test_costpercapita_bf82; assert_in_epsilon(124.74095516708611, worksheet.costpercapita_bf82, 0.001); end
  def test_costpercapita_bg82; assert_in_epsilon(130.76715004572716, worksheet.costpercapita_bg82, 0.001); end
  def test_costpercapita_bi82; assert_in_epsilon(31.732819686840905, worksheet.costpercapita_bi82, 0.001); end
  def test_costpercapita_bj82; assert_in_epsilon(118.33624319312891, worksheet.costpercapita_bj82, 0.001); end
  def test_costpercapita_bk82; assert_in_epsilon(208.7900357743586, worksheet.costpercapita_bk82, 0.001); end
  def test_costpercapita_bl82; assert_in_epsilon(274.1569457041877, worksheet.costpercapita_bl82, 0.001); end
  def test_costpercapita_bm82; assert_in_epsilon(293.40581644719435, worksheet.costpercapita_bm82, 0.001); end
  def test_costpercapita_bn82; assert_in_epsilon(312.3102840350901, worksheet.costpercapita_bn82, 0.001); end
  def test_costpercapita_bo82; assert_in_epsilon(330.78513074714857, worksheet.costpercapita_bo82, 0.001); end
  def test_costpercapita_bp82; assert_in_epsilon(349.04409657407444, worksheet.costpercapita_bp82, 0.001); end
  def test_costpercapita_bq82; assert_in_epsilon(367.28295043892956, worksheet.costpercapita_bq82, 0.001); end
  def test_costpercapita_bs82; assert_in_epsilon(45.533167406981875, worksheet.costpercapita_bs82, 0.001); end
  def test_costpercapita_bt82; assert_in_epsilon(132.51968762681807, worksheet.costpercapita_bt82, 0.001); end
  def test_costpercapita_bu82; assert_in_epsilon(223.6256075842368, worksheet.costpercapita_bu82, 0.001); end
  def test_costpercapita_bv82; assert_in_epsilon(289.7186972233204, worksheet.costpercapita_bv82, 0.001); end
  def test_costpercapita_bw82; assert_in_epsilon(309.80603269723173, worksheet.costpercapita_bw82, 0.001); end
  def test_costpercapita_bx82; assert_in_epsilon(329.67615750950887, worksheet.costpercapita_bx82, 0.001); end
  def test_costpercapita_by82; assert_in_epsilon(349.23034851755614, worksheet.costpercapita_by82, 0.001); end
  def test_costpercapita_bz82; assert_in_epsilon(368.67786063629416, worksheet.costpercapita_bz82, 0.001); end
  def test_costpercapita_ca82; assert_in_epsilon(388.22342826045264, worksheet.costpercapita_ca82, 0.001); end
  def test_costpercapita_cc82; assert_in_epsilon(270.77899860693344, worksheet.costpercapita_cc82, 0.001); end
  def test_costpercapita_cd82; assert_in_epsilon(5439.976246446684, worksheet.costpercapita_cd82, 0.001); end
  def test_costpercapita_cf82; assert_in_epsilon(-64.60711126228627, worksheet.costpercapita_cf82, 0.001); end
  def test_costpercapita_cg82; assert_in_epsilon(-41.325153112347934, worksheet.costpercapita_cg82, 0.001); end
  def test_costpercapita_ch82; assert_in_epsilon(36.96395126226324, worksheet.costpercapita_ch82, 0.001); end
  def test_costpercapita_ci82; assert_in_epsilon(90.91567305568833, worksheet.costpercapita_ci82, 0.001); end
  def test_costpercapita_cj82; assert_in_epsilon(99.13470976312658, worksheet.costpercapita_cj82, 0.001); end
  def test_costpercapita_ck82; assert_in_epsilon(107.14279903480535, worksheet.costpercapita_ck82, 0.001); end
  def test_costpercapita_cl82; assert_in_epsilon(114.67403825951564, worksheet.costpercapita_cl82, 0.001); end
  def test_costpercapita_cm82; assert_in_epsilon(121.81811805867524, worksheet.costpercapita_cm82, 0.001); end
  def test_costpercapita_cn82; assert_in_epsilon(129.079758976992, worksheet.costpercapita_cn82, 0.001); end
  def test_costpercapita_cp82; assert_in_epsilon(65.97742044849245, worksheet.costpercapita_cp82, 0.001); end
  def test_costpercapita_cq82; assert_in_epsilon(1202.1384233096253, worksheet.costpercapita_cq82, 0.001); end
  def test_costpercapita_cr82; assert_equal("ok", worksheet.costpercapita_cr82); end
  def test_costpercapita_a83; assert_equal("X.a", worksheet.costpercapita_a83); end
  def test_costpercapita_b83; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costpercapita_b83); end
  def test_costpercapita_c83; assert_equal("Buildings", worksheet.costpercapita_c83); end
  def test_costpercapita_e83; assert_in_epsilon(43.77413813480579, worksheet.costpercapita_e83, 0.001); end
  def test_costpercapita_f83; assert_in_epsilon(46.26247852696957, worksheet.costpercapita_f83, 0.001); end
  def test_costpercapita_g83; assert_in_epsilon(46.87601644416925, worksheet.costpercapita_g83, 0.001); end
  def test_costpercapita_h83; assert_in_epsilon(47.09108073326739, worksheet.costpercapita_h83, 0.001); end
  def test_costpercapita_i83; assert_in_epsilon(47.22699588601007, worksheet.costpercapita_i83, 0.001); end
  def test_costpercapita_j83; assert_in_epsilon(49.242965928943576, worksheet.costpercapita_j83, 0.001); end
  def test_costpercapita_k83; assert_in_epsilon(50.65110812161755, worksheet.costpercapita_k83, 0.001); end
  def test_costpercapita_l83; assert_in_epsilon(52.172899394812006, worksheet.costpercapita_l83, 0.001); end
  def test_costpercapita_m83; assert_in_epsilon(54.258079358507125, worksheet.costpercapita_m83, 0.001); end
  def test_costpercapita_o83; assert_in_delta(0, (worksheet.costpercapita_o83||0), 0.001); end
  def test_costpercapita_p83; assert_in_delta(0, (worksheet.costpercapita_p83||0), 0.001); end
  def test_costpercapita_q83; assert_in_delta(0, (worksheet.costpercapita_q83||0), 0.001); end
  def test_costpercapita_r83; assert_in_delta(0, (worksheet.costpercapita_r83||0), 0.001); end
  def test_costpercapita_s83; assert_in_delta(0, (worksheet.costpercapita_s83||0), 0.001); end
  def test_costpercapita_t83; assert_in_delta(0, (worksheet.costpercapita_t83||0), 0.001); end
  def test_costpercapita_u83; assert_in_delta(0, (worksheet.costpercapita_u83||0), 0.001); end
  def test_costpercapita_v83; assert_in_delta(0, (worksheet.costpercapita_v83||0), 0.001); end
  def test_costpercapita_w83; assert_in_delta(0, (worksheet.costpercapita_w83||0), 0.001); end
  def test_costpercapita_y83; assert_in_delta(0, (worksheet.costpercapita_y83||0), 0.001); end
  def test_costpercapita_z83; assert_in_delta(0, (worksheet.costpercapita_z83||0), 0.001); end
  def test_costpercapita_aa83; assert_in_delta(0, (worksheet.costpercapita_aa83||0), 0.001); end
  def test_costpercapita_ab83; assert_in_delta(0, (worksheet.costpercapita_ab83||0), 0.001); end
  def test_costpercapita_ac83; assert_in_delta(0, (worksheet.costpercapita_ac83||0), 0.001); end
  def test_costpercapita_ad83; assert_in_delta(0, (worksheet.costpercapita_ad83||0), 0.001); end
  def test_costpercapita_ae83; assert_in_delta(0, (worksheet.costpercapita_ae83||0), 0.001); end
  def test_costpercapita_af83; assert_in_delta(0, (worksheet.costpercapita_af83||0), 0.001); end
  def test_costpercapita_ag83; assert_in_delta(0, (worksheet.costpercapita_ag83||0), 0.001); end
  def test_costpercapita_ai83; assert_in_epsilon(43.77413813480579, worksheet.costpercapita_ai83, 0.001); end
  def test_costpercapita_aj83; assert_in_epsilon(46.26247852696957, worksheet.costpercapita_aj83, 0.001); end
  def test_costpercapita_ak83; assert_in_epsilon(46.87601644416925, worksheet.costpercapita_ak83, 0.001); end
  def test_costpercapita_al83; assert_in_epsilon(47.09108073326739, worksheet.costpercapita_al83, 0.001); end
  def test_costpercapita_am83; assert_in_epsilon(47.22699588601007, worksheet.costpercapita_am83, 0.001); end
  def test_costpercapita_an83; assert_in_epsilon(49.242965928943576, worksheet.costpercapita_an83, 0.001); end
  def test_costpercapita_ao83; assert_in_epsilon(50.65110812161755, worksheet.costpercapita_ao83, 0.001); end
  def test_costpercapita_ap83; assert_in_epsilon(52.172899394812006, worksheet.costpercapita_ap83, 0.001); end
  def test_costpercapita_aq83; assert_in_epsilon(54.258079358507125, worksheet.costpercapita_aq83, 0.001); end
  def test_costpercapita_as83; assert_in_epsilon(48.61730694767804, worksheet.costpercapita_as83, 0.001); end
  def test_costpercapita_at83; assert_in_epsilon(1010.4099942684265, worksheet.costpercapita_at83, 0.001); end
  def test_costpercapita_av83; assert_in_delta(0.07, worksheet.costpercapita_av83, 0.001); end
  def test_costpercapita_aw83; assert_in_epsilon(15, worksheet.costpercapita_aw83, 0.001); end
  def test_costpercapita_ay83; assert_in_epsilon(14.418495204363058, worksheet.costpercapita_ay83, 0.001); end
  def test_costpercapita_az83; assert_in_epsilon(25.396857338034987, worksheet.costpercapita_az83, 0.001); end
  def test_costpercapita_ba83; assert_in_epsilon(25.73367316482887, worksheet.costpercapita_ba83, 0.001); end
  def test_costpercapita_bb83; assert_in_epsilon(25.85173767936946, worksheet.costpercapita_bb83, 0.001); end
  def test_costpercapita_bc83; assert_in_epsilon(25.92635144530227, worksheet.costpercapita_bc83, 0.001); end
  def test_costpercapita_bd83; assert_in_epsilon(27.03306481666405, worksheet.costpercapita_bd83, 0.001); end
  def test_costpercapita_be83; assert_in_epsilon(27.80609703451551, worksheet.costpercapita_be83, 0.001); end
  def test_costpercapita_bf83; assert_in_epsilon(28.64151954308377, worksheet.costpercapita_bf83, 0.001); end
  def test_costpercapita_bg83; assert_in_epsilon(29.786227300823594, worksheet.costpercapita_bg83, 0.001); end
  def test_costpercapita_bi83; assert_in_epsilon(14.418495204363058, worksheet.costpercapita_bi83, 0.001); end
  def test_costpercapita_bj83; assert_in_epsilon(39.33990166453832, worksheet.costpercapita_bj83, 0.001); end
  def test_costpercapita_bk83; assert_in_epsilon(63.785659210094835, worksheet.costpercapita_bk83, 0.001); end
  def test_costpercapita_bl83; assert_in_epsilon(74.59338761699627, worksheet.costpercapita_bl83, 0.001); end
  def test_costpercapita_bm83; assert_in_epsilon(75.32740583399675, worksheet.costpercapita_bm83, 0.001); end
  def test_costpercapita_bn83; assert_in_epsilon(76.90184835488074, worksheet.costpercapita_bn83, 0.001); end
  def test_costpercapita_bo83; assert_in_epsilon(79.03839138756213, worksheet.costpercapita_bo83, 0.001); end
  def test_costpercapita_bp83; assert_in_epsilon(81.82173663418398, worksheet.costpercapita_bp83, 0.001); end
  def test_costpercapita_bq83; assert_in_epsilon(84.63611063363878, worksheet.costpercapita_bq83, 0.001); end
  def test_costpercapita_bs83; assert_in_epsilon(14.418495204363058, worksheet.costpercapita_bs83, 0.001); end
  def test_costpercapita_bt83; assert_in_epsilon(39.33990166453832, worksheet.costpercapita_bt83, 0.001); end
  def test_costpercapita_bu83; assert_in_epsilon(63.785659210094835, worksheet.costpercapita_bu83, 0.001); end
  def test_costpercapita_bv83; assert_in_epsilon(74.59338761699627, worksheet.costpercapita_bv83, 0.001); end
  def test_costpercapita_bw83; assert_in_epsilon(75.32740583399675, worksheet.costpercapita_bw83, 0.001); end
  def test_costpercapita_bx83; assert_in_epsilon(76.90184835488074, worksheet.costpercapita_bx83, 0.001); end
  def test_costpercapita_by83; assert_in_epsilon(79.03839138756213, worksheet.costpercapita_by83, 0.001); end
  def test_costpercapita_bz83; assert_in_epsilon(81.82173663418398, worksheet.costpercapita_bz83, 0.001); end
  def test_costpercapita_ca83; assert_in_epsilon(84.63611063363878, worksheet.costpercapita_ca83, 0.001); end
  def test_costpercapita_cc83; assert_in_epsilon(65.54032628225053, worksheet.costpercapita_cc83, 0.001); end
  def test_costpercapita_cd83; assert_in_epsilon(1359.4541770953194, worksheet.costpercapita_cd83, 0.001); end
  def test_costpercapita_cf83; assert_in_epsilon(-29.355642930442734, worksheet.costpercapita_cf83, 0.001); end
  def test_costpercapita_cg83; assert_in_epsilon(-6.922576862431251, worksheet.costpercapita_cg83, 0.001); end
  def test_costpercapita_ch83; assert_in_epsilon(16.909642765925582, worksheet.costpercapita_ch83, 0.001); end
  def test_costpercapita_ci83; assert_in_epsilon(27.502306883728867, worksheet.costpercapita_ci83, 0.001); end
  def test_costpercapita_cj83; assert_in_epsilon(28.10040994798668, worksheet.costpercapita_cj83, 0.001); end
  def test_costpercapita_ck83; assert_in_epsilon(27.658882425937175, worksheet.costpercapita_ck83, 0.001); end
  def test_costpercapita_cl83; assert_in_epsilon(28.38728326594458, worksheet.costpercapita_cl83, 0.001); end
  def test_costpercapita_cm83; assert_in_epsilon(29.64883723937198, worksheet.costpercapita_cm83, 0.001); end
  def test_costpercapita_cn83; assert_in_epsilon(30.37803127513165, worksheet.costpercapita_cn83, 0.001); end
  def test_costpercapita_cp83; assert_in_epsilon(16.923019334572505, worksheet.costpercapita_cp83, 0.001); end
  def test_costpercapita_cq83; assert_in_epsilon(349.0441828268928, worksheet.costpercapita_cq83, 0.001); end
  def test_costpercapita_cr83; assert_equal("ok", worksheet.costpercapita_cr83); end
  def test_costpercapita_a84; assert_equal("X.b", worksheet.costpercapita_a84); end
  def test_costpercapita_b84; assert_equal("Commercial lighting, appliances, and catering", worksheet.costpercapita_b84); end
  def test_costpercapita_c84; assert_equal("Buildings", worksheet.costpercapita_c84); end
  def test_costpercapita_e84; assert_in_delta(0, (worksheet.costpercapita_e84||0), 0.001); end
  def test_costpercapita_f84; assert_in_delta(0, (worksheet.costpercapita_f84||0), 0.001); end
  def test_costpercapita_g84; assert_in_delta(0, (worksheet.costpercapita_g84||0), 0.001); end
  def test_costpercapita_h84; assert_in_delta(0, (worksheet.costpercapita_h84||0), 0.001); end
  def test_costpercapita_i84; assert_in_delta(0, (worksheet.costpercapita_i84||0), 0.001); end
  def test_costpercapita_j84; assert_in_delta(0, (worksheet.costpercapita_j84||0), 0.001); end
  def test_costpercapita_k84; assert_in_delta(0, (worksheet.costpercapita_k84||0), 0.001); end
  def test_costpercapita_l84; assert_in_delta(0, (worksheet.costpercapita_l84||0), 0.001); end
  def test_costpercapita_m84; assert_in_delta(0, (worksheet.costpercapita_m84||0), 0.001); end
  def test_costpercapita_o84; assert_in_delta(0, (worksheet.costpercapita_o84||0), 0.001); end
  def test_costpercapita_p84; assert_in_delta(0, (worksheet.costpercapita_p84||0), 0.001); end
  def test_costpercapita_q84; assert_in_delta(0, (worksheet.costpercapita_q84||0), 0.001); end
  def test_costpercapita_r84; assert_in_delta(0, (worksheet.costpercapita_r84||0), 0.001); end
  def test_costpercapita_s84; assert_in_delta(0, (worksheet.costpercapita_s84||0), 0.001); end
  def test_costpercapita_t84; assert_in_delta(0, (worksheet.costpercapita_t84||0), 0.001); end
  def test_costpercapita_u84; assert_in_delta(0, (worksheet.costpercapita_u84||0), 0.001); end
  def test_costpercapita_v84; assert_in_delta(0, (worksheet.costpercapita_v84||0), 0.001); end
  def test_costpercapita_w84; assert_in_delta(0, (worksheet.costpercapita_w84||0), 0.001); end
  def test_costpercapita_y84; assert_in_delta(0, (worksheet.costpercapita_y84||0), 0.001); end
  def test_costpercapita_z84; assert_in_delta(0, (worksheet.costpercapita_z84||0), 0.001); end
  def test_costpercapita_aa84; assert_in_delta(0, (worksheet.costpercapita_aa84||0), 0.001); end
  def test_costpercapita_ab84; assert_in_delta(0, (worksheet.costpercapita_ab84||0), 0.001); end
  def test_costpercapita_ac84; assert_in_delta(0, (worksheet.costpercapita_ac84||0), 0.001); end
  def test_costpercapita_ad84; assert_in_delta(0, (worksheet.costpercapita_ad84||0), 0.001); end
  def test_costpercapita_ae84; assert_in_delta(0, (worksheet.costpercapita_ae84||0), 0.001); end
  def test_costpercapita_af84; assert_in_delta(0, (worksheet.costpercapita_af84||0), 0.001); end
  def test_costpercapita_ag84; assert_in_delta(0, (worksheet.costpercapita_ag84||0), 0.001); end
  def test_costpercapita_ai84; assert_in_delta(0, (worksheet.costpercapita_ai84||0), 0.001); end
  def test_costpercapita_aj84; assert_in_delta(0, (worksheet.costpercapita_aj84||0), 0.001); end
  def test_costpercapita_ak84; assert_in_delta(0, (worksheet.costpercapita_ak84||0), 0.001); end
  def test_costpercapita_al84; assert_in_delta(0, (worksheet.costpercapita_al84||0), 0.001); end
  def test_costpercapita_am84; assert_in_delta(0, (worksheet.costpercapita_am84||0), 0.001); end
  def test_costpercapita_an84; assert_in_delta(0, (worksheet.costpercapita_an84||0), 0.001); end
  def test_costpercapita_ao84; assert_in_delta(0, (worksheet.costpercapita_ao84||0), 0.001); end
  def test_costpercapita_ap84; assert_in_delta(0, (worksheet.costpercapita_ap84||0), 0.001); end
  def test_costpercapita_aq84; assert_in_delta(0, (worksheet.costpercapita_aq84||0), 0.001); end
  def test_costpercapita_as84; assert_in_delta(0, (worksheet.costpercapita_as84||0), 0.001); end
  def test_costpercapita_at84; assert_in_delta(0, (worksheet.costpercapita_at84||0), 0.001); end
  def test_costpercapita_av84; assert_in_delta(0, (worksheet.costpercapita_av84||0), 0.001); end
  def test_costpercapita_aw84; assert_in_epsilon(5, worksheet.costpercapita_aw84, 0.001); end
  def test_costpercapita_ay84; assert_in_delta(0, (worksheet.costpercapita_ay84||0), 0.001); end
  def test_costpercapita_az84; assert_in_delta(0, (worksheet.costpercapita_az84||0), 0.001); end
  def test_costpercapita_ba84; assert_in_delta(0, (worksheet.costpercapita_ba84||0), 0.001); end
  def test_costpercapita_bb84; assert_in_delta(0, (worksheet.costpercapita_bb84||0), 0.001); end
  def test_costpercapita_bc84; assert_in_delta(0, (worksheet.costpercapita_bc84||0), 0.001); end
  def test_costpercapita_bd84; assert_in_delta(0, (worksheet.costpercapita_bd84||0), 0.001); end
  def test_costpercapita_be84; assert_in_delta(0, (worksheet.costpercapita_be84||0), 0.001); end
  def test_costpercapita_bf84; assert_in_delta(0, (worksheet.costpercapita_bf84||0), 0.001); end
  def test_costpercapita_bg84; assert_in_delta(0, (worksheet.costpercapita_bg84||0), 0.001); end
  def test_costpercapita_bi84; assert_in_delta(0, (worksheet.costpercapita_bi84||0), 0.001); end
  def test_costpercapita_bj84; assert_in_delta(0, (worksheet.costpercapita_bj84||0), 0.001); end
  def test_costpercapita_bk84; assert_in_delta(0, (worksheet.costpercapita_bk84||0), 0.001); end
  def test_costpercapita_bl84; assert_in_delta(0, (worksheet.costpercapita_bl84||0), 0.001); end
  def test_costpercapita_bm84; assert_in_delta(0, (worksheet.costpercapita_bm84||0), 0.001); end
  def test_costpercapita_bn84; assert_in_delta(0, (worksheet.costpercapita_bn84||0), 0.001); end
  def test_costpercapita_bo84; assert_in_delta(0, (worksheet.costpercapita_bo84||0), 0.001); end
  def test_costpercapita_bp84; assert_in_delta(0, (worksheet.costpercapita_bp84||0), 0.001); end
  def test_costpercapita_bq84; assert_in_delta(0, (worksheet.costpercapita_bq84||0), 0.001); end
  def test_costpercapita_bs84; assert_in_delta(0, (worksheet.costpercapita_bs84||0), 0.001); end
  def test_costpercapita_bt84; assert_in_delta(0, (worksheet.costpercapita_bt84||0), 0.001); end
  def test_costpercapita_bu84; assert_in_delta(0, (worksheet.costpercapita_bu84||0), 0.001); end
  def test_costpercapita_bv84; assert_in_delta(0, (worksheet.costpercapita_bv84||0), 0.001); end
  def test_costpercapita_bw84; assert_in_delta(0, (worksheet.costpercapita_bw84||0), 0.001); end
  def test_costpercapita_bx84; assert_in_delta(0, (worksheet.costpercapita_bx84||0), 0.001); end
  def test_costpercapita_by84; assert_in_delta(0, (worksheet.costpercapita_by84||0), 0.001); end
  def test_costpercapita_bz84; assert_in_delta(0, (worksheet.costpercapita_bz84||0), 0.001); end
  def test_costpercapita_ca84; assert_in_delta(0, (worksheet.costpercapita_ca84||0), 0.001); end
  def test_costpercapita_cc84; assert_in_delta(0, (worksheet.costpercapita_cc84||0), 0.001); end
  def test_costpercapita_cd84; assert_in_delta(0, (worksheet.costpercapita_cd84||0), 0.001); end
  def test_costpercapita_cf84; assert_in_delta(0, (worksheet.costpercapita_cf84||0), 0.001); end
  def test_costpercapita_cg84; assert_in_delta(0, (worksheet.costpercapita_cg84||0), 0.001); end
  def test_costpercapita_ch84; assert_in_delta(0, (worksheet.costpercapita_ch84||0), 0.001); end
  def test_costpercapita_ci84; assert_in_delta(0, (worksheet.costpercapita_ci84||0), 0.001); end
  def test_costpercapita_cj84; assert_in_delta(0, (worksheet.costpercapita_cj84||0), 0.001); end
  def test_costpercapita_ck84; assert_in_delta(0, (worksheet.costpercapita_ck84||0), 0.001); end
  def test_costpercapita_cl84; assert_in_delta(0, (worksheet.costpercapita_cl84||0), 0.001); end
  def test_costpercapita_cm84; assert_in_delta(0, (worksheet.costpercapita_cm84||0), 0.001); end
  def test_costpercapita_cn84; assert_in_delta(0, (worksheet.costpercapita_cn84||0), 0.001); end
  def test_costpercapita_cp84; assert_in_delta(0, (worksheet.costpercapita_cp84||0), 0.001); end
  def test_costpercapita_cq84; assert_in_delta(0, (worksheet.costpercapita_cq84||0), 0.001); end
  def test_costpercapita_cr84; assert_equal("ok", worksheet.costpercapita_cr84); end
  def test_costpercapita_a85; assert_equal("XI.a", worksheet.costpercapita_a85); end
  def test_costpercapita_b85; assert_equal("Industrial processes", worksheet.costpercapita_b85); end
  def test_costpercapita_c85; assert_equal("Industry", worksheet.costpercapita_c85); end
  def test_costpercapita_e85; assert_in_delta(0, (worksheet.costpercapita_e85||0), 0.001); end
  def test_costpercapita_f85; assert_in_delta(0, (worksheet.costpercapita_f85||0), 0.001); end
  def test_costpercapita_g85; assert_in_delta(0, (worksheet.costpercapita_g85||0), 0.001); end
  def test_costpercapita_h85; assert_in_delta(0, (worksheet.costpercapita_h85||0), 0.001); end
  def test_costpercapita_i85; assert_in_delta(0, (worksheet.costpercapita_i85||0), 0.001); end
  def test_costpercapita_j85; assert_in_delta(0, (worksheet.costpercapita_j85||0), 0.001); end
  def test_costpercapita_k85; assert_in_delta(0, (worksheet.costpercapita_k85||0), 0.001); end
  def test_costpercapita_l85; assert_in_delta(0, (worksheet.costpercapita_l85||0), 0.001); end
  def test_costpercapita_m85; assert_in_delta(0, (worksheet.costpercapita_m85||0), 0.001); end
  def test_costpercapita_o85; assert_in_delta(0, (worksheet.costpercapita_o85||0), 0.001); end
  def test_costpercapita_p85; assert_in_delta(0, (worksheet.costpercapita_p85||0), 0.001); end
  def test_costpercapita_q85; assert_in_delta(0, (worksheet.costpercapita_q85||0), 0.001); end
  def test_costpercapita_r85; assert_in_delta(0, (worksheet.costpercapita_r85||0), 0.001); end
  def test_costpercapita_s85; assert_in_delta(0, (worksheet.costpercapita_s85||0), 0.001); end
  def test_costpercapita_t85; assert_in_delta(0, (worksheet.costpercapita_t85||0), 0.001); end
  def test_costpercapita_u85; assert_in_delta(0, (worksheet.costpercapita_u85||0), 0.001); end
  def test_costpercapita_v85; assert_in_delta(0, (worksheet.costpercapita_v85||0), 0.001); end
  def test_costpercapita_w85; assert_in_delta(0, (worksheet.costpercapita_w85||0), 0.001); end
  def test_costpercapita_y85; assert_in_delta(0, (worksheet.costpercapita_y85||0), 0.001); end
  def test_costpercapita_z85; assert_in_delta(0, (worksheet.costpercapita_z85||0), 0.001); end
  def test_costpercapita_aa85; assert_in_delta(0, (worksheet.costpercapita_aa85||0), 0.001); end
  def test_costpercapita_ab85; assert_in_delta(0, (worksheet.costpercapita_ab85||0), 0.001); end
  def test_costpercapita_ac85; assert_in_delta(0, (worksheet.costpercapita_ac85||0), 0.001); end
  def test_costpercapita_ad85; assert_in_delta(0, (worksheet.costpercapita_ad85||0), 0.001); end
  def test_costpercapita_ae85; assert_in_delta(0, (worksheet.costpercapita_ae85||0), 0.001); end
  def test_costpercapita_af85; assert_in_delta(0, (worksheet.costpercapita_af85||0), 0.001); end
  def test_costpercapita_ag85; assert_in_delta(0, (worksheet.costpercapita_ag85||0), 0.001); end
  def test_costpercapita_ai85; assert_in_delta(0, (worksheet.costpercapita_ai85||0), 0.001); end
  def test_costpercapita_aj85; assert_in_delta(0, (worksheet.costpercapita_aj85||0), 0.001); end
  def test_costpercapita_ak85; assert_in_delta(0, (worksheet.costpercapita_ak85||0), 0.001); end
  def test_costpercapita_al85; assert_in_delta(0, (worksheet.costpercapita_al85||0), 0.001); end
  def test_costpercapita_am85; assert_in_delta(0, (worksheet.costpercapita_am85||0), 0.001); end
  def test_costpercapita_an85; assert_in_delta(0, (worksheet.costpercapita_an85||0), 0.001); end
  def test_costpercapita_ao85; assert_in_delta(0, (worksheet.costpercapita_ao85||0), 0.001); end
  def test_costpercapita_ap85; assert_in_delta(0, (worksheet.costpercapita_ap85||0), 0.001); end
  def test_costpercapita_aq85; assert_in_delta(0, (worksheet.costpercapita_aq85||0), 0.001); end
  def test_costpercapita_as85; assert_in_delta(0, (worksheet.costpercapita_as85||0), 0.001); end
  def test_costpercapita_at85; assert_in_delta(0, (worksheet.costpercapita_at85||0), 0.001); end
  def test_costpercapita_av85; assert_in_delta(0, (worksheet.costpercapita_av85||0), 0.001); end
  def test_costpercapita_aw85; assert_in_epsilon(5, worksheet.costpercapita_aw85, 0.001); end
  def test_costpercapita_ay85; assert_in_delta(0, (worksheet.costpercapita_ay85||0), 0.001); end
  def test_costpercapita_az85; assert_in_delta(0, (worksheet.costpercapita_az85||0), 0.001); end
  def test_costpercapita_ba85; assert_in_delta(0, (worksheet.costpercapita_ba85||0), 0.001); end
  def test_costpercapita_bb85; assert_in_delta(0, (worksheet.costpercapita_bb85||0), 0.001); end
  def test_costpercapita_bc85; assert_in_delta(0, (worksheet.costpercapita_bc85||0), 0.001); end
  def test_costpercapita_bd85; assert_in_delta(0, (worksheet.costpercapita_bd85||0), 0.001); end
  def test_costpercapita_be85; assert_in_delta(0, (worksheet.costpercapita_be85||0), 0.001); end
  def test_costpercapita_bf85; assert_in_delta(0, (worksheet.costpercapita_bf85||0), 0.001); end
  def test_costpercapita_bg85; assert_in_delta(0, (worksheet.costpercapita_bg85||0), 0.001); end
  def test_costpercapita_bi85; assert_in_delta(0, (worksheet.costpercapita_bi85||0), 0.001); end
  def test_costpercapita_bj85; assert_in_delta(0, (worksheet.costpercapita_bj85||0), 0.001); end
  def test_costpercapita_bk85; assert_in_delta(0, (worksheet.costpercapita_bk85||0), 0.001); end
  def test_costpercapita_bl85; assert_in_delta(0, (worksheet.costpercapita_bl85||0), 0.001); end
  def test_costpercapita_bm85; assert_in_delta(0, (worksheet.costpercapita_bm85||0), 0.001); end
  def test_costpercapita_bn85; assert_in_delta(0, (worksheet.costpercapita_bn85||0), 0.001); end
  def test_costpercapita_bo85; assert_in_delta(0, (worksheet.costpercapita_bo85||0), 0.001); end
  def test_costpercapita_bp85; assert_in_delta(0, (worksheet.costpercapita_bp85||0), 0.001); end
  def test_costpercapita_bq85; assert_in_delta(0, (worksheet.costpercapita_bq85||0), 0.001); end
  def test_costpercapita_bs85; assert_in_delta(0, (worksheet.costpercapita_bs85||0), 0.001); end
  def test_costpercapita_bt85; assert_in_delta(0, (worksheet.costpercapita_bt85||0), 0.001); end
  def test_costpercapita_bu85; assert_in_delta(0, (worksheet.costpercapita_bu85||0), 0.001); end
  def test_costpercapita_bv85; assert_in_delta(0, (worksheet.costpercapita_bv85||0), 0.001); end
  def test_costpercapita_bw85; assert_in_delta(0, (worksheet.costpercapita_bw85||0), 0.001); end
  def test_costpercapita_bx85; assert_in_delta(0, (worksheet.costpercapita_bx85||0), 0.001); end
  def test_costpercapita_by85; assert_in_delta(0, (worksheet.costpercapita_by85||0), 0.001); end
  def test_costpercapita_bz85; assert_in_delta(0, (worksheet.costpercapita_bz85||0), 0.001); end
  def test_costpercapita_ca85; assert_in_delta(0, (worksheet.costpercapita_ca85||0), 0.001); end
  def test_costpercapita_cc85; assert_in_delta(0, (worksheet.costpercapita_cc85||0), 0.001); end
  def test_costpercapita_cd85; assert_in_delta(0, (worksheet.costpercapita_cd85||0), 0.001); end
  def test_costpercapita_cf85; assert_in_delta(0, (worksheet.costpercapita_cf85||0), 0.001); end
  def test_costpercapita_cg85; assert_in_delta(0, (worksheet.costpercapita_cg85||0), 0.001); end
  def test_costpercapita_ch85; assert_in_delta(0, (worksheet.costpercapita_ch85||0), 0.001); end
  def test_costpercapita_ci85; assert_in_delta(0, (worksheet.costpercapita_ci85||0), 0.001); end
  def test_costpercapita_cj85; assert_in_delta(0, (worksheet.costpercapita_cj85||0), 0.001); end
  def test_costpercapita_ck85; assert_in_delta(0, (worksheet.costpercapita_ck85||0), 0.001); end
  def test_costpercapita_cl85; assert_in_delta(0, (worksheet.costpercapita_cl85||0), 0.001); end
  def test_costpercapita_cm85; assert_in_delta(0, (worksheet.costpercapita_cm85||0), 0.001); end
  def test_costpercapita_cn85; assert_in_delta(0, (worksheet.costpercapita_cn85||0), 0.001); end
  def test_costpercapita_cp85; assert_in_delta(0, (worksheet.costpercapita_cp85||0), 0.001); end
  def test_costpercapita_cq85; assert_in_delta(0, (worksheet.costpercapita_cq85||0), 0.001); end
  def test_costpercapita_cr85; assert_equal("ok", worksheet.costpercapita_cr85); end
  def test_costpercapita_a86; assert_equal("XII.a.ICE", worksheet.costpercapita_a86); end
  def test_costpercapita_b86; assert_equal("Conventional cars and buses", worksheet.costpercapita_b86); end
  def test_costpercapita_c86; assert_equal("Transport", worksheet.costpercapita_c86); end
  def test_costpercapita_e86; assert_in_epsilon(858.0023650833957, worksheet.costpercapita_e86, 0.001); end
  def test_costpercapita_f86; assert_in_epsilon(782.6792401027626, worksheet.costpercapita_f86, 0.001); end
  def test_costpercapita_g86; assert_in_epsilon(814.5766250947166, worksheet.costpercapita_g86, 0.001); end
  def test_costpercapita_h86; assert_in_epsilon(746.0615423524774, worksheet.costpercapita_h86, 0.001); end
  def test_costpercapita_i86; assert_in_epsilon(702.7144254150844, worksheet.costpercapita_i86, 0.001); end
  def test_costpercapita_j86; assert_in_epsilon(659.6913960726374, worksheet.costpercapita_j86, 0.001); end
  def test_costpercapita_k86; assert_in_epsilon(611.6647878635345, worksheet.costpercapita_k86, 0.001); end
  def test_costpercapita_l86; assert_in_epsilon(585.0914425387606, worksheet.costpercapita_l86, 0.001); end
  def test_costpercapita_m86; assert_in_epsilon(552.0401772885167, worksheet.costpercapita_m86, 0.001); end
  def test_costpercapita_o86; assert_in_epsilon(906.6199100558307, worksheet.costpercapita_o86, 0.001); end
  def test_costpercapita_p86; assert_in_epsilon(891.8734238915283, worksheet.costpercapita_p86, 0.001); end
  def test_costpercapita_q86; assert_in_epsilon(905.2911988694716, worksheet.costpercapita_q86, 0.001); end
  def test_costpercapita_r86; assert_in_epsilon(886.2230243570231, worksheet.costpercapita_r86, 0.001); end
  def test_costpercapita_s86; assert_in_epsilon(861.5167150626362, worksheet.costpercapita_s86, 0.001); end
  def test_costpercapita_t86; assert_in_epsilon(833.2234605867573, worksheet.costpercapita_t86, 0.001); end
  def test_costpercapita_u86; assert_in_epsilon(798.8126865241238, worksheet.costpercapita_u86, 0.001); end
  def test_costpercapita_v86; assert_in_epsilon(771.1263508435745, worksheet.costpercapita_v86, 0.001); end
  def test_costpercapita_w86; assert_in_epsilon(743.3751367660244, worksheet.costpercapita_w86, 0.001); end
  def test_costpercapita_y86; assert_in_delta(0, (worksheet.costpercapita_y86||0), 0.001); end
  def test_costpercapita_z86; assert_in_delta(0, (worksheet.costpercapita_z86||0), 0.001); end
  def test_costpercapita_aa86; assert_in_delta(0, (worksheet.costpercapita_aa86||0), 0.001); end
  def test_costpercapita_ab86; assert_in_delta(0, (worksheet.costpercapita_ab86||0), 0.001); end
  def test_costpercapita_ac86; assert_in_delta(0, (worksheet.costpercapita_ac86||0), 0.001); end
  def test_costpercapita_ad86; assert_in_delta(0, (worksheet.costpercapita_ad86||0), 0.001); end
  def test_costpercapita_ae86; assert_in_delta(0, (worksheet.costpercapita_ae86||0), 0.001); end
  def test_costpercapita_af86; assert_in_delta(0, (worksheet.costpercapita_af86||0), 0.001); end
  def test_costpercapita_ag86; assert_in_delta(0, (worksheet.costpercapita_ag86||0), 0.001); end
  def test_costpercapita_ai86; assert_in_epsilon(1764.6222751392265, worksheet.costpercapita_ai86, 0.001); end
  def test_costpercapita_aj86; assert_in_epsilon(1674.552663994291, worksheet.costpercapita_aj86, 0.001); end
  def test_costpercapita_ak86; assert_in_epsilon(1719.8678239641881, worksheet.costpercapita_ak86, 0.001); end
  def test_costpercapita_al86; assert_in_epsilon(1632.2845667095005, worksheet.costpercapita_al86, 0.001); end
  def test_costpercapita_am86; assert_in_epsilon(1564.2311404777204, worksheet.costpercapita_am86, 0.001); end
  def test_costpercapita_an86; assert_in_epsilon(1492.9148566593944, worksheet.costpercapita_an86, 0.001); end
  def test_costpercapita_ao86; assert_in_epsilon(1410.4774743876583, worksheet.costpercapita_ao86, 0.001); end
  def test_costpercapita_ap86; assert_in_epsilon(1356.217793382335, worksheet.costpercapita_ap86, 0.001); end
  def test_costpercapita_aq86; assert_in_epsilon(1295.415314054541, worksheet.costpercapita_aq86, 0.001); end
  def test_costpercapita_as86; assert_in_epsilon(1545.6204343076506, worksheet.costpercapita_as86, 0.001); end
  def test_costpercapita_at86; assert_in_epsilon(33184.97316404844, worksheet.costpercapita_at86, 0.001); end
  def test_costpercapita_av86; assert_in_delta(0.07, worksheet.costpercapita_av86, 0.001); end
  def test_costpercapita_aw86; assert_in_epsilon(15, worksheet.costpercapita_aw86, 0.001); end
  def test_costpercapita_ay86; assert_in_epsilon(282.6121430007222, worksheet.costpercapita_ay86, 0.001); end
  def test_costpercapita_az86; assert_in_epsilon(429.66986714175897, worksheet.costpercapita_az86, 0.001); end
  def test_costpercapita_ba86; assert_in_epsilon(447.18067421243455, worksheet.costpercapita_ba86, 0.001); end
  def test_costpercapita_bb86; assert_in_epsilon(409.5677352322217, worksheet.costpercapita_bb86, 0.001); end
  def test_costpercapita_bc86; assert_in_epsilon(385.77133305216313, worksheet.costpercapita_bc86, 0.001); end
  def test_costpercapita_bd86; assert_in_epsilon(362.1528462513914, worksheet.costpercapita_bd86, 0.001); end
  def test_costpercapita_be86; assert_in_epsilon(335.7875291314877, worksheet.costpercapita_be86, 0.001); end
  def test_costpercapita_bf86; assert_in_epsilon(321.1994767465687, worksheet.costpercapita_bf86, 0.001); end
  def test_costpercapita_bg86; assert_in_epsilon(303.0552204263489, worksheet.costpercapita_bg86, 0.001); end
  def test_costpercapita_bi86; assert_in_epsilon(282.6121430007222, worksheet.costpercapita_bi86, 0.001); end
  def test_costpercapita_bj86; assert_in_epsilon(702.9628551558462, worksheet.costpercapita_bj86, 0.001); end
  def test_costpercapita_bk86; assert_in_epsilon(1127.1298256573841, worksheet.costpercapita_bk86, 0.001); end
  def test_costpercapita_bl86; assert_in_epsilon(1245.6368909483979, worksheet.costpercapita_bl86, 0.001); end
  def test_costpercapita_bm86; assert_in_epsilon(1205.645259418575, worksheet.costpercapita_bm86, 0.001); end
  def test_costpercapita_bn86; assert_in_epsilon(1127.8312714994188, worksheet.costpercapita_bn86, 0.001); end
  def test_costpercapita_bo86; assert_in_epsilon(1058.8678715827125, worksheet.costpercapita_bo86, 0.001); end
  def test_costpercapita_bp86; assert_in_epsilon(997.648044163383, worksheet.costpercapita_bp86, 0.001); end
  def test_costpercapita_bq86; assert_in_epsilon(941.2084454228947, worksheet.costpercapita_bq86, 0.001); end
  def test_costpercapita_bs86; assert_in_epsilon(1189.2320530565528, worksheet.costpercapita_bs86, 0.001); end
  def test_costpercapita_bt86; assert_in_epsilon(1594.8362790473745, worksheet.costpercapita_bt86, 0.001); end
  def test_costpercapita_bu86; assert_in_epsilon(2032.4210245268557, worksheet.costpercapita_bu86, 0.001); end
  def test_costpercapita_bv86; assert_in_epsilon(2131.859915305421, worksheet.costpercapita_bv86, 0.001); end
  def test_costpercapita_bw86; assert_in_epsilon(2067.1619744812115, worksheet.costpercapita_bw86, 0.001); end
  def test_costpercapita_bx86; assert_in_epsilon(1961.054732086176, worksheet.costpercapita_bx86, 0.001); end
  def test_costpercapita_by86; assert_in_epsilon(1857.6805581068363, worksheet.costpercapita_by86, 0.001); end
  def test_costpercapita_bz86; assert_in_epsilon(1768.7743950069573, worksheet.costpercapita_bz86, 0.001); end
  def test_costpercapita_ca86; assert_in_epsilon(1684.5835821889189, worksheet.costpercapita_ca86, 0.001); end
  def test_costpercapita_cc86; assert_in_epsilon(1809.7338348673675, worksheet.costpercapita_cc86, 0.001); end
  def test_costpercapita_cd86; assert_in_epsilon(39073.508672800264, worksheet.costpercapita_cd86, 0.001); end
  def test_costpercapita_cf86; assert_in_epsilon(-575.3902220826735, worksheet.costpercapita_cf86, 0.001); end
  def test_costpercapita_cg86; assert_in_epsilon(-79.71638494691642, worksheet.costpercapita_cg86, 0.001); end
  def test_costpercapita_ch86; assert_in_epsilon(312.5532005626674, worksheet.costpercapita_ch86, 0.001); end
  def test_costpercapita_ci86; assert_in_epsilon(499.5753485959205, worksheet.costpercapita_ci86, 0.001); end
  def test_costpercapita_cj86; assert_in_epsilon(502.9308340034907, worksheet.costpercapita_cj86, 0.001); end
  def test_costpercapita_ck86; assert_in_epsilon(468.1398754267815, worksheet.costpercapita_ck86, 0.001); end
  def test_costpercapita_cl86; assert_in_epsilon(447.20308371917787, worksheet.costpercapita_cl86, 0.001); end
  def test_costpercapita_cm86; assert_in_epsilon(412.55660162462243, worksheet.costpercapita_cm86, 0.001); end
  def test_costpercapita_cn86; assert_in_epsilon(389.1682681343779, worksheet.costpercapita_cn86, 0.001); end
  def test_costpercapita_cp86; assert_in_epsilon(264.11340055971647, worksheet.costpercapita_cp86, 0.001); end
  def test_costpercapita_cq86; assert_in_epsilon(5888.535508751816, worksheet.costpercapita_cq86, 0.001); end
  def test_costpercapita_cr86; assert_equal("ok", worksheet.costpercapita_cr86); end
  def test_costpercapita_a87; assert_equal("XII.a.HEV", worksheet.costpercapita_a87); end
  def test_costpercapita_b87; assert_equal("Hybrid cars and buses", worksheet.costpercapita_b87); end
  def test_costpercapita_c87; assert_equal("Transport", worksheet.costpercapita_c87); end
  def test_costpercapita_e87; assert_in_epsilon(1.493996908618019, worksheet.costpercapita_e87, 0.001); end
  def test_costpercapita_f87; assert_in_epsilon(15.55732304912126, worksheet.costpercapita_f87, 0.001); end
  def test_costpercapita_g87; assert_in_epsilon(21.45667028028749, worksheet.costpercapita_g87, 0.001); end
  def test_costpercapita_h87; assert_in_epsilon(109.61754616373935, worksheet.costpercapita_h87, 0.001); end
  def test_costpercapita_i87; assert_in_epsilon(143.13361261756754, worksheet.costpercapita_i87, 0.001); end
  def test_costpercapita_j87; assert_in_epsilon(180.54214927132804, worksheet.costpercapita_j87, 0.001); end
  def test_costpercapita_k87; assert_in_epsilon(203.95265683579777, worksheet.costpercapita_k87, 0.001); end
  def test_costpercapita_l87; assert_in_epsilon(210.81720526098184, worksheet.costpercapita_l87, 0.001); end
  def test_costpercapita_m87; assert_in_epsilon(219.0554017436353, worksheet.costpercapita_m87, 0.001); end
  def test_costpercapita_o87; assert_in_delta(0.4130168017123628, worksheet.costpercapita_o87, 0.001); end
  def test_costpercapita_p87; assert_in_epsilon(7.4421329378611585, worksheet.costpercapita_p87, 0.001); end
  def test_costpercapita_q87; assert_in_epsilon(14.17916508127264, worksheet.costpercapita_q87, 0.001); end
  def test_costpercapita_r87; assert_in_epsilon(57.89300308261074, worksheet.costpercapita_r87, 0.001); end
  def test_costpercapita_s87; assert_in_epsilon(96.21938948540799, worksheet.costpercapita_s87, 0.001); end
  def test_costpercapita_t87; assert_in_epsilon(133.24950108528367, worksheet.costpercapita_t87, 0.001); end
  def test_costpercapita_u87; assert_in_epsilon(162.92765824760394, worksheet.costpercapita_u87, 0.001); end
  def test_costpercapita_v87; assert_in_epsilon(180.98255554839218, worksheet.costpercapita_v87, 0.001); end
  def test_costpercapita_w87; assert_in_epsilon(193.18436731793616, worksheet.costpercapita_w87, 0.001); end
  def test_costpercapita_y87; assert_in_delta(0, (worksheet.costpercapita_y87||0), 0.001); end
  def test_costpercapita_z87; assert_in_delta(0, (worksheet.costpercapita_z87||0), 0.001); end
  def test_costpercapita_aa87; assert_in_delta(0, (worksheet.costpercapita_aa87||0), 0.001); end
  def test_costpercapita_ab87; assert_in_delta(0, (worksheet.costpercapita_ab87||0), 0.001); end
  def test_costpercapita_ac87; assert_in_delta(0, (worksheet.costpercapita_ac87||0), 0.001); end
  def test_costpercapita_ad87; assert_in_delta(0, (worksheet.costpercapita_ad87||0), 0.001); end
  def test_costpercapita_ae87; assert_in_delta(0, (worksheet.costpercapita_ae87||0), 0.001); end
  def test_costpercapita_af87; assert_in_delta(0, (worksheet.costpercapita_af87||0), 0.001); end
  def test_costpercapita_ag87; assert_in_delta(0, (worksheet.costpercapita_ag87||0), 0.001); end
  def test_costpercapita_ai87; assert_in_epsilon(1.9070137103303817, worksheet.costpercapita_ai87, 0.001); end
  def test_costpercapita_aj87; assert_in_epsilon(22.99945598698242, worksheet.costpercapita_aj87, 0.001); end
  def test_costpercapita_ak87; assert_in_epsilon(35.635835361560126, worksheet.costpercapita_ak87, 0.001); end
  def test_costpercapita_al87; assert_in_epsilon(167.5105492463501, worksheet.costpercapita_al87, 0.001); end
  def test_costpercapita_am87; assert_in_epsilon(239.35300210297555, worksheet.costpercapita_am87, 0.001); end
  def test_costpercapita_an87; assert_in_epsilon(313.79165035661174, worksheet.costpercapita_an87, 0.001); end
  def test_costpercapita_ao87; assert_in_epsilon(366.88031508340174, worksheet.costpercapita_ao87, 0.001); end
  def test_costpercapita_ap87; assert_in_epsilon(391.799760809374, worksheet.costpercapita_ap87, 0.001); end
  def test_costpercapita_aq87; assert_in_epsilon(412.23976906157145, worksheet.costpercapita_aq87, 0.001); end
  def test_costpercapita_as87; assert_in_epsilon(216.9019279687953, worksheet.costpercapita_as87, 0.001); end
  def test_costpercapita_at87; assert_in_epsilon(3792.3747007101715, worksheet.costpercapita_at87, 0.001); end
  def test_costpercapita_av87; assert_in_delta(0.07, worksheet.costpercapita_av87, 0.001); end
  def test_costpercapita_aw87; assert_in_epsilon(15, worksheet.costpercapita_aw87, 0.001); end
  def test_costpercapita_ay87; assert_in_delta(0.4920984896585379, worksheet.costpercapita_ay87, 0.001); end
  def test_costpercapita_az87; assert_in_epsilon(8.540552227652935, worksheet.costpercapita_az87, 0.001); end
  def test_costpercapita_ba87; assert_in_epsilon(11.779135303787026, worksheet.costpercapita_ba87, 0.001); end
  def test_costpercapita_bb87; assert_in_epsilon(60.17708670846509, worksheet.costpercapita_bb87, 0.001); end
  def test_costpercapita_bc87; assert_in_epsilon(78.57650639722539, worksheet.costpercapita_bc87, 0.001); end
  def test_costpercapita_bd87; assert_in_epsilon(99.1127876097928, worksheet.costpercapita_bd87, 0.001); end
  def test_costpercapita_be87; assert_in_epsilon(111.96452707029793, worksheet.costpercapita_be87, 0.001); end
  def test_costpercapita_bf87; assert_in_epsilon(115.73297966072279, worksheet.costpercapita_bf87, 0.001); end
  def test_costpercapita_bg87; assert_in_epsilon(120.25552811585322, worksheet.costpercapita_bg87, 0.001); end
  def test_costpercapita_bi87; assert_in_delta(0.4920984896585379, worksheet.costpercapita_bi87, 0.001); end
  def test_costpercapita_bj87; assert_in_epsilon(9.016423735536648, worksheet.costpercapita_bj87, 0.001); end
  def test_costpercapita_bk87; assert_in_epsilon(20.500378002573825, worksheet.costpercapita_bk87, 0.001); end
  def test_costpercapita_bl87; assert_in_epsilon(79.59666167019755, worksheet.costpercapita_bl87, 0.001); end
  def test_costpercapita_bm87; assert_in_epsilon(148.21211473635412, worksheet.costpercapita_bm87, 0.001); end
  def test_costpercapita_bn87; assert_in_epsilon(232.99262273739936, worksheet.costpercapita_bn87, 0.001); end
  def test_costpercapita_bo87; assert_in_epsilon(284.05289980235887, worksheet.costpercapita_bo87, 0.001); end
  def test_costpercapita_bp87; assert_in_epsilon(320.52818651014525, worksheet.costpercapita_bp87, 0.001); end
  def test_costpercapita_bq87; assert_in_epsilon(341.51202447442586, worksheet.costpercapita_bq87, 0.001); end
  def test_costpercapita_bs87; assert_in_delta(0.9051152913709007, worksheet.costpercapita_bs87, 0.001); end
  def test_costpercapita_bt87; assert_in_epsilon(16.458556673397805, worksheet.costpercapita_bt87, 0.001); end
  def test_costpercapita_bu87; assert_in_epsilon(34.67954308384646, worksheet.costpercapita_bu87, 0.001); end
  def test_costpercapita_bv87; assert_in_epsilon(137.4896647528083, worksheet.costpercapita_bv87, 0.001); end
  def test_costpercapita_bw87; assert_in_epsilon(244.4315042217621, worksheet.costpercapita_bw87, 0.001); end
  def test_costpercapita_bx87; assert_in_epsilon(366.2421238226831, worksheet.costpercapita_bx87, 0.001); end
  def test_costpercapita_by87; assert_in_epsilon(446.98055804996284, worksheet.costpercapita_by87, 0.001); end
  def test_costpercapita_bz87; assert_in_epsilon(501.5107420585374, worksheet.costpercapita_bz87, 0.001); end
  def test_costpercapita_ca87; assert_in_epsilon(534.6963917923621, worksheet.costpercapita_ca87, 0.001); end
  def test_costpercapita_cc87; assert_in_epsilon(253.71046663852565, worksheet.costpercapita_cc87, 0.001); end
  def test_costpercapita_cd87; assert_in_epsilon(4268.179386616441, worksheet.costpercapita_cd87, 0.001); end
  def test_costpercapita_cf87; assert_in_epsilon(-1.001898418959481, worksheet.costpercapita_cf87, 0.001); end
  def test_costpercapita_cg87; assert_in_epsilon(-6.540899313584613, worksheet.costpercapita_cg87, 0.001); end
  def test_costpercapita_ch87; assert_in_delta(-0.9562922777136649, worksheet.costpercapita_ch87, 0.001); end
  def test_costpercapita_ci87; assert_in_epsilon(-30.020884493541804, worksheet.costpercapita_ci87, 0.001); end
  def test_costpercapita_cj87; assert_in_epsilon(5.078502118786573, worksheet.costpercapita_cj87, 0.001); end
  def test_costpercapita_ck87; assert_in_epsilon(52.45047346607132, worksheet.costpercapita_ck87, 0.001); end
  def test_costpercapita_cl87; assert_in_epsilon(80.1002429665611, worksheet.costpercapita_cl87, 0.001); end
  def test_costpercapita_cm87; assert_in_epsilon(109.71098124916342, worksheet.costpercapita_cm87, 0.001); end
  def test_costpercapita_cn87; assert_in_epsilon(122.4566227307906, worksheet.costpercapita_cn87, 0.001); end
  def test_costpercapita_cp87; assert_in_epsilon(36.80853866973038, worksheet.costpercapita_cp87, 0.001); end
  def test_costpercapita_cq87; assert_in_epsilon(475.8046859062684, worksheet.costpercapita_cq87, 0.001); end
  def test_costpercapita_cr87; assert_equal("ok", worksheet.costpercapita_cr87); end
  def test_costpercapita_a88; assert_equal("XII.a.EV", worksheet.costpercapita_a88); end
  def test_costpercapita_b88; assert_equal("Electric cars and buses", worksheet.costpercapita_b88); end
  def test_costpercapita_c88; assert_equal("Transport", worksheet.costpercapita_c88); end
  def test_costpercapita_e88; assert_in_delta(0, (worksheet.costpercapita_e88||0), 0.001); end
  def test_costpercapita_f88; assert_in_epsilon(2.2233603282704837, worksheet.costpercapita_f88, 0.001); end
  def test_costpercapita_g88; assert_in_epsilon(3.104925116731775, worksheet.costpercapita_g88, 0.001); end
  def test_costpercapita_h88; assert_in_epsilon(18.382245563148654, worksheet.costpercapita_h88, 0.001); end
  def test_costpercapita_i88; assert_in_epsilon(24.45757594588979, worksheet.costpercapita_i88, 0.001); end
  def test_costpercapita_j88; assert_in_epsilon(31.492736126349104, worksheet.costpercapita_j88, 0.001); end
  def test_costpercapita_k88; assert_in_epsilon(36.29626286538868, worksheet.costpercapita_k88, 0.001); end
  def test_costpercapita_l88; assert_in_epsilon(32.99395152152085, worksheet.costpercapita_l88, 0.001); end
  def test_costpercapita_m88; assert_in_epsilon(33.714093881279474, worksheet.costpercapita_m88, 0.001); end
  def test_costpercapita_o88; assert_in_delta(0, (worksheet.costpercapita_o88||0), 0.001); end
  def test_costpercapita_p88; assert_in_delta(0.6577018946423273, worksheet.costpercapita_p88, 0.001); end
  def test_costpercapita_q88; assert_in_epsilon(1.2667680604842828, worksheet.costpercapita_q88, 0.001); end
  def test_costpercapita_r88; assert_in_epsilon(5.724119751836131, worksheet.costpercapita_r88, 0.001); end
  def test_costpercapita_s88; assert_in_epsilon(9.648398714644232, worksheet.costpercapita_s88, 0.001); end
  def test_costpercapita_t88; assert_in_epsilon(13.481951597035543, worksheet.costpercapita_t88, 0.001); end
  def test_costpercapita_u88; assert_in_epsilon(16.585759718718446, worksheet.costpercapita_u88, 0.001); end
  def test_costpercapita_v88; assert_in_epsilon(17.13465781644193, worksheet.costpercapita_v88, 0.001); end
  def test_costpercapita_w88; assert_in_epsilon(17.34002403280608, worksheet.costpercapita_w88, 0.001); end
  def test_costpercapita_y88; assert_in_delta(0, (worksheet.costpercapita_y88||0), 0.001); end
  def test_costpercapita_z88; assert_in_delta(0, (worksheet.costpercapita_z88||0), 0.001); end
  def test_costpercapita_aa88; assert_in_delta(0, (worksheet.costpercapita_aa88||0), 0.001); end
  def test_costpercapita_ab88; assert_in_delta(0, (worksheet.costpercapita_ab88||0), 0.001); end
  def test_costpercapita_ac88; assert_in_delta(0, (worksheet.costpercapita_ac88||0), 0.001); end
  def test_costpercapita_ad88; assert_in_delta(0, (worksheet.costpercapita_ad88||0), 0.001); end
  def test_costpercapita_ae88; assert_in_delta(0, (worksheet.costpercapita_ae88||0), 0.001); end
  def test_costpercapita_af88; assert_in_delta(0, (worksheet.costpercapita_af88||0), 0.001); end
  def test_costpercapita_ag88; assert_in_delta(0, (worksheet.costpercapita_ag88||0), 0.001); end
  def test_costpercapita_ai88; assert_in_delta(0, (worksheet.costpercapita_ai88||0), 0.001); end
  def test_costpercapita_aj88; assert_in_epsilon(2.881062222912811, worksheet.costpercapita_aj88, 0.001); end
  def test_costpercapita_ak88; assert_in_epsilon(4.371693177216058, worksheet.costpercapita_ak88, 0.001); end
  def test_costpercapita_al88; assert_in_epsilon(24.106365314984785, worksheet.costpercapita_al88, 0.001); end
  def test_costpercapita_am88; assert_in_epsilon(34.105974660534024, worksheet.costpercapita_am88, 0.001); end
  def test_costpercapita_an88; assert_in_epsilon(44.97468772338464, worksheet.costpercapita_an88, 0.001); end
  def test_costpercapita_ao88; assert_in_epsilon(52.88202258410712, worksheet.costpercapita_ao88, 0.001); end
  def test_costpercapita_ap88; assert_in_epsilon(50.12860933796278, worksheet.costpercapita_ap88, 0.001); end
  def test_costpercapita_aq88; assert_in_epsilon(51.05411791408556, worksheet.costpercapita_aq88, 0.001); end
  def test_costpercapita_as88; assert_in_epsilon(29.3893925483542, worksheet.costpercapita_as88, 0.001); end
  def test_costpercapita_at88; assert_in_epsilon(519.3329648985111, worksheet.costpercapita_at88, 0.001); end
  def test_costpercapita_av88; assert_in_delta(0.07, worksheet.costpercapita_av88, 0.001); end
  def test_costpercapita_aw88; assert_in_epsilon(15, worksheet.costpercapita_aw88, 0.001); end
  def test_costpercapita_ay88; assert_in_delta(0, (worksheet.costpercapita_ay88||0), 0.001); end
  def test_costpercapita_az88; assert_in_epsilon(1.220565064087822, worksheet.costpercapita_az88, 0.001); end
  def test_costpercapita_ba88; assert_in_epsilon(1.7045204395814706, worksheet.costpercapita_ba88, 0.001); end
  def test_costpercapita_bb88; assert_in_epsilon(10.091358763838244, worksheet.costpercapita_bb88, 0.001); end
  def test_costpercapita_bc88; assert_in_epsilon(13.42655186037667, worksheet.costpercapita_bc88, 0.001); end
  def test_costpercapita_bd88; assert_in_epsilon(17.28866571900165, worksheet.costpercapita_bd88, 0.001); end
  def test_costpercapita_be88; assert_in_epsilon(19.925672796772147, worksheet.costpercapita_be88, 0.001); end
  def test_costpercapita_bf88; assert_in_epsilon(18.112792623542923, worksheet.costpercapita_bf88, 0.001); end
  def test_costpercapita_bg88; assert_in_epsilon(18.508131424147905, worksheet.costpercapita_bg88, 0.001); end
  def test_costpercapita_bi88; assert_in_delta(0, (worksheet.costpercapita_bi88||0), 0.001); end
  def test_costpercapita_bj88; assert_in_epsilon(1.220565064087822, worksheet.costpercapita_bj88, 0.001); end
  def test_costpercapita_bk88; assert_in_epsilon(2.8851264609705694, worksheet.costpercapita_bk88, 0.001); end
  def test_costpercapita_bl88; assert_in_epsilon(12.887151684478864, worksheet.costpercapita_bl88, 0.001); end
  def test_costpercapita_bm88; assert_in_epsilon(24.848829862098864, worksheet.costpercapita_bm88, 0.001); end
  def test_costpercapita_bn88; assert_in_epsilon(39.98339237360087, worksheet.costpercapita_bn88, 0.001); end
  def test_costpercapita_bo88; assert_in_epsilon(49.67631894448807, worksheet.costpercapita_bo88, 0.001); end
  def test_costpercapita_bp88; assert_in_epsilon(54.2234324241337, worksheet.costpercapita_bp88, 0.001); end
  def test_costpercapita_bq88; assert_in_epsilon(55.446674829290416, worksheet.costpercapita_bq88, 0.001); end
  def test_costpercapita_bs88; assert_in_delta(0, (worksheet.costpercapita_bs88||0), 0.001); end
  def test_costpercapita_bt88; assert_in_epsilon(1.8782669587301493, worksheet.costpercapita_bt88, 0.001); end
  def test_costpercapita_bu88; assert_in_epsilon(4.151894521454852, worksheet.costpercapita_bu88, 0.001); end
  def test_costpercapita_bv88; assert_in_epsilon(18.611271436314993, worksheet.costpercapita_bv88, 0.001); end
  def test_costpercapita_bw88; assert_in_epsilon(34.49722857674309, worksheet.costpercapita_bw88, 0.001); end
  def test_costpercapita_bx88; assert_in_epsilon(53.46534397063641, worksheet.costpercapita_bx88, 0.001); end
  def test_costpercapita_by88; assert_in_epsilon(66.26207866320651, worksheet.costpercapita_by88, 0.001); end
  def test_costpercapita_bz88; assert_in_epsilon(71.35809024057563, worksheet.costpercapita_bz88, 0.001); end
  def test_costpercapita_ca88; assert_in_epsilon(72.7866988620965, worksheet.costpercapita_ca88, 0.001); end
  def test_costpercapita_cc88; assert_in_epsilon(35.89009702552868, worksheet.costpercapita_cc88, 0.001); end
  def test_costpercapita_cd88; assert_in_epsilon(602.1438417612814, worksheet.costpercapita_cd88, 0.001); end
  def test_costpercapita_cf88; assert_in_delta(0, (worksheet.costpercapita_cf88||0), 0.001); end
  def test_costpercapita_cg88; assert_in_epsilon(-1.0027952641826616, worksheet.costpercapita_cg88, 0.001); end
  def test_costpercapita_ch88; assert_in_delta(-0.21979865576120544, worksheet.costpercapita_ch88, 0.001); end
  def test_costpercapita_ci88; assert_in_epsilon(-5.495093878669791, worksheet.costpercapita_ci88, 0.001); end
  def test_costpercapita_cj88; assert_in_delta(0.39125391620907374, worksheet.costpercapita_cj88, 0.001); end
  def test_costpercapita_ck88; assert_in_epsilon(8.49065624725177, worksheet.costpercapita_ck88, 0.001); end
  def test_costpercapita_cl88; assert_in_epsilon(13.380056079099385, worksheet.costpercapita_cl88, 0.001); end
  def test_costpercapita_cm88; assert_in_epsilon(21.22948090261285, worksheet.costpercapita_cm88, 0.001); end
  def test_costpercapita_cn88; assert_in_epsilon(21.732580948010938, worksheet.costpercapita_cn88, 0.001); end
  def test_costpercapita_cp88; assert_in_epsilon(6.500704477174484, worksheet.costpercapita_cp88, 0.001); end
  def test_costpercapita_cq88; assert_in_epsilon(82.8108768627703, worksheet.costpercapita_cq88, 0.001); end
  def test_costpercapita_cr88; assert_equal("ok", worksheet.costpercapita_cr88); end
  def test_costpercapita_a89; assert_equal("XII.a.FCV", worksheet.costpercapita_a89); end
  def test_costpercapita_b89; assert_equal("Fuel cell cars and buses", worksheet.costpercapita_b89); end
  def test_costpercapita_c89; assert_equal("Transport", worksheet.costpercapita_c89); end
  def test_costpercapita_e89; assert_in_delta(0, (worksheet.costpercapita_e89||0), 0.001); end
  def test_costpercapita_f89; assert_in_delta(0, (worksheet.costpercapita_f89||0), 0.001); end
  def test_costpercapita_g89; assert_in_delta(0, (worksheet.costpercapita_g89||0), 0.001); end
  def test_costpercapita_h89; assert_in_delta(0, (worksheet.costpercapita_h89||0), 0.001); end
  def test_costpercapita_i89; assert_in_delta(0, (worksheet.costpercapita_i89||0), 0.001); end
  def test_costpercapita_j89; assert_in_delta(0, (worksheet.costpercapita_j89||0), 0.001); end
  def test_costpercapita_k89; assert_in_delta(0, (worksheet.costpercapita_k89||0), 0.001); end
  def test_costpercapita_l89; assert_in_delta(0, (worksheet.costpercapita_l89||0), 0.001); end
  def test_costpercapita_m89; assert_in_delta(0, (worksheet.costpercapita_m89||0), 0.001); end
  def test_costpercapita_o89; assert_in_delta(0, (worksheet.costpercapita_o89||0), 0.001); end
  def test_costpercapita_p89; assert_in_delta(0, (worksheet.costpercapita_p89||0), 0.001); end
  def test_costpercapita_q89; assert_in_delta(0, (worksheet.costpercapita_q89||0), 0.001); end
  def test_costpercapita_r89; assert_in_delta(0, (worksheet.costpercapita_r89||0), 0.001); end
  def test_costpercapita_s89; assert_in_delta(0, (worksheet.costpercapita_s89||0), 0.001); end
  def test_costpercapita_t89; assert_in_delta(0, (worksheet.costpercapita_t89||0), 0.001); end
  def test_costpercapita_u89; assert_in_delta(0, (worksheet.costpercapita_u89||0), 0.001); end
  def test_costpercapita_v89; assert_in_delta(0, (worksheet.costpercapita_v89||0), 0.001); end
  def test_costpercapita_w89; assert_in_delta(0, (worksheet.costpercapita_w89||0), 0.001); end
  def test_costpercapita_y89; assert_in_delta(0, (worksheet.costpercapita_y89||0), 0.001); end
  def test_costpercapita_z89; assert_in_delta(0, (worksheet.costpercapita_z89||0), 0.001); end
  def test_costpercapita_aa89; assert_in_delta(0, (worksheet.costpercapita_aa89||0), 0.001); end
  def test_costpercapita_ab89; assert_in_delta(0, (worksheet.costpercapita_ab89||0), 0.001); end
  def test_costpercapita_ac89; assert_in_delta(0, (worksheet.costpercapita_ac89||0), 0.001); end
  def test_costpercapita_ad89; assert_in_delta(0, (worksheet.costpercapita_ad89||0), 0.001); end
  def test_costpercapita_ae89; assert_in_delta(0, (worksheet.costpercapita_ae89||0), 0.001); end
  def test_costpercapita_af89; assert_in_delta(0, (worksheet.costpercapita_af89||0), 0.001); end
  def test_costpercapita_ag89; assert_in_delta(0, (worksheet.costpercapita_ag89||0), 0.001); end
  def test_costpercapita_ai89; assert_in_delta(0, (worksheet.costpercapita_ai89||0), 0.001); end
  def test_costpercapita_aj89; assert_in_delta(0, (worksheet.costpercapita_aj89||0), 0.001); end
  def test_costpercapita_ak89; assert_in_delta(0, (worksheet.costpercapita_ak89||0), 0.001); end
  def test_costpercapita_al89; assert_in_delta(0, (worksheet.costpercapita_al89||0), 0.001); end
  def test_costpercapita_am89; assert_in_delta(0, (worksheet.costpercapita_am89||0), 0.001); end
  def test_costpercapita_an89; assert_in_delta(0, (worksheet.costpercapita_an89||0), 0.001); end
  def test_costpercapita_ao89; assert_in_delta(0, (worksheet.costpercapita_ao89||0), 0.001); end
  def test_costpercapita_ap89; assert_in_delta(0, (worksheet.costpercapita_ap89||0), 0.001); end
  def test_costpercapita_aq89; assert_in_delta(0, (worksheet.costpercapita_aq89||0), 0.001); end
  def test_costpercapita_as89; assert_in_delta(0, (worksheet.costpercapita_as89||0), 0.001); end
  def test_costpercapita_at89; assert_in_delta(0, (worksheet.costpercapita_at89||0), 0.001); end
  def test_costpercapita_av89; assert_in_delta(0.07, worksheet.costpercapita_av89, 0.001); end
  def test_costpercapita_aw89; assert_in_epsilon(15, worksheet.costpercapita_aw89, 0.001); end
  def test_costpercapita_ay89; assert_in_delta(0, (worksheet.costpercapita_ay89||0), 0.001); end
  def test_costpercapita_az89; assert_in_delta(0, (worksheet.costpercapita_az89||0), 0.001); end
  def test_costpercapita_ba89; assert_in_delta(0, (worksheet.costpercapita_ba89||0), 0.001); end
  def test_costpercapita_bb89; assert_in_delta(0, (worksheet.costpercapita_bb89||0), 0.001); end
  def test_costpercapita_bc89; assert_in_delta(0, (worksheet.costpercapita_bc89||0), 0.001); end
  def test_costpercapita_bd89; assert_in_delta(0, (worksheet.costpercapita_bd89||0), 0.001); end
  def test_costpercapita_be89; assert_in_delta(0, (worksheet.costpercapita_be89||0), 0.001); end
  def test_costpercapita_bf89; assert_in_delta(0, (worksheet.costpercapita_bf89||0), 0.001); end
  def test_costpercapita_bg89; assert_in_delta(0, (worksheet.costpercapita_bg89||0), 0.001); end
  def test_costpercapita_bi89; assert_in_delta(0, (worksheet.costpercapita_bi89||0), 0.001); end
  def test_costpercapita_bj89; assert_in_delta(0, (worksheet.costpercapita_bj89||0), 0.001); end
  def test_costpercapita_bk89; assert_in_delta(0, (worksheet.costpercapita_bk89||0), 0.001); end
  def test_costpercapita_bl89; assert_in_delta(0, (worksheet.costpercapita_bl89||0), 0.001); end
  def test_costpercapita_bm89; assert_in_delta(0, (worksheet.costpercapita_bm89||0), 0.001); end
  def test_costpercapita_bn89; assert_in_delta(0, (worksheet.costpercapita_bn89||0), 0.001); end
  def test_costpercapita_bo89; assert_in_delta(0, (worksheet.costpercapita_bo89||0), 0.001); end
  def test_costpercapita_bp89; assert_in_delta(0, (worksheet.costpercapita_bp89||0), 0.001); end
  def test_costpercapita_bq89; assert_in_delta(0, (worksheet.costpercapita_bq89||0), 0.001); end
  def test_costpercapita_bs89; assert_in_delta(0, (worksheet.costpercapita_bs89||0), 0.001); end
  def test_costpercapita_bt89; assert_in_delta(0, (worksheet.costpercapita_bt89||0), 0.001); end
  def test_costpercapita_bu89; assert_in_delta(0, (worksheet.costpercapita_bu89||0), 0.001); end
  def test_costpercapita_bv89; assert_in_delta(0, (worksheet.costpercapita_bv89||0), 0.001); end
  def test_costpercapita_bw89; assert_in_delta(0, (worksheet.costpercapita_bw89||0), 0.001); end
  def test_costpercapita_bx89; assert_in_delta(0, (worksheet.costpercapita_bx89||0), 0.001); end
  def test_costpercapita_by89; assert_in_delta(0, (worksheet.costpercapita_by89||0), 0.001); end
  def test_costpercapita_bz89; assert_in_delta(0, (worksheet.costpercapita_bz89||0), 0.001); end
  def test_costpercapita_ca89; assert_in_delta(0, (worksheet.costpercapita_ca89||0), 0.001); end
  def test_costpercapita_cc89; assert_in_delta(0, (worksheet.costpercapita_cc89||0), 0.001); end
  def test_costpercapita_cd89; assert_in_delta(0, (worksheet.costpercapita_cd89||0), 0.001); end
  def test_costpercapita_cf89; assert_in_delta(0, (worksheet.costpercapita_cf89||0), 0.001); end
  def test_costpercapita_cg89; assert_in_delta(0, (worksheet.costpercapita_cg89||0), 0.001); end
  def test_costpercapita_ch89; assert_in_delta(0, (worksheet.costpercapita_ch89||0), 0.001); end
  def test_costpercapita_ci89; assert_in_delta(0, (worksheet.costpercapita_ci89||0), 0.001); end
  def test_costpercapita_cj89; assert_in_delta(0, (worksheet.costpercapita_cj89||0), 0.001); end
  def test_costpercapita_ck89; assert_in_delta(0, (worksheet.costpercapita_ck89||0), 0.001); end
  def test_costpercapita_cl89; assert_in_delta(0, (worksheet.costpercapita_cl89||0), 0.001); end
  def test_costpercapita_cm89; assert_in_delta(0, (worksheet.costpercapita_cm89||0), 0.001); end
  def test_costpercapita_cn89; assert_in_delta(0, (worksheet.costpercapita_cn89||0), 0.001); end
  def test_costpercapita_cp89; assert_in_delta(0, (worksheet.costpercapita_cp89||0), 0.001); end
  def test_costpercapita_cq89; assert_in_delta(0, (worksheet.costpercapita_cq89||0), 0.001); end
  def test_costpercapita_cr89; assert_equal("ok", worksheet.costpercapita_cr89); end
  def test_costpercapita_a90; assert_equal("XII.a.Bike", worksheet.costpercapita_a90); end
  def test_costpercapita_b90; assert_equal("Bikes", worksheet.costpercapita_b90); end
  def test_costpercapita_c90; assert_equal("Transport", worksheet.costpercapita_c90); end
  def test_costpercapita_e90; assert_in_epsilon(53.20482346514259, worksheet.costpercapita_e90, 0.001); end
  def test_costpercapita_f90; assert_in_epsilon(50.604477162323946, worksheet.costpercapita_f90, 0.001); end
  def test_costpercapita_g90; assert_in_epsilon(52.109168816149335, worksheet.costpercapita_g90, 0.001); end
  def test_costpercapita_h90; assert_in_epsilon(53.12677739938901, worksheet.costpercapita_h90, 0.001); end
  def test_costpercapita_i90; assert_in_epsilon(53.533784454656136, worksheet.costpercapita_i90, 0.001); end
  def test_costpercapita_j90; assert_in_epsilon(53.60341751882085, worksheet.costpercapita_j90, 0.001); end
  def test_costpercapita_k90; assert_in_epsilon(52.868798495681105, worksheet.costpercapita_k90, 0.001); end
  def test_costpercapita_l90; assert_in_epsilon(51.62790413465263, worksheet.costpercapita_l90, 0.001); end
  def test_costpercapita_m90; assert_in_epsilon(49.79019775788779, worksheet.costpercapita_m90, 0.001); end
  def test_costpercapita_o90; assert_in_epsilon(25.33060278324329, worksheet.costpercapita_o90, 0.001); end
  def test_costpercapita_p90; assert_in_epsilon(27.061217733863067, worksheet.costpercapita_p90, 0.001); end
  def test_costpercapita_q90; assert_in_epsilon(29.947798170200763, worksheet.costpercapita_q90, 0.001); end
  def test_costpercapita_r90; assert_in_epsilon(32.99799838471367, worksheet.costpercapita_r90, 0.001); end
  def test_costpercapita_s90; assert_in_epsilon(36.171475982875755, worksheet.costpercapita_s90, 0.001); end
  def test_costpercapita_t90; assert_in_epsilon(39.70623519912653, worksheet.costpercapita_t90, 0.001); end
  def test_costpercapita_u90; assert_in_epsilon(43.33508073416481, worksheet.costpercapita_u90, 0.001); end
  def test_costpercapita_v90; assert_in_epsilon(47.36504966481889, worksheet.costpercapita_v90, 0.001); end
  def test_costpercapita_w90; assert_in_epsilon(51.86478933113311, worksheet.costpercapita_w90, 0.001); end
  def test_costpercapita_y90; assert_in_delta(0, (worksheet.costpercapita_y90||0), 0.001); end
  def test_costpercapita_z90; assert_in_delta(0, (worksheet.costpercapita_z90||0), 0.001); end
  def test_costpercapita_aa90; assert_in_delta(0, (worksheet.costpercapita_aa90||0), 0.001); end
  def test_costpercapita_ab90; assert_in_delta(0, (worksheet.costpercapita_ab90||0), 0.001); end
  def test_costpercapita_ac90; assert_in_delta(0, (worksheet.costpercapita_ac90||0), 0.001); end
  def test_costpercapita_ad90; assert_in_delta(0, (worksheet.costpercapita_ad90||0), 0.001); end
  def test_costpercapita_ae90; assert_in_delta(0, (worksheet.costpercapita_ae90||0), 0.001); end
  def test_costpercapita_af90; assert_in_delta(0, (worksheet.costpercapita_af90||0), 0.001); end
  def test_costpercapita_ag90; assert_in_delta(0, (worksheet.costpercapita_ag90||0), 0.001); end
  def test_costpercapita_ai90; assert_in_epsilon(78.53542624838589, worksheet.costpercapita_ai90, 0.001); end
  def test_costpercapita_aj90; assert_in_epsilon(77.66569489618702, worksheet.costpercapita_aj90, 0.001); end
  def test_costpercapita_ak90; assert_in_epsilon(82.05696698635009, worksheet.costpercapita_ak90, 0.001); end
  def test_costpercapita_al90; assert_in_epsilon(86.12477578410268, worksheet.costpercapita_al90, 0.001); end
  def test_costpercapita_am90; assert_in_epsilon(89.7052604375319, worksheet.costpercapita_am90, 0.001); end
  def test_costpercapita_an90; assert_in_epsilon(93.30965271794739, worksheet.costpercapita_an90, 0.001); end
  def test_costpercapita_ao90; assert_in_epsilon(96.20387922984591, worksheet.costpercapita_ao90, 0.001); end
  def test_costpercapita_ap90; assert_in_epsilon(98.99295379947152, worksheet.costpercapita_ap90, 0.001); end
  def test_costpercapita_aq90; assert_in_epsilon(101.6549870890209, worksheet.costpercapita_aq90, 0.001); end
  def test_costpercapita_as90; assert_in_epsilon(89.36106635431592, worksheet.costpercapita_as90, 0.001); end
  def test_costpercapita_at90; assert_in_epsilon(1834.4639038968241, worksheet.costpercapita_at90, 0.001); end
  def test_costpercapita_av90; assert_in_delta(0.07, worksheet.costpercapita_av90, 0.001); end
  def test_costpercapita_aw90; assert_in_epsilon(5, worksheet.costpercapita_aw90, 0.001); end
  def test_costpercapita_ay90; assert_in_epsilon(38.92848402763301, worksheet.costpercapita_ay90, 0.001); end
  def test_costpercapita_az90; assert_in_epsilon(61.7098053848092, worksheet.costpercapita_az90, 0.001); end
  def test_costpercapita_ba90; assert_in_epsilon(63.54470684666727, worksheet.costpercapita_ba90, 0.001); end
  def test_costpercapita_bb90; assert_in_epsilon(64.78563316684638, worksheet.costpercapita_bb90, 0.001); end
  def test_costpercapita_bc90; assert_in_epsilon(65.28195933360459, worksheet.costpercapita_bc90, 0.001); end
  def test_costpercapita_bd90; assert_in_epsilon(65.36687361548066, worksheet.costpercapita_bd90, 0.001); end
  def test_costpercapita_be90; assert_in_epsilon(64.47103989696367, worksheet.costpercapita_be90, 0.001); end
  def test_costpercapita_bf90; assert_in_epsilon(62.957826959765576, worksheet.costpercapita_bf90, 0.001); end
  def test_costpercapita_bg90; assert_in_epsilon(60.71682953772299, worksheet.costpercapita_bg90, 0.001); end
  def test_costpercapita_bi90; assert_in_epsilon(38.92848402763301, worksheet.costpercapita_bi90, 0.001); end
  def test_costpercapita_bj90; assert_in_epsilon(61.7098053848092, worksheet.costpercapita_bj90, 0.001); end
  def test_costpercapita_bk90; assert_in_epsilon(63.54470684666727, worksheet.costpercapita_bk90, 0.001); end
  def test_costpercapita_bl90; assert_in_epsilon(64.78563316684638, worksheet.costpercapita_bl90, 0.001); end
  def test_costpercapita_bm90; assert_in_epsilon(65.28195933360459, worksheet.costpercapita_bm90, 0.001); end
  def test_costpercapita_bn90; assert_in_epsilon(65.36687361548066, worksheet.costpercapita_bn90, 0.001); end
  def test_costpercapita_bo90; assert_in_epsilon(64.47103989696367, worksheet.costpercapita_bo90, 0.001); end
  def test_costpercapita_bp90; assert_in_epsilon(62.957826959765576, worksheet.costpercapita_bp90, 0.001); end
  def test_costpercapita_bq90; assert_in_epsilon(60.71682953772299, worksheet.costpercapita_bq90, 0.001); end
  def test_costpercapita_bs90; assert_in_epsilon(64.25908681087631, worksheet.costpercapita_bs90, 0.001); end
  def test_costpercapita_bt90; assert_in_epsilon(88.77102311867228, worksheet.costpercapita_bt90, 0.001); end
  def test_costpercapita_bu90; assert_in_epsilon(93.49250501686802, worksheet.costpercapita_bu90, 0.001); end
  def test_costpercapita_bv90; assert_in_epsilon(97.78363155156005, worksheet.costpercapita_bv90, 0.001); end
  def test_costpercapita_bw90; assert_in_epsilon(101.45343531648035, worksheet.costpercapita_bw90, 0.001); end
  def test_costpercapita_bx90; assert_in_epsilon(105.07310881460718, worksheet.costpercapita_bx90, 0.001); end
  def test_costpercapita_by90; assert_in_epsilon(107.80612063112848, worksheet.costpercapita_by90, 0.001); end
  def test_costpercapita_bz90; assert_in_epsilon(110.32287662458445, worksheet.costpercapita_bz90, 0.001); end
  def test_costpercapita_ca90; assert_in_epsilon(112.5816188688561, worksheet.costpercapita_ca90, 0.001); end
  def test_costpercapita_cc90; assert_in_epsilon(97.94926741707036, worksheet.costpercapita_cc90, 0.001); end
  def test_costpercapita_cd90; assert_in_epsilon(2049.24037445917, worksheet.costpercapita_cd90, 0.001); end
  def test_costpercapita_cf90; assert_in_epsilon(-14.27633943750958, worksheet.costpercapita_cf90, 0.001); end
  def test_costpercapita_cg90; assert_in_epsilon(11.105328222485257, worksheet.costpercapita_cg90, 0.001); end
  def test_costpercapita_ch90; assert_in_epsilon(11.435538030517932, worksheet.costpercapita_ch90, 0.001); end
  def test_costpercapita_ci90; assert_in_epsilon(11.658855767457373, worksheet.costpercapita_ci90, 0.001); end
  def test_costpercapita_cj90; assert_in_epsilon(11.748174878948454, worksheet.costpercapita_cj90, 0.001); end
  def test_costpercapita_ck90; assert_in_epsilon(11.7634560966598, worksheet.costpercapita_ck90, 0.001); end
  def test_costpercapita_cl90; assert_in_epsilon(11.602241401282571, worksheet.costpercapita_cl90, 0.001); end
  def test_costpercapita_cm90; assert_in_epsilon(11.329922825112947, worksheet.costpercapita_cm90, 0.001); end
  def test_costpercapita_cn90; assert_in_epsilon(10.926631779835196, worksheet.costpercapita_cn90, 0.001); end
  def test_costpercapita_cp90; assert_in_epsilon(8.588201062754438, worksheet.costpercapita_cp90, 0.001); end
  def test_costpercapita_cq90; assert_in_epsilon(214.77647056234565, worksheet.costpercapita_cq90, 0.001); end
  def test_costpercapita_cr90; assert_equal("ok", worksheet.costpercapita_cr90); end
  def test_costpercapita_a91; assert_equal("XII.a.Rail", worksheet.costpercapita_a91); end
  def test_costpercapita_b91; assert_equal("Rail", worksheet.costpercapita_b91); end
  def test_costpercapita_c91; assert_equal("Transport", worksheet.costpercapita_c91); end
  def test_costpercapita_e91; assert_in_epsilon(1.8097265724431506, worksheet.costpercapita_e91, 0.001); end
  def test_costpercapita_f91; assert_in_epsilon(1.0822831264221386, worksheet.costpercapita_f91, 0.001); end
  def test_costpercapita_g91; assert_in_epsilon(1.2577468100409812, worksheet.costpercapita_g91, 0.001); end
  def test_costpercapita_h91; assert_in_epsilon(1.1491827507030707, worksheet.costpercapita_h91, 0.001); end
  def test_costpercapita_i91; assert_in_epsilon(1.0200036049201282, worksheet.costpercapita_i91, 0.001); end
  def test_costpercapita_j91; assert_in_delta(0.9376205128602909, worksheet.costpercapita_j91, 0.001); end
  def test_costpercapita_k91; assert_in_delta(0.818813599555067, worksheet.costpercapita_k91, 0.001); end
  def test_costpercapita_l91; assert_in_delta(0.7515644001331716, worksheet.costpercapita_l91, 0.001); end
  def test_costpercapita_m91; assert_in_delta(0.891483422944993, worksheet.costpercapita_m91, 0.001); end
  def test_costpercapita_o91; assert_in_epsilon(133.70395383068492, worksheet.costpercapita_o91, 0.001); end
  def test_costpercapita_p91; assert_in_epsilon(124.35941062914124, worksheet.costpercapita_p91, 0.001); end
  def test_costpercapita_q91; assert_in_epsilon(119.11109307800993, worksheet.costpercapita_q91, 0.001); end
  def test_costpercapita_r91; assert_in_epsilon(113.32344376476637, worksheet.costpercapita_r91, 0.001); end
  def test_costpercapita_s91; assert_in_epsilon(106.96674678539485, worksheet.costpercapita_s91, 0.001); end
  def test_costpercapita_t91; assert_in_epsilon(100.78650516940166, worksheet.costpercapita_t91, 0.001); end
  def test_costpercapita_u91; assert_in_epsilon(94.06868714148133, worksheet.costpercapita_u91, 0.001); end
  def test_costpercapita_v91; assert_in_epsilon(87.55809647366024, worksheet.costpercapita_v91, 0.001); end
  def test_costpercapita_w91; assert_in_epsilon(81.25693170048837, worksheet.costpercapita_w91, 0.001); end
  def test_costpercapita_y91; assert_in_delta(0, (worksheet.costpercapita_y91||0), 0.001); end
  def test_costpercapita_z91; assert_in_delta(0, (worksheet.costpercapita_z91||0), 0.001); end
  def test_costpercapita_aa91; assert_in_delta(0, (worksheet.costpercapita_aa91||0), 0.001); end
  def test_costpercapita_ab91; assert_in_delta(0, (worksheet.costpercapita_ab91||0), 0.001); end
  def test_costpercapita_ac91; assert_in_delta(0, (worksheet.costpercapita_ac91||0), 0.001); end
  def test_costpercapita_ad91; assert_in_delta(0, (worksheet.costpercapita_ad91||0), 0.001); end
  def test_costpercapita_ae91; assert_in_delta(0, (worksheet.costpercapita_ae91||0), 0.001); end
  def test_costpercapita_af91; assert_in_delta(0, (worksheet.costpercapita_af91||0), 0.001); end
  def test_costpercapita_ag91; assert_in_delta(0, (worksheet.costpercapita_ag91||0), 0.001); end
  def test_costpercapita_ai91; assert_in_epsilon(135.51368040312806, worksheet.costpercapita_ai91, 0.001); end
  def test_costpercapita_aj91; assert_in_epsilon(125.44169375556339, worksheet.costpercapita_aj91, 0.001); end
  def test_costpercapita_ak91; assert_in_epsilon(120.36883988805091, worksheet.costpercapita_ak91, 0.001); end
  def test_costpercapita_al91; assert_in_epsilon(114.47262651546943, worksheet.costpercapita_al91, 0.001); end
  def test_costpercapita_am91; assert_in_epsilon(107.98675039031497, worksheet.costpercapita_am91, 0.001); end
  def test_costpercapita_an91; assert_in_epsilon(101.72412568226196, worksheet.costpercapita_an91, 0.001); end
  def test_costpercapita_ao91; assert_in_epsilon(94.8875007410364, worksheet.costpercapita_ao91, 0.001); end
  def test_costpercapita_ap91; assert_in_epsilon(88.30966087379342, worksheet.costpercapita_ap91, 0.001); end
  def test_costpercapita_aq91; assert_in_epsilon(82.14841512343337, worksheet.costpercapita_aq91, 0.001); end
  def test_costpercapita_as91; assert_in_epsilon(107.87258815256132, worksheet.costpercapita_as91, 0.001); end
  def test_costpercapita_at91; assert_in_epsilon(2332.0988136149836, worksheet.costpercapita_at91, 0.001); end
  def test_costpercapita_av91; assert_in_delta(0.07, worksheet.costpercapita_av91, 0.001); end
  def test_costpercapita_aw91; assert_in_epsilon(30, worksheet.costpercapita_aw91, 0.001); end
  def test_costpercapita_ay91; assert_in_delta(0.4375180674350519, worksheet.costpercapita_ay91, 0.001); end
  def test_costpercapita_az91; assert_in_delta(0.4360865236956073, worksheet.costpercapita_az91, 0.001); end
  def test_costpercapita_ba91; assert_in_delta(0.5067864597438773, worksheet.costpercapita_ba91, 0.001); end
  def test_costpercapita_bb91; assert_in_delta(0.46304252428083176, worksheet.costpercapita_bb91, 0.001); end
  def test_costpercapita_bc91; assert_in_delta(0.4109921104444076, worksheet.costpercapita_bc91, 0.001); end
  def test_costpercapita_bd91; assert_in_delta(0.3777973249482721, worksheet.costpercapita_bd91, 0.001); end
  def test_costpercapita_be91; assert_in_delta(0.3299262156706503, worksheet.costpercapita_be91, 0.001); end
  def test_costpercapita_bf91; assert_in_delta(0.30282936006859, worksheet.costpercapita_bf91, 0.001); end
  def test_costpercapita_bg91; assert_in_delta(0.3592072142245591, worksheet.costpercapita_bg91, 0.001); end
  def test_costpercapita_bi91; assert_in_delta(0.4375180674350519, worksheet.costpercapita_bi91, 0.001); end
  def test_costpercapita_bj91; assert_in_delta(0.8591774025584054, worksheet.costpercapita_bj91, 0.001); end
  def test_costpercapita_bk91; assert_in_epsilon(1.337835983236477, worksheet.costpercapita_bk91, 0.001); end
  def test_costpercapita_bl91; assert_in_epsilon(1.7594544568283454, worksheet.costpercapita_bl91, 0.001); end
  def test_costpercapita_bm91; assert_in_epsilon(2.122378002146069, worksheet.costpercapita_bm91, 0.001); end
  def test_costpercapita_bn91; assert_in_epsilon(2.4501812364691857, worksheet.costpercapita_bn91, 0.001); end
  def test_costpercapita_bo91; assert_in_epsilon(2.3592388234643686, worksheet.costpercapita_bo91, 0.001); end
  def test_costpercapita_bp91; assert_in_epsilon(2.6275655402368256, worksheet.costpercapita_bp91, 0.001); end
  def test_costpercapita_bq91; assert_in_epsilon(2.498713774750654, worksheet.costpercapita_bq91, 0.001); end
  def test_costpercapita_bs91; assert_in_epsilon(134.14147189812, worksheet.costpercapita_bs91, 0.001); end
  def test_costpercapita_bt91; assert_in_epsilon(125.21858803169965, worksheet.costpercapita_bt91, 0.001); end
  def test_costpercapita_bu91; assert_in_epsilon(120.4489290612464, worksheet.costpercapita_bu91, 0.001); end
  def test_costpercapita_bv91; assert_in_epsilon(115.0828982215947, worksheet.costpercapita_bv91, 0.001); end
  def test_costpercapita_bw91; assert_in_epsilon(109.08912478754091, worksheet.costpercapita_bw91, 0.001); end
  def test_costpercapita_bx91; assert_in_epsilon(103.23668640587084, worksheet.costpercapita_bx91, 0.001); end
  def test_costpercapita_by91; assert_in_epsilon(96.4279259649457, worksheet.costpercapita_by91, 0.001); end
  def test_costpercapita_bz91; assert_in_epsilon(90.18566201389707, worksheet.costpercapita_bz91, 0.001); end
  def test_costpercapita_ca91; assert_in_epsilon(83.75564547523902, worksheet.costpercapita_ca91, 0.001); end
  def test_costpercapita_cc91; assert_in_epsilon(108.6207702066838, worksheet.costpercapita_cc91, 0.001); end
  def test_costpercapita_cd91; assert_in_epsilon(2345.6200959731746, worksheet.costpercapita_cd91, 0.001); end
  def test_costpercapita_cf91; assert_in_epsilon(-1.372208505008099, worksheet.costpercapita_cf91, 0.001); end
  def test_costpercapita_cg91; assert_in_delta(-0.22310572386373334, worksheet.costpercapita_cg91, 0.001); end
  def test_costpercapita_ch91; assert_in_delta(0.08008917319549569, worksheet.costpercapita_ch91, 0.001); end
  def test_costpercapita_ci91; assert_in_delta(0.6102717061252749, worksheet.costpercapita_ci91, 0.001); end
  def test_costpercapita_cj91; assert_in_epsilon(1.1023743972259408, worksheet.costpercapita_cj91, 0.001); end
  def test_costpercapita_ck91; assert_in_epsilon(1.512560723608895, worksheet.costpercapita_ck91, 0.001); end
  def test_costpercapita_cl91; assert_in_epsilon(1.5404252239093015, worksheet.costpercapita_cl91, 0.001); end
  def test_costpercapita_cm91; assert_in_epsilon(1.876001140103654, worksheet.costpercapita_cm91, 0.001); end
  def test_costpercapita_cn91; assert_in_epsilon(1.6072303518056605, worksheet.costpercapita_cn91, 0.001); end
  def test_costpercapita_cp91; assert_in_delta(0.7481820541224878, worksheet.costpercapita_cp91, 0.001); end
  def test_costpercapita_cq91; assert_in_epsilon(13.521282358191186, worksheet.costpercapita_cq91, 0.001); end
  def test_costpercapita_cr91; assert_equal("ok", worksheet.costpercapita_cr91); end
  def test_costpercapita_a92; assert_equal("XII.a.Air", worksheet.costpercapita_a92); end
  def test_costpercapita_b92; assert_equal("Domestic aviation", worksheet.costpercapita_b92); end
  def test_costpercapita_c92; assert_equal("Transport", worksheet.costpercapita_c92); end
  def test_costpercapita_e92; assert_in_epsilon(8.896398734813296, worksheet.costpercapita_e92, 0.001); end
  def test_costpercapita_f92; assert_in_epsilon(8.015936325620542, worksheet.costpercapita_f92, 0.001); end
  def test_costpercapita_g92; assert_in_epsilon(9.03462723761943, worksheet.costpercapita_g92, 0.001); end
  def test_costpercapita_h92; assert_in_epsilon(9.087148817989553, worksheet.costpercapita_h92, 0.001); end
  def test_costpercapita_i92; assert_in_epsilon(8.945074800244306, worksheet.costpercapita_i92, 0.001); end
  def test_costpercapita_j92; assert_in_epsilon(8.909476600843458, worksheet.costpercapita_j92, 0.001); end
  def test_costpercapita_k92; assert_in_epsilon(8.594827571706515, worksheet.costpercapita_k92, 0.001); end
  def test_costpercapita_l92; assert_in_epsilon(8.441166529886658, worksheet.costpercapita_l92, 0.001); end
  def test_costpercapita_m92; assert_in_epsilon(8.239497787855287, worksheet.costpercapita_m92, 0.001); end
  def test_costpercapita_o92; assert_in_epsilon(3.996006703994697, worksheet.costpercapita_o92, 0.001); end
  def test_costpercapita_p92; assert_in_epsilon(4.324014827298457, worksheet.costpercapita_p92, 0.001); end
  def test_costpercapita_q92; assert_in_epsilon(4.793946375544617, worksheet.costpercapita_q92, 0.001); end
  def test_costpercapita_r92; assert_in_epsilon(5.259370767991622, worksheet.costpercapita_r92, 0.001); end
  def test_costpercapita_s92; assert_in_epsilon(5.708482707833969, worksheet.costpercapita_s92, 0.001); end
  def test_costpercapita_t92; assert_in_epsilon(6.173018575666719, worksheet.costpercapita_t92, 0.001); end
  def test_costpercapita_u92; assert_in_epsilon(6.604886414724205, worksheet.costpercapita_u92, 0.001); end
  def test_costpercapita_v92; assert_in_epsilon(7.044498828535568, worksheet.costpercapita_v92, 0.001); end
  def test_costpercapita_w92; assert_in_epsilon(7.492809818930669, worksheet.costpercapita_w92, 0.001); end
  def test_costpercapita_y92; assert_in_delta(0, (worksheet.costpercapita_y92||0), 0.001); end
  def test_costpercapita_z92; assert_in_delta(0, (worksheet.costpercapita_z92||0), 0.001); end
  def test_costpercapita_aa92; assert_in_delta(0, (worksheet.costpercapita_aa92||0), 0.001); end
  def test_costpercapita_ab92; assert_in_delta(0, (worksheet.costpercapita_ab92||0), 0.001); end
  def test_costpercapita_ac92; assert_in_delta(0, (worksheet.costpercapita_ac92||0), 0.001); end
  def test_costpercapita_ad92; assert_in_delta(0, (worksheet.costpercapita_ad92||0), 0.001); end
  def test_costpercapita_ae92; assert_in_delta(0, (worksheet.costpercapita_ae92||0), 0.001); end
  def test_costpercapita_af92; assert_in_delta(0, (worksheet.costpercapita_af92||0), 0.001); end
  def test_costpercapita_ag92; assert_in_delta(0, (worksheet.costpercapita_ag92||0), 0.001); end
  def test_costpercapita_ai92; assert_in_epsilon(12.892405438807991, worksheet.costpercapita_ai92, 0.001); end
  def test_costpercapita_aj92; assert_in_epsilon(12.339951152919, worksheet.costpercapita_aj92, 0.001); end
  def test_costpercapita_ak92; assert_in_epsilon(13.828573613164046, worksheet.costpercapita_ak92, 0.001); end
  def test_costpercapita_al92; assert_in_epsilon(14.346519585981175, worksheet.costpercapita_al92, 0.001); end
  def test_costpercapita_am92; assert_in_epsilon(14.653557508078276, worksheet.costpercapita_am92, 0.001); end
  def test_costpercapita_an92; assert_in_epsilon(15.082495176510177, worksheet.costpercapita_an92, 0.001); end
  def test_costpercapita_ao92; assert_in_epsilon(15.19971398643072, worksheet.costpercapita_ao92, 0.001); end
  def test_costpercapita_ap92; assert_in_epsilon(15.485665358422226, worksheet.costpercapita_ap92, 0.001); end
  def test_costpercapita_aq92; assert_in_epsilon(15.732307606785955, worksheet.costpercapita_aq92, 0.001); end
  def test_costpercapita_as92; assert_in_epsilon(14.395687714122175, worksheet.costpercapita_as92, 0.001); end
  def test_costpercapita_at92; assert_in_epsilon(297.1337380625269, worksheet.costpercapita_at92, 0.001); end
  def test_costpercapita_av92; assert_in_delta(0.07, worksheet.costpercapita_av92, 0.001); end
  def test_costpercapita_aw92; assert_in_epsilon(30, worksheet.costpercapita_aw92, 0.001); end
  def test_costpercapita_ay92; assert_in_epsilon(2.15078633471821, worksheet.costpercapita_ay92, 0.001); end
  def test_costpercapita_az92; assert_in_epsilon(3.229877396279156, worksheet.costpercapita_az92, 0.001); end
  def test_costpercapita_ba92; assert_in_epsilon(3.6403405807163765, worksheet.costpercapita_ba92, 0.001); end
  def test_costpercapita_bb92; assert_in_epsilon(3.661503207060117, worksheet.costpercapita_bb92, 0.001); end
  def test_costpercapita_bc92; assert_in_epsilon(3.6042570364478004, worksheet.costpercapita_bc92, 0.001); end
  def test_costpercapita_bd92; assert_in_epsilon(3.589913382141872, worksheet.costpercapita_bd92, 0.001); end
  def test_costpercapita_be92; assert_in_epsilon(3.4631312140098265, worksheet.costpercapita_be92, 0.001); end
  def test_costpercapita_bf92; assert_in_epsilon(3.401216260409663, worksheet.costpercapita_bf92, 0.001); end
  def test_costpercapita_bg92; assert_in_epsilon(3.3199574673050716, worksheet.costpercapita_bg92, 0.001); end
  def test_costpercapita_bi92; assert_in_epsilon(2.15078633471821, worksheet.costpercapita_bi92, 0.001); end
  def test_costpercapita_bj92; assert_in_epsilon(5.309741402665833, worksheet.costpercapita_bj92, 0.001); end
  def test_costpercapita_bk92; assert_in_epsilon(8.776250870505923, worksheet.costpercapita_bk92, 0.001); end
  def test_costpercapita_bl92; assert_in_epsilon(12.166010855321856, worksheet.costpercapita_bl92, 0.001); end
  def test_costpercapita_bm92; assert_in_epsilon(15.437890612629868, worksheet.costpercapita_bm92, 0.001); end
  def test_costpercapita_bn92; assert_in_epsilon(18.66415373945971, worksheet.costpercapita_bn92, 0.001); end
  def test_costpercapita_bo92; assert_in_epsilon(19.917178304532698, worksheet.costpercapita_bo92, 0.001); end
  def test_costpercapita_bp92; assert_in_epsilon(23.53880704401834, worksheet.costpercapita_bp92, 0.001); end
  def test_costpercapita_bq92; assert_in_epsilon(23.265898848434045, worksheet.costpercapita_bq92, 0.001); end
  def test_costpercapita_bs92; assert_in_epsilon(6.146793038712907, worksheet.costpercapita_bs92, 0.001); end
  def test_costpercapita_bt92; assert_in_epsilon(9.63375622996429, worksheet.costpercapita_bt92, 0.001); end
  def test_costpercapita_bu92; assert_in_epsilon(13.57019724605054, worksheet.costpercapita_bu92, 0.001); end
  def test_costpercapita_bv92; assert_in_epsilon(17.42538162331348, worksheet.costpercapita_bv92, 0.001); end
  def test_costpercapita_bw92; assert_in_epsilon(21.146373320463837, worksheet.costpercapita_bw92, 0.001); end
  def test_costpercapita_bx92; assert_in_epsilon(24.83717231512643, worksheet.costpercapita_bx92, 0.001); end
  def test_costpercapita_by92; assert_in_epsilon(26.522064719256903, worksheet.costpercapita_by92, 0.001); end
  def test_costpercapita_bz92; assert_in_epsilon(30.583305872553908, worksheet.costpercapita_bz92, 0.001); end
  def test_costpercapita_ca92; assert_in_epsilon(30.75870866736471, worksheet.costpercapita_ca92, 0.001); end
  def test_costpercapita_cc92; assert_in_epsilon(20.06930589253411, worksheet.costpercapita_cc92, 0.001); end
  def test_costpercapita_cd92; assert_in_epsilon(387.50902890900574, worksheet.costpercapita_cd92, 0.001); end
  def test_costpercapita_cf92; assert_in_epsilon(-6.7456124000950854, worksheet.costpercapita_cf92, 0.001); end
  def test_costpercapita_cg92; assert_in_epsilon(-2.706194922954709, worksheet.costpercapita_cg92, 0.001); end
  def test_costpercapita_ch92; assert_in_delta(-0.2583763671135072, worksheet.costpercapita_ch92, 0.001); end
  def test_costpercapita_ci92; assert_in_epsilon(3.078862037332303, worksheet.costpercapita_ci92, 0.001); end
  def test_costpercapita_cj92; assert_in_epsilon(6.492815812385562, worksheet.costpercapita_cj92, 0.001); end
  def test_costpercapita_ck92; assert_in_epsilon(9.754677138616254, worksheet.costpercapita_ck92, 0.001); end
  def test_costpercapita_cl92; assert_in_epsilon(11.322350732826184, worksheet.costpercapita_cl92, 0.001); end
  def test_costpercapita_cm92; assert_in_epsilon(15.097640514131681, worksheet.costpercapita_cm92, 0.001); end
  def test_costpercapita_cn92; assert_in_epsilon(15.026401060578756, worksheet.costpercapita_cn92, 0.001); end
  def test_costpercapita_cp92; assert_in_epsilon(5.673618178411938, worksheet.costpercapita_cp92, 0.001); end
  def test_costpercapita_cq92; assert_in_epsilon(90.3752908464787, worksheet.costpercapita_cq92, 0.001); end
  def test_costpercapita_cr92; assert_equal("ok", worksheet.costpercapita_cr92); end
  def test_costpercapita_a93; assert_equal("XII.b", worksheet.costpercapita_a93); end
  def test_costpercapita_b93; assert_equal("Domestic freight", worksheet.costpercapita_b93); end
  def test_costpercapita_c93; assert_equal("Transport", worksheet.costpercapita_c93); end
  def test_costpercapita_e93; assert_in_epsilon(67.56923951216662, worksheet.costpercapita_e93, 0.001); end
  def test_costpercapita_f93; assert_in_epsilon(75.97697909906853, worksheet.costpercapita_f93, 0.001); end
  def test_costpercapita_g93; assert_in_epsilon(74.51204947627606, worksheet.costpercapita_g93, 0.001); end
  def test_costpercapita_h93; assert_in_epsilon(74.18505770933362, worksheet.costpercapita_h93, 0.001); end
  def test_costpercapita_i93; assert_in_epsilon(74.00611550863016, worksheet.costpercapita_i93, 0.001); end
  def test_costpercapita_j93; assert_in_epsilon(73.99071498066806, worksheet.costpercapita_j93, 0.001); end
  def test_costpercapita_k93; assert_in_epsilon(74.02899235475942, worksheet.costpercapita_k93, 0.001); end
  def test_costpercapita_l93; assert_in_epsilon(74.06296683313221, worksheet.costpercapita_l93, 0.001); end
  def test_costpercapita_m93; assert_in_epsilon(74.09140596314204, worksheet.costpercapita_m93, 0.001); end
  def test_costpercapita_o93; assert_in_epsilon(104.33805341280801, worksheet.costpercapita_o93, 0.001); end
  def test_costpercapita_p93; assert_in_epsilon(110.026886244722, worksheet.costpercapita_p93, 0.001); end
  def test_costpercapita_q93; assert_in_epsilon(111.10695824626555, worksheet.costpercapita_q93, 0.001); end
  def test_costpercapita_r93; assert_in_epsilon(112.20387391171141, worksheet.costpercapita_r93, 0.001); end
  def test_costpercapita_s93; assert_in_epsilon(113.55166379487936, worksheet.costpercapita_s93, 0.001); end
  def test_costpercapita_t93; assert_in_epsilon(115.18613584478634, worksheet.costpercapita_t93, 0.001); end
  def test_costpercapita_u93; assert_in_epsilon(116.94699136772934, worksheet.costpercapita_u93, 0.001); end
  def test_costpercapita_v93; assert_in_epsilon(118.74737348640706, worksheet.costpercapita_v93, 0.001); end
  def test_costpercapita_w93; assert_in_epsilon(120.58744013692298, worksheet.costpercapita_w93, 0.001); end
  def test_costpercapita_y93; assert_in_delta(0, (worksheet.costpercapita_y93||0), 0.001); end
  def test_costpercapita_z93; assert_in_delta(0, (worksheet.costpercapita_z93||0), 0.001); end
  def test_costpercapita_aa93; assert_in_delta(0, (worksheet.costpercapita_aa93||0), 0.001); end
  def test_costpercapita_ab93; assert_in_delta(0, (worksheet.costpercapita_ab93||0), 0.001); end
  def test_costpercapita_ac93; assert_in_delta(0, (worksheet.costpercapita_ac93||0), 0.001); end
  def test_costpercapita_ad93; assert_in_delta(0, (worksheet.costpercapita_ad93||0), 0.001); end
  def test_costpercapita_ae93; assert_in_delta(0, (worksheet.costpercapita_ae93||0), 0.001); end
  def test_costpercapita_af93; assert_in_delta(0, (worksheet.costpercapita_af93||0), 0.001); end
  def test_costpercapita_ag93; assert_in_delta(0, (worksheet.costpercapita_ag93||0), 0.001); end
  def test_costpercapita_ai93; assert_in_epsilon(171.90729292497463, worksheet.costpercapita_ai93, 0.001); end
  def test_costpercapita_aj93; assert_in_epsilon(186.00386534379052, worksheet.costpercapita_aj93, 0.001); end
  def test_costpercapita_ak93; assert_in_epsilon(185.6190077225416, worksheet.costpercapita_ak93, 0.001); end
  def test_costpercapita_al93; assert_in_epsilon(186.38893162104503, worksheet.costpercapita_al93, 0.001); end
  def test_costpercapita_am93; assert_in_epsilon(187.55777930350953, worksheet.costpercapita_am93, 0.001); end
  def test_costpercapita_an93; assert_in_epsilon(189.1768508254544, worksheet.costpercapita_an93, 0.001); end
  def test_costpercapita_ao93; assert_in_epsilon(190.97598372248876, worksheet.costpercapita_ao93, 0.001); end
  def test_costpercapita_ap93; assert_in_epsilon(192.81034031953925, worksheet.costpercapita_ap93, 0.001); end
  def test_costpercapita_aq93; assert_in_epsilon(194.67884610006502, worksheet.costpercapita_aq93, 0.001); end
  def test_costpercapita_as93; assert_in_epsilon(187.23543309815653, worksheet.costpercapita_as93, 0.001); end
  def test_costpercapita_at93; assert_in_epsilon(3935.2557698800097, worksheet.costpercapita_at93, 0.001); end
  def test_costpercapita_av93; assert_in_delta(0.07, worksheet.costpercapita_av93, 0.001); end
  def test_costpercapita_aw93; assert_in_epsilon(10, worksheet.costpercapita_aw93, 0.001); end
  def test_costpercapita_ay93; assert_in_epsilon(28.861018748788386, worksheet.costpercapita_ay93, 0.001); end
  def test_costpercapita_az93; assert_in_epsilon(54.08706274447281, worksheet.costpercapita_az93, 0.001); end
  def test_costpercapita_ba93; assert_in_epsilon(53.04419763765014, worksheet.costpercapita_ba93, 0.001); end
  def test_costpercapita_bb93; assert_in_epsilon(52.811416281701774, worksheet.costpercapita_bb93, 0.001); end
  def test_costpercapita_bc93; assert_in_epsilon(52.68402956335829, worksheet.costpercapita_bc93, 0.001); end
  def test_costpercapita_bd93; assert_in_epsilon(52.673066119798655, worksheet.costpercapita_bd93, 0.001); end
  def test_costpercapita_be93; assert_in_epsilon(52.7003153044691, worksheet.costpercapita_be93, 0.001); end
  def test_costpercapita_bf93; assert_in_epsilon(52.724501311405014, worksheet.costpercapita_bf93, 0.001); end
  def test_costpercapita_bg93; assert_in_epsilon(52.7447467729577, worksheet.costpercapita_bg93, 0.001); end
  def test_costpercapita_bi93; assert_in_epsilon(28.861018748788386, worksheet.costpercapita_bi93, 0.001); end
  def test_costpercapita_bj93; assert_in_epsilon(81.9963874013642, worksheet.costpercapita_bj93, 0.001); end
  def test_costpercapita_bk93; assert_in_epsilon(105.36054998474638, worksheet.costpercapita_bk93, 0.001); end
  def test_costpercapita_bl93; assert_in_epsilon(104.2131812450702, worksheet.costpercapita_bl93, 0.001); end
  def test_costpercapita_bm93; assert_in_epsilon(104.05262986700654, worksheet.costpercapita_bm93, 0.001); end
  def test_costpercapita_bn93; assert_in_epsilon(104.1160867084005, worksheet.costpercapita_bn93, 0.001); end
  def test_costpercapita_bo93; assert_in_epsilon(104.25005527072373, worksheet.costpercapita_bo93, 0.001); end
  def test_costpercapita_bp93; assert_in_epsilon(104.37355465943696, worksheet.costpercapita_bp93, 0.001); end
  def test_costpercapita_bq93; assert_in_epsilon(104.4853174008891, worksheet.costpercapita_bq93, 0.001); end
  def test_costpercapita_bs93; assert_in_epsilon(133.1990721615964, worksheet.costpercapita_bs93, 0.001); end
  def test_costpercapita_bt93; assert_in_epsilon(192.0232736460862, worksheet.costpercapita_bt93, 0.001); end
  def test_costpercapita_bu93; assert_in_epsilon(216.46750823101192, worksheet.costpercapita_bu93, 0.001); end
  def test_costpercapita_bv93; assert_in_epsilon(216.41705515678163, worksheet.costpercapita_bv93, 0.001); end
  def test_costpercapita_bw93; assert_in_epsilon(217.6042936618859, worksheet.costpercapita_bw93, 0.001); end
  def test_costpercapita_bx93; assert_in_epsilon(219.30222255318685, worksheet.costpercapita_bx93, 0.001); end
  def test_costpercapita_by93; assert_in_epsilon(221.19704663845306, worksheet.costpercapita_by93, 0.001); end
  def test_costpercapita_bz93; assert_in_epsilon(223.12092814584403, worksheet.costpercapita_bz93, 0.001); end
  def test_costpercapita_ca93; assert_in_epsilon(225.07275753781207, worksheet.costpercapita_ca93, 0.001); end
  def test_costpercapita_cc93; assert_in_epsilon(207.1560175258509, worksheet.costpercapita_cc93, 0.001); end
  def test_costpercapita_cd93; assert_in_epsilon(4400.7904412466005, worksheet.costpercapita_cd93, 0.001); end
  def test_costpercapita_cf93; assert_in_epsilon(-38.70822076337824, worksheet.costpercapita_cf93, 0.001); end
  def test_costpercapita_cg93; assert_in_epsilon(6.019408302295669, worksheet.costpercapita_cg93, 0.001); end
  def test_costpercapita_ch93; assert_in_epsilon(30.848500508470316, worksheet.costpercapita_ch93, 0.001); end
  def test_costpercapita_ci93; assert_in_epsilon(30.028123535736587, worksheet.costpercapita_ci93, 0.001); end
  def test_costpercapita_cj93; assert_in_epsilon(30.04651435837639, worksheet.costpercapita_cj93, 0.001); end
  def test_costpercapita_ck93; assert_in_epsilon(30.12537172773244, worksheet.costpercapita_ck93, 0.001); end
  def test_costpercapita_cl93; assert_in_epsilon(30.22106291596431, worksheet.costpercapita_cl93, 0.001); end
  def test_costpercapita_cm93; assert_in_epsilon(30.310587826304747, worksheet.costpercapita_cm93, 0.001); end
  def test_costpercapita_cn93; assert_in_epsilon(30.393911437747064, worksheet.costpercapita_cn93, 0.001); end
  def test_costpercapita_cp93; assert_in_epsilon(19.92058442769436, worksheet.costpercapita_cp93, 0.001); end
  def test_costpercapita_cq93; assert_in_epsilon(465.5346713665894, worksheet.costpercapita_cq93, 0.001); end
  def test_costpercapita_cr93; assert_equal("ok", worksheet.costpercapita_cr93); end
  def test_costpercapita_a94; assert_equal("XII.c", worksheet.costpercapita_a94); end
  def test_costpercapita_b94; assert_equal("International aviation", worksheet.costpercapita_b94); end
  def test_costpercapita_c94; assert_equal("Transport", worksheet.costpercapita_c94); end
  def test_costpercapita_e94; assert_in_delta(0, (worksheet.costpercapita_e94||0), 0.001); end
  def test_costpercapita_f94; assert_in_delta(0, (worksheet.costpercapita_f94||0), 0.001); end
  def test_costpercapita_g94; assert_in_delta(0, (worksheet.costpercapita_g94||0), 0.001); end
  def test_costpercapita_h94; assert_in_delta(0, (worksheet.costpercapita_h94||0), 0.001); end
  def test_costpercapita_i94; assert_in_delta(0, (worksheet.costpercapita_i94||0), 0.001); end
  def test_costpercapita_j94; assert_in_delta(0, (worksheet.costpercapita_j94||0), 0.001); end
  def test_costpercapita_k94; assert_in_delta(0, (worksheet.costpercapita_k94||0), 0.001); end
  def test_costpercapita_l94; assert_in_delta(0, (worksheet.costpercapita_l94||0), 0.001); end
  def test_costpercapita_m94; assert_in_delta(0, (worksheet.costpercapita_m94||0), 0.001); end
  def test_costpercapita_o94; assert_in_delta(0, (worksheet.costpercapita_o94||0), 0.001); end
  def test_costpercapita_p94; assert_in_delta(0, (worksheet.costpercapita_p94||0), 0.001); end
  def test_costpercapita_q94; assert_in_delta(0, (worksheet.costpercapita_q94||0), 0.001); end
  def test_costpercapita_r94; assert_in_delta(0, (worksheet.costpercapita_r94||0), 0.001); end
  def test_costpercapita_s94; assert_in_delta(0, (worksheet.costpercapita_s94||0), 0.001); end
  def test_costpercapita_t94; assert_in_delta(0, (worksheet.costpercapita_t94||0), 0.001); end
  def test_costpercapita_u94; assert_in_delta(0, (worksheet.costpercapita_u94||0), 0.001); end
  def test_costpercapita_v94; assert_in_delta(0, (worksheet.costpercapita_v94||0), 0.001); end
  def test_costpercapita_w94; assert_in_delta(0, (worksheet.costpercapita_w94||0), 0.001); end
  def test_costpercapita_y94; assert_in_delta(0, (worksheet.costpercapita_y94||0), 0.001); end
  def test_costpercapita_z94; assert_in_delta(0, (worksheet.costpercapita_z94||0), 0.001); end
  def test_costpercapita_aa94; assert_in_delta(0, (worksheet.costpercapita_aa94||0), 0.001); end
  def test_costpercapita_ab94; assert_in_delta(0, (worksheet.costpercapita_ab94||0), 0.001); end
  def test_costpercapita_ac94; assert_in_delta(0, (worksheet.costpercapita_ac94||0), 0.001); end
  def test_costpercapita_ad94; assert_in_delta(0, (worksheet.costpercapita_ad94||0), 0.001); end
  def test_costpercapita_ae94; assert_in_delta(0, (worksheet.costpercapita_ae94||0), 0.001); end
  def test_costpercapita_af94; assert_in_delta(0, (worksheet.costpercapita_af94||0), 0.001); end
  def test_costpercapita_ag94; assert_in_delta(0, (worksheet.costpercapita_ag94||0), 0.001); end
  def test_costpercapita_ai94; assert_in_delta(0, (worksheet.costpercapita_ai94||0), 0.001); end
  def test_costpercapita_aj94; assert_in_delta(0, (worksheet.costpercapita_aj94||0), 0.001); end
  def test_costpercapita_ak94; assert_in_delta(0, (worksheet.costpercapita_ak94||0), 0.001); end
  def test_costpercapita_al94; assert_in_delta(0, (worksheet.costpercapita_al94||0), 0.001); end
  def test_costpercapita_am94; assert_in_delta(0, (worksheet.costpercapita_am94||0), 0.001); end
  def test_costpercapita_an94; assert_in_delta(0, (worksheet.costpercapita_an94||0), 0.001); end
  def test_costpercapita_ao94; assert_in_delta(0, (worksheet.costpercapita_ao94||0), 0.001); end
  def test_costpercapita_ap94; assert_in_delta(0, (worksheet.costpercapita_ap94||0), 0.001); end
  def test_costpercapita_aq94; assert_in_delta(0, (worksheet.costpercapita_aq94||0), 0.001); end
  def test_costpercapita_as94; assert_in_delta(0, (worksheet.costpercapita_as94||0), 0.001); end
  def test_costpercapita_at94; assert_in_delta(0, (worksheet.costpercapita_at94||0), 0.001); end
  def test_costpercapita_av94; assert_in_delta(0.07, worksheet.costpercapita_av94, 0.001); end
  def test_costpercapita_aw94; assert_in_epsilon(15, worksheet.costpercapita_aw94, 0.001); end
  def test_costpercapita_ay94; assert_in_delta(0, (worksheet.costpercapita_ay94||0), 0.001); end
  def test_costpercapita_az94; assert_in_delta(0, (worksheet.costpercapita_az94||0), 0.001); end
  def test_costpercapita_ba94; assert_in_delta(0, (worksheet.costpercapita_ba94||0), 0.001); end
  def test_costpercapita_bb94; assert_in_delta(0, (worksheet.costpercapita_bb94||0), 0.001); end
  def test_costpercapita_bc94; assert_in_delta(0, (worksheet.costpercapita_bc94||0), 0.001); end
  def test_costpercapita_bd94; assert_in_delta(0, (worksheet.costpercapita_bd94||0), 0.001); end
  def test_costpercapita_be94; assert_in_delta(0, (worksheet.costpercapita_be94||0), 0.001); end
  def test_costpercapita_bf94; assert_in_delta(0, (worksheet.costpercapita_bf94||0), 0.001); end
  def test_costpercapita_bg94; assert_in_delta(0, (worksheet.costpercapita_bg94||0), 0.001); end
  def test_costpercapita_bi94; assert_in_delta(0, (worksheet.costpercapita_bi94||0), 0.001); end
  def test_costpercapita_bj94; assert_in_delta(0, (worksheet.costpercapita_bj94||0), 0.001); end
  def test_costpercapita_bk94; assert_in_delta(0, (worksheet.costpercapita_bk94||0), 0.001); end
  def test_costpercapita_bl94; assert_in_delta(0, (worksheet.costpercapita_bl94||0), 0.001); end
  def test_costpercapita_bm94; assert_in_delta(0, (worksheet.costpercapita_bm94||0), 0.001); end
  def test_costpercapita_bn94; assert_in_delta(0, (worksheet.costpercapita_bn94||0), 0.001); end
  def test_costpercapita_bo94; assert_in_delta(0, (worksheet.costpercapita_bo94||0), 0.001); end
  def test_costpercapita_bp94; assert_in_delta(0, (worksheet.costpercapita_bp94||0), 0.001); end
  def test_costpercapita_bq94; assert_in_delta(0, (worksheet.costpercapita_bq94||0), 0.001); end
  def test_costpercapita_bs94; assert_in_delta(0, (worksheet.costpercapita_bs94||0), 0.001); end
  def test_costpercapita_bt94; assert_in_delta(0, (worksheet.costpercapita_bt94||0), 0.001); end
  def test_costpercapita_bu94; assert_in_delta(0, (worksheet.costpercapita_bu94||0), 0.001); end
  def test_costpercapita_bv94; assert_in_delta(0, (worksheet.costpercapita_bv94||0), 0.001); end
  def test_costpercapita_bw94; assert_in_delta(0, (worksheet.costpercapita_bw94||0), 0.001); end
  def test_costpercapita_bx94; assert_in_delta(0, (worksheet.costpercapita_bx94||0), 0.001); end
  def test_costpercapita_by94; assert_in_delta(0, (worksheet.costpercapita_by94||0), 0.001); end
  def test_costpercapita_bz94; assert_in_delta(0, (worksheet.costpercapita_bz94||0), 0.001); end
  def test_costpercapita_ca94; assert_in_delta(0, (worksheet.costpercapita_ca94||0), 0.001); end
  def test_costpercapita_cc94; assert_in_delta(0, (worksheet.costpercapita_cc94||0), 0.001); end
  def test_costpercapita_cd94; assert_in_delta(0, (worksheet.costpercapita_cd94||0), 0.001); end
  def test_costpercapita_cf94; assert_in_delta(0, (worksheet.costpercapita_cf94||0), 0.001); end
  def test_costpercapita_cg94; assert_in_delta(0, (worksheet.costpercapita_cg94||0), 0.001); end
  def test_costpercapita_ch94; assert_in_delta(0, (worksheet.costpercapita_ch94||0), 0.001); end
  def test_costpercapita_ci94; assert_in_delta(0, (worksheet.costpercapita_ci94||0), 0.001); end
  def test_costpercapita_cj94; assert_in_delta(0, (worksheet.costpercapita_cj94||0), 0.001); end
  def test_costpercapita_ck94; assert_in_delta(0, (worksheet.costpercapita_ck94||0), 0.001); end
  def test_costpercapita_cl94; assert_in_delta(0, (worksheet.costpercapita_cl94||0), 0.001); end
  def test_costpercapita_cm94; assert_in_delta(0, (worksheet.costpercapita_cm94||0), 0.001); end
  def test_costpercapita_cn94; assert_in_delta(0, (worksheet.costpercapita_cn94||0), 0.001); end
  def test_costpercapita_cp94; assert_in_delta(0, (worksheet.costpercapita_cp94||0), 0.001); end
  def test_costpercapita_cq94; assert_in_delta(0, (worksheet.costpercapita_cq94||0), 0.001); end
  def test_costpercapita_cr94; assert_equal("ok", worksheet.costpercapita_cr94); end
  def test_costpercapita_a95; assert_equal("XII.e", worksheet.costpercapita_a95); end
  def test_costpercapita_b95; assert_equal("International shipping (maritime bunkers)", worksheet.costpercapita_b95); end
  def test_costpercapita_c95; assert_equal("Transport", worksheet.costpercapita_c95); end
  def test_costpercapita_e95; assert_in_delta(0, (worksheet.costpercapita_e95||0), 0.001); end
  def test_costpercapita_f95; assert_in_delta(0, (worksheet.costpercapita_f95||0), 0.001); end
  def test_costpercapita_g95; assert_in_delta(0, (worksheet.costpercapita_g95||0), 0.001); end
  def test_costpercapita_h95; assert_in_delta(0, (worksheet.costpercapita_h95||0), 0.001); end
  def test_costpercapita_i95; assert_in_delta(0, (worksheet.costpercapita_i95||0), 0.001); end
  def test_costpercapita_j95; assert_in_delta(0, (worksheet.costpercapita_j95||0), 0.001); end
  def test_costpercapita_k95; assert_in_delta(0, (worksheet.costpercapita_k95||0), 0.001); end
  def test_costpercapita_l95; assert_in_delta(0, (worksheet.costpercapita_l95||0), 0.001); end
  def test_costpercapita_m95; assert_in_delta(0, (worksheet.costpercapita_m95||0), 0.001); end
  def test_costpercapita_o95; assert_in_delta(0, (worksheet.costpercapita_o95||0), 0.001); end
  def test_costpercapita_p95; assert_in_delta(0, (worksheet.costpercapita_p95||0), 0.001); end
  def test_costpercapita_q95; assert_in_delta(0, (worksheet.costpercapita_q95||0), 0.001); end
  def test_costpercapita_r95; assert_in_delta(0, (worksheet.costpercapita_r95||0), 0.001); end
  def test_costpercapita_s95; assert_in_delta(0, (worksheet.costpercapita_s95||0), 0.001); end
  def test_costpercapita_t95; assert_in_delta(0, (worksheet.costpercapita_t95||0), 0.001); end
  def test_costpercapita_u95; assert_in_delta(0, (worksheet.costpercapita_u95||0), 0.001); end
  def test_costpercapita_v95; assert_in_delta(0, (worksheet.costpercapita_v95||0), 0.001); end
  def test_costpercapita_w95; assert_in_delta(0, (worksheet.costpercapita_w95||0), 0.001); end
  def test_costpercapita_y95; assert_in_delta(0, (worksheet.costpercapita_y95||0), 0.001); end
  def test_costpercapita_z95; assert_in_delta(0, (worksheet.costpercapita_z95||0), 0.001); end
  def test_costpercapita_aa95; assert_in_delta(0, (worksheet.costpercapita_aa95||0), 0.001); end
  def test_costpercapita_ab95; assert_in_delta(0, (worksheet.costpercapita_ab95||0), 0.001); end
  def test_costpercapita_ac95; assert_in_delta(0, (worksheet.costpercapita_ac95||0), 0.001); end
  def test_costpercapita_ad95; assert_in_delta(0, (worksheet.costpercapita_ad95||0), 0.001); end
  def test_costpercapita_ae95; assert_in_delta(0, (worksheet.costpercapita_ae95||0), 0.001); end
  def test_costpercapita_af95; assert_in_delta(0, (worksheet.costpercapita_af95||0), 0.001); end
  def test_costpercapita_ag95; assert_in_delta(0, (worksheet.costpercapita_ag95||0), 0.001); end
  def test_costpercapita_ai95; assert_in_delta(0, (worksheet.costpercapita_ai95||0), 0.001); end
  def test_costpercapita_aj95; assert_in_delta(0, (worksheet.costpercapita_aj95||0), 0.001); end
  def test_costpercapita_ak95; assert_in_delta(0, (worksheet.costpercapita_ak95||0), 0.001); end
  def test_costpercapita_al95; assert_in_delta(0, (worksheet.costpercapita_al95||0), 0.001); end
  def test_costpercapita_am95; assert_in_delta(0, (worksheet.costpercapita_am95||0), 0.001); end
  def test_costpercapita_an95; assert_in_delta(0, (worksheet.costpercapita_an95||0), 0.001); end
  def test_costpercapita_ao95; assert_in_delta(0, (worksheet.costpercapita_ao95||0), 0.001); end
  def test_costpercapita_ap95; assert_in_delta(0, (worksheet.costpercapita_ap95||0), 0.001); end
  def test_costpercapita_aq95; assert_in_delta(0, (worksheet.costpercapita_aq95||0), 0.001); end
  def test_costpercapita_as95; assert_in_delta(0, (worksheet.costpercapita_as95||0), 0.001); end
  def test_costpercapita_at95; assert_in_delta(0, (worksheet.costpercapita_at95||0), 0.001); end
  def test_costpercapita_av95; assert_in_delta(0.07, worksheet.costpercapita_av95, 0.001); end
  def test_costpercapita_aw95; assert_in_epsilon(15, worksheet.costpercapita_aw95, 0.001); end
  def test_costpercapita_ay95; assert_in_delta(0, (worksheet.costpercapita_ay95||0), 0.001); end
  def test_costpercapita_az95; assert_in_delta(0, (worksheet.costpercapita_az95||0), 0.001); end
  def test_costpercapita_ba95; assert_in_delta(0, (worksheet.costpercapita_ba95||0), 0.001); end
  def test_costpercapita_bb95; assert_in_delta(0, (worksheet.costpercapita_bb95||0), 0.001); end
  def test_costpercapita_bc95; assert_in_delta(0, (worksheet.costpercapita_bc95||0), 0.001); end
  def test_costpercapita_bd95; assert_in_delta(0, (worksheet.costpercapita_bd95||0), 0.001); end
  def test_costpercapita_be95; assert_in_delta(0, (worksheet.costpercapita_be95||0), 0.001); end
  def test_costpercapita_bf95; assert_in_delta(0, (worksheet.costpercapita_bf95||0), 0.001); end
  def test_costpercapita_bg95; assert_in_delta(0, (worksheet.costpercapita_bg95||0), 0.001); end
  def test_costpercapita_bi95; assert_in_delta(0, (worksheet.costpercapita_bi95||0), 0.001); end
  def test_costpercapita_bj95; assert_in_delta(0, (worksheet.costpercapita_bj95||0), 0.001); end
  def test_costpercapita_bk95; assert_in_delta(0, (worksheet.costpercapita_bk95||0), 0.001); end
  def test_costpercapita_bl95; assert_in_delta(0, (worksheet.costpercapita_bl95||0), 0.001); end
  def test_costpercapita_bm95; assert_in_delta(0, (worksheet.costpercapita_bm95||0), 0.001); end
  def test_costpercapita_bn95; assert_in_delta(0, (worksheet.costpercapita_bn95||0), 0.001); end
  def test_costpercapita_bo95; assert_in_delta(0, (worksheet.costpercapita_bo95||0), 0.001); end
  def test_costpercapita_bp95; assert_in_delta(0, (worksheet.costpercapita_bp95||0), 0.001); end
  def test_costpercapita_bq95; assert_in_delta(0, (worksheet.costpercapita_bq95||0), 0.001); end
  def test_costpercapita_bs95; assert_in_delta(0, (worksheet.costpercapita_bs95||0), 0.001); end
  def test_costpercapita_bt95; assert_in_delta(0, (worksheet.costpercapita_bt95||0), 0.001); end
  def test_costpercapita_bu95; assert_in_delta(0, (worksheet.costpercapita_bu95||0), 0.001); end
  def test_costpercapita_bv95; assert_in_delta(0, (worksheet.costpercapita_bv95||0), 0.001); end
  def test_costpercapita_bw95; assert_in_delta(0, (worksheet.costpercapita_bw95||0), 0.001); end
  def test_costpercapita_bx95; assert_in_delta(0, (worksheet.costpercapita_bx95||0), 0.001); end
  def test_costpercapita_by95; assert_in_delta(0, (worksheet.costpercapita_by95||0), 0.001); end
  def test_costpercapita_bz95; assert_in_delta(0, (worksheet.costpercapita_bz95||0), 0.001); end
  def test_costpercapita_ca95; assert_in_delta(0, (worksheet.costpercapita_ca95||0), 0.001); end
  def test_costpercapita_cc95; assert_in_delta(0, (worksheet.costpercapita_cc95||0), 0.001); end
  def test_costpercapita_cd95; assert_in_delta(0, (worksheet.costpercapita_cd95||0), 0.001); end
  def test_costpercapita_cf95; assert_in_delta(0, (worksheet.costpercapita_cf95||0), 0.001); end
  def test_costpercapita_cg95; assert_in_delta(0, (worksheet.costpercapita_cg95||0), 0.001); end
  def test_costpercapita_ch95; assert_in_delta(0, (worksheet.costpercapita_ch95||0), 0.001); end
  def test_costpercapita_ci95; assert_in_delta(0, (worksheet.costpercapita_ci95||0), 0.001); end
  def test_costpercapita_cj95; assert_in_delta(0, (worksheet.costpercapita_cj95||0), 0.001); end
  def test_costpercapita_ck95; assert_in_delta(0, (worksheet.costpercapita_ck95||0), 0.001); end
  def test_costpercapita_cl95; assert_in_delta(0, (worksheet.costpercapita_cl95||0), 0.001); end
  def test_costpercapita_cm95; assert_in_delta(0, (worksheet.costpercapita_cm95||0), 0.001); end
  def test_costpercapita_cn95; assert_in_delta(0, (worksheet.costpercapita_cn95||0), 0.001); end
  def test_costpercapita_cp95; assert_in_delta(0, (worksheet.costpercapita_cp95||0), 0.001); end
  def test_costpercapita_cq95; assert_in_delta(0, (worksheet.costpercapita_cq95||0), 0.001); end
  def test_costpercapita_cr95; assert_equal("ok", worksheet.costpercapita_cr95); end
  def test_costpercapita_a96; assert_equal("XIV.a", worksheet.costpercapita_a96); end
  def test_costpercapita_b96; assert_equal("Geosequestration", worksheet.costpercapita_b96); end
  def test_costpercapita_c96; assert_equal("Other", worksheet.costpercapita_c96); end
  def test_costpercapita_e96; assert_in_delta(0, (worksheet.costpercapita_e96||0), 0.001); end
  def test_costpercapita_f96; assert_in_delta(0, (worksheet.costpercapita_f96||0), 0.001); end
  def test_costpercapita_g96; assert_in_delta(0, (worksheet.costpercapita_g96||0), 0.001); end
  def test_costpercapita_h96; assert_in_delta(0, (worksheet.costpercapita_h96||0), 0.001); end
  def test_costpercapita_i96; assert_in_delta(0, (worksheet.costpercapita_i96||0), 0.001); end
  def test_costpercapita_j96; assert_in_delta(0, (worksheet.costpercapita_j96||0), 0.001); end
  def test_costpercapita_k96; assert_in_delta(0, (worksheet.costpercapita_k96||0), 0.001); end
  def test_costpercapita_l96; assert_in_delta(0, (worksheet.costpercapita_l96||0), 0.001); end
  def test_costpercapita_m96; assert_in_delta(0, (worksheet.costpercapita_m96||0), 0.001); end
  def test_costpercapita_o96; assert_in_delta(0, (worksheet.costpercapita_o96||0), 0.001); end
  def test_costpercapita_p96; assert_in_delta(0, (worksheet.costpercapita_p96||0), 0.001); end
  def test_costpercapita_q96; assert_in_delta(0, (worksheet.costpercapita_q96||0), 0.001); end
  def test_costpercapita_r96; assert_in_delta(0, (worksheet.costpercapita_r96||0), 0.001); end
  def test_costpercapita_s96; assert_in_delta(0, (worksheet.costpercapita_s96||0), 0.001); end
  def test_costpercapita_t96; assert_in_delta(0, (worksheet.costpercapita_t96||0), 0.001); end
  def test_costpercapita_u96; assert_in_delta(0, (worksheet.costpercapita_u96||0), 0.001); end
  def test_costpercapita_v96; assert_in_delta(0, (worksheet.costpercapita_v96||0), 0.001); end
  def test_costpercapita_w96; assert_in_delta(0, (worksheet.costpercapita_w96||0), 0.001); end
  def test_costpercapita_y96; assert_in_delta(0, (worksheet.costpercapita_y96||0), 0.001); end
  def test_costpercapita_z96; assert_in_delta(0, (worksheet.costpercapita_z96||0), 0.001); end
  def test_costpercapita_aa96; assert_in_delta(0, (worksheet.costpercapita_aa96||0), 0.001); end
  def test_costpercapita_ab96; assert_in_delta(0, (worksheet.costpercapita_ab96||0), 0.001); end
  def test_costpercapita_ac96; assert_in_delta(0, (worksheet.costpercapita_ac96||0), 0.001); end
  def test_costpercapita_ad96; assert_in_delta(0, (worksheet.costpercapita_ad96||0), 0.001); end
  def test_costpercapita_ae96; assert_in_delta(0, (worksheet.costpercapita_ae96||0), 0.001); end
  def test_costpercapita_af96; assert_in_delta(0, (worksheet.costpercapita_af96||0), 0.001); end
  def test_costpercapita_ag96; assert_in_delta(0, (worksheet.costpercapita_ag96||0), 0.001); end
  def test_costpercapita_ai96; assert_in_delta(0, (worksheet.costpercapita_ai96||0), 0.001); end
  def test_costpercapita_aj96; assert_in_delta(0, (worksheet.costpercapita_aj96||0), 0.001); end
  def test_costpercapita_ak96; assert_in_delta(0, (worksheet.costpercapita_ak96||0), 0.001); end
  def test_costpercapita_al96; assert_in_delta(0, (worksheet.costpercapita_al96||0), 0.001); end
  def test_costpercapita_am96; assert_in_delta(0, (worksheet.costpercapita_am96||0), 0.001); end
  def test_costpercapita_an96; assert_in_delta(0, (worksheet.costpercapita_an96||0), 0.001); end
  def test_costpercapita_ao96; assert_in_delta(0, (worksheet.costpercapita_ao96||0), 0.001); end
  def test_costpercapita_ap96; assert_in_delta(0, (worksheet.costpercapita_ap96||0), 0.001); end
  def test_costpercapita_aq96; assert_in_delta(0, (worksheet.costpercapita_aq96||0), 0.001); end
  def test_costpercapita_as96; assert_in_delta(0, (worksheet.costpercapita_as96||0), 0.001); end
  def test_costpercapita_at96; assert_in_delta(0, (worksheet.costpercapita_at96||0), 0.001); end
  def test_costpercapita_av96; assert_in_delta(0, (worksheet.costpercapita_av96||0), 0.001); end
  def test_costpercapita_aw96; assert_in_epsilon(5, worksheet.costpercapita_aw96, 0.001); end
  def test_costpercapita_ay96; assert_in_delta(0, (worksheet.costpercapita_ay96||0), 0.001); end
  def test_costpercapita_az96; assert_in_delta(0, (worksheet.costpercapita_az96||0), 0.001); end
  def test_costpercapita_ba96; assert_in_delta(0, (worksheet.costpercapita_ba96||0), 0.001); end
  def test_costpercapita_bb96; assert_in_delta(0, (worksheet.costpercapita_bb96||0), 0.001); end
  def test_costpercapita_bc96; assert_in_delta(0, (worksheet.costpercapita_bc96||0), 0.001); end
  def test_costpercapita_bd96; assert_in_delta(0, (worksheet.costpercapita_bd96||0), 0.001); end
  def test_costpercapita_be96; assert_in_delta(0, (worksheet.costpercapita_be96||0), 0.001); end
  def test_costpercapita_bf96; assert_in_delta(0, (worksheet.costpercapita_bf96||0), 0.001); end
  def test_costpercapita_bg96; assert_in_delta(0, (worksheet.costpercapita_bg96||0), 0.001); end
  def test_costpercapita_bi96; assert_in_delta(0, (worksheet.costpercapita_bi96||0), 0.001); end
  def test_costpercapita_bj96; assert_in_delta(0, (worksheet.costpercapita_bj96||0), 0.001); end
  def test_costpercapita_bk96; assert_in_delta(0, (worksheet.costpercapita_bk96||0), 0.001); end
  def test_costpercapita_bl96; assert_in_delta(0, (worksheet.costpercapita_bl96||0), 0.001); end
  def test_costpercapita_bm96; assert_in_delta(0, (worksheet.costpercapita_bm96||0), 0.001); end
  def test_costpercapita_bn96; assert_in_delta(0, (worksheet.costpercapita_bn96||0), 0.001); end
  def test_costpercapita_bo96; assert_in_delta(0, (worksheet.costpercapita_bo96||0), 0.001); end
  def test_costpercapita_bp96; assert_in_delta(0, (worksheet.costpercapita_bp96||0), 0.001); end
  def test_costpercapita_bq96; assert_in_delta(0, (worksheet.costpercapita_bq96||0), 0.001); end
  def test_costpercapita_bs96; assert_in_delta(0, (worksheet.costpercapita_bs96||0), 0.001); end
  def test_costpercapita_bt96; assert_in_delta(0, (worksheet.costpercapita_bt96||0), 0.001); end
  def test_costpercapita_bu96; assert_in_delta(0, (worksheet.costpercapita_bu96||0), 0.001); end
  def test_costpercapita_bv96; assert_in_delta(0, (worksheet.costpercapita_bv96||0), 0.001); end
  def test_costpercapita_bw96; assert_in_delta(0, (worksheet.costpercapita_bw96||0), 0.001); end
  def test_costpercapita_bx96; assert_in_delta(0, (worksheet.costpercapita_bx96||0), 0.001); end
  def test_costpercapita_by96; assert_in_delta(0, (worksheet.costpercapita_by96||0), 0.001); end
  def test_costpercapita_bz96; assert_in_delta(0, (worksheet.costpercapita_bz96||0), 0.001); end
  def test_costpercapita_ca96; assert_in_delta(0, (worksheet.costpercapita_ca96||0), 0.001); end
  def test_costpercapita_cc96; assert_in_delta(0, (worksheet.costpercapita_cc96||0), 0.001); end
  def test_costpercapita_cd96; assert_in_delta(0, (worksheet.costpercapita_cd96||0), 0.001); end
  def test_costpercapita_cf96; assert_in_delta(0, (worksheet.costpercapita_cf96||0), 0.001); end
  def test_costpercapita_cg96; assert_in_delta(0, (worksheet.costpercapita_cg96||0), 0.001); end
  def test_costpercapita_ch96; assert_in_delta(0, (worksheet.costpercapita_ch96||0), 0.001); end
  def test_costpercapita_ci96; assert_in_delta(0, (worksheet.costpercapita_ci96||0), 0.001); end
  def test_costpercapita_cj96; assert_in_delta(0, (worksheet.costpercapita_cj96||0), 0.001); end
  def test_costpercapita_ck96; assert_in_delta(0, (worksheet.costpercapita_ck96||0), 0.001); end
  def test_costpercapita_cl96; assert_in_delta(0, (worksheet.costpercapita_cl96||0), 0.001); end
  def test_costpercapita_cm96; assert_in_delta(0, (worksheet.costpercapita_cm96||0), 0.001); end
  def test_costpercapita_cn96; assert_in_delta(0, (worksheet.costpercapita_cn96||0), 0.001); end
  def test_costpercapita_cp96; assert_in_delta(0, (worksheet.costpercapita_cp96||0), 0.001); end
  def test_costpercapita_cq96; assert_in_delta(0, (worksheet.costpercapita_cq96||0), 0.001); end
  def test_costpercapita_cr96; assert_equal("ok", worksheet.costpercapita_cr96); end
  def test_costpercapita_a97; assert_equal("XV.a", worksheet.costpercapita_a97); end
  def test_costpercapita_b97; assert_equal("Petroleum refineries", worksheet.costpercapita_b97); end
  def test_costpercapita_c97; assert_equal("Industry", worksheet.costpercapita_c97); end
  def test_costpercapita_e97; assert_in_epsilon(6.2845195296525445, worksheet.costpercapita_e97, 0.001); end
  def test_costpercapita_f97; assert_in_epsilon(5.724395737726091, worksheet.costpercapita_f97, 0.001); end
  def test_costpercapita_g97; assert_in_epsilon(5.246927453872046, worksheet.costpercapita_g97, 0.001); end
  def test_costpercapita_h97; assert_in_epsilon(4.82266004697929, worksheet.costpercapita_h97, 0.001); end
  def test_costpercapita_i97; assert_in_epsilon(4.491603219260816, worksheet.costpercapita_i97, 0.001); end
  def test_costpercapita_j97; assert_in_epsilon(4.235217701747224, worksheet.costpercapita_j97, 0.001); end
  def test_costpercapita_k97; assert_in_epsilon(4.030862715120994, worksheet.costpercapita_k97, 0.001); end
  def test_costpercapita_l97; assert_in_epsilon(3.8639788668837762, worksheet.costpercapita_l97, 0.001); end
  def test_costpercapita_m97; assert_in_epsilon(3.7262051782528984, worksheet.costpercapita_m97, 0.001); end
  def test_costpercapita_o97; assert_in_epsilon(12.93368705422323, worksheet.costpercapita_o97, 0.001); end
  def test_costpercapita_p97; assert_in_epsilon(11.85199256101011, worksheet.costpercapita_p97, 0.001); end
  def test_costpercapita_q97; assert_in_epsilon(10.873688106284314, worksheet.costpercapita_q97, 0.001); end
  def test_costpercapita_r97; assert_in_epsilon(10.089318595497176, worksheet.costpercapita_r97, 0.001); end
  def test_costpercapita_s97; assert_in_epsilon(9.476732724589183, worksheet.costpercapita_s97, 0.001); end
  def test_costpercapita_t97; assert_in_epsilon(8.998922200422534, worksheet.costpercapita_t97, 0.001); end
  def test_costpercapita_u97; assert_in_epsilon(8.614220010937059, worksheet.costpercapita_u97, 0.001); end
  def test_costpercapita_v97; assert_in_epsilon(8.296184487490324, worksheet.costpercapita_v97, 0.001); end
  def test_costpercapita_w97; assert_in_epsilon(8.030347881570902, worksheet.costpercapita_w97, 0.001); end
  def test_costpercapita_y97; assert_in_delta(0, (worksheet.costpercapita_y97||0), 0.001); end
  def test_costpercapita_z97; assert_in_delta(0, (worksheet.costpercapita_z97||0), 0.001); end
  def test_costpercapita_aa97; assert_in_delta(0, (worksheet.costpercapita_aa97||0), 0.001); end
  def test_costpercapita_ab97; assert_in_delta(0, (worksheet.costpercapita_ab97||0), 0.001); end
  def test_costpercapita_ac97; assert_in_delta(0, (worksheet.costpercapita_ac97||0), 0.001); end
  def test_costpercapita_ad97; assert_in_delta(0, (worksheet.costpercapita_ad97||0), 0.001); end
  def test_costpercapita_ae97; assert_in_delta(0, (worksheet.costpercapita_ae97||0), 0.001); end
  def test_costpercapita_af97; assert_in_delta(0, (worksheet.costpercapita_af97||0), 0.001); end
  def test_costpercapita_ag97; assert_in_delta(0, (worksheet.costpercapita_ag97||0), 0.001); end
  def test_costpercapita_ai97; assert_in_epsilon(19.218206583875773, worksheet.costpercapita_ai97, 0.001); end
  def test_costpercapita_aj97; assert_in_epsilon(17.5763882987362, worksheet.costpercapita_aj97, 0.001); end
  def test_costpercapita_ak97; assert_in_epsilon(16.12061556015636, worksheet.costpercapita_ak97, 0.001); end
  def test_costpercapita_al97; assert_in_epsilon(14.911978642476464, worksheet.costpercapita_al97, 0.001); end
  def test_costpercapita_am97; assert_in_epsilon(13.968335943849999, worksheet.costpercapita_am97, 0.001); end
  def test_costpercapita_an97; assert_in_epsilon(13.234139902169758, worksheet.costpercapita_an97, 0.001); end
  def test_costpercapita_ao97; assert_in_epsilon(12.645082726058053, worksheet.costpercapita_ao97, 0.001); end
  def test_costpercapita_ap97; assert_in_epsilon(12.160163354374099, worksheet.costpercapita_ap97, 0.001); end
  def test_costpercapita_aq97; assert_in_epsilon(11.756553059823801, worksheet.costpercapita_aq97, 0.001); end
  def test_costpercapita_as97; assert_in_epsilon(14.621273785724501, worksheet.costpercapita_as97, 0.001); end
  def test_costpercapita_at97; assert_in_epsilon(314.7528385973844, worksheet.costpercapita_at97, 0.001); end
  def test_costpercapita_av97; assert_in_delta(0.07, worksheet.costpercapita_av97, 0.001); end
  def test_costpercapita_aw97; assert_in_epsilon(15, worksheet.costpercapita_aw97, 0.001); end
  def test_costpercapita_ay97; assert_in_epsilon(2.0700193895530417, worksheet.costpercapita_ay97, 0.001); end
  def test_costpercapita_az97; assert_in_epsilon(3.1425394083183877, worksheet.costpercapita_az97, 0.001); end
  def test_costpercapita_ba97; assert_in_epsilon(2.880422153156445, worksheet.costpercapita_ba97, 0.001); end
  def test_costpercapita_bb97; assert_in_epsilon(2.647510749593148, worksheet.costpercapita_bb97, 0.001); end
  def test_costpercapita_bc97; assert_in_epsilon(2.4657694488228703, worksheet.costpercapita_bc97, 0.001); end
  def test_costpercapita_bd97; assert_in_epsilon(2.3250206904519795, worksheet.costpercapita_bd97, 0.001); end
  def test_costpercapita_be97; assert_in_epsilon(2.2128352951399486, worksheet.costpercapita_be97, 0.001); end
  def test_costpercapita_bf97; assert_in_epsilon(2.1212205477106227, worksheet.costpercapita_bf97, 0.001); end
  def test_costpercapita_bg97; assert_in_epsilon(2.0455864955261207, worksheet.costpercapita_bg97, 0.001); end
  def test_costpercapita_bi97; assert_in_epsilon(2.0700193895530417, worksheet.costpercapita_bi97, 0.001); end
  def test_costpercapita_bj97; assert_in_epsilon(5.144299765149913, worksheet.costpercapita_bj97, 0.001); end
  def test_costpercapita_bk97; assert_in_epsilon(7.856307058649302, worksheet.costpercapita_bk97, 0.001); end
  def test_costpercapita_bl97; assert_in_epsilon(8.38428511590707, worksheet.costpercapita_bl97, 0.001); end
  def test_costpercapita_bm97; assert_in_epsilon(7.755927126247094, worksheet.costpercapita_bm97, 0.001); end
  def test_costpercapita_bn97; assert_in_epsilon(7.247227409765991, worksheet.costpercapita_bn97, 0.001); end
  def test_costpercapita_bo97; assert_in_epsilon(6.844610977009696, worksheet.costpercapita_bo97, 0.001); end
  def test_costpercapita_bp97; assert_in_epsilon(6.519960535178548, worksheet.costpercapita_bp97, 0.001); end
  def test_costpercapita_bq97; assert_in_epsilon(6.255443618950079, worksheet.costpercapita_bq97, 0.001); end
  def test_costpercapita_bs97; assert_in_epsilon(15.00370644377627, worksheet.costpercapita_bs97, 0.001); end
  def test_costpercapita_bt97; assert_in_epsilon(16.996292326160027, worksheet.costpercapita_bt97, 0.001); end
  def test_costpercapita_bu97; assert_in_epsilon(18.729995164933616, worksheet.costpercapita_bu97, 0.001); end
  def test_costpercapita_bv97; assert_in_epsilon(18.473603711404248, worksheet.costpercapita_bv97, 0.001); end
  def test_costpercapita_bw97; assert_in_epsilon(17.232659850836278, worksheet.costpercapita_bw97, 0.001); end
  def test_costpercapita_bx97; assert_in_epsilon(16.246149610188525, worksheet.costpercapita_bx97, 0.001); end
  def test_costpercapita_by97; assert_in_epsilon(15.458830987946754, worksheet.costpercapita_by97, 0.001); end
  def test_costpercapita_bz97; assert_in_epsilon(14.816145022668872, worksheet.costpercapita_bz97, 0.001); end
  def test_costpercapita_ca97; assert_in_epsilon(14.285791500520983, worksheet.costpercapita_ca97, 0.001); end
  def test_costpercapita_cc97; assert_in_epsilon(16.36035273538173, worksheet.costpercapita_cc97, 0.001); end
  def test_costpercapita_cd97; assert_in_epsilon(354.9964619504135, worksheet.costpercapita_cd97, 0.001); end
  def test_costpercapita_cf97; assert_in_epsilon(-4.214500140099503, worksheet.costpercapita_cf97, 0.001); end
  def test_costpercapita_cg97; assert_in_delta(-0.5800959725761775, worksheet.costpercapita_cg97, 0.001); end
  def test_costpercapita_ch97; assert_in_epsilon(2.6093796047772555, worksheet.costpercapita_ch97, 0.001); end
  def test_costpercapita_ci97; assert_in_epsilon(3.561625068927781, worksheet.costpercapita_ci97, 0.001); end
  def test_costpercapita_cj97; assert_in_epsilon(3.2643239069862786, worksheet.costpercapita_cj97, 0.001); end
  def test_costpercapita_ck97; assert_in_epsilon(3.012009708018766, worksheet.costpercapita_ck97, 0.001); end
  def test_costpercapita_cl97; assert_in_epsilon(2.8137482618887013, worksheet.costpercapita_cl97, 0.001); end
  def test_costpercapita_cm97; assert_in_epsilon(2.655981668294772, worksheet.costpercapita_cm97, 0.001); end
  def test_costpercapita_cn97; assert_in_epsilon(2.5292384406971804, worksheet.costpercapita_cn97, 0.001); end
  def test_costpercapita_cp97; assert_in_epsilon(1.7390789496572283, worksheet.costpercapita_cp97, 0.001); end
  def test_costpercapita_cq97; assert_in_epsilon(40.2436233530291, worksheet.costpercapita_cq97, 0.001); end
  def test_costpercapita_cr97; assert_equal("ok", worksheet.costpercapita_cr97); end
  def test_costpercapita_a98; assert_equal("XV.b.Coal", worksheet.costpercapita_a98); end
  def test_costpercapita_b98; assert_equal("Indigenous fossil-fuel production - Coal", worksheet.costpercapita_b98); end
  def test_costpercapita_c98; assert_equal("Fossil Fuels", worksheet.costpercapita_c98); end
  def test_costpercapita_e98; assert_in_delta(0, (worksheet.costpercapita_e98||0), 0.001); end
  def test_costpercapita_f98; assert_in_delta(0, (worksheet.costpercapita_f98||0), 0.001); end
  def test_costpercapita_g98; assert_in_delta(0, (worksheet.costpercapita_g98||0), 0.001); end
  def test_costpercapita_h98; assert_in_delta(0, (worksheet.costpercapita_h98||0), 0.001); end
  def test_costpercapita_i98; assert_in_delta(0, (worksheet.costpercapita_i98||0), 0.001); end
  def test_costpercapita_j98; assert_in_delta(0, (worksheet.costpercapita_j98||0), 0.001); end
  def test_costpercapita_k98; assert_in_delta(0, (worksheet.costpercapita_k98||0), 0.001); end
  def test_costpercapita_l98; assert_in_delta(0, (worksheet.costpercapita_l98||0), 0.001); end
  def test_costpercapita_m98; assert_in_delta(0, (worksheet.costpercapita_m98||0), 0.001); end
  def test_costpercapita_o98; assert_in_delta(0, (worksheet.costpercapita_o98||0), 0.001); end
  def test_costpercapita_p98; assert_in_delta(0, (worksheet.costpercapita_p98||0), 0.001); end
  def test_costpercapita_q98; assert_in_delta(0, (worksheet.costpercapita_q98||0), 0.001); end
  def test_costpercapita_r98; assert_in_delta(0, (worksheet.costpercapita_r98||0), 0.001); end
  def test_costpercapita_s98; assert_in_delta(0, (worksheet.costpercapita_s98||0), 0.001); end
  def test_costpercapita_t98; assert_in_delta(0, (worksheet.costpercapita_t98||0), 0.001); end
  def test_costpercapita_u98; assert_in_delta(0, (worksheet.costpercapita_u98||0), 0.001); end
  def test_costpercapita_v98; assert_in_delta(0, (worksheet.costpercapita_v98||0), 0.001); end
  def test_costpercapita_w98; assert_in_delta(0, (worksheet.costpercapita_w98||0), 0.001); end
  def test_costpercapita_y98; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_y98, 0.001); end
  def test_costpercapita_z98; assert_in_epsilon(16.748201619163304, worksheet.costpercapita_z98, 0.001); end
  def test_costpercapita_aa98; assert_in_epsilon(16.907861102269763, worksheet.costpercapita_aa98, 0.001); end
  def test_costpercapita_ab98; assert_in_epsilon(17.070378554491267, worksheet.costpercapita_ab98, 0.001); end
  def test_costpercapita_ac98; assert_in_epsilon(8.635656982915402, worksheet.costpercapita_ac98, 0.001); end
  def test_costpercapita_ad98; assert_in_epsilon(8.432238073854396, worksheet.costpercapita_ad98, 0.001); end
  def test_costpercapita_ae98; assert_in_epsilon(8.252408907659154, worksheet.costpercapita_ae98, 0.001); end
  def test_costpercapita_af98; assert_in_epsilon(8.087790470682751, worksheet.costpercapita_af98, 0.001); end
  def test_costpercapita_ag98; assert_in_epsilon(7.936858266343649, worksheet.costpercapita_ag98, 0.001); end
  def test_costpercapita_ai98; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_ai98, 0.001); end
  def test_costpercapita_aj98; assert_in_epsilon(16.748201619163304, worksheet.costpercapita_aj98, 0.001); end
  def test_costpercapita_ak98; assert_in_epsilon(16.907861102269763, worksheet.costpercapita_ak98, 0.001); end
  def test_costpercapita_al98; assert_in_epsilon(17.070378554491267, worksheet.costpercapita_al98, 0.001); end
  def test_costpercapita_am98; assert_in_epsilon(8.635656982915402, worksheet.costpercapita_am98, 0.001); end
  def test_costpercapita_an98; assert_in_epsilon(8.432238073854396, worksheet.costpercapita_an98, 0.001); end
  def test_costpercapita_ao98; assert_in_epsilon(8.252408907659154, worksheet.costpercapita_ao98, 0.001); end
  def test_costpercapita_ap98; assert_in_epsilon(8.087790470682751, worksheet.costpercapita_ap98, 0.001); end
  def test_costpercapita_aq98; assert_in_epsilon(7.936858266343649, worksheet.costpercapita_aq98, 0.001); end
  def test_costpercapita_as98; assert_in_epsilon(12.07042400698528, worksheet.costpercapita_as98, 0.001); end
  def test_costpercapita_at98; assert_in_epsilon(275.13698776109413, worksheet.costpercapita_at98, 0.001); end
  def test_costpercapita_av98; assert_in_delta(0, (worksheet.costpercapita_av98||0), 0.001); end
  def test_costpercapita_aw98; assert_in_epsilon(5, worksheet.costpercapita_aw98, 0.001); end
  def test_costpercapita_ay98; assert_in_delta(0, (worksheet.costpercapita_ay98||0), 0.001); end
  def test_costpercapita_az98; assert_in_delta(0, (worksheet.costpercapita_az98||0), 0.001); end
  def test_costpercapita_ba98; assert_in_delta(0, (worksheet.costpercapita_ba98||0), 0.001); end
  def test_costpercapita_bb98; assert_in_delta(0, (worksheet.costpercapita_bb98||0), 0.001); end
  def test_costpercapita_bc98; assert_in_delta(0, (worksheet.costpercapita_bc98||0), 0.001); end
  def test_costpercapita_bd98; assert_in_delta(0, (worksheet.costpercapita_bd98||0), 0.001); end
  def test_costpercapita_be98; assert_in_delta(0, (worksheet.costpercapita_be98||0), 0.001); end
  def test_costpercapita_bf98; assert_in_delta(0, (worksheet.costpercapita_bf98||0), 0.001); end
  def test_costpercapita_bg98; assert_in_delta(0, (worksheet.costpercapita_bg98||0), 0.001); end
  def test_costpercapita_bi98; assert_in_delta(0, (worksheet.costpercapita_bi98||0), 0.001); end
  def test_costpercapita_bj98; assert_in_delta(0, (worksheet.costpercapita_bj98||0), 0.001); end
  def test_costpercapita_bk98; assert_in_delta(0, (worksheet.costpercapita_bk98||0), 0.001); end
  def test_costpercapita_bl98; assert_in_delta(0, (worksheet.costpercapita_bl98||0), 0.001); end
  def test_costpercapita_bm98; assert_in_delta(0, (worksheet.costpercapita_bm98||0), 0.001); end
  def test_costpercapita_bn98; assert_in_delta(0, (worksheet.costpercapita_bn98||0), 0.001); end
  def test_costpercapita_bo98; assert_in_delta(0, (worksheet.costpercapita_bo98||0), 0.001); end
  def test_costpercapita_bp98; assert_in_delta(0, (worksheet.costpercapita_bp98||0), 0.001); end
  def test_costpercapita_bq98; assert_in_delta(0, (worksheet.costpercapita_bq98||0), 0.001); end
  def test_costpercapita_bs98; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_bs98, 0.001); end
  def test_costpercapita_bt98; assert_in_epsilon(16.748201619163304, worksheet.costpercapita_bt98, 0.001); end
  def test_costpercapita_bu98; assert_in_epsilon(16.907861102269763, worksheet.costpercapita_bu98, 0.001); end
  def test_costpercapita_bv98; assert_in_epsilon(17.070378554491267, worksheet.costpercapita_bv98, 0.001); end
  def test_costpercapita_bw98; assert_in_epsilon(8.635656982915402, worksheet.costpercapita_bw98, 0.001); end
  def test_costpercapita_bx98; assert_in_epsilon(8.432238073854396, worksheet.costpercapita_bx98, 0.001); end
  def test_costpercapita_by98; assert_in_epsilon(8.252408907659154, worksheet.costpercapita_by98, 0.001); end
  def test_costpercapita_bz98; assert_in_epsilon(8.087790470682751, worksheet.costpercapita_bz98, 0.001); end
  def test_costpercapita_ca98; assert_in_epsilon(7.936858266343649, worksheet.costpercapita_ca98, 0.001); end
  def test_costpercapita_cc98; assert_in_epsilon(12.07042400698528, worksheet.costpercapita_cc98, 0.001); end
  def test_costpercapita_cd98; assert_in_epsilon(275.13698776109413, worksheet.costpercapita_cd98, 0.001); end
  def test_costpercapita_cf98; assert_in_delta(0, (worksheet.costpercapita_cf98||0), 0.001); end
  def test_costpercapita_cg98; assert_in_delta(0, (worksheet.costpercapita_cg98||0), 0.001); end
  def test_costpercapita_ch98; assert_in_delta(0, (worksheet.costpercapita_ch98||0), 0.001); end
  def test_costpercapita_ci98; assert_in_delta(0, (worksheet.costpercapita_ci98||0), 0.001); end
  def test_costpercapita_cj98; assert_in_delta(0, (worksheet.costpercapita_cj98||0), 0.001); end
  def test_costpercapita_ck98; assert_in_delta(0, (worksheet.costpercapita_ck98||0), 0.001); end
  def test_costpercapita_cl98; assert_in_delta(0, (worksheet.costpercapita_cl98||0), 0.001); end
  def test_costpercapita_cm98; assert_in_delta(0, (worksheet.costpercapita_cm98||0), 0.001); end
  def test_costpercapita_cn98; assert_in_delta(0, (worksheet.costpercapita_cn98||0), 0.001); end
  def test_costpercapita_cp98; assert_in_delta(0, (worksheet.costpercapita_cp98||0), 0.001); end
  def test_costpercapita_cq98; assert_in_delta(0, (worksheet.costpercapita_cq98||0), 0.001); end
  def test_costpercapita_cr98; assert_equal("ok", worksheet.costpercapita_cr98); end
  def test_costpercapita_a99; assert_equal("XV.b.Oil", worksheet.costpercapita_a99); end
  def test_costpercapita_b99; assert_equal("Indigenous fossil-fuel production - Oil", worksheet.costpercapita_b99); end
  def test_costpercapita_c99; assert_equal("Fossil Fuels", worksheet.costpercapita_c99); end
  def test_costpercapita_e99; assert_in_delta(0, (worksheet.costpercapita_e99||0), 0.001); end
  def test_costpercapita_f99; assert_in_delta(0, (worksheet.costpercapita_f99||0), 0.001); end
  def test_costpercapita_g99; assert_in_delta(0, (worksheet.costpercapita_g99||0), 0.001); end
  def test_costpercapita_h99; assert_in_delta(0, (worksheet.costpercapita_h99||0), 0.001); end
  def test_costpercapita_i99; assert_in_delta(0, (worksheet.costpercapita_i99||0), 0.001); end
  def test_costpercapita_j99; assert_in_delta(0, (worksheet.costpercapita_j99||0), 0.001); end
  def test_costpercapita_k99; assert_in_delta(0, (worksheet.costpercapita_k99||0), 0.001); end
  def test_costpercapita_l99; assert_in_delta(0, (worksheet.costpercapita_l99||0), 0.001); end
  def test_costpercapita_m99; assert_in_delta(0, (worksheet.costpercapita_m99||0), 0.001); end
  def test_costpercapita_o99; assert_in_delta(0, (worksheet.costpercapita_o99||0), 0.001); end
  def test_costpercapita_p99; assert_in_delta(0, (worksheet.costpercapita_p99||0), 0.001); end
  def test_costpercapita_q99; assert_in_delta(0, (worksheet.costpercapita_q99||0), 0.001); end
  def test_costpercapita_r99; assert_in_delta(0, (worksheet.costpercapita_r99||0), 0.001); end
  def test_costpercapita_s99; assert_in_delta(0, (worksheet.costpercapita_s99||0), 0.001); end
  def test_costpercapita_t99; assert_in_delta(0, (worksheet.costpercapita_t99||0), 0.001); end
  def test_costpercapita_u99; assert_in_delta(0, (worksheet.costpercapita_u99||0), 0.001); end
  def test_costpercapita_v99; assert_in_delta(0, (worksheet.costpercapita_v99||0), 0.001); end
  def test_costpercapita_w99; assert_in_delta(0, (worksheet.costpercapita_w99||0), 0.001); end
  def test_costpercapita_y99; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_y99, 0.001); end
  def test_costpercapita_z99; assert_in_epsilon(364.4631782859332, worksheet.costpercapita_z99, 0.001); end
  def test_costpercapita_aa99; assert_in_epsilon(308.39508235119274, worksheet.costpercapita_aa99, 0.001); end
  def test_costpercapita_ab99; assert_in_epsilon(257.4196880138303, worksheet.costpercapita_ab99, 0.001); end
  def test_costpercapita_ac99; assert_in_epsilon(213.44748836071335, worksheet.costpercapita_ac99, 0.001); end
  def test_costpercapita_ad99; assert_in_epsilon(161.2711012960243, worksheet.costpercapita_ad99, 0.001); end
  def test_costpercapita_ae99; assert_in_epsilon(122.12721611645668, worksheet.costpercapita_ae99, 0.001); end
  def test_costpercapita_af99; assert_in_epsilon(92.61463858318164, worksheet.costpercapita_af99, 0.001); end
  def test_costpercapita_ag99; assert_in_epsilon(70.32607769146757, worksheet.costpercapita_ag99, 0.001); end
  def test_costpercapita_ai99; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_ai99, 0.001); end
  def test_costpercapita_aj99; assert_in_epsilon(364.4631782859332, worksheet.costpercapita_aj99, 0.001); end
  def test_costpercapita_ak99; assert_in_epsilon(308.39508235119274, worksheet.costpercapita_ak99, 0.001); end
  def test_costpercapita_al99; assert_in_epsilon(257.4196880138303, worksheet.costpercapita_al99, 0.001); end
  def test_costpercapita_am99; assert_in_epsilon(213.44748836071335, worksheet.costpercapita_am99, 0.001); end
  def test_costpercapita_an99; assert_in_epsilon(161.2711012960243, worksheet.costpercapita_an99, 0.001); end
  def test_costpercapita_ao99; assert_in_epsilon(122.12721611645668, worksheet.costpercapita_ao99, 0.001); end
  def test_costpercapita_ap99; assert_in_epsilon(92.61463858318164, worksheet.costpercapita_ap99, 0.001); end
  def test_costpercapita_aq99; assert_in_epsilon(70.32607769146757, worksheet.costpercapita_aq99, 0.001); end
  def test_costpercapita_as99; assert_in_epsilon(221.99917212449816, worksheet.costpercapita_as99, 0.001); end
  def test_costpercapita_at99; assert_in_epsilon(5134.316611644483, worksheet.costpercapita_at99, 0.001); end
  def test_costpercapita_av99; assert_in_delta(0, (worksheet.costpercapita_av99||0), 0.001); end
  def test_costpercapita_aw99; assert_in_epsilon(5, worksheet.costpercapita_aw99, 0.001); end
  def test_costpercapita_ay99; assert_in_delta(0, (worksheet.costpercapita_ay99||0), 0.001); end
  def test_costpercapita_az99; assert_in_delta(0, (worksheet.costpercapita_az99||0), 0.001); end
  def test_costpercapita_ba99; assert_in_delta(0, (worksheet.costpercapita_ba99||0), 0.001); end
  def test_costpercapita_bb99; assert_in_delta(0, (worksheet.costpercapita_bb99||0), 0.001); end
  def test_costpercapita_bc99; assert_in_delta(0, (worksheet.costpercapita_bc99||0), 0.001); end
  def test_costpercapita_bd99; assert_in_delta(0, (worksheet.costpercapita_bd99||0), 0.001); end
  def test_costpercapita_be99; assert_in_delta(0, (worksheet.costpercapita_be99||0), 0.001); end
  def test_costpercapita_bf99; assert_in_delta(0, (worksheet.costpercapita_bf99||0), 0.001); end
  def test_costpercapita_bg99; assert_in_delta(0, (worksheet.costpercapita_bg99||0), 0.001); end
  def test_costpercapita_bi99; assert_in_delta(0, (worksheet.costpercapita_bi99||0), 0.001); end
  def test_costpercapita_bj99; assert_in_delta(0, (worksheet.costpercapita_bj99||0), 0.001); end
  def test_costpercapita_bk99; assert_in_delta(0, (worksheet.costpercapita_bk99||0), 0.001); end
  def test_costpercapita_bl99; assert_in_delta(0, (worksheet.costpercapita_bl99||0), 0.001); end
  def test_costpercapita_bm99; assert_in_delta(0, (worksheet.costpercapita_bm99||0), 0.001); end
  def test_costpercapita_bn99; assert_in_delta(0, (worksheet.costpercapita_bn99||0), 0.001); end
  def test_costpercapita_bo99; assert_in_delta(0, (worksheet.costpercapita_bo99||0), 0.001); end
  def test_costpercapita_bp99; assert_in_delta(0, (worksheet.costpercapita_bp99||0), 0.001); end
  def test_costpercapita_bq99; assert_in_delta(0, (worksheet.costpercapita_bq99||0), 0.001); end
  def test_costpercapita_bs99; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_bs99, 0.001); end
  def test_costpercapita_bt99; assert_in_epsilon(364.4631782859332, worksheet.costpercapita_bt99, 0.001); end
  def test_costpercapita_bu99; assert_in_epsilon(308.39508235119274, worksheet.costpercapita_bu99, 0.001); end
  def test_costpercapita_bv99; assert_in_epsilon(257.4196880138303, worksheet.costpercapita_bv99, 0.001); end
  def test_costpercapita_bw99; assert_in_epsilon(213.44748836071335, worksheet.costpercapita_bw99, 0.001); end
  def test_costpercapita_bx99; assert_in_epsilon(161.2711012960243, worksheet.costpercapita_bx99, 0.001); end
  def test_costpercapita_by99; assert_in_epsilon(122.12721611645668, worksheet.costpercapita_by99, 0.001); end
  def test_costpercapita_bz99; assert_in_epsilon(92.61463858318164, worksheet.costpercapita_bz99, 0.001); end
  def test_costpercapita_ca99; assert_in_epsilon(70.32607769146757, worksheet.costpercapita_ca99, 0.001); end
  def test_costpercapita_cc99; assert_in_epsilon(221.99917212449816, worksheet.costpercapita_cc99, 0.001); end
  def test_costpercapita_cd99; assert_in_epsilon(5134.316611644483, worksheet.costpercapita_cd99, 0.001); end
  def test_costpercapita_cf99; assert_in_delta(0, (worksheet.costpercapita_cf99||0), 0.001); end
  def test_costpercapita_cg99; assert_in_delta(0, (worksheet.costpercapita_cg99||0), 0.001); end
  def test_costpercapita_ch99; assert_in_delta(0, (worksheet.costpercapita_ch99||0), 0.001); end
  def test_costpercapita_ci99; assert_in_delta(0, (worksheet.costpercapita_ci99||0), 0.001); end
  def test_costpercapita_cj99; assert_in_delta(0, (worksheet.costpercapita_cj99||0), 0.001); end
  def test_costpercapita_ck99; assert_in_delta(0, (worksheet.costpercapita_ck99||0), 0.001); end
  def test_costpercapita_cl99; assert_in_delta(0, (worksheet.costpercapita_cl99||0), 0.001); end
  def test_costpercapita_cm99; assert_in_delta(0, (worksheet.costpercapita_cm99||0), 0.001); end
  def test_costpercapita_cn99; assert_in_delta(0, (worksheet.costpercapita_cn99||0), 0.001); end
  def test_costpercapita_cp99; assert_in_delta(0, (worksheet.costpercapita_cp99||0), 0.001); end
  def test_costpercapita_cq99; assert_in_delta(0, (worksheet.costpercapita_cq99||0), 0.001); end
  def test_costpercapita_cr99; assert_equal("ok", worksheet.costpercapita_cr99); end
  def test_costpercapita_a100; assert_equal("XV.b.Gas", worksheet.costpercapita_a100); end
  def test_costpercapita_b100; assert_equal("Indigenous fossil-fuel production - Gas", worksheet.costpercapita_b100); end
  def test_costpercapita_c100; assert_equal("Fossil Fuels", worksheet.costpercapita_c100); end
  def test_costpercapita_e100; assert_in_delta(0, (worksheet.costpercapita_e100||0), 0.001); end
  def test_costpercapita_f100; assert_in_delta(0, (worksheet.costpercapita_f100||0), 0.001); end
  def test_costpercapita_g100; assert_in_delta(0, (worksheet.costpercapita_g100||0), 0.001); end
  def test_costpercapita_h100; assert_in_delta(0, (worksheet.costpercapita_h100||0), 0.001); end
  def test_costpercapita_i100; assert_in_delta(0, (worksheet.costpercapita_i100||0), 0.001); end
  def test_costpercapita_j100; assert_in_delta(0, (worksheet.costpercapita_j100||0), 0.001); end
  def test_costpercapita_k100; assert_in_delta(0, (worksheet.costpercapita_k100||0), 0.001); end
  def test_costpercapita_l100; assert_in_delta(0, (worksheet.costpercapita_l100||0), 0.001); end
  def test_costpercapita_m100; assert_in_delta(0, (worksheet.costpercapita_m100||0), 0.001); end
  def test_costpercapita_o100; assert_in_delta(0, (worksheet.costpercapita_o100||0), 0.001); end
  def test_costpercapita_p100; assert_in_delta(0, (worksheet.costpercapita_p100||0), 0.001); end
  def test_costpercapita_q100; assert_in_delta(0, (worksheet.costpercapita_q100||0), 0.001); end
  def test_costpercapita_r100; assert_in_delta(0, (worksheet.costpercapita_r100||0), 0.001); end
  def test_costpercapita_s100; assert_in_delta(0, (worksheet.costpercapita_s100||0), 0.001); end
  def test_costpercapita_t100; assert_in_delta(0, (worksheet.costpercapita_t100||0), 0.001); end
  def test_costpercapita_u100; assert_in_delta(0, (worksheet.costpercapita_u100||0), 0.001); end
  def test_costpercapita_v100; assert_in_delta(0, (worksheet.costpercapita_v100||0), 0.001); end
  def test_costpercapita_w100; assert_in_delta(0, (worksheet.costpercapita_w100||0), 0.001); end
  def test_costpercapita_y100; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_y100, 0.001); end
  def test_costpercapita_z100; assert_in_epsilon(128.92972635029443, worksheet.costpercapita_z100, 0.001); end
  def test_costpercapita_aa100; assert_in_epsilon(108.75091499882414, worksheet.costpercapita_aa100, 0.001); end
  def test_costpercapita_ab100; assert_in_epsilon(90.8426851390499, worksheet.costpercapita_ab100, 0.001); end
  def test_costpercapita_ac100; assert_in_epsilon(75.37064321889488, worksheet.costpercapita_ac100, 0.001); end
  def test_costpercapita_ad100; assert_in_epsilon(56.94659014567325, worksheet.costpercapita_ad100, 0.001); end
  def test_costpercapita_ae100; assert_in_epsilon(43.124456061411955, worksheet.costpercapita_ae100, 0.001); end
  def test_costpercapita_af100; assert_in_epsilon(32.70324207190193, worksheet.costpercapita_af100, 0.001); end
  def test_costpercapita_ag100; assert_in_epsilon(24.83290738802381, worksheet.costpercapita_ag100, 0.001); end
  def test_costpercapita_ai100; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_ai100, 0.001); end
  def test_costpercapita_aj100; assert_in_epsilon(128.92972635029443, worksheet.costpercapita_aj100, 0.001); end
  def test_costpercapita_ak100; assert_in_epsilon(108.75091499882414, worksheet.costpercapita_ak100, 0.001); end
  def test_costpercapita_al100; assert_in_epsilon(90.8426851390499, worksheet.costpercapita_al100, 0.001); end
  def test_costpercapita_am100; assert_in_epsilon(75.37064321889488, worksheet.costpercapita_am100, 0.001); end
  def test_costpercapita_an100; assert_in_epsilon(56.94659014567325, worksheet.costpercapita_an100, 0.001); end
  def test_costpercapita_ao100; assert_in_epsilon(43.124456061411955, worksheet.costpercapita_ao100, 0.001); end
  def test_costpercapita_ap100; assert_in_epsilon(32.70324207190193, worksheet.costpercapita_ap100, 0.001); end
  def test_costpercapita_aq100; assert_in_epsilon(24.83290738802381, worksheet.costpercapita_aq100, 0.001); end
  def test_costpercapita_as100; assert_in_epsilon(79.19758803353265, worksheet.costpercapita_as100, 0.001); end
  def test_costpercapita_at100; assert_in_epsilon(1820.5164262837036, worksheet.costpercapita_at100, 0.001); end
  def test_costpercapita_av100; assert_in_delta(0, (worksheet.costpercapita_av100||0), 0.001); end
  def test_costpercapita_aw100; assert_in_epsilon(5, worksheet.costpercapita_aw100, 0.001); end
  def test_costpercapita_ay100; assert_in_delta(0, (worksheet.costpercapita_ay100||0), 0.001); end
  def test_costpercapita_az100; assert_in_delta(0, (worksheet.costpercapita_az100||0), 0.001); end
  def test_costpercapita_ba100; assert_in_delta(0, (worksheet.costpercapita_ba100||0), 0.001); end
  def test_costpercapita_bb100; assert_in_delta(0, (worksheet.costpercapita_bb100||0), 0.001); end
  def test_costpercapita_bc100; assert_in_delta(0, (worksheet.costpercapita_bc100||0), 0.001); end
  def test_costpercapita_bd100; assert_in_delta(0, (worksheet.costpercapita_bd100||0), 0.001); end
  def test_costpercapita_be100; assert_in_delta(0, (worksheet.costpercapita_be100||0), 0.001); end
  def test_costpercapita_bf100; assert_in_delta(0, (worksheet.costpercapita_bf100||0), 0.001); end
  def test_costpercapita_bg100; assert_in_delta(0, (worksheet.costpercapita_bg100||0), 0.001); end
  def test_costpercapita_bi100; assert_in_delta(0, (worksheet.costpercapita_bi100||0), 0.001); end
  def test_costpercapita_bj100; assert_in_delta(0, (worksheet.costpercapita_bj100||0), 0.001); end
  def test_costpercapita_bk100; assert_in_delta(0, (worksheet.costpercapita_bk100||0), 0.001); end
  def test_costpercapita_bl100; assert_in_delta(0, (worksheet.costpercapita_bl100||0), 0.001); end
  def test_costpercapita_bm100; assert_in_delta(0, (worksheet.costpercapita_bm100||0), 0.001); end
  def test_costpercapita_bn100; assert_in_delta(0, (worksheet.costpercapita_bn100||0), 0.001); end
  def test_costpercapita_bo100; assert_in_delta(0, (worksheet.costpercapita_bo100||0), 0.001); end
  def test_costpercapita_bp100; assert_in_delta(0, (worksheet.costpercapita_bp100||0), 0.001); end
  def test_costpercapita_bq100; assert_in_delta(0, (worksheet.costpercapita_bq100||0), 0.001); end
  def test_costpercapita_bs100; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_bs100, 0.001); end
  def test_costpercapita_bt100; assert_in_epsilon(128.92972635029443, worksheet.costpercapita_bt100, 0.001); end
  def test_costpercapita_bu100; assert_in_epsilon(108.75091499882414, worksheet.costpercapita_bu100, 0.001); end
  def test_costpercapita_bv100; assert_in_epsilon(90.8426851390499, worksheet.costpercapita_bv100, 0.001); end
  def test_costpercapita_bw100; assert_in_epsilon(75.37064321889488, worksheet.costpercapita_bw100, 0.001); end
  def test_costpercapita_bx100; assert_in_epsilon(56.94659014567325, worksheet.costpercapita_bx100, 0.001); end
  def test_costpercapita_by100; assert_in_epsilon(43.124456061411955, worksheet.costpercapita_by100, 0.001); end
  def test_costpercapita_bz100; assert_in_epsilon(32.70324207190193, worksheet.costpercapita_bz100, 0.001); end
  def test_costpercapita_ca100; assert_in_epsilon(24.83290738802381, worksheet.costpercapita_ca100, 0.001); end
  def test_costpercapita_cc100; assert_in_epsilon(79.19758803353265, worksheet.costpercapita_cc100, 0.001); end
  def test_costpercapita_cd100; assert_in_epsilon(1820.5164262837036, worksheet.costpercapita_cd100, 0.001); end
  def test_costpercapita_cf100; assert_in_delta(0, (worksheet.costpercapita_cf100||0), 0.001); end
  def test_costpercapita_cg100; assert_in_delta(0, (worksheet.costpercapita_cg100||0), 0.001); end
  def test_costpercapita_ch100; assert_in_delta(0, (worksheet.costpercapita_ch100||0), 0.001); end
  def test_costpercapita_ci100; assert_in_delta(0, (worksheet.costpercapita_ci100||0), 0.001); end
  def test_costpercapita_cj100; assert_in_delta(0, (worksheet.costpercapita_cj100||0), 0.001); end
  def test_costpercapita_ck100; assert_in_delta(0, (worksheet.costpercapita_ck100||0), 0.001); end
  def test_costpercapita_cl100; assert_in_delta(0, (worksheet.costpercapita_cl100||0), 0.001); end
  def test_costpercapita_cm100; assert_in_delta(0, (worksheet.costpercapita_cm100||0), 0.001); end
  def test_costpercapita_cn100; assert_in_delta(0, (worksheet.costpercapita_cn100||0), 0.001); end
  def test_costpercapita_cp100; assert_in_delta(0, (worksheet.costpercapita_cp100||0), 0.001); end
  def test_costpercapita_cq100; assert_in_delta(0, (worksheet.costpercapita_cq100||0), 0.001); end
  def test_costpercapita_cr100; assert_equal("ok", worksheet.costpercapita_cr100); end
  def test_costpercapita_a101; assert_equal("XVI.a", worksheet.costpercapita_a101); end
  def test_costpercapita_b101; assert_equal("Fossil fuel transfers", worksheet.costpercapita_b101); end
  def test_costpercapita_c101; assert_equal("Fossil Fuels", worksheet.costpercapita_c101); end
  def test_costpercapita_e101; assert_in_epsilon(24.33699289017264, worksheet.costpercapita_e101, 0.001); end
  def test_costpercapita_f101; assert_in_epsilon(16.84136020590303, worksheet.costpercapita_f101, 0.001); end
  def test_costpercapita_g101; assert_in_epsilon(21.820833430588458, worksheet.costpercapita_g101, 0.001); end
  def test_costpercapita_h101; assert_in_epsilon(29.21336370367079, worksheet.costpercapita_h101, 0.001); end
  def test_costpercapita_i101; assert_in_epsilon(32.949338682919965, worksheet.costpercapita_i101, 0.001); end
  def test_costpercapita_j101; assert_in_epsilon(34.25900257987702, worksheet.costpercapita_j101, 0.001); end
  def test_costpercapita_k101; assert_in_epsilon(36.12799067837116, worksheet.costpercapita_k101, 0.001); end
  def test_costpercapita_l101; assert_in_epsilon(39.98345555647253, worksheet.costpercapita_l101, 0.001); end
  def test_costpercapita_m101; assert_in_epsilon(41.76795228791822, worksheet.costpercapita_m101, 0.001); end
  def test_costpercapita_o101; assert_in_delta(0.06306043679317243, worksheet.costpercapita_o101, 0.001); end
  def test_costpercapita_p101; assert_in_delta(0.06577587801153967, worksheet.costpercapita_p101, 0.001); end
  def test_costpercapita_q101; assert_in_delta(0.07084044488428051, worksheet.costpercapita_q101, 0.001); end
  def test_costpercapita_r101; assert_in_delta(0.0792884399322761, worksheet.costpercapita_r101, 0.001); end
  def test_costpercapita_s101; assert_in_delta(0.08744902988010893, worksheet.costpercapita_s101, 0.001); end
  def test_costpercapita_t101; assert_in_delta(0.09369727904314976, worksheet.costpercapita_t101, 0.001); end
  def test_costpercapita_u101; assert_in_delta(0.09873838461096329, worksheet.costpercapita_u101, 0.001); end
  def test_costpercapita_v101; assert_in_delta(0.10392784276343621, worksheet.costpercapita_v101, 0.001); end
  def test_costpercapita_w101; assert_in_delta(0.1079968018187501, worksheet.costpercapita_w101, 0.001); end
  def test_costpercapita_y101; assert_in_delta(0, (worksheet.costpercapita_y101||0), 0.001); end
  def test_costpercapita_z101; assert_in_delta(0, (worksheet.costpercapita_z101||0), 0.001); end
  def test_costpercapita_aa101; assert_in_delta(0, (worksheet.costpercapita_aa101||0), 0.001); end
  def test_costpercapita_ab101; assert_in_delta(0, (worksheet.costpercapita_ab101||0), 0.001); end
  def test_costpercapita_ac101; assert_in_delta(0, (worksheet.costpercapita_ac101||0), 0.001); end
  def test_costpercapita_ad101; assert_in_delta(0, (worksheet.costpercapita_ad101||0), 0.001); end
  def test_costpercapita_ae101; assert_in_delta(0, (worksheet.costpercapita_ae101||0), 0.001); end
  def test_costpercapita_af101; assert_in_delta(0, (worksheet.costpercapita_af101||0), 0.001); end
  def test_costpercapita_ag101; assert_in_delta(0, (worksheet.costpercapita_ag101||0), 0.001); end
  def test_costpercapita_ai101; assert_in_epsilon(24.40005332696581, worksheet.costpercapita_ai101, 0.001); end
  def test_costpercapita_aj101; assert_in_epsilon(16.907136083914565, worksheet.costpercapita_aj101, 0.001); end
  def test_costpercapita_ak101; assert_in_epsilon(21.891673875472737, worksheet.costpercapita_ak101, 0.001); end
  def test_costpercapita_al101; assert_in_epsilon(29.292652143603068, worksheet.costpercapita_al101, 0.001); end
  def test_costpercapita_am101; assert_in_epsilon(33.03678771280007, worksheet.costpercapita_am101, 0.001); end
  def test_costpercapita_an101; assert_in_epsilon(34.35269985892017, worksheet.costpercapita_an101, 0.001); end
  def test_costpercapita_ao101; assert_in_epsilon(36.22672906298212, worksheet.costpercapita_ao101, 0.001); end
  def test_costpercapita_ap101; assert_in_epsilon(40.08738339923597, worksheet.costpercapita_ap101, 0.001); end
  def test_costpercapita_aq101; assert_in_epsilon(41.87594908973697, worksheet.costpercapita_aq101, 0.001); end
  def test_costpercapita_as101; assert_in_epsilon(30.896784950403497, worksheet.costpercapita_as101, 0.001); end
  def test_costpercapita_at101; assert_in_epsilon(597.9350862348297, worksheet.costpercapita_at101, 0.001); end
  def test_costpercapita_av101; assert_in_delta(0.07, worksheet.costpercapita_av101, 0.001); end
  def test_costpercapita_aw101; assert_in_epsilon(15, worksheet.costpercapita_aw101, 0.001); end
  def test_costpercapita_ay101; assert_in_epsilon(8.016213002182706, worksheet.costpercapita_ay101, 0.001); end
  def test_costpercapita_az101; assert_in_epsilon(9.245454116307945, worksheet.costpercapita_az101, 0.001); end
  def test_costpercapita_ba101; assert_in_epsilon(11.979051085873182, worksheet.costpercapita_ba101, 0.001); end
  def test_costpercapita_bb101; assert_in_epsilon(16.037351520492702, worksheet.costpercapita_bb101, 0.001); end
  def test_costpercapita_bc101; assert_in_epsilon(18.08830137418777, worksheet.costpercapita_bc101, 0.001); end
  def test_costpercapita_bd101; assert_in_epsilon(18.807271654442054, worksheet.costpercapita_bd101, 0.001); end
  def test_costpercapita_be101; assert_in_epsilon(19.83329588866612, worksheet.costpercapita_be101, 0.001); end
  def test_costpercapita_bf101; assert_in_epsilon(21.949842485361376, worksheet.costpercapita_bf101, 0.001); end
  def test_costpercapita_bg101; assert_in_epsilon(22.92948322990764, worksheet.costpercapita_bg101, 0.001); end
  def test_costpercapita_bi101; assert_in_epsilon(8.016213002182706, worksheet.costpercapita_bi101, 0.001); end
  def test_costpercapita_bj101; assert_in_epsilon(16.997331939612554, worksheet.costpercapita_bj101, 0.001); end
  def test_costpercapita_bk101; assert_in_epsilon(28.419921815245424, worksheet.costpercapita_bk101, 0.001); end
  def test_costpercapita_bl101; assert_in_epsilon(36.31136521958869, worksheet.costpercapita_bl101, 0.001); end
  def test_costpercapita_bm101; assert_in_epsilon(44.97851192748783, worksheet.costpercapita_bm101, 0.001); end
  def test_costpercapita_bn101; assert_in_epsilon(51.701248912060045, worksheet.costpercapita_bn101, 0.001); end
  def test_costpercapita_bo101; assert_in_epsilon(55.52502395112886, worksheet.costpercapita_bo101, 0.001); end
  def test_costpercapita_bp101; assert_in_epsilon(59.426520667366184, worksheet.costpercapita_bp101, 0.001); end
  def test_costpercapita_bq101; assert_in_epsilon(63.544625832759515, worksheet.costpercapita_bq101, 0.001); end
  def test_costpercapita_bs101; assert_in_epsilon(8.079273438975878, worksheet.costpercapita_bs101, 0.001); end
  def test_costpercapita_bt101; assert_in_epsilon(17.063107817624093, worksheet.costpercapita_bt101, 0.001); end
  def test_costpercapita_bu101; assert_in_epsilon(28.490762260129706, worksheet.costpercapita_bu101, 0.001); end
  def test_costpercapita_bv101; assert_in_epsilon(36.390653659520964, worksheet.costpercapita_bv101, 0.001); end
  def test_costpercapita_bw101; assert_in_epsilon(45.065960957367935, worksheet.costpercapita_bw101, 0.001); end
  def test_costpercapita_bx101; assert_in_epsilon(51.79494619110319, worksheet.costpercapita_bx101, 0.001); end
  def test_costpercapita_by101; assert_in_epsilon(55.623762335739826, worksheet.costpercapita_by101, 0.001); end
  def test_costpercapita_bz101; assert_in_epsilon(59.530448510129624, worksheet.costpercapita_bz101, 0.001); end
  def test_costpercapita_ca101; assert_in_epsilon(63.65262263457827, worksheet.costpercapita_ca101, 0.001); end
  def test_costpercapita_cc101; assert_in_epsilon(40.63239308946328, worksheet.costpercapita_cc101, 0.001); end
  def test_costpercapita_cd101; assert_in_epsilon(787.2723791575551, worksheet.costpercapita_cd101, 0.001); end
  def test_costpercapita_cf101; assert_in_epsilon(-16.320779887989932, worksheet.costpercapita_cf101, 0.001); end
  def test_costpercapita_cg101; assert_in_delta(0.15597173370952752, worksheet.costpercapita_cg101, 0.001); end
  def test_costpercapita_ch101; assert_in_epsilon(6.599088384656968, worksheet.costpercapita_ch101, 0.001); end
  def test_costpercapita_ci101; assert_in_epsilon(7.098001515917896, worksheet.costpercapita_ci101, 0.001); end
  def test_costpercapita_cj101; assert_in_epsilon(12.029173244567865, worksheet.costpercapita_cj101, 0.001); end
  def test_costpercapita_ck101; assert_in_epsilon(17.442246332183025, worksheet.costpercapita_ck101, 0.001); end
  def test_costpercapita_cl101; assert_in_epsilon(19.397033272757692, worksheet.costpercapita_cl101, 0.001); end
  def test_costpercapita_cm101; assert_in_epsilon(19.443065110893652, worksheet.costpercapita_cm101, 0.001); end
  def test_costpercapita_cn101; assert_in_epsilon(21.776673544841294, worksheet.costpercapita_cn101, 0.001); end
  def test_costpercapita_cp101; assert_in_epsilon(9.735608139059776, worksheet.costpercapita_cp101, 0.001); end
  def test_costpercapita_cq101; assert_in_epsilon(189.3372929227252, worksheet.costpercapita_cq101, 0.001); end
  def test_costpercapita_cr101; assert_equal("ok", worksheet.costpercapita_cr101); end
  def test_costpercapita_a102; assert_equal("XVI.b.Coal", worksheet.costpercapita_a102); end
  def test_costpercapita_b102; assert_equal("Balancing imports - Coal", worksheet.costpercapita_b102); end
  def test_costpercapita_c102; assert_equal("Fossil Fuels", worksheet.costpercapita_c102); end
  def test_costpercapita_e102; assert_in_delta(0, (worksheet.costpercapita_e102||0), 0.001); end
  def test_costpercapita_f102; assert_in_delta(0, (worksheet.costpercapita_f102||0), 0.001); end
  def test_costpercapita_g102; assert_in_delta(0, (worksheet.costpercapita_g102||0), 0.001); end
  def test_costpercapita_h102; assert_in_delta(0, (worksheet.costpercapita_h102||0), 0.001); end
  def test_costpercapita_i102; assert_in_delta(0, (worksheet.costpercapita_i102||0), 0.001); end
  def test_costpercapita_j102; assert_in_delta(0, (worksheet.costpercapita_j102||0), 0.001); end
  def test_costpercapita_k102; assert_in_delta(0, (worksheet.costpercapita_k102||0), 0.001); end
  def test_costpercapita_l102; assert_in_delta(0, (worksheet.costpercapita_l102||0), 0.001); end
  def test_costpercapita_m102; assert_in_delta(0, (worksheet.costpercapita_m102||0), 0.001); end
  def test_costpercapita_o102; assert_in_delta(0, (worksheet.costpercapita_o102||0), 0.001); end
  def test_costpercapita_p102; assert_in_delta(0, (worksheet.costpercapita_p102||0), 0.001); end
  def test_costpercapita_q102; assert_in_delta(0, (worksheet.costpercapita_q102||0), 0.001); end
  def test_costpercapita_r102; assert_in_delta(0, (worksheet.costpercapita_r102||0), 0.001); end
  def test_costpercapita_s102; assert_in_delta(0, (worksheet.costpercapita_s102||0), 0.001); end
  def test_costpercapita_t102; assert_in_delta(0, (worksheet.costpercapita_t102||0), 0.001); end
  def test_costpercapita_u102; assert_in_delta(0, (worksheet.costpercapita_u102||0), 0.001); end
  def test_costpercapita_v102; assert_in_delta(0, (worksheet.costpercapita_v102||0), 0.001); end
  def test_costpercapita_w102; assert_in_delta(0, (worksheet.costpercapita_w102||0), 0.001); end
  def test_costpercapita_y102; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_y102, 0.001); end
  def test_costpercapita_z102; assert_in_epsilon(38.798959877506476, worksheet.costpercapita_z102, 0.001); end
  def test_costpercapita_aa102; assert_in_epsilon(27.91536619693241, worksheet.costpercapita_aa102, 0.001); end
  def test_costpercapita_ab102; assert_in_epsilon(10.384710879631987, worksheet.costpercapita_ab102, 0.001); end
  def test_costpercapita_ac102; assert_in_epsilon(4.753072187125829, worksheet.costpercapita_ac102, 0.001); end
  def test_costpercapita_ad102; assert_in_epsilon(2.5189840698697945, worksheet.costpercapita_ad102, 0.001); end
  def test_costpercapita_ae102; assert_in_epsilon(2.9500433897778513, worksheet.costpercapita_ae102, 0.001); end
  def test_costpercapita_af102; assert_in_epsilon(3.388241020920573, worksheet.costpercapita_af102, 0.001); end
  def test_costpercapita_ag102; assert_in_epsilon(3.8932736658099394, worksheet.costpercapita_ag102, 0.001); end
  def test_costpercapita_ai102; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_ai102, 0.001); end
  def test_costpercapita_aj102; assert_in_epsilon(38.798959877506476, worksheet.costpercapita_aj102, 0.001); end
  def test_costpercapita_ak102; assert_in_epsilon(27.91536619693241, worksheet.costpercapita_ak102, 0.001); end
  def test_costpercapita_al102; assert_in_epsilon(10.384710879631987, worksheet.costpercapita_al102, 0.001); end
  def test_costpercapita_am102; assert_in_epsilon(4.753072187125829, worksheet.costpercapita_am102, 0.001); end
  def test_costpercapita_an102; assert_in_epsilon(2.5189840698697945, worksheet.costpercapita_an102, 0.001); end
  def test_costpercapita_ao102; assert_in_epsilon(2.9500433897778513, worksheet.costpercapita_ao102, 0.001); end
  def test_costpercapita_ap102; assert_in_epsilon(3.388241020920573, worksheet.costpercapita_ap102, 0.001); end
  def test_costpercapita_aq102; assert_in_epsilon(3.8932736658099394, worksheet.costpercapita_aq102, 0.001); end
  def test_costpercapita_as102; assert_in_epsilon(15.543094914587922, worksheet.costpercapita_as102, 0.001); end
  def test_costpercapita_at102; assert_in_epsilon(371.46043404220757, worksheet.costpercapita_at102, 0.001); end
  def test_costpercapita_av102; assert_in_delta(0, (worksheet.costpercapita_av102||0), 0.001); end
  def test_costpercapita_aw102; assert_in_epsilon(5, worksheet.costpercapita_aw102, 0.001); end
  def test_costpercapita_ay102; assert_in_delta(0, (worksheet.costpercapita_ay102||0), 0.001); end
  def test_costpercapita_az102; assert_in_delta(0, (worksheet.costpercapita_az102||0), 0.001); end
  def test_costpercapita_ba102; assert_in_delta(0, (worksheet.costpercapita_ba102||0), 0.001); end
  def test_costpercapita_bb102; assert_in_delta(0, (worksheet.costpercapita_bb102||0), 0.001); end
  def test_costpercapita_bc102; assert_in_delta(0, (worksheet.costpercapita_bc102||0), 0.001); end
  def test_costpercapita_bd102; assert_in_delta(0, (worksheet.costpercapita_bd102||0), 0.001); end
  def test_costpercapita_be102; assert_in_delta(0, (worksheet.costpercapita_be102||0), 0.001); end
  def test_costpercapita_bf102; assert_in_delta(0, (worksheet.costpercapita_bf102||0), 0.001); end
  def test_costpercapita_bg102; assert_in_delta(0, (worksheet.costpercapita_bg102||0), 0.001); end
  def test_costpercapita_bi102; assert_in_delta(0, (worksheet.costpercapita_bi102||0), 0.001); end
  def test_costpercapita_bj102; assert_in_delta(0, (worksheet.costpercapita_bj102||0), 0.001); end
  def test_costpercapita_bk102; assert_in_delta(0, (worksheet.costpercapita_bk102||0), 0.001); end
  def test_costpercapita_bl102; assert_in_delta(0, (worksheet.costpercapita_bl102||0), 0.001); end
  def test_costpercapita_bm102; assert_in_delta(0, (worksheet.costpercapita_bm102||0), 0.001); end
  def test_costpercapita_bn102; assert_in_delta(0, (worksheet.costpercapita_bn102||0), 0.001); end
  def test_costpercapita_bo102; assert_in_delta(0, (worksheet.costpercapita_bo102||0), 0.001); end
  def test_costpercapita_bp102; assert_in_delta(0, (worksheet.costpercapita_bp102||0), 0.001); end
  def test_costpercapita_bq102; assert_in_delta(0, (worksheet.costpercapita_bq102||0), 0.001); end
  def test_costpercapita_bs102; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_bs102, 0.001); end
  def test_costpercapita_bt102; assert_in_epsilon(38.798959877506476, worksheet.costpercapita_bt102, 0.001); end
  def test_costpercapita_bu102; assert_in_epsilon(27.91536619693241, worksheet.costpercapita_bu102, 0.001); end
  def test_costpercapita_bv102; assert_in_epsilon(10.384710879631987, worksheet.costpercapita_bv102, 0.001); end
  def test_costpercapita_bw102; assert_in_epsilon(4.753072187125829, worksheet.costpercapita_bw102, 0.001); end
  def test_costpercapita_bx102; assert_in_epsilon(2.5189840698697945, worksheet.costpercapita_bx102, 0.001); end
  def test_costpercapita_by102; assert_in_epsilon(2.9500433897778513, worksheet.costpercapita_by102, 0.001); end
  def test_costpercapita_bz102; assert_in_epsilon(3.388241020920573, worksheet.costpercapita_bz102, 0.001); end
  def test_costpercapita_ca102; assert_in_epsilon(3.8932736658099394, worksheet.costpercapita_ca102, 0.001); end
  def test_costpercapita_cc102; assert_in_epsilon(15.543094914587922, worksheet.costpercapita_cc102, 0.001); end
  def test_costpercapita_cd102; assert_in_epsilon(371.46043404220757, worksheet.costpercapita_cd102, 0.001); end
  def test_costpercapita_cf102; assert_in_delta(0, (worksheet.costpercapita_cf102||0), 0.001); end
  def test_costpercapita_cg102; assert_in_delta(0, (worksheet.costpercapita_cg102||0), 0.001); end
  def test_costpercapita_ch102; assert_in_delta(0, (worksheet.costpercapita_ch102||0), 0.001); end
  def test_costpercapita_ci102; assert_in_delta(0, (worksheet.costpercapita_ci102||0), 0.001); end
  def test_costpercapita_cj102; assert_in_delta(0, (worksheet.costpercapita_cj102||0), 0.001); end
  def test_costpercapita_ck102; assert_in_delta(0, (worksheet.costpercapita_ck102||0), 0.001); end
  def test_costpercapita_cl102; assert_in_delta(0, (worksheet.costpercapita_cl102||0), 0.001); end
  def test_costpercapita_cm102; assert_in_delta(0, (worksheet.costpercapita_cm102||0), 0.001); end
  def test_costpercapita_cn102; assert_in_delta(0, (worksheet.costpercapita_cn102||0), 0.001); end
  def test_costpercapita_cp102; assert_in_delta(0, (worksheet.costpercapita_cp102||0), 0.001); end
  def test_costpercapita_cq102; assert_in_delta(0, (worksheet.costpercapita_cq102||0), 0.001); end
  def test_costpercapita_cr102; assert_equal("ok", worksheet.costpercapita_cr102); end
  def test_costpercapita_a103; assert_equal("XVI.b.Oil", worksheet.costpercapita_a103); end
  def test_costpercapita_b103; assert_equal("Balancing imports - Oil", worksheet.costpercapita_b103); end
  def test_costpercapita_c103; assert_equal("Fossil Fuels", worksheet.costpercapita_c103); end
  def test_costpercapita_e103; assert_in_delta(0, (worksheet.costpercapita_e103||0), 0.001); end
  def test_costpercapita_f103; assert_in_delta(0, (worksheet.costpercapita_f103||0), 0.001); end
  def test_costpercapita_g103; assert_in_delta(0, (worksheet.costpercapita_g103||0), 0.001); end
  def test_costpercapita_h103; assert_in_delta(0, (worksheet.costpercapita_h103||0), 0.001); end
  def test_costpercapita_i103; assert_in_delta(0, (worksheet.costpercapita_i103||0), 0.001); end
  def test_costpercapita_j103; assert_in_delta(0, (worksheet.costpercapita_j103||0), 0.001); end
  def test_costpercapita_k103; assert_in_delta(0, (worksheet.costpercapita_k103||0), 0.001); end
  def test_costpercapita_l103; assert_in_delta(0, (worksheet.costpercapita_l103||0), 0.001); end
  def test_costpercapita_m103; assert_in_delta(0, (worksheet.costpercapita_m103||0), 0.001); end
  def test_costpercapita_o103; assert_in_delta(0, (worksheet.costpercapita_o103||0), 0.001); end
  def test_costpercapita_p103; assert_in_delta(0, (worksheet.costpercapita_p103||0), 0.001); end
  def test_costpercapita_q103; assert_in_delta(0, (worksheet.costpercapita_q103||0), 0.001); end
  def test_costpercapita_r103; assert_in_delta(0, (worksheet.costpercapita_r103||0), 0.001); end
  def test_costpercapita_s103; assert_in_delta(0, (worksheet.costpercapita_s103||0), 0.001); end
  def test_costpercapita_t103; assert_in_delta(0, (worksheet.costpercapita_t103||0), 0.001); end
  def test_costpercapita_u103; assert_in_delta(0, (worksheet.costpercapita_u103||0), 0.001); end
  def test_costpercapita_v103; assert_in_delta(0, (worksheet.costpercapita_v103||0), 0.001); end
  def test_costpercapita_w103; assert_in_delta(0, (worksheet.costpercapita_w103||0), 0.001); end
  def test_costpercapita_y103; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_y103, 0.001); end
  def test_costpercapita_z103; assert_in_epsilon(117.40182164235362, worksheet.costpercapita_z103, 0.001); end
  def test_costpercapita_aa103; assert_in_epsilon(219.9038197752141, worksheet.costpercapita_aa103, 0.001); end
  def test_costpercapita_ab103; assert_in_epsilon(303.3305626644674, worksheet.costpercapita_ab103, 0.001); end
  def test_costpercapita_ac103; assert_in_epsilon(375.1535672801648, worksheet.costpercapita_ac103, 0.001); end
  def test_costpercapita_ad103; assert_in_epsilon(426.5988702622615, worksheet.costpercapita_ad103, 0.001); end
  def test_costpercapita_ae103; assert_in_epsilon(460.59536741636845, worksheet.costpercapita_ae103, 0.001); end
  def test_costpercapita_af103; assert_in_epsilon(488.17825974602835, worksheet.costpercapita_af103, 0.001); end
  def test_costpercapita_ag103; assert_in_epsilon(504.33289020579724, worksheet.costpercapita_ag103, 0.001); end
  def test_costpercapita_ai103; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_ai103, 0.001); end
  def test_costpercapita_aj103; assert_in_epsilon(117.40182164235362, worksheet.costpercapita_aj103, 0.001); end
  def test_costpercapita_ak103; assert_in_epsilon(219.9038197752141, worksheet.costpercapita_ak103, 0.001); end
  def test_costpercapita_al103; assert_in_epsilon(303.3305626644674, worksheet.costpercapita_al103, 0.001); end
  def test_costpercapita_am103; assert_in_epsilon(375.1535672801648, worksheet.costpercapita_am103, 0.001); end
  def test_costpercapita_an103; assert_in_epsilon(426.5988702622615, worksheet.costpercapita_an103, 0.001); end
  def test_costpercapita_ao103; assert_in_epsilon(460.59536741636845, worksheet.costpercapita_ao103, 0.001); end
  def test_costpercapita_ap103; assert_in_epsilon(488.17825974602835, worksheet.costpercapita_ap103, 0.001); end
  def test_costpercapita_aq103; assert_in_epsilon(504.33289020579724, worksheet.costpercapita_aq103, 0.001); end
  def test_costpercapita_as103; assert_in_epsilon(325.4289998336159, worksheet.costpercapita_as103, 0.001); end
  def test_costpercapita_at103; assert_in_epsilon(6296.7865995194625, worksheet.costpercapita_at103, 0.001); end
  def test_costpercapita_av103; assert_in_delta(0, (worksheet.costpercapita_av103||0), 0.001); end
  def test_costpercapita_aw103; assert_in_epsilon(5, worksheet.costpercapita_aw103, 0.001); end
  def test_costpercapita_ay103; assert_in_delta(0, (worksheet.costpercapita_ay103||0), 0.001); end
  def test_costpercapita_az103; assert_in_delta(0, (worksheet.costpercapita_az103||0), 0.001); end
  def test_costpercapita_ba103; assert_in_delta(0, (worksheet.costpercapita_ba103||0), 0.001); end
  def test_costpercapita_bb103; assert_in_delta(0, (worksheet.costpercapita_bb103||0), 0.001); end
  def test_costpercapita_bc103; assert_in_delta(0, (worksheet.costpercapita_bc103||0), 0.001); end
  def test_costpercapita_bd103; assert_in_delta(0, (worksheet.costpercapita_bd103||0), 0.001); end
  def test_costpercapita_be103; assert_in_delta(0, (worksheet.costpercapita_be103||0), 0.001); end
  def test_costpercapita_bf103; assert_in_delta(0, (worksheet.costpercapita_bf103||0), 0.001); end
  def test_costpercapita_bg103; assert_in_delta(0, (worksheet.costpercapita_bg103||0), 0.001); end
  def test_costpercapita_bi103; assert_in_delta(0, (worksheet.costpercapita_bi103||0), 0.001); end
  def test_costpercapita_bj103; assert_in_delta(0, (worksheet.costpercapita_bj103||0), 0.001); end
  def test_costpercapita_bk103; assert_in_delta(0, (worksheet.costpercapita_bk103||0), 0.001); end
  def test_costpercapita_bl103; assert_in_delta(0, (worksheet.costpercapita_bl103||0), 0.001); end
  def test_costpercapita_bm103; assert_in_delta(0, (worksheet.costpercapita_bm103||0), 0.001); end
  def test_costpercapita_bn103; assert_in_delta(0, (worksheet.costpercapita_bn103||0), 0.001); end
  def test_costpercapita_bo103; assert_in_delta(0, (worksheet.costpercapita_bo103||0), 0.001); end
  def test_costpercapita_bp103; assert_in_delta(0, (worksheet.costpercapita_bp103||0), 0.001); end
  def test_costpercapita_bq103; assert_in_delta(0, (worksheet.costpercapita_bq103||0), 0.001); end
  def test_costpercapita_bs103; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_bs103, 0.001); end
  def test_costpercapita_bt103; assert_in_epsilon(117.40182164235362, worksheet.costpercapita_bt103, 0.001); end
  def test_costpercapita_bu103; assert_in_epsilon(219.9038197752141, worksheet.costpercapita_bu103, 0.001); end
  def test_costpercapita_bv103; assert_in_epsilon(303.3305626644674, worksheet.costpercapita_bv103, 0.001); end
  def test_costpercapita_bw103; assert_in_epsilon(375.1535672801648, worksheet.costpercapita_bw103, 0.001); end
  def test_costpercapita_bx103; assert_in_epsilon(426.5988702622615, worksheet.costpercapita_bx103, 0.001); end
  def test_costpercapita_by103; assert_in_epsilon(460.59536741636845, worksheet.costpercapita_by103, 0.001); end
  def test_costpercapita_bz103; assert_in_epsilon(488.17825974602835, worksheet.costpercapita_bz103, 0.001); end
  def test_costpercapita_ca103; assert_in_epsilon(504.33289020579724, worksheet.costpercapita_ca103, 0.001); end
  def test_costpercapita_cc103; assert_in_epsilon(325.4289998336159, worksheet.costpercapita_cc103, 0.001); end
  def test_costpercapita_cd103; assert_in_epsilon(6296.7865995194625, worksheet.costpercapita_cd103, 0.001); end
  def test_costpercapita_cf103; assert_in_delta(0, (worksheet.costpercapita_cf103||0), 0.001); end
  def test_costpercapita_cg103; assert_in_delta(0, (worksheet.costpercapita_cg103||0), 0.001); end
  def test_costpercapita_ch103; assert_in_delta(0, (worksheet.costpercapita_ch103||0), 0.001); end
  def test_costpercapita_ci103; assert_in_delta(0, (worksheet.costpercapita_ci103||0), 0.001); end
  def test_costpercapita_cj103; assert_in_delta(0, (worksheet.costpercapita_cj103||0), 0.001); end
  def test_costpercapita_ck103; assert_in_delta(0, (worksheet.costpercapita_ck103||0), 0.001); end
  def test_costpercapita_cl103; assert_in_delta(0, (worksheet.costpercapita_cl103||0), 0.001); end
  def test_costpercapita_cm103; assert_in_delta(0, (worksheet.costpercapita_cm103||0), 0.001); end
  def test_costpercapita_cn103; assert_in_delta(0, (worksheet.costpercapita_cn103||0), 0.001); end
  def test_costpercapita_cp103; assert_in_delta(0, (worksheet.costpercapita_cp103||0), 0.001); end
  def test_costpercapita_cq103; assert_in_delta(0, (worksheet.costpercapita_cq103||0), 0.001); end
  def test_costpercapita_cr103; assert_equal("ok", worksheet.costpercapita_cr103); end
  def test_costpercapita_a104; assert_equal("XVI.b.Gas", worksheet.costpercapita_a104); end
  def test_costpercapita_b104; assert_equal("Balancing imports - Gas", worksheet.costpercapita_b104); end
  def test_costpercapita_c104; assert_equal("Fossil Fuels", worksheet.costpercapita_c104); end
  def test_costpercapita_e104; assert_in_delta(0, (worksheet.costpercapita_e104||0), 0.001); end
  def test_costpercapita_f104; assert_in_delta(0, (worksheet.costpercapita_f104||0), 0.001); end
  def test_costpercapita_g104; assert_in_delta(0, (worksheet.costpercapita_g104||0), 0.001); end
  def test_costpercapita_h104; assert_in_delta(0, (worksheet.costpercapita_h104||0), 0.001); end
  def test_costpercapita_i104; assert_in_delta(0, (worksheet.costpercapita_i104||0), 0.001); end
  def test_costpercapita_j104; assert_in_delta(0, (worksheet.costpercapita_j104||0), 0.001); end
  def test_costpercapita_k104; assert_in_delta(0, (worksheet.costpercapita_k104||0), 0.001); end
  def test_costpercapita_l104; assert_in_delta(0, (worksheet.costpercapita_l104||0), 0.001); end
  def test_costpercapita_m104; assert_in_delta(0, (worksheet.costpercapita_m104||0), 0.001); end
  def test_costpercapita_o104; assert_in_delta(0, (worksheet.costpercapita_o104||0), 0.001); end
  def test_costpercapita_p104; assert_in_delta(0, (worksheet.costpercapita_p104||0), 0.001); end
  def test_costpercapita_q104; assert_in_delta(0, (worksheet.costpercapita_q104||0), 0.001); end
  def test_costpercapita_r104; assert_in_delta(0, (worksheet.costpercapita_r104||0), 0.001); end
  def test_costpercapita_s104; assert_in_delta(0, (worksheet.costpercapita_s104||0), 0.001); end
  def test_costpercapita_t104; assert_in_delta(0, (worksheet.costpercapita_t104||0), 0.001); end
  def test_costpercapita_u104; assert_in_delta(0, (worksheet.costpercapita_u104||0), 0.001); end
  def test_costpercapita_v104; assert_in_delta(0, (worksheet.costpercapita_v104||0), 0.001); end
  def test_costpercapita_w104; assert_in_delta(0, (worksheet.costpercapita_w104||0), 0.001); end
  def test_costpercapita_y104; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_y104, 0.001); end
  def test_costpercapita_z104; assert_in_epsilon(151.91303944249267, worksheet.costpercapita_z104, 0.001); end
  def test_costpercapita_aa104; assert_in_epsilon(232.64737768237336, worksheet.costpercapita_aa104, 0.001); end
  def test_costpercapita_ab104; assert_in_epsilon(334.84276606511236, worksheet.costpercapita_ab104, 0.001); end
  def test_costpercapita_ac104; assert_in_epsilon(442.18642643584366, worksheet.costpercapita_ac104, 0.001); end
  def test_costpercapita_ad104; assert_in_epsilon(497.59002670049335, worksheet.costpercapita_ad104, 0.001); end
  def test_costpercapita_ae104; assert_in_epsilon(541.2473668364939, worksheet.costpercapita_ae104, 0.001); end
  def test_costpercapita_af104; assert_in_epsilon(582.3817946623611, worksheet.costpercapita_af104, 0.001); end
  def test_costpercapita_ag104; assert_in_epsilon(614.3337975831602, worksheet.costpercapita_ag104, 0.001); end
  def test_costpercapita_ai104; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_ai104, 0.001); end
  def test_costpercapita_aj104; assert_in_epsilon(151.91303944249267, worksheet.costpercapita_aj104, 0.001); end
  def test_costpercapita_ak104; assert_in_epsilon(232.64737768237336, worksheet.costpercapita_ak104, 0.001); end
  def test_costpercapita_al104; assert_in_epsilon(334.84276606511236, worksheet.costpercapita_al104, 0.001); end
  def test_costpercapita_am104; assert_in_epsilon(442.18642643584366, worksheet.costpercapita_am104, 0.001); end
  def test_costpercapita_an104; assert_in_epsilon(497.59002670049335, worksheet.costpercapita_an104, 0.001); end
  def test_costpercapita_ao104; assert_in_epsilon(541.2473668364939, worksheet.costpercapita_ao104, 0.001); end
  def test_costpercapita_ap104; assert_in_epsilon(582.3817946623611, worksheet.costpercapita_ap104, 0.001); end
  def test_costpercapita_aq104; assert_in_epsilon(614.3337975831602, worksheet.costpercapita_aq104, 0.001); end
  def test_costpercapita_as104; assert_in_epsilon(386.71759628186277, worksheet.costpercapita_as104, 0.001); end
  def test_costpercapita_at104; assert_in_epsilon(7384.121071474825, worksheet.costpercapita_at104, 0.001); end
  def test_costpercapita_av104; assert_in_delta(0, (worksheet.costpercapita_av104||0), 0.001); end
  def test_costpercapita_aw104; assert_in_epsilon(5, worksheet.costpercapita_aw104, 0.001); end
  def test_costpercapita_ay104; assert_in_delta(0, (worksheet.costpercapita_ay104||0), 0.001); end
  def test_costpercapita_az104; assert_in_delta(0, (worksheet.costpercapita_az104||0), 0.001); end
  def test_costpercapita_ba104; assert_in_delta(0, (worksheet.costpercapita_ba104||0), 0.001); end
  def test_costpercapita_bb104; assert_in_delta(0, (worksheet.costpercapita_bb104||0), 0.001); end
  def test_costpercapita_bc104; assert_in_delta(0, (worksheet.costpercapita_bc104||0), 0.001); end
  def test_costpercapita_bd104; assert_in_delta(0, (worksheet.costpercapita_bd104||0), 0.001); end
  def test_costpercapita_be104; assert_in_delta(0, (worksheet.costpercapita_be104||0), 0.001); end
  def test_costpercapita_bf104; assert_in_delta(0, (worksheet.costpercapita_bf104||0), 0.001); end
  def test_costpercapita_bg104; assert_in_delta(0, (worksheet.costpercapita_bg104||0), 0.001); end
  def test_costpercapita_bi104; assert_in_delta(0, (worksheet.costpercapita_bi104||0), 0.001); end
  def test_costpercapita_bj104; assert_in_delta(0, (worksheet.costpercapita_bj104||0), 0.001); end
  def test_costpercapita_bk104; assert_in_delta(0, (worksheet.costpercapita_bk104||0), 0.001); end
  def test_costpercapita_bl104; assert_in_delta(0, (worksheet.costpercapita_bl104||0), 0.001); end
  def test_costpercapita_bm104; assert_in_delta(0, (worksheet.costpercapita_bm104||0), 0.001); end
  def test_costpercapita_bn104; assert_in_delta(0, (worksheet.costpercapita_bn104||0), 0.001); end
  def test_costpercapita_bo104; assert_in_delta(0, (worksheet.costpercapita_bo104||0), 0.001); end
  def test_costpercapita_bp104; assert_in_delta(0, (worksheet.costpercapita_bp104||0), 0.001); end
  def test_costpercapita_bq104; assert_in_delta(0, (worksheet.costpercapita_bq104||0), 0.001); end
  def test_costpercapita_bs104; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_bs104, 0.001); end
  def test_costpercapita_bt104; assert_in_epsilon(151.91303944249267, worksheet.costpercapita_bt104, 0.001); end
  def test_costpercapita_bu104; assert_in_epsilon(232.64737768237336, worksheet.costpercapita_bu104, 0.001); end
  def test_costpercapita_bv104; assert_in_epsilon(334.84276606511236, worksheet.costpercapita_bv104, 0.001); end
  def test_costpercapita_bw104; assert_in_epsilon(442.18642643584366, worksheet.costpercapita_bw104, 0.001); end
  def test_costpercapita_bx104; assert_in_epsilon(497.59002670049335, worksheet.costpercapita_bx104, 0.001); end
  def test_costpercapita_by104; assert_in_epsilon(541.2473668364939, worksheet.costpercapita_by104, 0.001); end
  def test_costpercapita_bz104; assert_in_epsilon(582.3817946623611, worksheet.costpercapita_bz104, 0.001); end
  def test_costpercapita_ca104; assert_in_epsilon(614.3337975831602, worksheet.costpercapita_ca104, 0.001); end
  def test_costpercapita_cc104; assert_in_epsilon(386.71759628186277, worksheet.costpercapita_cc104, 0.001); end
  def test_costpercapita_cd104; assert_in_epsilon(7384.121071474825, worksheet.costpercapita_cd104, 0.001); end
  def test_costpercapita_cf104; assert_in_delta(0, (worksheet.costpercapita_cf104||0), 0.001); end
  def test_costpercapita_cg104; assert_in_delta(0, (worksheet.costpercapita_cg104||0), 0.001); end
  def test_costpercapita_ch104; assert_in_delta(0, (worksheet.costpercapita_ch104||0), 0.001); end
  def test_costpercapita_ci104; assert_in_delta(0, (worksheet.costpercapita_ci104||0), 0.001); end
  def test_costpercapita_cj104; assert_in_delta(0, (worksheet.costpercapita_cj104||0), 0.001); end
  def test_costpercapita_ck104; assert_in_delta(0, (worksheet.costpercapita_ck104||0), 0.001); end
  def test_costpercapita_cl104; assert_in_delta(0, (worksheet.costpercapita_cl104||0), 0.001); end
  def test_costpercapita_cm104; assert_in_delta(0, (worksheet.costpercapita_cm104||0), 0.001); end
  def test_costpercapita_cn104; assert_in_delta(0, (worksheet.costpercapita_cn104||0), 0.001); end
  def test_costpercapita_cp104; assert_in_delta(0, (worksheet.costpercapita_cp104||0), 0.001); end
  def test_costpercapita_cq104; assert_in_delta(0, (worksheet.costpercapita_cq104||0), 0.001); end
  def test_costpercapita_cr104; assert_equal("ok", worksheet.costpercapita_cr104); end
  def test_costpercapita_a105; assert_equal("XVII.a", worksheet.costpercapita_a105); end
  def test_costpercapita_b105; assert_equal("District heating effective demand", worksheet.costpercapita_b105); end
  def test_costpercapita_c105; assert_equal("Buildings", worksheet.costpercapita_c105); end
  def test_costpercapita_e105; assert_in_delta(0.7092515313224886, worksheet.costpercapita_e105, 0.001); end
  def test_costpercapita_f105; assert_in_delta(0.4731681295544335, worksheet.costpercapita_f105, 0.001); end
  def test_costpercapita_g105; assert_in_delta(0.48358832304876126, worksheet.costpercapita_g105, 0.001); end
  def test_costpercapita_h105; assert_in_delta(0.5521300335366492, worksheet.costpercapita_h105, 0.001); end
  def test_costpercapita_i105; assert_in_delta(0.5856734566480611, worksheet.costpercapita_i105, 0.001); end
  def test_costpercapita_j105; assert_in_delta(0.6244194065292024, worksheet.costpercapita_j105, 0.001); end
  def test_costpercapita_k105; assert_in_delta(0.6680666948469322, worksheet.costpercapita_k105, 0.001); end
  def test_costpercapita_l105; assert_in_delta(0.7166394199487396, worksheet.costpercapita_l105, 0.001); end
  def test_costpercapita_m105; assert_in_delta(0.7706638889479804, worksheet.costpercapita_m105, 0.001); end
  def test_costpercapita_o105; assert_in_delta(0.11331908517573011, worksheet.costpercapita_o105, 0.001); end
  def test_costpercapita_p105; assert_in_delta(0.11497705688988452, worksheet.costpercapita_p105, 0.001); end
  def test_costpercapita_q105; assert_in_delta(0.11685685007197585, worksheet.costpercapita_q105, 0.001); end
  def test_costpercapita_r105; assert_in_delta(0.12197196496449902, worksheet.costpercapita_r105, 0.001); end
  def test_costpercapita_s105; assert_in_delta(0.1281500663392371, worksheet.costpercapita_s105, 0.001); end
  def test_costpercapita_t105; assert_in_delta(0.13549713895791662, worksheet.costpercapita_t105, 0.001); end
  def test_costpercapita_u105; assert_in_delta(0.1439095636052136, worksheet.costpercapita_u105, 0.001); end
  def test_costpercapita_v105; assert_in_delta(0.15336435963995418, worksheet.costpercapita_v105, 0.001); end
  def test_costpercapita_w105; assert_in_delta(0.1639517899199186, worksheet.costpercapita_w105, 0.001); end
  def test_costpercapita_y105; assert_in_delta(0, (worksheet.costpercapita_y105||0), 0.001); end
  def test_costpercapita_z105; assert_in_delta(0, (worksheet.costpercapita_z105||0), 0.001); end
  def test_costpercapita_aa105; assert_in_delta(0, (worksheet.costpercapita_aa105||0), 0.001); end
  def test_costpercapita_ab105; assert_in_delta(0, (worksheet.costpercapita_ab105||0), 0.001); end
  def test_costpercapita_ac105; assert_in_delta(0, (worksheet.costpercapita_ac105||0), 0.001); end
  def test_costpercapita_ad105; assert_in_delta(0, (worksheet.costpercapita_ad105||0), 0.001); end
  def test_costpercapita_ae105; assert_in_delta(0, (worksheet.costpercapita_ae105||0), 0.001); end
  def test_costpercapita_af105; assert_in_delta(0, (worksheet.costpercapita_af105||0), 0.001); end
  def test_costpercapita_ag105; assert_in_delta(0, (worksheet.costpercapita_ag105||0), 0.001); end
  def test_costpercapita_ai105; assert_in_delta(0.8225706164982187, worksheet.costpercapita_ai105, 0.001); end
  def test_costpercapita_aj105; assert_in_delta(0.5881451864443179, worksheet.costpercapita_aj105, 0.001); end
  def test_costpercapita_ak105; assert_in_delta(0.6004451731207371, worksheet.costpercapita_ak105, 0.001); end
  def test_costpercapita_al105; assert_in_delta(0.6741019985011483, worksheet.costpercapita_al105, 0.001); end
  def test_costpercapita_am105; assert_in_delta(0.7138235229872982, worksheet.costpercapita_am105, 0.001); end
  def test_costpercapita_an105; assert_in_delta(0.7599165454871191, worksheet.costpercapita_an105, 0.001); end
  def test_costpercapita_ao105; assert_in_delta(0.8119762584521457, worksheet.costpercapita_ao105, 0.001); end
  def test_costpercapita_ap105; assert_in_delta(0.8700037795886938, worksheet.costpercapita_ap105, 0.001); end
  def test_costpercapita_aq105; assert_in_delta(0.9346156788678991, worksheet.costpercapita_aq105, 0.001); end
  def test_costpercapita_as105; assert_in_delta(0.7528443066608419, worksheet.costpercapita_as105, 0.001); end
  def test_costpercapita_at105; assert_in_epsilon(14.862430963551189, worksheet.costpercapita_at105, 0.001); end
  def test_costpercapita_av105; assert_in_delta(0.07, worksheet.costpercapita_av105, 0.001); end
  def test_costpercapita_aw105; assert_in_epsilon(15, worksheet.costpercapita_aw105, 0.001); end
  def test_costpercapita_ay105; assert_in_delta(0.2336160171005004, worksheet.costpercapita_ay105, 0.001); end
  def test_costpercapita_az105; assert_in_delta(0.2597565860245313, worksheet.costpercapita_az105, 0.001); end
  def test_costpercapita_ba105; assert_in_delta(0.26547699219463916, worksheet.costpercapita_ba105, 0.001); end
  def test_costpercapita_bb105; assert_in_delta(0.30310454909155277, worksheet.costpercapita_bb105, 0.001); end
  def test_costpercapita_bc105; assert_in_delta(0.32151898685007546, worksheet.costpercapita_bc105, 0.001); end
  def test_costpercapita_bd105; assert_in_delta(0.342789471979495, worksheet.costpercapita_bd105, 0.001); end
  def test_costpercapita_be105; assert_in_delta(0.36675066017980384, worksheet.costpercapita_be105, 0.001); end
  def test_costpercapita_bf105; assert_in_delta(0.39341578079609424, worksheet.costpercapita_bf105, 0.001); end
  def test_costpercapita_bg105; assert_in_delta(0.4230737622883084, worksheet.costpercapita_bg105, 0.001); end
  def test_costpercapita_bi105; assert_in_delta(0.2336160171005004, worksheet.costpercapita_bi105, 0.001); end
  def test_costpercapita_bj105; assert_in_delta(0.48566909878298953, worksheet.costpercapita_bj105, 0.001); end
  def test_costpercapita_bk105; assert_in_delta(0.7352461829541073, worksheet.costpercapita_bk105, 0.001); end
  def test_costpercapita_bl105; assert_in_delta(0.8038344323269104, worksheet.costpercapita_bl105, 0.001); end
  def test_costpercapita_bm105; assert_in_delta(0.8665712773567754, worksheet.costpercapita_bm105, 0.001); end
  def test_costpercapita_bn105; assert_in_delta(0.9446137647060746, worksheet.costpercapita_bn105, 0.001); end
  def test_costpercapita_bo105; assert_in_epsilon(1.0094797343602169, worksheet.costpercapita_bo105, 0.001); end
  def test_costpercapita_bp105; assert_in_epsilon(1.0816374271941849, worksheet.costpercapita_bp105, 0.001); end
  def test_costpercapita_bq105; assert_in_epsilon(1.161874791281747, worksheet.costpercapita_bq105, 0.001); end
  def test_costpercapita_bs105; assert_in_delta(0.3469351022762305, worksheet.costpercapita_bs105, 0.001); end
  def test_costpercapita_bt105; assert_in_delta(0.600646155672874, worksheet.costpercapita_bt105, 0.001); end
  def test_costpercapita_bu105; assert_in_delta(0.8521030330260831, worksheet.costpercapita_bu105, 0.001); end
  def test_costpercapita_bv105; assert_in_delta(0.9258063972914095, worksheet.costpercapita_bv105, 0.001); end
  def test_costpercapita_bw105; assert_in_delta(0.9947213436960125, worksheet.costpercapita_bw105, 0.001); end
  def test_costpercapita_bx105; assert_in_epsilon(1.080110903663991, worksheet.costpercapita_bx105, 0.001); end
  def test_costpercapita_by105; assert_in_epsilon(1.1533892979654303, worksheet.costpercapita_by105, 0.001); end
  def test_costpercapita_bz105; assert_in_epsilon(1.235001786834139, worksheet.costpercapita_bz105, 0.001); end
  def test_costpercapita_ca105; assert_in_epsilon(1.3258265812016656, worksheet.costpercapita_ca105, 0.001); end
  def test_costpercapita_cc105; assert_in_delta(0.9460600668475373, worksheet.costpercapita_cc105, 0.001); end
  def test_costpercapita_cd105; assert_in_epsilon(19.15356415843493, worksheet.costpercapita_cd105, 0.001); end
  def test_costpercapita_cf105; assert_in_delta(-0.4756355142219882, worksheet.costpercapita_cf105, 0.001); end
  def test_costpercapita_cg105; assert_in_delta(0.012500969228556055, worksheet.costpercapita_cg105, 0.001); end
  def test_costpercapita_ch105; assert_in_delta(0.251657859905346, worksheet.costpercapita_ch105, 0.001); end
  def test_costpercapita_ci105; assert_in_delta(0.25170439879026113, worksheet.costpercapita_ci105, 0.001); end
  def test_costpercapita_cj105; assert_in_delta(0.2808978207087142, worksheet.costpercapita_cj105, 0.001); end
  def test_costpercapita_ck105; assert_in_delta(0.32019435817687225, worksheet.costpercapita_ck105, 0.001); end
  def test_costpercapita_cl105; assert_in_delta(0.34141303951328467, worksheet.costpercapita_cl105, 0.001); end
  def test_costpercapita_cm105; assert_in_delta(0.36499800724544534, worksheet.costpercapita_cm105, 0.001); end
  def test_costpercapita_cn105; assert_in_delta(0.39121090233376665, worksheet.costpercapita_cn105, 0.001); end
  def test_costpercapita_cp105; assert_in_delta(0.19321576018669534, worksheet.costpercapita_cp105, 0.001); end
  def test_costpercapita_cq105; assert_in_epsilon(4.291133194883743, worksheet.costpercapita_cq105, 0.001); end
  def test_costpercapita_cr105; assert_equal("ok", worksheet.costpercapita_cr105); end
  def test_costpercapita_a106; assert_equal("XVIII.a", worksheet.costpercapita_a106); end
  def test_costpercapita_b106; assert_equal("Storage of captured CO2", worksheet.costpercapita_b106); end
  def test_costpercapita_c106; assert_equal("Other", worksheet.costpercapita_c106); end
  def test_costpercapita_e106; assert_in_delta(0, (worksheet.costpercapita_e106||0), 0.001); end
  def test_costpercapita_f106; assert_in_epsilon(1.7135096450549578, worksheet.costpercapita_f106, 0.001); end
  def test_costpercapita_g106; assert_in_epsilon(3.647738276206623, worksheet.costpercapita_g106, 0.001); end
  def test_costpercapita_h106; assert_in_epsilon(3.2170134616906463, worksheet.costpercapita_h106, 0.001); end
  def test_costpercapita_i106; assert_in_epsilon(2.8327745629301195, worksheet.costpercapita_i106, 0.001); end
  def test_costpercapita_j106; assert_in_epsilon(2.4883651487340885, worksheet.costpercapita_j106, 0.001); end
  def test_costpercapita_k106; assert_in_epsilon(2.2130990738684746, worksheet.costpercapita_k106, 0.001); end
  def test_costpercapita_l106; assert_in_epsilon(1.9179810840688096, worksheet.costpercapita_l106, 0.001); end
  def test_costpercapita_m106; assert_in_epsilon(1.6454422222349594, worksheet.costpercapita_m106, 0.001); end
  def test_costpercapita_o106; assert_in_delta(0, (worksheet.costpercapita_o106||0), 0.001); end
  def test_costpercapita_p106; assert_in_delta(0.06031841317572214, worksheet.costpercapita_p106, 0.001); end
  def test_costpercapita_q106; assert_in_delta(0.1465832317430404, worksheet.costpercapita_q106, 0.001); end
  def test_costpercapita_r106; assert_in_delta(0.14773145212787878, worksheet.costpercapita_r106, 0.001); end
  def test_costpercapita_s106; assert_in_delta(0.1490000913332916, worksheet.costpercapita_s106, 0.001); end
  def test_costpercapita_t106; assert_in_delta(0.15046192531819924, worksheet.costpercapita_t106, 0.001); end
  def test_costpercapita_u106; assert_in_delta(0.1546387599818855, worksheet.costpercapita_u106, 0.001); end
  def test_costpercapita_v106; assert_in_delta(0.15597914305017013, worksheet.costpercapita_v106, 0.001); end
  def test_costpercapita_w106; assert_in_delta(0.15724360344880778, worksheet.costpercapita_w106, 0.001); end
  def test_costpercapita_y106; assert_in_delta(0, (worksheet.costpercapita_y106||0), 0.001); end
  def test_costpercapita_z106; assert_in_delta(0, (worksheet.costpercapita_z106||0), 0.001); end
  def test_costpercapita_aa106; assert_in_delta(0, (worksheet.costpercapita_aa106||0), 0.001); end
  def test_costpercapita_ab106; assert_in_delta(0, (worksheet.costpercapita_ab106||0), 0.001); end
  def test_costpercapita_ac106; assert_in_delta(0, (worksheet.costpercapita_ac106||0), 0.001); end
  def test_costpercapita_ad106; assert_in_delta(0, (worksheet.costpercapita_ad106||0), 0.001); end
  def test_costpercapita_ae106; assert_in_delta(0, (worksheet.costpercapita_ae106||0), 0.001); end
  def test_costpercapita_af106; assert_in_delta(0, (worksheet.costpercapita_af106||0), 0.001); end
  def test_costpercapita_ag106; assert_in_delta(0, (worksheet.costpercapita_ag106||0), 0.001); end
  def test_costpercapita_ai106; assert_in_delta(0, (worksheet.costpercapita_ai106||0), 0.001); end
  def test_costpercapita_aj106; assert_in_epsilon(1.77382805823068, worksheet.costpercapita_aj106, 0.001); end
  def test_costpercapita_ak106; assert_in_epsilon(3.7943215079496633, worksheet.costpercapita_ak106, 0.001); end
  def test_costpercapita_al106; assert_in_epsilon(3.364744913818525, worksheet.costpercapita_al106, 0.001); end
  def test_costpercapita_am106; assert_in_epsilon(2.981774654263411, worksheet.costpercapita_am106, 0.001); end
  def test_costpercapita_an106; assert_in_epsilon(2.638827074052288, worksheet.costpercapita_an106, 0.001); end
  def test_costpercapita_ao106; assert_in_epsilon(2.3677378338503603, worksheet.costpercapita_ao106, 0.001); end
  def test_costpercapita_ap106; assert_in_epsilon(2.0739602271189796, worksheet.costpercapita_ap106, 0.001); end
  def test_costpercapita_aq106; assert_in_epsilon(1.8026858256837672, worksheet.costpercapita_aq106, 0.001); end
  def test_costpercapita_as106; assert_in_epsilon(2.3108755661075193, worksheet.costpercapita_as106, 0.001); end
  def test_costpercapita_at106; assert_in_epsilon(53.8288910531199, worksheet.costpercapita_at106, 0.001); end
  def test_costpercapita_av106; assert_in_delta(0.07, worksheet.costpercapita_av106, 0.001); end
  def test_costpercapita_aw106; assert_in_epsilon(15, worksheet.costpercapita_aw106, 0.001); end
  def test_costpercapita_ay106; assert_in_delta(0, (worksheet.costpercapita_ay106||0), 0.001); end
  def test_costpercapita_az106; assert_in_delta(0.94067074200182, worksheet.costpercapita_az106, 0.001); end
  def test_costpercapita_ba106; assert_in_epsilon(2.002510275218013, worksheet.costpercapita_ba106, 0.001); end
  def test_costpercapita_bb106; assert_in_epsilon(1.7660539284220513, worksheet.costpercapita_bb106, 0.001); end
  def test_costpercapita_bc106; assert_in_epsilon(1.5551170999973514, worksheet.costpercapita_bc106, 0.001); end
  def test_costpercapita_bd106; assert_in_epsilon(1.3660455881216176, worksheet.costpercapita_bd106, 0.001); end
  def test_costpercapita_be106; assert_in_epsilon(1.214931911207671, worksheet.costpercapita_be106, 0.001); end
  def test_costpercapita_bf106; assert_in_epsilon(1.052920066544823, worksheet.costpercapita_bf106, 0.001); end
  def test_costpercapita_bg106; assert_in_delta(0.9033035562873877, worksheet.costpercapita_bg106, 0.001); end
  def test_costpercapita_bi106; assert_in_delta(0, (worksheet.costpercapita_bi106||0), 0.001); end
  def test_costpercapita_bj106; assert_in_delta(0.94067074200182, worksheet.costpercapita_bj106, 0.001); end
  def test_costpercapita_bk106; assert_in_epsilon(2.9123851969468824, worksheet.costpercapita_bk106, 0.001); end
  def test_costpercapita_bl106; assert_in_epsilon(4.588261559855816, worksheet.costpercapita_bl106, 0.001); end
  def test_costpercapita_bm106; assert_in_epsilon(5.160412853543977, worksheet.costpercapita_bm106, 0.001); end
  def test_costpercapita_bn106; assert_in_epsilon(4.5618717938984386, worksheet.costpercapita_bn106, 0.001); end
  def test_costpercapita_bo106; assert_in_epsilon(4.037946115457296, worksheet.costpercapita_bo106, 0.001); end
  def test_costpercapita_bp106; assert_in_epsilon(3.553860742723276, worksheet.costpercapita_bp106, 0.001); end
  def test_costpercapita_bq106; assert_in_epsilon(3.1050503838853265, worksheet.costpercapita_bq106, 0.001); end
  def test_costpercapita_bs106; assert_in_delta(0, (worksheet.costpercapita_bs106||0), 0.001); end
  def test_costpercapita_bt106; assert_in_epsilon(1.0009891551775423, worksheet.costpercapita_bt106, 0.001); end
  def test_costpercapita_bu106; assert_in_epsilon(3.0589684286899232, worksheet.costpercapita_bu106, 0.001); end
  def test_costpercapita_bv106; assert_in_epsilon(4.735993011983695, worksheet.costpercapita_bv106, 0.001); end
  def test_costpercapita_bw106; assert_in_epsilon(5.309412944877268, worksheet.costpercapita_bw106, 0.001); end
  def test_costpercapita_bx106; assert_in_epsilon(4.7123337192166375, worksheet.costpercapita_bx106, 0.001); end
  def test_costpercapita_by106; assert_in_epsilon(4.192584875439182, worksheet.costpercapita_by106, 0.001); end
  def test_costpercapita_bz106; assert_in_epsilon(3.7098398857734463, worksheet.costpercapita_bz106, 0.001); end
  def test_costpercapita_ca106; assert_in_epsilon(3.262293987334134, worksheet.costpercapita_ca106, 0.001); end
  def test_costpercapita_cc106; assert_in_epsilon(3.331379556499092, worksheet.costpercapita_cc106, 0.001); end
  def test_costpercapita_cd106; assert_in_epsilon(69.99646643497614, worksheet.costpercapita_cd106, 0.001); end
  def test_costpercapita_cf106; assert_in_delta(0, (worksheet.costpercapita_cf106||0), 0.001); end
  def test_costpercapita_cg106; assert_in_delta(-0.7728389030531378, worksheet.costpercapita_cg106, 0.001); end
  def test_costpercapita_ch106; assert_in_delta(-0.7353530792597401, worksheet.costpercapita_ch106, 0.001); end
  def test_costpercapita_ci106; assert_in_epsilon(1.3712480981651702, worksheet.costpercapita_ci106, 0.001); end
  def test_costpercapita_cj106; assert_in_epsilon(2.327638290613857, worksheet.costpercapita_cj106, 0.001); end
  def test_costpercapita_ck106; assert_in_epsilon(2.07350664516435, worksheet.costpercapita_ck106, 0.001); end
  def test_costpercapita_cl106; assert_in_epsilon(1.8248470415888218, worksheet.costpercapita_cl106, 0.001); end
  def test_costpercapita_cm106; assert_in_epsilon(1.6358796586544666, worksheet.costpercapita_cm106, 0.001); end
  def test_costpercapita_cn106; assert_in_epsilon(1.459608161650367, worksheet.costpercapita_cn106, 0.001); end
  def test_costpercapita_cp106; assert_in_epsilon(1.0205039903915727, worksheet.costpercapita_cp106, 0.001); end
  def test_costpercapita_cq106; assert_in_epsilon(16.167575381856242, worksheet.costpercapita_cq106, 0.001); end
  def test_costpercapita_cr106; assert_equal("ok", worksheet.costpercapita_cr106); end
  def test_costpercapita_a107; assert_equal("Total", worksheet.costpercapita_a107); end
  def test_costpercapita_b107; assert_equal("Total", worksheet.costpercapita_b107); end
  def test_costpercapita_c107; assert_equal("Total", worksheet.costpercapita_c107); end
  def test_costpercapita_e107; assert_in_epsilon(1431.7237983558375, worksheet.costpercapita_e107, 0.001); end
  def test_costpercapita_f107; assert_in_epsilon(1431.2164448523324, worksheet.costpercapita_f107, 0.001); end
  def test_costpercapita_g107; assert_in_epsilon(1490.7936599564637, worksheet.costpercapita_g107, 0.001); end
  def test_costpercapita_h107; assert_in_epsilon(1564.380441490827, worksheet.costpercapita_h107, 0.001); end
  def test_costpercapita_i107; assert_in_epsilon(1568.7943267845324, worksheet.costpercapita_i107, 0.001); end
  def test_costpercapita_j107; assert_in_epsilon(1615.3097615611225, worksheet.costpercapita_j107, 0.001); end
  def test_costpercapita_k107; assert_in_epsilon(1662.304628211501, worksheet.costpercapita_k107, 0.001); end
  def test_costpercapita_l107; assert_in_epsilon(1687.0996529101687, worksheet.costpercapita_l107, 0.001); end
  def test_costpercapita_m107; assert_in_epsilon(1710.7170466935443, worksheet.costpercapita_m107, 0.001); end
  def test_costpercapita_o107; assert_in_epsilon(1461.5256368608543, worksheet.costpercapita_o107, 0.001); end
  def test_costpercapita_p107; assert_in_epsilon(1446.7825168128052, worksheet.costpercapita_p107, 0.001); end
  def test_costpercapita_q107; assert_in_epsilon(1469.8672383483884, worksheet.costpercapita_q107, 0.001); end
  def test_costpercapita_r107; assert_in_epsilon(1504.0712225320565, worksheet.costpercapita_r107, 0.001); end
  def test_costpercapita_s107; assert_in_epsilon(1524.8618788517151, worksheet.costpercapita_s107, 0.001); end
  def test_costpercapita_t107; assert_in_epsilon(1541.1872957194992, worksheet.costpercapita_t107, 0.001); end
  def test_costpercapita_u107; assert_in_epsilon(1546.499450895918, worksheet.costpercapita_u107, 0.001); end
  def test_costpercapita_v107; assert_in_epsilon(1545.8651802962518, worksheet.costpercapita_v107, 0.001); end
  def test_costpercapita_w107; assert_in_epsilon(1542.2107448650565, worksheet.costpercapita_w107, 0.001); end
  def test_costpercapita_y107; assert_in_epsilon(747.3510211928905, worksheet.costpercapita_y107, 0.001); end
  def test_costpercapita_z107; assert_in_epsilon(829.5002706904614, worksheet.costpercapita_z107, 0.001); end
  def test_costpercapita_aa107; assert_in_epsilon(930.7975724433372, worksheet.costpercapita_aa107, 0.001); end
  def test_costpercapita_ab107; assert_in_epsilon(1029.9491300960988, worksheet.costpercapita_ab107, 0.001); end
  def test_costpercapita_ac107; assert_in_epsilon(1135.7652101814951, worksheet.costpercapita_ac107, 0.001); end
  def test_costpercapita_ad107; assert_in_epsilon(1169.6592417771058, worksheet.costpercapita_ad107, 0.001); end
  def test_costpercapita_ae107; assert_in_epsilon(1194.873494525682, worksheet.costpercapita_ae107, 0.001); end
  def test_costpercapita_af107; assert_in_epsilon(1224.237003475393, worksheet.costpercapita_af107, 0.001); end
  def test_costpercapita_ag107; assert_in_epsilon(1242.8763567025017, worksheet.costpercapita_ag107, 0.001); end
  def test_costpercapita_ai107; assert_in_epsilon(3640.600456409582, worksheet.costpercapita_ai107, 0.001); end
  def test_costpercapita_aj107; assert_in_epsilon(3707.499232355598, worksheet.costpercapita_aj107, 0.001); end
  def test_costpercapita_ak107; assert_in_epsilon(3891.4584707481886, worksheet.costpercapita_ak107, 0.001); end
  def test_costpercapita_al107; assert_in_epsilon(4098.400794118983, worksheet.costpercapita_al107, 0.001); end
  def test_costpercapita_am107; assert_in_epsilon(4229.421415817743, worksheet.costpercapita_am107, 0.001); end
  def test_costpercapita_an107; assert_in_epsilon(4326.156299057729, worksheet.costpercapita_an107, 0.001); end
  def test_costpercapita_ao107; assert_in_epsilon(4403.677573633102, worksheet.costpercapita_ao107, 0.001); end
  def test_costpercapita_ap107; assert_in_epsilon(4457.201836681812, worksheet.costpercapita_ap107, 0.001); end
  def test_costpercapita_aq107; assert_in_epsilon(4495.804148261103, worksheet.costpercapita_aq107, 0.001); end
  def test_costpercapita_as107; assert_in_epsilon(4138.913358564871, worksheet.costpercapita_as107, 0.001); end
  def test_costpercapita_at107; assert_in_epsilon(85707.71734989547, worksheet.costpercapita_at107, 0.001); end
  def test_costpercapita_ay107; assert_in_epsilon(494.0396703763935, worksheet.costpercapita_ay107, 0.001); end
  def test_costpercapita_az107; assert_in_epsilon(820.6456004755971, worksheet.costpercapita_az107, 0.001); end
  def test_costpercapita_ba107; assert_in_epsilon(855.022700990698, worksheet.costpercapita_ba107, 0.001); end
  def test_costpercapita_bb107; assert_in_epsilon(896.7244618059908, worksheet.costpercapita_bb107, 0.001); end
  def test_costpercapita_bc107; assert_in_epsilon(902.0275302097743, worksheet.costpercapita_bc107, 0.001); end
  def test_costpercapita_bd107; assert_in_epsilon(927.5493457815999, worksheet.costpercapita_bd107, 0.001); end
  def test_costpercapita_be107; assert_in_epsilon(950.4949802026753, worksheet.costpercapita_be107, 0.001); end
  def test_costpercapita_bf107; assert_in_epsilon(963.1078904719185, worksheet.costpercapita_bf107, 0.001); end
  def test_costpercapita_bg107; assert_in_epsilon(975.0101994726856, worksheet.costpercapita_bg107, 0.001); end
  def test_costpercapita_bi107; assert_in_epsilon(494.0396703763935, worksheet.costpercapita_bi107, 0.001); end
  def test_costpercapita_bj107; assert_in_epsilon(1260.7494639375823, worksheet.costpercapita_bj107, 0.001); end
  def test_costpercapita_bk107; assert_in_epsilon(1987.8123938221981, worksheet.costpercapita_bk107, 0.001); end
  def test_costpercapita_bl107; assert_in_epsilon(2345.5114689108204, worksheet.costpercapita_bl107, 0.001); end
  def test_costpercapita_bm107; assert_in_epsilon(2459.63172463863, worksheet.costpercapita_bm107, 0.001); end
  def test_costpercapita_bn107; assert_in_epsilon(2552.3478142879408, worksheet.costpercapita_bn107, 0.001); end
  def test_costpercapita_bo107; assert_in_epsilon(2613.6014472827032, worksheet.costpercapita_bo107, 0.001); end
  def test_costpercapita_bp107; assert_in_epsilon(2689.201238045617, worksheet.costpercapita_bp107, 0.001); end
  def test_costpercapita_bq107; assert_in_epsilon(2716.759143777658, worksheet.costpercapita_bq107, 0.001); end
  def test_costpercapita_bs107; assert_in_epsilon(2702.916328430138, worksheet.costpercapita_bs107, 0.001); end
  def test_costpercapita_bt107; assert_in_epsilon(3537.032251440848, worksheet.costpercapita_bt107, 0.001); end
  def test_costpercapita_bu107; assert_in_epsilon(4388.477204613923, worksheet.costpercapita_bu107, 0.001); end
  def test_costpercapita_bv107; assert_in_epsilon(4879.531821538976, worksheet.costpercapita_bv107, 0.001); end
  def test_costpercapita_bw107; assert_in_epsilon(5120.258813671842, worksheet.costpercapita_bw107, 0.001); end
  def test_costpercapita_bx107; assert_in_epsilon(5263.194351784546, worksheet.costpercapita_bx107, 0.001); end
  def test_costpercapita_by107; assert_in_epsilon(5354.9743927043055, worksheet.costpercapita_by107, 0.001); end
  def test_costpercapita_bz107; assert_in_epsilon(5459.30342181726, worksheet.costpercapita_bz107, 0.001); end
  def test_costpercapita_ca107; assert_in_epsilon(5501.846245345217, worksheet.costpercapita_ca107, 0.001); end
  def test_costpercapita_cc107; assert_in_epsilon(4689.726092371895, worksheet.costpercapita_cc107, 0.001); end
  def test_costpercapita_cd107; assert_in_epsilon(96934.45358919763, worksheet.costpercapita_cd107, 0.001); end
  def test_costpercapita_cf107; assert_in_epsilon(-937.6841279794439, worksheet.costpercapita_cf107, 0.001); end
  def test_costpercapita_cg107; assert_in_epsilon(-170.46698091475014, worksheet.costpercapita_cg107, 0.001); end
  def test_costpercapita_ch107; assert_in_epsilon(497.01873386573436, worksheet.costpercapita_ch107, 0.001); end
  def test_costpercapita_ci107; assert_in_epsilon(781.1310274199934, worksheet.costpercapita_ci107, 0.001); end
  def test_costpercapita_cj107; assert_in_epsilon(890.8373978540982, worksheet.costpercapita_cj107, 0.001); end
  def test_costpercapita_ck107; assert_in_epsilon(937.0380527268183, worksheet.costpercapita_ck107, 0.001); end
  def test_costpercapita_cl107; assert_in_epsilon(951.2968190712023, worksheet.costpercapita_cl107, 0.001); end
  def test_costpercapita_cm107; assert_in_epsilon(1002.1015851354484, worksheet.costpercapita_cm107, 0.001); end
  def test_costpercapita_cn107; assert_in_epsilon(1006.0420970841138, worksheet.costpercapita_cn107, 0.001); end
  def test_costpercapita_cp107; assert_in_epsilon(550.812733807024, worksheet.costpercapita_cp107, 0.001); end
  def test_costpercapita_cq107; assert_in_epsilon(11226.736239302152, worksheet.costpercapita_cq107, 0.001); end
  def test_costpercapita_cr107; assert_equal("ok", worksheet.costpercapita_cr107); end
  def test_costpercapita_cf108; assert_equal("ok", worksheet.costpercapita_cf108); end
  def test_costpercapita_cg108; assert_equal("ok", worksheet.costpercapita_cg108); end
  def test_costpercapita_ch108; assert_equal("ok", worksheet.costpercapita_ch108); end
  def test_costpercapita_ci108; assert_equal("ok", worksheet.costpercapita_ci108); end
  def test_costpercapita_cj108; assert_equal("ok", worksheet.costpercapita_cj108); end
  def test_costpercapita_ck108; assert_equal("ok", worksheet.costpercapita_ck108); end
  def test_costpercapita_cl108; assert_equal("ok", worksheet.costpercapita_cl108); end
  def test_costpercapita_cm108; assert_equal("ok", worksheet.costpercapita_cm108); end
  def test_costpercapita_cn108; assert_equal("ok", worksheet.costpercapita_cn108); end
  def test_costpercapita_cp108; assert_equal("ok", worksheet.costpercapita_cp108); end
  def test_costpercapita_cq108; assert_equal("ok", worksheet.costpercapita_cq108); end
  def test_costpercapita_b110; assert_equal("£/Capita/yr", worksheet.costpercapita_b110); end
  def test_costpercapita_e110; assert_equal("C1.High", worksheet.costpercapita_e110); end
  def test_costpercapita_f110; assert_equal("High estimate of capital costs", worksheet.costpercapita_f110); end
  def test_costpercapita_o110; assert_equal("C2.High", worksheet.costpercapita_o110); end
  def test_costpercapita_p110; assert_equal("High estimate of operating costs", worksheet.costpercapita_p110); end
  def test_costpercapita_y110; assert_equal("C3.High", worksheet.costpercapita_y110); end
  def test_costpercapita_z110; assert_equal("High estimate of fuel costs", worksheet.costpercapita_z110); end
  def test_costpercapita_ai110; assert_equal("High estimate of total cost", worksheet.costpercapita_ai110); end
  def test_costpercapita_as110; assert_equal("Cashflow capital basis", worksheet.costpercapita_as110); end
  def test_costpercapita_av110; assert_equal("Loan", worksheet.costpercapita_av110); end
  def test_costpercapita_ay110; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay110); end
  def test_costpercapita_bi110; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi110); end
  def test_costpercapita_br110; assert_equal("Total cost (ammortised capital)", worksheet.costpercapita_br110); end
  def test_costpercapita_cc110; assert_equal("Amortised Capital", worksheet.costpercapita_cc110); end
  def test_costpercapita_cf110; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf110); end
  def test_costpercapita_cp110; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp110); end
  def test_costpercapita_a111; assert_equal("Code", worksheet.costpercapita_a111); end
  def test_costpercapita_b111; assert_equal("Description", worksheet.costpercapita_b111); end
  def test_costpercapita_c111; assert_equal("Category", worksheet.costpercapita_c111); end
  def test_costpercapita_e111; assert_equal("2010", worksheet.costpercapita_e111); end
  def test_costpercapita_f111; assert_equal("2015", worksheet.costpercapita_f111); end
  def test_costpercapita_g111; assert_equal("2020", worksheet.costpercapita_g111); end
  def test_costpercapita_h111; assert_equal("2025", worksheet.costpercapita_h111); end
  def test_costpercapita_i111; assert_equal("2030", worksheet.costpercapita_i111); end
  def test_costpercapita_j111; assert_equal("2035", worksheet.costpercapita_j111); end
  def test_costpercapita_k111; assert_equal("2040", worksheet.costpercapita_k111); end
  def test_costpercapita_l111; assert_equal("2045", worksheet.costpercapita_l111); end
  def test_costpercapita_m111; assert_equal("2050", worksheet.costpercapita_m111); end
  def test_costpercapita_o111; assert_equal("2010", worksheet.costpercapita_o111); end
  def test_costpercapita_p111; assert_equal("2015", worksheet.costpercapita_p111); end
  def test_costpercapita_q111; assert_equal("2020", worksheet.costpercapita_q111); end
  def test_costpercapita_r111; assert_equal("2025", worksheet.costpercapita_r111); end
  def test_costpercapita_s111; assert_equal("2030", worksheet.costpercapita_s111); end
  def test_costpercapita_t111; assert_equal("2035", worksheet.costpercapita_t111); end
  def test_costpercapita_u111; assert_equal("2040", worksheet.costpercapita_u111); end
  def test_costpercapita_v111; assert_equal("2045", worksheet.costpercapita_v111); end
  def test_costpercapita_w111; assert_equal("2050", worksheet.costpercapita_w111); end
  def test_costpercapita_y111; assert_equal("2010", worksheet.costpercapita_y111); end
  def test_costpercapita_z111; assert_equal("2015", worksheet.costpercapita_z111); end
  def test_costpercapita_aa111; assert_equal("2020", worksheet.costpercapita_aa111); end
  def test_costpercapita_ab111; assert_equal("2025", worksheet.costpercapita_ab111); end
  def test_costpercapita_ac111; assert_equal("2030", worksheet.costpercapita_ac111); end
  def test_costpercapita_ad111; assert_equal("2035", worksheet.costpercapita_ad111); end
  def test_costpercapita_ae111; assert_equal("2040", worksheet.costpercapita_ae111); end
  def test_costpercapita_af111; assert_equal("2045", worksheet.costpercapita_af111); end
  def test_costpercapita_ag111; assert_equal("2050", worksheet.costpercapita_ag111); end
  def test_costpercapita_ai111; assert_equal("2010", worksheet.costpercapita_ai111); end
  def test_costpercapita_aj111; assert_equal("2015", worksheet.costpercapita_aj111); end
  def test_costpercapita_ak111; assert_equal("2020", worksheet.costpercapita_ak111); end
  def test_costpercapita_al111; assert_equal("2025", worksheet.costpercapita_al111); end
  def test_costpercapita_am111; assert_equal("2030", worksheet.costpercapita_am111); end
  def test_costpercapita_an111; assert_equal("2035", worksheet.costpercapita_an111); end
  def test_costpercapita_ao111; assert_equal("2040", worksheet.costpercapita_ao111); end
  def test_costpercapita_ap111; assert_equal("2045", worksheet.costpercapita_ap111); end
  def test_costpercapita_aq111; assert_equal("2050", worksheet.costpercapita_aq111); end
  def test_costpercapita_as111; assert_equal("Mean", worksheet.costpercapita_as111); end
  def test_costpercapita_at111; assert_equal("NPV", worksheet.costpercapita_at111); end
  def test_costpercapita_av111; assert_equal("Rate", worksheet.costpercapita_av111); end
  def test_costpercapita_aw111; assert_equal("Years", worksheet.costpercapita_aw111); end
  def test_costpercapita_ay111; assert_in_epsilon(2010, worksheet.costpercapita_ay111, 0.001); end
  def test_costpercapita_az111; assert_in_epsilon(2015, worksheet.costpercapita_az111, 0.001); end
  def test_costpercapita_ba111; assert_in_epsilon(2020, worksheet.costpercapita_ba111, 0.001); end
  def test_costpercapita_bb111; assert_in_epsilon(2025, worksheet.costpercapita_bb111, 0.001); end
  def test_costpercapita_bc111; assert_in_epsilon(2030, worksheet.costpercapita_bc111, 0.001); end
  def test_costpercapita_bd111; assert_in_epsilon(2035, worksheet.costpercapita_bd111, 0.001); end
  def test_costpercapita_be111; assert_in_epsilon(2040, worksheet.costpercapita_be111, 0.001); end
  def test_costpercapita_bf111; assert_in_epsilon(2045, worksheet.costpercapita_bf111, 0.001); end
  def test_costpercapita_bg111; assert_in_epsilon(2050, worksheet.costpercapita_bg111, 0.001); end
  def test_costpercapita_bi111; assert_in_epsilon(2010, worksheet.costpercapita_bi111, 0.001); end
  def test_costpercapita_bj111; assert_in_epsilon(2015, worksheet.costpercapita_bj111, 0.001); end
  def test_costpercapita_bk111; assert_in_epsilon(2020, worksheet.costpercapita_bk111, 0.001); end
  def test_costpercapita_bl111; assert_in_epsilon(2025, worksheet.costpercapita_bl111, 0.001); end
  def test_costpercapita_bm111; assert_in_epsilon(2030, worksheet.costpercapita_bm111, 0.001); end
  def test_costpercapita_bn111; assert_in_epsilon(2035, worksheet.costpercapita_bn111, 0.001); end
  def test_costpercapita_bo111; assert_in_epsilon(2040, worksheet.costpercapita_bo111, 0.001); end
  def test_costpercapita_bp111; assert_in_epsilon(2045, worksheet.costpercapita_bp111, 0.001); end
  def test_costpercapita_bq111; assert_in_epsilon(2050, worksheet.costpercapita_bq111, 0.001); end
  def test_costpercapita_bs111; assert_equal("2010", worksheet.costpercapita_bs111); end
  def test_costpercapita_bt111; assert_equal("2015", worksheet.costpercapita_bt111); end
  def test_costpercapita_bu111; assert_equal("2020", worksheet.costpercapita_bu111); end
  def test_costpercapita_bv111; assert_equal("2025", worksheet.costpercapita_bv111); end
  def test_costpercapita_bw111; assert_equal("2030", worksheet.costpercapita_bw111); end
  def test_costpercapita_bx111; assert_equal("2035", worksheet.costpercapita_bx111); end
  def test_costpercapita_by111; assert_equal("2040", worksheet.costpercapita_by111); end
  def test_costpercapita_bz111; assert_equal("2045", worksheet.costpercapita_bz111); end
  def test_costpercapita_ca111; assert_equal("2050", worksheet.costpercapita_ca111); end
  def test_costpercapita_cc111; assert_equal("Mean", worksheet.costpercapita_cc111); end
  def test_costpercapita_cd111; assert_equal("NPV", worksheet.costpercapita_cd111); end
  def test_costpercapita_cf111; assert_equal("2010", worksheet.costpercapita_cf111); end
  def test_costpercapita_cg111; assert_equal("2015", worksheet.costpercapita_cg111); end
  def test_costpercapita_ch111; assert_equal("2020", worksheet.costpercapita_ch111); end
  def test_costpercapita_ci111; assert_equal("2025", worksheet.costpercapita_ci111); end
  def test_costpercapita_cj111; assert_equal("2030", worksheet.costpercapita_cj111); end
  def test_costpercapita_ck111; assert_equal("2035", worksheet.costpercapita_ck111); end
  def test_costpercapita_cl111; assert_equal("2040", worksheet.costpercapita_cl111); end
  def test_costpercapita_cm111; assert_equal("2045", worksheet.costpercapita_cm111); end
  def test_costpercapita_cn111; assert_equal("2050", worksheet.costpercapita_cn111); end
  def test_costpercapita_cp111; assert_equal("Mean", worksheet.costpercapita_cp111); end
  def test_costpercapita_cq111; assert_equal("NPV", worksheet.costpercapita_cq111); end
  def test_costpercapita_a112; assert_equal("I.a", worksheet.costpercapita_a112); end
  def test_costpercapita_b112; assert_equal("Conventional thermal plant", worksheet.costpercapita_b112); end
  def test_costpercapita_c112; assert_equal("Electricity", worksheet.costpercapita_c112); end
  def test_costpercapita_e112; assert_in_epsilon(7.16588391737368, worksheet.costpercapita_e112, 0.001); end
  def test_costpercapita_f112; assert_in_epsilon(26.179654476063103, worksheet.costpercapita_f112, 0.001); end
  def test_costpercapita_g112; assert_in_epsilon(38.6793078459415, worksheet.costpercapita_g112, 0.001); end
  def test_costpercapita_h112; assert_in_epsilon(51.595281408259076, worksheet.costpercapita_h112, 0.001); end
  def test_costpercapita_i112; assert_in_epsilon(55.92763528509278, worksheet.costpercapita_i112, 0.001); end
  def test_costpercapita_j112; assert_in_epsilon(56.55149287426343, worksheet.costpercapita_j112, 0.001); end
  def test_costpercapita_k112; assert_in_epsilon(139.93536860865123, worksheet.costpercapita_k112, 0.001); end
  def test_costpercapita_l112; assert_in_epsilon(141.0970308401844, worksheet.costpercapita_l112, 0.001); end
  def test_costpercapita_m112; assert_in_epsilon(138.0679832147547, worksheet.costpercapita_m112, 0.001); end
  def test_costpercapita_o112; assert_in_epsilon(94.16598414786196, worksheet.costpercapita_o112, 0.001); end
  def test_costpercapita_p112; assert_in_epsilon(84.00241793521941, worksheet.costpercapita_p112, 0.001); end
  def test_costpercapita_q112; assert_in_epsilon(79.20171495362622, worksheet.costpercapita_q112, 0.001); end
  def test_costpercapita_r112; assert_in_epsilon(75.2014721536162, worksheet.costpercapita_r112, 0.001); end
  def test_costpercapita_s112; assert_in_epsilon(73.38369032427333, worksheet.costpercapita_s112, 0.001); end
  def test_costpercapita_t112; assert_in_epsilon(77.53367748267216, worksheet.costpercapita_t112, 0.001); end
  def test_costpercapita_u112; assert_in_epsilon(81.58869360706176, worksheet.costpercapita_u112, 0.001); end
  def test_costpercapita_v112; assert_in_epsilon(85.53277520472164, worksheet.costpercapita_v112, 0.001); end
  def test_costpercapita_w112; assert_in_epsilon(87.89952978667618, worksheet.costpercapita_w112, 0.001); end
  def test_costpercapita_y112; assert_in_delta(0, (worksheet.costpercapita_y112||0), 0.001); end
  def test_costpercapita_z112; assert_in_delta(0, (worksheet.costpercapita_z112||0), 0.001); end
  def test_costpercapita_aa112; assert_in_delta(0, (worksheet.costpercapita_aa112||0), 0.001); end
  def test_costpercapita_ab112; assert_in_delta(0, (worksheet.costpercapita_ab112||0), 0.001); end
  def test_costpercapita_ac112; assert_in_delta(0, (worksheet.costpercapita_ac112||0), 0.001); end
  def test_costpercapita_ad112; assert_in_delta(0, (worksheet.costpercapita_ad112||0), 0.001); end
  def test_costpercapita_ae112; assert_in_delta(0, (worksheet.costpercapita_ae112||0), 0.001); end
  def test_costpercapita_af112; assert_in_delta(0, (worksheet.costpercapita_af112||0), 0.001); end
  def test_costpercapita_ag112; assert_in_delta(0, (worksheet.costpercapita_ag112||0), 0.001); end
  def test_costpercapita_ai112; assert_in_epsilon(101.33186806523565, worksheet.costpercapita_ai112, 0.001); end
  def test_costpercapita_aj112; assert_in_epsilon(110.18207241128252, worksheet.costpercapita_aj112, 0.001); end
  def test_costpercapita_ak112; assert_in_epsilon(117.88102279956773, worksheet.costpercapita_ak112, 0.001); end
  def test_costpercapita_al112; assert_in_epsilon(126.79675356187528, worksheet.costpercapita_al112, 0.001); end
  def test_costpercapita_am112; assert_in_epsilon(129.31132560936612, worksheet.costpercapita_am112, 0.001); end
  def test_costpercapita_an112; assert_in_epsilon(134.0851703569356, worksheet.costpercapita_an112, 0.001); end
  def test_costpercapita_ao112; assert_in_epsilon(221.524062215713, worksheet.costpercapita_ao112, 0.001); end
  def test_costpercapita_ap112; assert_in_epsilon(226.62980604490605, worksheet.costpercapita_ap112, 0.001); end
  def test_costpercapita_aq112; assert_in_epsilon(225.9675130014309, worksheet.costpercapita_aq112, 0.001); end
  def test_costpercapita_as112; assert_in_epsilon(154.85662156292364, worksheet.costpercapita_as112, 0.001); end
  def test_costpercapita_at112; assert_in_epsilon(3012.4646987607434, worksheet.costpercapita_at112, 0.001); end
  def test_costpercapita_av112; assert_in_delta(0.1, worksheet.costpercapita_av112, 0.001); end
  def test_costpercapita_aw112; assert_in_epsilon(20, worksheet.costpercapita_aw112, 0.001); end
  def test_costpercapita_ay112; assert_in_epsilon(2.525106108294998, worksheet.costpercapita_ay112, 0.001); end
  def test_costpercapita_az112; assert_in_epsilon(15.375261957166353, worksheet.costpercapita_az112, 0.001); end
  def test_costpercapita_ba112; assert_in_epsilon(22.71628493023037, worksheet.costpercapita_ba112, 0.001); end
  def test_costpercapita_bb112; assert_in_epsilon(30.301811971240095, worksheet.costpercapita_bb112, 0.001); end
  def test_costpercapita_bc112; assert_in_epsilon(32.84619527501395, worksheet.costpercapita_bc112, 0.001); end
  def test_costpercapita_bd112; assert_in_epsilon(33.212585666691396, worksheet.costpercapita_bd112, 0.001); end
  def test_costpercapita_be112; assert_in_epsilon(82.18377944590026, worksheet.costpercapita_be112, 0.001); end
  def test_costpercapita_bf112; assert_in_epsilon(82.86602149504188, worksheet.costpercapita_bf112, 0.001); end
  def test_costpercapita_bg112; assert_in_epsilon(81.08706750753616, worksheet.costpercapita_bg112, 0.001); end
  def test_costpercapita_bi112; assert_in_epsilon(2.525106108294998, worksheet.costpercapita_bi112, 0.001); end
  def test_costpercapita_bj112; assert_in_epsilon(17.817102516674087, worksheet.costpercapita_bj112, 0.001); end
  def test_costpercapita_bk112; assert_in_epsilon(39.950088464180105, worksheet.costpercapita_bk112, 0.001); end
  def test_costpercapita_bl112; assert_in_epsilon(69.01490687992825, worksheet.costpercapita_bl112, 0.001); end
  def test_costpercapita_bm112; assert_in_epsilon(97.74936717804883, worksheet.costpercapita_bm112, 0.001); end
  def test_costpercapita_bn112; assert_in_epsilon(114.97189875109535, worksheet.costpercapita_bn112, 0.001); end
  def test_costpercapita_bo112; assert_in_epsilon(174.24246640121186, worksheet.costpercapita_bo112, 0.001); end
  def test_costpercapita_bp112; assert_in_epsilon(256.79100315787986, worksheet.costpercapita_bp112, 0.001); end
  def test_costpercapita_bq112; assert_in_epsilon(272.70935294530005, worksheet.costpercapita_bq112, 0.001); end
  def test_costpercapita_bs112; assert_in_epsilon(96.69109025615697, worksheet.costpercapita_bs112, 0.001); end
  def test_costpercapita_bt112; assert_in_epsilon(101.8195204518935, worksheet.costpercapita_bt112, 0.001); end
  def test_costpercapita_bu112; assert_in_epsilon(119.15180341780633, worksheet.costpercapita_bu112, 0.001); end
  def test_costpercapita_bv112; assert_in_epsilon(144.21637903354446, worksheet.costpercapita_bv112, 0.001); end
  def test_costpercapita_bw112; assert_in_epsilon(171.13305750232215, worksheet.costpercapita_bw112, 0.001); end
  def test_costpercapita_bx112; assert_in_epsilon(192.50557623376753, worksheet.costpercapita_bx112, 0.001); end
  def test_costpercapita_by112; assert_in_epsilon(255.8311600082736, worksheet.costpercapita_by112, 0.001); end
  def test_costpercapita_bz112; assert_in_epsilon(342.3237783626015, worksheet.costpercapita_bz112, 0.001); end
  def test_costpercapita_ca112; assert_in_epsilon(360.6088827319763, worksheet.costpercapita_ca112, 0.001); end
  def test_costpercapita_cc112; assert_in_epsilon(198.25347199981582, worksheet.costpercapita_cc112, 0.001); end
  def test_costpercapita_cd112; assert_in_epsilon(3675.1692488542235, worksheet.costpercapita_cd112, 0.001); end
  def test_costpercapita_cf112; assert_in_epsilon(-4.640777809078682, worksheet.costpercapita_cf112, 0.001); end
  def test_costpercapita_cg112; assert_in_epsilon(-8.362551959389018, worksheet.costpercapita_cg112, 0.001); end
  def test_costpercapita_ch112; assert_in_epsilon(1.270780618238602, worksheet.costpercapita_ch112, 0.001); end
  def test_costpercapita_ci112; assert_in_epsilon(17.419625471669175, worksheet.costpercapita_ci112, 0.001); end
  def test_costpercapita_cj112; assert_in_epsilon(41.82173189295605, worksheet.costpercapita_cj112, 0.001); end
  def test_costpercapita_ck112; assert_in_epsilon(58.42040587683193, worksheet.costpercapita_ck112, 0.001); end
  def test_costpercapita_cl112; assert_in_epsilon(34.307097792560626, worksheet.costpercapita_cl112, 0.001); end
  def test_costpercapita_cm112; assert_in_epsilon(115.69397231769544, worksheet.costpercapita_cm112, 0.001); end
  def test_costpercapita_cn112; assert_in_epsilon(134.6413697305454, worksheet.costpercapita_cn112, 0.001); end
  def test_costpercapita_cp112; assert_in_epsilon(43.39685043689217, worksheet.costpercapita_cp112, 0.001); end
  def test_costpercapita_cq112; assert_in_epsilon(662.7045500934798, worksheet.costpercapita_cq112, 0.001); end
  def test_costpercapita_cr112; assert_equal("ok", worksheet.costpercapita_cr112); end
  def test_costpercapita_a113; assert_equal("I.b", worksheet.costpercapita_a113); end
  def test_costpercapita_b113; assert_equal("Combustion + CCS", worksheet.costpercapita_b113); end
  def test_costpercapita_c113; assert_equal("Electricity", worksheet.costpercapita_c113); end
  def test_costpercapita_e113; assert_in_delta(0, (worksheet.costpercapita_e113||0), 0.001); end
  def test_costpercapita_f113; assert_in_epsilon(7.360730631077048, worksheet.costpercapita_f113, 0.001); end
  def test_costpercapita_g113; assert_in_epsilon(10.615742211572174, worksheet.costpercapita_g113, 0.001); end
  def test_costpercapita_h113; assert_in_delta(-1.3436365674501494e-15, worksheet.costpercapita_h113, 0.001); end
  def test_costpercapita_i113; assert_in_delta(0, (worksheet.costpercapita_i113||0), 0.001); end
  def test_costpercapita_j113; assert_in_delta(0, (worksheet.costpercapita_j113||0), 0.001); end
  def test_costpercapita_k113; assert_in_delta(0, (worksheet.costpercapita_k113||0), 0.001); end
  def test_costpercapita_l113; assert_in_delta(0, (worksheet.costpercapita_l113||0), 0.001); end
  def test_costpercapita_m113; assert_in_delta(0, (worksheet.costpercapita_m113||0), 0.001); end
  def test_costpercapita_o113; assert_in_delta(0, (worksheet.costpercapita_o113||0), 0.001); end
  def test_costpercapita_p113; assert_in_epsilon(1.9434554398382349, worksheet.costpercapita_p113, 0.001); end
  def test_costpercapita_q113; assert_in_epsilon(3.9626011030763046, worksheet.costpercapita_q113, 0.001); end
  def test_costpercapita_r113; assert_in_epsilon(3.8399052038698325, worksheet.costpercapita_r113, 0.001); end
  def test_costpercapita_s113; assert_in_epsilon(3.734998405824467, worksheet.costpercapita_s113, 0.001); end
  def test_costpercapita_t113; assert_in_epsilon(3.6470179195035626, worksheet.costpercapita_t113, 0.001); end
  def test_costpercapita_u113; assert_in_epsilon(3.569240206656842, worksheet.costpercapita_u113, 0.001); end
  def test_costpercapita_v113; assert_in_epsilon(3.4980412694025507, worksheet.costpercapita_v113, 0.001); end
  def test_costpercapita_w113; assert_in_epsilon(3.432761749418212, worksheet.costpercapita_w113, 0.001); end
  def test_costpercapita_y113; assert_in_delta(0, (worksheet.costpercapita_y113||0), 0.001); end
  def test_costpercapita_z113; assert_in_delta(0, (worksheet.costpercapita_z113||0), 0.001); end
  def test_costpercapita_aa113; assert_in_delta(0, (worksheet.costpercapita_aa113||0), 0.001); end
  def test_costpercapita_ab113; assert_in_delta(0, (worksheet.costpercapita_ab113||0), 0.001); end
  def test_costpercapita_ac113; assert_in_delta(0, (worksheet.costpercapita_ac113||0), 0.001); end
  def test_costpercapita_ad113; assert_in_delta(0, (worksheet.costpercapita_ad113||0), 0.001); end
  def test_costpercapita_ae113; assert_in_delta(0, (worksheet.costpercapita_ae113||0), 0.001); end
  def test_costpercapita_af113; assert_in_delta(0, (worksheet.costpercapita_af113||0), 0.001); end
  def test_costpercapita_ag113; assert_in_delta(0, (worksheet.costpercapita_ag113||0), 0.001); end
  def test_costpercapita_ai113; assert_in_delta(0, (worksheet.costpercapita_ai113||0), 0.001); end
  def test_costpercapita_aj113; assert_in_epsilon(9.304186070915282, worksheet.costpercapita_aj113, 0.001); end
  def test_costpercapita_ak113; assert_in_epsilon(14.57834331464848, worksheet.costpercapita_ak113, 0.001); end
  def test_costpercapita_al113; assert_in_epsilon(3.839905203869831, worksheet.costpercapita_al113, 0.001); end
  def test_costpercapita_am113; assert_in_epsilon(3.734998405824467, worksheet.costpercapita_am113, 0.001); end
  def test_costpercapita_an113; assert_in_epsilon(3.6470179195035626, worksheet.costpercapita_an113, 0.001); end
  def test_costpercapita_ao113; assert_in_epsilon(3.569240206656842, worksheet.costpercapita_ao113, 0.001); end
  def test_costpercapita_ap113; assert_in_epsilon(3.4980412694025507, worksheet.costpercapita_ap113, 0.001); end
  def test_costpercapita_aq113; assert_in_epsilon(3.432761749418212, worksheet.costpercapita_aq113, 0.001); end
  def test_costpercapita_as113; assert_in_epsilon(5.067166015582137, worksheet.costpercapita_as113, 0.001); end
  def test_costpercapita_at113; assert_in_epsilon(135.68890479974675, worksheet.costpercapita_at113, 0.001); end
  def test_costpercapita_av113; assert_in_delta(0.1, worksheet.costpercapita_av113, 0.001); end
  def test_costpercapita_aw113; assert_in_epsilon(30, worksheet.costpercapita_aw113, 0.001); end
  def test_costpercapita_ay113; assert_in_delta(0, (worksheet.costpercapita_ay113||0), 0.001); end
  def test_costpercapita_az113; assert_in_epsilon(3.9041038596739437, worksheet.costpercapita_az113, 0.001); end
  def test_costpercapita_ba113; assert_in_epsilon(5.630549767236648, worksheet.costpercapita_ba113, 0.001); end
  def test_costpercapita_bb113; assert_in_delta(-7.126597849993063e-16, worksheet.costpercapita_bb113, 0.001); end
  def test_costpercapita_bc113; assert_in_delta(0, (worksheet.costpercapita_bc113||0), 0.001); end
  def test_costpercapita_bd113; assert_in_delta(0, (worksheet.costpercapita_bd113||0), 0.001); end
  def test_costpercapita_be113; assert_in_delta(0, (worksheet.costpercapita_be113||0), 0.001); end
  def test_costpercapita_bf113; assert_in_delta(0, (worksheet.costpercapita_bf113||0), 0.001); end
  def test_costpercapita_bg113; assert_in_delta(0, (worksheet.costpercapita_bg113||0), 0.001); end
  def test_costpercapita_bi113; assert_in_delta(0, (worksheet.costpercapita_bi113||0), 0.001); end
  def test_costpercapita_bj113; assert_in_epsilon(3.9041038596739437, worksheet.costpercapita_bj113, 0.001); end
  def test_costpercapita_bk113; assert_in_epsilon(9.406840487391028, worksheet.costpercapita_bk113, 0.001); end
  def test_costpercapita_bl113; assert_in_epsilon(9.11557201946569, worksheet.costpercapita_bl113, 0.001); end
  def test_costpercapita_bm113; assert_in_epsilon(8.866533196332679, worksheet.costpercapita_bm113, 0.001); end
  def test_costpercapita_bn113; assert_in_epsilon(8.657675837417262, worksheet.costpercapita_bn113, 0.001); end
  def test_costpercapita_bo113; assert_in_epsilon(8.473038898398796, worksheet.costpercapita_bo113, 0.001); end
  def test_costpercapita_bp113; assert_in_epsilon(4.970446164749743, worksheet.costpercapita_bp113, 0.001); end
  def test_costpercapita_bq113; assert_in_delta(-6.370967824488916e-16, worksheet.costpercapita_bq113, 0.001); end
  def test_costpercapita_bs113; assert_in_delta(0, (worksheet.costpercapita_bs113||0), 0.001); end
  def test_costpercapita_bt113; assert_in_epsilon(5.847559299512178, worksheet.costpercapita_bt113, 0.001); end
  def test_costpercapita_bu113; assert_in_epsilon(13.369441590467334, worksheet.costpercapita_bu113, 0.001); end
  def test_costpercapita_bv113; assert_in_epsilon(12.95547722333552, worksheet.costpercapita_bv113, 0.001); end
  def test_costpercapita_bw113; assert_in_epsilon(12.601531602157145, worksheet.costpercapita_bw113, 0.001); end
  def test_costpercapita_bx113; assert_in_epsilon(12.304693756920825, worksheet.costpercapita_bx113, 0.001); end
  def test_costpercapita_by113; assert_in_epsilon(12.042279105055638, worksheet.costpercapita_by113, 0.001); end
  def test_costpercapita_bz113; assert_in_epsilon(8.468487434152294, worksheet.costpercapita_bz113, 0.001); end
  def test_costpercapita_ca113; assert_in_epsilon(3.432761749418211, worksheet.costpercapita_ca113, 0.001); end
  def test_costpercapita_cc113; assert_in_epsilon(9.002470195668794, worksheet.costpercapita_cc113, 0.001); end
  def test_costpercapita_cd113; assert_in_epsilon(207.3859464815382, worksheet.costpercapita_cd113, 0.001); end
  def test_costpercapita_cf113; assert_in_delta(0, (worksheet.costpercapita_cf113||0), 0.001); end
  def test_costpercapita_cg113; assert_in_epsilon(-3.4566267714031045, worksheet.costpercapita_cg113, 0.001); end
  def test_costpercapita_ch113; assert_in_epsilon(-1.2089017241811462, worksheet.costpercapita_ch113, 0.001); end
  def test_costpercapita_ci113; assert_in_epsilon(9.115572019465692, worksheet.costpercapita_ci113, 0.001); end
  def test_costpercapita_cj113; assert_in_epsilon(8.866533196332679, worksheet.costpercapita_cj113, 0.001); end
  def test_costpercapita_ck113; assert_in_epsilon(8.657675837417262, worksheet.costpercapita_ck113, 0.001); end
  def test_costpercapita_cl113; assert_in_epsilon(8.473038898398796, worksheet.costpercapita_cl113, 0.001); end
  def test_costpercapita_cm113; assert_in_epsilon(4.970446164749743, worksheet.costpercapita_cm113, 0.001); end
  def test_costpercapita_cn113; assert_in_delta(-6.370967824488916e-16, worksheet.costpercapita_cn113, 0.001); end
  def test_costpercapita_cp113; assert_in_epsilon(3.9353041800866584, worksheet.costpercapita_cp113, 0.001); end
  def test_costpercapita_cq113; assert_in_epsilon(71.69704168179143, worksheet.costpercapita_cq113, 0.001); end
  def test_costpercapita_cr113; assert_equal("ok", worksheet.costpercapita_cr113); end
  def test_costpercapita_a114; assert_equal("II.a", worksheet.costpercapita_a114); end
  def test_costpercapita_b114; assert_equal("Nuclear power", worksheet.costpercapita_b114); end
  def test_costpercapita_c114; assert_equal("Electricity", worksheet.costpercapita_c114); end
  def test_costpercapita_e114; assert_in_delta(0, (worksheet.costpercapita_e114||0), 0.001); end
  def test_costpercapita_f114; assert_in_delta(0, (worksheet.costpercapita_f114||0), 0.001); end
  def test_costpercapita_g114; assert_in_delta(0, (worksheet.costpercapita_g114||0), 0.001); end
  def test_costpercapita_h114; assert_in_delta(0, (worksheet.costpercapita_h114||0), 0.001); end
  def test_costpercapita_i114; assert_in_delta(0, (worksheet.costpercapita_i114||0), 0.001); end
  def test_costpercapita_j114; assert_in_delta(0, (worksheet.costpercapita_j114||0), 0.001); end
  def test_costpercapita_k114; assert_in_delta(0, (worksheet.costpercapita_k114||0), 0.001); end
  def test_costpercapita_l114; assert_in_delta(0, (worksheet.costpercapita_l114||0), 0.001); end
  def test_costpercapita_m114; assert_in_delta(0, (worksheet.costpercapita_m114||0), 0.001); end
  def test_costpercapita_o114; assert_in_epsilon(23.874058512683277, worksheet.costpercapita_o114, 0.001); end
  def test_costpercapita_p114; assert_in_epsilon(17.154954734634767, worksheet.costpercapita_p114, 0.001); end
  def test_costpercapita_q114; assert_in_epsilon(8.554176727536158, worksheet.costpercapita_q114, 0.001); end
  def test_costpercapita_r114; assert_in_epsilon(2.7631032308036145, worksheet.costpercapita_r114, 0.001); end
  def test_costpercapita_s114; assert_in_epsilon(2.6876148275169176, worksheet.costpercapita_s114, 0.001); end
  def test_costpercapita_t114; assert_in_delta(0, (worksheet.costpercapita_t114||0), 0.001); end
  def test_costpercapita_u114; assert_in_delta(0, (worksheet.costpercapita_u114||0), 0.001); end
  def test_costpercapita_v114; assert_in_delta(0, (worksheet.costpercapita_v114||0), 0.001); end
  def test_costpercapita_w114; assert_in_delta(0, (worksheet.costpercapita_w114||0), 0.001); end
  def test_costpercapita_y114; assert_in_epsilon(2.6735560562468708, worksheet.costpercapita_y114, 0.001); end
  def test_costpercapita_z114; assert_in_epsilon(2.1717321025222884, worksheet.costpercapita_z114, 0.001); end
  def test_costpercapita_aa114; assert_in_epsilon(1.2003620629822087, worksheet.costpercapita_aa114, 0.001); end
  def test_costpercapita_ab114; assert_in_delta(0.38773156085068894, worksheet.costpercapita_ab114, 0.001); end
  def test_costpercapita_ac114; assert_in_delta(0.37713867524794414, worksheet.costpercapita_ac114, 0.001); end
  def test_costpercapita_ad114; assert_in_delta(0, (worksheet.costpercapita_ad114||0), 0.001); end
  def test_costpercapita_ae114; assert_in_delta(0, (worksheet.costpercapita_ae114||0), 0.001); end
  def test_costpercapita_af114; assert_in_delta(0, (worksheet.costpercapita_af114||0), 0.001); end
  def test_costpercapita_ag114; assert_in_delta(0, (worksheet.costpercapita_ag114||0), 0.001); end
  def test_costpercapita_ai114; assert_in_epsilon(26.547614568930147, worksheet.costpercapita_ai114, 0.001); end
  def test_costpercapita_aj114; assert_in_epsilon(19.326686837157055, worksheet.costpercapita_aj114, 0.001); end
  def test_costpercapita_ak114; assert_in_epsilon(9.754538790518367, worksheet.costpercapita_ak114, 0.001); end
  def test_costpercapita_al114; assert_in_epsilon(3.1508347916543036, worksheet.costpercapita_al114, 0.001); end
  def test_costpercapita_am114; assert_in_epsilon(3.0647535027648614, worksheet.costpercapita_am114, 0.001); end
  def test_costpercapita_an114; assert_in_delta(0, (worksheet.costpercapita_an114||0), 0.001); end
  def test_costpercapita_ao114; assert_in_delta(0, (worksheet.costpercapita_ao114||0), 0.001); end
  def test_costpercapita_ap114; assert_in_delta(0, (worksheet.costpercapita_ap114||0), 0.001); end
  def test_costpercapita_aq114; assert_in_delta(0, (worksheet.costpercapita_aq114||0), 0.001); end
  def test_costpercapita_as114; assert_in_epsilon(6.8716031656694145, worksheet.costpercapita_as114, 0.001); end
  def test_costpercapita_at114; assert_in_epsilon(159.59097492633765, worksheet.costpercapita_at114, 0.001); end
  def test_costpercapita_av114; assert_in_delta(0.1, worksheet.costpercapita_av114, 0.001); end
  def test_costpercapita_aw114; assert_in_epsilon(30, worksheet.costpercapita_aw114, 0.001); end
  def test_costpercapita_ay114; assert_in_delta(0, (worksheet.costpercapita_ay114||0), 0.001); end
  def test_costpercapita_az114; assert_in_delta(0, (worksheet.costpercapita_az114||0), 0.001); end
  def test_costpercapita_ba114; assert_in_delta(0, (worksheet.costpercapita_ba114||0), 0.001); end
  def test_costpercapita_bb114; assert_in_delta(0, (worksheet.costpercapita_bb114||0), 0.001); end
  def test_costpercapita_bc114; assert_in_delta(0, (worksheet.costpercapita_bc114||0), 0.001); end
  def test_costpercapita_bd114; assert_in_delta(0, (worksheet.costpercapita_bd114||0), 0.001); end
  def test_costpercapita_be114; assert_in_delta(0, (worksheet.costpercapita_be114||0), 0.001); end
  def test_costpercapita_bf114; assert_in_delta(0, (worksheet.costpercapita_bf114||0), 0.001); end
  def test_costpercapita_bg114; assert_in_delta(0, (worksheet.costpercapita_bg114||0), 0.001); end
  def test_costpercapita_bi114; assert_in_delta(0, (worksheet.costpercapita_bi114||0), 0.001); end
  def test_costpercapita_bj114; assert_in_delta(0, (worksheet.costpercapita_bj114||0), 0.001); end
  def test_costpercapita_bk114; assert_in_delta(0, (worksheet.costpercapita_bk114||0), 0.001); end
  def test_costpercapita_bl114; assert_in_delta(0, (worksheet.costpercapita_bl114||0), 0.001); end
  def test_costpercapita_bm114; assert_in_delta(0, (worksheet.costpercapita_bm114||0), 0.001); end
  def test_costpercapita_bn114; assert_in_delta(0, (worksheet.costpercapita_bn114||0), 0.001); end
  def test_costpercapita_bo114; assert_in_delta(0, (worksheet.costpercapita_bo114||0), 0.001); end
  def test_costpercapita_bp114; assert_in_delta(0, (worksheet.costpercapita_bp114||0), 0.001); end
  def test_costpercapita_bq114; assert_in_delta(0, (worksheet.costpercapita_bq114||0), 0.001); end
  def test_costpercapita_bs114; assert_in_epsilon(26.547614568930147, worksheet.costpercapita_bs114, 0.001); end
  def test_costpercapita_bt114; assert_in_epsilon(19.326686837157055, worksheet.costpercapita_bt114, 0.001); end
  def test_costpercapita_bu114; assert_in_epsilon(9.754538790518367, worksheet.costpercapita_bu114, 0.001); end
  def test_costpercapita_bv114; assert_in_epsilon(3.1508347916543036, worksheet.costpercapita_bv114, 0.001); end
  def test_costpercapita_bw114; assert_in_epsilon(3.0647535027648614, worksheet.costpercapita_bw114, 0.001); end
  def test_costpercapita_bx114; assert_in_delta(0, (worksheet.costpercapita_bx114||0), 0.001); end
  def test_costpercapita_by114; assert_in_delta(0, (worksheet.costpercapita_by114||0), 0.001); end
  def test_costpercapita_bz114; assert_in_delta(0, (worksheet.costpercapita_bz114||0), 0.001); end
  def test_costpercapita_ca114; assert_in_delta(0, (worksheet.costpercapita_ca114||0), 0.001); end
  def test_costpercapita_cc114; assert_in_epsilon(6.8716031656694145, worksheet.costpercapita_cc114, 0.001); end
  def test_costpercapita_cd114; assert_in_epsilon(159.59097492633765, worksheet.costpercapita_cd114, 0.001); end
  def test_costpercapita_cf114; assert_in_delta(0, (worksheet.costpercapita_cf114||0), 0.001); end
  def test_costpercapita_cg114; assert_in_delta(0, (worksheet.costpercapita_cg114||0), 0.001); end
  def test_costpercapita_ch114; assert_in_delta(0, (worksheet.costpercapita_ch114||0), 0.001); end
  def test_costpercapita_ci114; assert_in_delta(0, (worksheet.costpercapita_ci114||0), 0.001); end
  def test_costpercapita_cj114; assert_in_delta(0, (worksheet.costpercapita_cj114||0), 0.001); end
  def test_costpercapita_ck114; assert_in_delta(0, (worksheet.costpercapita_ck114||0), 0.001); end
  def test_costpercapita_cl114; assert_in_delta(0, (worksheet.costpercapita_cl114||0), 0.001); end
  def test_costpercapita_cm114; assert_in_delta(0, (worksheet.costpercapita_cm114||0), 0.001); end
  def test_costpercapita_cn114; assert_in_delta(0, (worksheet.costpercapita_cn114||0), 0.001); end
  def test_costpercapita_cp114; assert_in_delta(0, (worksheet.costpercapita_cp114||0), 0.001); end
  def test_costpercapita_cq114; assert_in_delta(0, (worksheet.costpercapita_cq114||0), 0.001); end
  def test_costpercapita_cr114; assert_equal("ok", worksheet.costpercapita_cr114); end
  def test_costpercapita_a115; assert_equal("III.a.1", worksheet.costpercapita_a115); end
  def test_costpercapita_b115; assert_equal("Onshore wind", worksheet.costpercapita_b115); end
  def test_costpercapita_c115; assert_equal("Electricity", worksheet.costpercapita_c115); end
  def test_costpercapita_e115; assert_in_epsilon(18.314518218355097, worksheet.costpercapita_e115, 0.001); end
  def test_costpercapita_f115; assert_in_epsilon(15.881784198086304, worksheet.costpercapita_f115, 0.001); end
  def test_costpercapita_g115; assert_in_epsilon(15.361843957639133, worksheet.costpercapita_g115, 0.001); end
  def test_costpercapita_h115; assert_in_epsilon(14.886187890116016, worksheet.costpercapita_h115, 0.001); end
  def test_costpercapita_i115; assert_in_delta(0, (worksheet.costpercapita_i115||0), 0.001); end
  def test_costpercapita_j115; assert_in_delta(0, (worksheet.costpercapita_j115||0), 0.001); end
  def test_costpercapita_k115; assert_in_delta(0, (worksheet.costpercapita_k115||0), 0.001); end
  def test_costpercapita_l115; assert_in_delta(0, (worksheet.costpercapita_l115||0), 0.001); end
  def test_costpercapita_m115; assert_in_delta(0, (worksheet.costpercapita_m115||0), 0.001); end
  def test_costpercapita_o115; assert_in_epsilon(4.729084474606355, worksheet.costpercapita_o115, 0.001); end
  def test_costpercapita_p115; assert_in_epsilon(7.778561894572056, worksheet.costpercapita_p115, 0.001); end
  def test_costpercapita_q115; assert_in_epsilon(10.624385973462417, worksheet.costpercapita_q115, 0.001); end
  def test_costpercapita_r115; assert_in_epsilon(12.032552723529971, worksheet.costpercapita_r115, 0.001); end
  def test_costpercapita_s115; assert_in_epsilon(8.802679949205153, worksheet.costpercapita_s115, 0.001); end
  def test_costpercapita_t115; assert_in_epsilon(5.741770378162275, worksheet.costpercapita_t115, 0.001); end
  def test_costpercapita_u115; assert_in_epsilon(2.8266188897596685, worksheet.costpercapita_u115, 0.001); end
  def test_costpercapita_v115; assert_in_delta(0.03324200826954858, worksheet.costpercapita_v115, 0.001); end
  def test_costpercapita_w115; assert_in_delta(0.03262165471279304, worksheet.costpercapita_w115, 0.001); end
  def test_costpercapita_y115; assert_in_delta(0, (worksheet.costpercapita_y115||0), 0.001); end
  def test_costpercapita_z115; assert_in_delta(0, (worksheet.costpercapita_z115||0), 0.001); end
  def test_costpercapita_aa115; assert_in_delta(0, (worksheet.costpercapita_aa115||0), 0.001); end
  def test_costpercapita_ab115; assert_in_delta(0, (worksheet.costpercapita_ab115||0), 0.001); end
  def test_costpercapita_ac115; assert_in_delta(0, (worksheet.costpercapita_ac115||0), 0.001); end
  def test_costpercapita_ad115; assert_in_delta(0, (worksheet.costpercapita_ad115||0), 0.001); end
  def test_costpercapita_ae115; assert_in_delta(0, (worksheet.costpercapita_ae115||0), 0.001); end
  def test_costpercapita_af115; assert_in_delta(0, (worksheet.costpercapita_af115||0), 0.001); end
  def test_costpercapita_ag115; assert_in_delta(0, (worksheet.costpercapita_ag115||0), 0.001); end
  def test_costpercapita_ai115; assert_in_epsilon(23.04360269296145, worksheet.costpercapita_ai115, 0.001); end
  def test_costpercapita_aj115; assert_in_epsilon(23.66034609265836, worksheet.costpercapita_aj115, 0.001); end
  def test_costpercapita_ak115; assert_in_epsilon(25.98622993110155, worksheet.costpercapita_ak115, 0.001); end
  def test_costpercapita_al115; assert_in_epsilon(26.918740613645987, worksheet.costpercapita_al115, 0.001); end
  def test_costpercapita_am115; assert_in_epsilon(8.802679949205153, worksheet.costpercapita_am115, 0.001); end
  def test_costpercapita_an115; assert_in_epsilon(5.741770378162275, worksheet.costpercapita_an115, 0.001); end
  def test_costpercapita_ao115; assert_in_epsilon(2.8266188897596685, worksheet.costpercapita_ao115, 0.001); end
  def test_costpercapita_ap115; assert_in_delta(0.03324200826954858, worksheet.costpercapita_ap115, 0.001); end
  def test_costpercapita_aq115; assert_in_delta(0.03262165471279304, worksheet.costpercapita_aq115, 0.001); end
  def test_costpercapita_as115; assert_in_epsilon(13.005094690052978, worksheet.costpercapita_as115, 0.001); end
  def test_costpercapita_at115; assert_in_epsilon(334.49617624156923, worksheet.costpercapita_at115, 0.001); end
  def test_costpercapita_av115; assert_in_delta(0.1, worksheet.costpercapita_av115, 0.001); end
  def test_costpercapita_aw115; assert_in_epsilon(20, worksheet.costpercapita_aw115, 0.001); end
  def test_costpercapita_ay115; assert_in_epsilon(6.453649313453829, worksheet.costpercapita_ay115, 0.001); end
  def test_costpercapita_az115; assert_in_epsilon(9.32734206312882, worksheet.costpercapita_az115, 0.001); end
  def test_costpercapita_ba115; assert_in_epsilon(9.02198213539346, worksheet.costpercapita_ba115, 0.001); end
  def test_costpercapita_bb115; assert_in_epsilon(8.74263021933321, worksheet.costpercapita_bb115, 0.001); end
  def test_costpercapita_bc115; assert_in_delta(0, (worksheet.costpercapita_bc115||0), 0.001); end
  def test_costpercapita_bd115; assert_in_delta(0, (worksheet.costpercapita_bd115||0), 0.001); end
  def test_costpercapita_be115; assert_in_delta(0, (worksheet.costpercapita_be115||0), 0.001); end
  def test_costpercapita_bf115; assert_in_delta(0, (worksheet.costpercapita_bf115||0), 0.001); end
  def test_costpercapita_bg115; assert_in_delta(0, (worksheet.costpercapita_bg115||0), 0.001); end
  def test_costpercapita_bi115; assert_in_epsilon(6.453649313453829, worksheet.costpercapita_bi115, 0.001); end
  def test_costpercapita_bj115; assert_in_epsilon(15.568181843549553, worksheet.costpercapita_bj115, 0.001); end
  def test_costpercapita_bk115; assert_in_epsilon(24.080490499559268, worksheet.costpercapita_bk115, 0.001); end
  def test_costpercapita_bl115; assert_in_epsilon(32.077505059298936, worksheet.costpercapita_bl115, 0.001); end
  def test_costpercapita_bm115; assert_in_epsilon(25.511340669827586, worksheet.costpercapita_bm115, 0.001); end
  def test_costpercapita_bn115; assert_in_epsilon(16.60693552610025, worksheet.costpercapita_bn115, 0.001); end
  def test_costpercapita_bo115; assert_in_epsilon(8.126384802241855, worksheet.costpercapita_bo115, 0.001); end
  def test_costpercapita_bp115; assert_in_delta(0, (worksheet.costpercapita_bp115||0), 0.001); end
  def test_costpercapita_bq115; assert_in_delta(0, (worksheet.costpercapita_bq115||0), 0.001); end
  def test_costpercapita_bs115; assert_in_epsilon(11.182733788060185, worksheet.costpercapita_bs115, 0.001); end
  def test_costpercapita_bt115; assert_in_epsilon(23.346743738121607, worksheet.costpercapita_bt115, 0.001); end
  def test_costpercapita_bu115; assert_in_epsilon(34.704876473021685, worksheet.costpercapita_bu115, 0.001); end
  def test_costpercapita_bv115; assert_in_epsilon(44.11005778282891, worksheet.costpercapita_bv115, 0.001); end
  def test_costpercapita_bw115; assert_in_epsilon(34.31402061903274, worksheet.costpercapita_bw115, 0.001); end
  def test_costpercapita_bx115; assert_in_epsilon(22.348705904262527, worksheet.costpercapita_bx115, 0.001); end
  def test_costpercapita_by115; assert_in_epsilon(10.953003692001523, worksheet.costpercapita_by115, 0.001); end
  def test_costpercapita_bz115; assert_in_delta(0.03324200826954858, worksheet.costpercapita_bz115, 0.001); end
  def test_costpercapita_ca115; assert_in_delta(0.03262165471279304, worksheet.costpercapita_ca115, 0.001); end
  def test_costpercapita_cc115; assert_in_epsilon(20.1140006289235, worksheet.costpercapita_cc115, 0.001); end
  def test_costpercapita_cd115; assert_in_epsilon(517.2436246020837, worksheet.costpercapita_cd115, 0.001); end
  def test_costpercapita_cf115; assert_in_epsilon(-11.860868904901269, worksheet.costpercapita_cf115, 0.001); end
  def test_costpercapita_cg115; assert_in_delta(-0.31360235453675256, worksheet.costpercapita_cg115, 0.001); end
  def test_costpercapita_ch115; assert_in_epsilon(8.718646541920133, worksheet.costpercapita_ch115, 0.001); end
  def test_costpercapita_ci115; assert_in_epsilon(17.191317169182916, worksheet.costpercapita_ci115, 0.001); end
  def test_costpercapita_cj115; assert_in_epsilon(25.511340669827586, worksheet.costpercapita_cj115, 0.001); end
  def test_costpercapita_ck115; assert_in_epsilon(16.60693552610025, worksheet.costpercapita_ck115, 0.001); end
  def test_costpercapita_cl115; assert_in_epsilon(8.126384802241855, worksheet.costpercapita_cl115, 0.001); end
  def test_costpercapita_cm115; assert_in_delta(0, (worksheet.costpercapita_cm115||0), 0.001); end
  def test_costpercapita_cn115; assert_in_delta(0, (worksheet.costpercapita_cn115||0), 0.001); end
  def test_costpercapita_cp115; assert_in_epsilon(7.1089059388705245, worksheet.costpercapita_cp115, 0.001); end
  def test_costpercapita_cq115; assert_in_epsilon(182.7474483605146, worksheet.costpercapita_cq115, 0.001); end
  def test_costpercapita_cr115; assert_equal("ok", worksheet.costpercapita_cr115); end
  def test_costpercapita_a116; assert_equal("III.a.2", worksheet.costpercapita_a116); end
  def test_costpercapita_b116; assert_equal("Offshore wind", worksheet.costpercapita_b116); end
  def test_costpercapita_c116; assert_equal("Electricity", worksheet.costpercapita_c116); end
  def test_costpercapita_e116; assert_in_epsilon(21.761722488709864, worksheet.costpercapita_e116, 0.001); end
  def test_costpercapita_f116; assert_in_epsilon(33.2275708146673, worksheet.costpercapita_f116, 0.001); end
  def test_costpercapita_g116; assert_in_epsilon(32.139761602341196, worksheet.costpercapita_g116, 0.001); end
  def test_costpercapita_h116; assert_in_epsilon(24.915682324351145, worksheet.costpercapita_h116, 0.001); end
  def test_costpercapita_i116; assert_in_delta(0, (worksheet.costpercapita_i116||0), 0.001); end
  def test_costpercapita_j116; assert_in_delta(0, (worksheet.costpercapita_j116||0), 0.001); end
  def test_costpercapita_k116; assert_in_delta(0, (worksheet.costpercapita_k116||0), 0.001); end
  def test_costpercapita_l116; assert_in_delta(0, (worksheet.costpercapita_l116||0), 0.001); end
  def test_costpercapita_m116; assert_in_delta(0, (worksheet.costpercapita_m116||0), 0.001); end
  def test_costpercapita_o116; assert_in_epsilon(4.621698715171772, worksheet.costpercapita_o116, 0.001); end
  def test_costpercapita_p116; assert_in_epsilon(12.783961297122309, worksheet.costpercapita_p116, 0.001); end
  def test_costpercapita_q116; assert_in_epsilon(20.407894764138195, worksheet.costpercapita_q116, 0.001); end
  def test_costpercapita_r116; assert_in_epsilon(25.543136819143736, worksheet.costpercapita_r116, 0.001); end
  def test_costpercapita_s116; assert_in_epsilon(21.225446175739947, worksheet.costpercapita_s116, 0.001); end
  def test_costpercapita_t116; assert_in_epsilon(13.323513871327506, worksheet.costpercapita_t116, 0.001); end
  def test_costpercapita_u116; assert_in_epsilon(5.795276208077118, worksheet.costpercapita_u116, 0.001); end
  def test_costpercapita_v116; assert_in_delta(0, (worksheet.costpercapita_v116||0), 0.001); end
  def test_costpercapita_w116; assert_in_delta(0, (worksheet.costpercapita_w116||0), 0.001); end
  def test_costpercapita_y116; assert_in_delta(0, (worksheet.costpercapita_y116||0), 0.001); end
  def test_costpercapita_z116; assert_in_delta(0, (worksheet.costpercapita_z116||0), 0.001); end
  def test_costpercapita_aa116; assert_in_delta(0, (worksheet.costpercapita_aa116||0), 0.001); end
  def test_costpercapita_ab116; assert_in_delta(0, (worksheet.costpercapita_ab116||0), 0.001); end
  def test_costpercapita_ac116; assert_in_delta(0, (worksheet.costpercapita_ac116||0), 0.001); end
  def test_costpercapita_ad116; assert_in_delta(0, (worksheet.costpercapita_ad116||0), 0.001); end
  def test_costpercapita_ae116; assert_in_delta(0, (worksheet.costpercapita_ae116||0), 0.001); end
  def test_costpercapita_af116; assert_in_delta(0, (worksheet.costpercapita_af116||0), 0.001); end
  def test_costpercapita_ag116; assert_in_delta(0, (worksheet.costpercapita_ag116||0), 0.001); end
  def test_costpercapita_ai116; assert_in_epsilon(26.38342120388164, worksheet.costpercapita_ai116, 0.001); end
  def test_costpercapita_aj116; assert_in_epsilon(46.01153211178961, worksheet.costpercapita_aj116, 0.001); end
  def test_costpercapita_ak116; assert_in_epsilon(52.54765636647939, worksheet.costpercapita_ak116, 0.001); end
  def test_costpercapita_al116; assert_in_epsilon(50.45881914349488, worksheet.costpercapita_al116, 0.001); end
  def test_costpercapita_am116; assert_in_epsilon(21.225446175739947, worksheet.costpercapita_am116, 0.001); end
  def test_costpercapita_an116; assert_in_epsilon(13.323513871327506, worksheet.costpercapita_an116, 0.001); end
  def test_costpercapita_ao116; assert_in_epsilon(5.795276208077118, worksheet.costpercapita_ao116, 0.001); end
  def test_costpercapita_ap116; assert_in_delta(0, (worksheet.costpercapita_ap116||0), 0.001); end
  def test_costpercapita_aq116; assert_in_delta(0, (worksheet.costpercapita_aq116||0), 0.001); end
  def test_costpercapita_as116; assert_in_epsilon(23.97174056453223, worksheet.costpercapita_as116, 0.001); end
  def test_costpercapita_at116; assert_in_epsilon(648.7864967023772, worksheet.costpercapita_at116, 0.001); end
  def test_costpercapita_av116; assert_in_delta(0.1, worksheet.costpercapita_av116, 0.001); end
  def test_costpercapita_aw116; assert_in_epsilon(20, worksheet.costpercapita_aw116, 0.001); end
  def test_costpercapita_ay116; assert_in_epsilon(7.668371273784394, worksheet.costpercapita_ay116, 0.001); end
  def test_costpercapita_az116; assert_in_epsilon(19.51448999997007, worksheet.costpercapita_az116, 0.001); end
  def test_costpercapita_ba116; assert_in_epsilon(18.875621690450355, worksheet.costpercapita_ba116, 0.001); end
  def test_costpercapita_bb116; assert_in_epsilon(14.63293348385118, worksheet.costpercapita_bb116, 0.001); end
  def test_costpercapita_bc116; assert_in_delta(0, (worksheet.costpercapita_bc116||0), 0.001); end
  def test_costpercapita_bd116; assert_in_delta(0, (worksheet.costpercapita_bd116||0), 0.001); end
  def test_costpercapita_be116; assert_in_delta(0, (worksheet.costpercapita_be116||0), 0.001); end
  def test_costpercapita_bf116; assert_in_delta(0, (worksheet.costpercapita_bf116||0), 0.001); end
  def test_costpercapita_bg116; assert_in_delta(0, (worksheet.costpercapita_bg116||0), 0.001); end
  def test_costpercapita_bi116; assert_in_epsilon(7.668371273784394, worksheet.costpercapita_bi116, 0.001); end
  def test_costpercapita_bj116; assert_in_epsilon(26.92999619995871, worksheet.costpercapita_bj116, 0.001); end
  def test_costpercapita_bk116; assert_in_epsilon(44.92397962327185, worksheet.costpercapita_bk116, 0.001); end
  def test_costpercapita_bl116; assert_in_epsilon(58.16591059830846, worksheet.costpercapita_bl116, 0.001); end
  def test_costpercapita_bm116; assert_in_epsilon(49.81605825288053, worksheet.costpercapita_bm116, 0.001); end
  def test_costpercapita_bn116; assert_in_epsilon(31.27024693152178, worksheet.costpercapita_bn116, 0.001); end
  def test_costpercapita_bo116; assert_in_epsilon(13.601495807568712, worksheet.costpercapita_bo116, 0.001); end
  def test_costpercapita_bp116; assert_in_delta(0, (worksheet.costpercapita_bp116||0), 0.001); end
  def test_costpercapita_bq116; assert_in_delta(0, (worksheet.costpercapita_bq116||0), 0.001); end
  def test_costpercapita_bs116; assert_in_epsilon(12.290069988956166, worksheet.costpercapita_bs116, 0.001); end
  def test_costpercapita_bt116; assert_in_epsilon(39.71395749708101, worksheet.costpercapita_bt116, 0.001); end
  def test_costpercapita_bu116; assert_in_epsilon(65.33187438741004, worksheet.costpercapita_bu116, 0.001); end
  def test_costpercapita_bv116; assert_in_epsilon(83.70904741745218, worksheet.costpercapita_bv116, 0.001); end
  def test_costpercapita_bw116; assert_in_epsilon(71.04150442862048, worksheet.costpercapita_bw116, 0.001); end
  def test_costpercapita_bx116; assert_in_epsilon(44.59376080284929, worksheet.costpercapita_bx116, 0.001); end
  def test_costpercapita_by116; assert_in_epsilon(19.39677201564583, worksheet.costpercapita_by116, 0.001); end
  def test_costpercapita_bz116; assert_in_delta(0, (worksheet.costpercapita_bz116||0), 0.001); end
  def test_costpercapita_ca116; assert_in_delta(0, (worksheet.costpercapita_ca116||0), 0.001); end
  def test_costpercapita_cc116; assert_in_epsilon(37.34188739311278, worksheet.costpercapita_cc116, 0.001); end
  def test_costpercapita_cd116; assert_in_epsilon(968.2982188938771, worksheet.costpercapita_cd116, 0.001); end
  def test_costpercapita_cf116; assert_in_epsilon(-14.09335121492547, worksheet.costpercapita_cf116, 0.001); end
  def test_costpercapita_cg116; assert_in_epsilon(-6.297574614708596, worksheet.costpercapita_cg116, 0.001); end
  def test_costpercapita_ch116; assert_in_epsilon(12.784218020930656, worksheet.costpercapita_ch116, 0.001); end
  def test_costpercapita_ci116; assert_in_epsilon(33.25022827395731, worksheet.costpercapita_ci116, 0.001); end
  def test_costpercapita_cj116; assert_in_epsilon(49.81605825288053, worksheet.costpercapita_cj116, 0.001); end
  def test_costpercapita_ck116; assert_in_epsilon(31.27024693152178, worksheet.costpercapita_ck116, 0.001); end
  def test_costpercapita_cl116; assert_in_epsilon(13.601495807568712, worksheet.costpercapita_cl116, 0.001); end
  def test_costpercapita_cm116; assert_in_delta(0, (worksheet.costpercapita_cm116||0), 0.001); end
  def test_costpercapita_cn116; assert_in_delta(0, (worksheet.costpercapita_cn116||0), 0.001); end
  def test_costpercapita_cp116; assert_in_epsilon(13.370146828580548, worksheet.costpercapita_cp116, 0.001); end
  def test_costpercapita_cq116; assert_in_epsilon(319.51172219150004, worksheet.costpercapita_cq116, 0.001); end
  def test_costpercapita_cr116; assert_equal("ok", worksheet.costpercapita_cr116); end
  def test_costpercapita_a117; assert_equal("III.b", worksheet.costpercapita_a117); end
  def test_costpercapita_b117; assert_equal("Hydroelectric", worksheet.costpercapita_b117); end
  def test_costpercapita_c117; assert_equal("Electricity", worksheet.costpercapita_c117); end
  def test_costpercapita_e117; assert_in_epsilon(15.635574215929923, worksheet.costpercapita_e117, 0.001); end
  def test_costpercapita_f117; assert_in_delta(0, (worksheet.costpercapita_f117||0), 0.001); end
  def test_costpercapita_g117; assert_in_delta(0, (worksheet.costpercapita_g117||0), 0.001); end
  def test_costpercapita_h117; assert_in_delta(0, (worksheet.costpercapita_h117||0), 0.001); end
  def test_costpercapita_i117; assert_in_delta(0, (worksheet.costpercapita_i117||0), 0.001); end
  def test_costpercapita_j117; assert_in_delta(0, (worksheet.costpercapita_j117||0), 0.001); end
  def test_costpercapita_k117; assert_in_delta(0, (worksheet.costpercapita_k117||0), 0.001); end
  def test_costpercapita_l117; assert_in_delta(0, (worksheet.costpercapita_l117||0), 0.001); end
  def test_costpercapita_m117; assert_in_delta(0, (worksheet.costpercapita_m117||0), 0.001); end
  def test_costpercapita_o117; assert_in_epsilon(4.834271668999991, worksheet.costpercapita_o117, 0.001); end
  def test_costpercapita_p117; assert_in_epsilon(4.674861225936354, worksheet.costpercapita_p117, 0.001); end
  def test_costpercapita_q117; assert_in_epsilon(4.521814915801792, worksheet.costpercapita_q117, 0.001); end
  def test_costpercapita_r117; assert_in_epsilon(4.381803813824149, worksheet.costpercapita_r117, 0.001); end
  def test_costpercapita_s117; assert_in_epsilon(4.262092262792108, worksheet.costpercapita_s117, 0.001); end
  def test_costpercapita_t117; assert_in_epsilon(4.1616957139099835, worksheet.costpercapita_t117, 0.001); end
  def test_costpercapita_u117; assert_in_epsilon(4.072941783620554, worksheet.costpercapita_u117, 0.001); end
  def test_costpercapita_v117; assert_in_epsilon(3.9916950449024555, worksheet.costpercapita_v117, 0.001); end
  def test_costpercapita_w117; assert_in_epsilon(3.9172030888656986, worksheet.costpercapita_w117, 0.001); end
  def test_costpercapita_y117; assert_in_delta(0, (worksheet.costpercapita_y117||0), 0.001); end
  def test_costpercapita_z117; assert_in_delta(0, (worksheet.costpercapita_z117||0), 0.001); end
  def test_costpercapita_aa117; assert_in_delta(0, (worksheet.costpercapita_aa117||0), 0.001); end
  def test_costpercapita_ab117; assert_in_delta(0, (worksheet.costpercapita_ab117||0), 0.001); end
  def test_costpercapita_ac117; assert_in_delta(0, (worksheet.costpercapita_ac117||0), 0.001); end
  def test_costpercapita_ad117; assert_in_delta(0, (worksheet.costpercapita_ad117||0), 0.001); end
  def test_costpercapita_ae117; assert_in_delta(0, (worksheet.costpercapita_ae117||0), 0.001); end
  def test_costpercapita_af117; assert_in_delta(0, (worksheet.costpercapita_af117||0), 0.001); end
  def test_costpercapita_ag117; assert_in_delta(0, (worksheet.costpercapita_ag117||0), 0.001); end
  def test_costpercapita_ai117; assert_in_epsilon(20.469845884929914, worksheet.costpercapita_ai117, 0.001); end
  def test_costpercapita_aj117; assert_in_epsilon(4.674861225936354, worksheet.costpercapita_aj117, 0.001); end
  def test_costpercapita_ak117; assert_in_epsilon(4.521814915801792, worksheet.costpercapita_ak117, 0.001); end
  def test_costpercapita_al117; assert_in_epsilon(4.381803813824149, worksheet.costpercapita_al117, 0.001); end
  def test_costpercapita_am117; assert_in_epsilon(4.262092262792108, worksheet.costpercapita_am117, 0.001); end
  def test_costpercapita_an117; assert_in_epsilon(4.1616957139099835, worksheet.costpercapita_an117, 0.001); end
  def test_costpercapita_ao117; assert_in_epsilon(4.072941783620554, worksheet.costpercapita_ao117, 0.001); end
  def test_costpercapita_ap117; assert_in_epsilon(3.9916950449024555, worksheet.costpercapita_ap117, 0.001); end
  def test_costpercapita_aq117; assert_in_epsilon(3.9172030888656986, worksheet.costpercapita_aq117, 0.001); end
  def test_costpercapita_as117; assert_in_epsilon(6.050439303842557, worksheet.costpercapita_as117, 0.001); end
  def test_costpercapita_at117; assert_in_epsilon(107.3522914451764, worksheet.costpercapita_at117, 0.001); end
  def test_costpercapita_av117; assert_in_delta(0.1, worksheet.costpercapita_av117, 0.001); end
  def test_costpercapita_aw117; assert_in_epsilon(30, worksheet.costpercapita_aw117, 0.001); end
  def test_costpercapita_ay117; assert_in_epsilon(4.975829876472336, worksheet.costpercapita_ay117, 0.001); end
  def test_costpercapita_az117; assert_in_delta(0, (worksheet.costpercapita_az117||0), 0.001); end
  def test_costpercapita_ba117; assert_in_delta(0, (worksheet.costpercapita_ba117||0), 0.001); end
  def test_costpercapita_bb117; assert_in_delta(0, (worksheet.costpercapita_bb117||0), 0.001); end
  def test_costpercapita_bc117; assert_in_delta(0, (worksheet.costpercapita_bc117||0), 0.001); end
  def test_costpercapita_bd117; assert_in_delta(0, (worksheet.costpercapita_bd117||0), 0.001); end
  def test_costpercapita_be117; assert_in_delta(0, (worksheet.costpercapita_be117||0), 0.001); end
  def test_costpercapita_bf117; assert_in_delta(0, (worksheet.costpercapita_bf117||0), 0.001); end
  def test_costpercapita_bg117; assert_in_delta(0, (worksheet.costpercapita_bg117||0), 0.001); end
  def test_costpercapita_bi117; assert_in_epsilon(4.975829876472336, worksheet.costpercapita_bi117, 0.001); end
  def test_costpercapita_bj117; assert_in_epsilon(4.811751541714245, worksheet.costpercapita_bj117, 0.001); end
  def test_costpercapita_bk117; assert_in_epsilon(4.654223695826979, worksheet.costpercapita_bk117, 0.001); end
  def test_costpercapita_bl117; assert_in_epsilon(4.510112757932113, worksheet.costpercapita_bl117, 0.001); end
  def test_costpercapita_bm117; assert_in_epsilon(4.3868957869034055, worksheet.costpercapita_bm117, 0.001); end
  def test_costpercapita_bn117; assert_in_epsilon(4.283559404170549, worksheet.costpercapita_bn117, 0.001); end
  def test_costpercapita_bo117; assert_in_delta(0, (worksheet.costpercapita_bo117||0), 0.001); end
  def test_costpercapita_bp117; assert_in_delta(0, (worksheet.costpercapita_bp117||0), 0.001); end
  def test_costpercapita_bq117; assert_in_delta(0, (worksheet.costpercapita_bq117||0), 0.001); end
  def test_costpercapita_bs117; assert_in_epsilon(9.810101545472326, worksheet.costpercapita_bs117, 0.001); end
  def test_costpercapita_bt117; assert_in_epsilon(9.4866127676506, worksheet.costpercapita_bt117, 0.001); end
  def test_costpercapita_bu117; assert_in_epsilon(9.17603861162877, worksheet.costpercapita_bu117, 0.001); end
  def test_costpercapita_bv117; assert_in_epsilon(8.891916571756262, worksheet.costpercapita_bv117, 0.001); end
  def test_costpercapita_bw117; assert_in_epsilon(8.648988049695513, worksheet.costpercapita_bw117, 0.001); end
  def test_costpercapita_bx117; assert_in_epsilon(8.445255118080532, worksheet.costpercapita_bx117, 0.001); end
  def test_costpercapita_by117; assert_in_epsilon(4.072941783620554, worksheet.costpercapita_by117, 0.001); end
  def test_costpercapita_bz117; assert_in_epsilon(3.9916950449024555, worksheet.costpercapita_bz117, 0.001); end
  def test_costpercapita_ca117; assert_in_epsilon(3.9172030888656986, worksheet.costpercapita_ca117, 0.001); end
  def test_costpercapita_cc117; assert_in_epsilon(7.382305842408079, worksheet.costpercapita_cc117, 0.001); end
  def test_costpercapita_cd117; assert_in_epsilon(166.9933263324059, worksheet.costpercapita_cd117, 0.001); end
  def test_costpercapita_cf117; assert_in_epsilon(-10.659744339457589, worksheet.costpercapita_cf117, 0.001); end
  def test_costpercapita_cg117; assert_in_epsilon(4.811751541714245, worksheet.costpercapita_cg117, 0.001); end
  def test_costpercapita_ch117; assert_in_epsilon(4.654223695826979, worksheet.costpercapita_ch117, 0.001); end
  def test_costpercapita_ci117; assert_in_epsilon(4.510112757932113, worksheet.costpercapita_ci117, 0.001); end
  def test_costpercapita_cj117; assert_in_epsilon(4.3868957869034055, worksheet.costpercapita_cj117, 0.001); end
  def test_costpercapita_ck117; assert_in_epsilon(4.283559404170549, worksheet.costpercapita_ck117, 0.001); end
  def test_costpercapita_cl117; assert_in_delta(0, (worksheet.costpercapita_cl117||0), 0.001); end
  def test_costpercapita_cm117; assert_in_delta(0, (worksheet.costpercapita_cm117||0), 0.001); end
  def test_costpercapita_cn117; assert_in_delta(0, (worksheet.costpercapita_cn117||0), 0.001); end
  def test_costpercapita_cp117; assert_in_epsilon(1.3318665385655224, worksheet.costpercapita_cp117, 0.001); end
  def test_costpercapita_cq117; assert_in_epsilon(59.64103488722952, worksheet.costpercapita_cq117, 0.001); end
  def test_costpercapita_cr117; assert_equal("ok", worksheet.costpercapita_cr117); end
  def test_costpercapita_a118; assert_equal("III.c", worksheet.costpercapita_a118); end
  def test_costpercapita_b118; assert_equal("Wave and Tidal", worksheet.costpercapita_b118); end
  def test_costpercapita_c118; assert_equal("Electricity", worksheet.costpercapita_c118); end
  def test_costpercapita_e118; assert_in_delta(0.060160661806703465, worksheet.costpercapita_e118, 0.001); end
  def test_costpercapita_f118; assert_in_delta(0.14540518838742314, worksheet.costpercapita_f118, 0.001); end
  def test_costpercapita_g118; assert_in_epsilon(2.2402857055689993, worksheet.costpercapita_g118, 0.001); end
  def test_costpercapita_h118; assert_in_epsilon(3.509889954071404, worksheet.costpercapita_h118, 0.001); end
  def test_costpercapita_i118; assert_in_delta(0, (worksheet.costpercapita_i118||0), 0.001); end
  def test_costpercapita_j118; assert_in_delta(0, (worksheet.costpercapita_j118||0), 0.001); end
  def test_costpercapita_k118; assert_in_delta(0.15709502587543153, worksheet.costpercapita_k118, 0.001); end
  def test_costpercapita_l118; assert_in_epsilon(2.1316046896209473, worksheet.costpercapita_l118, 0.001); end
  def test_costpercapita_m118; assert_in_epsilon(5.229563118234035, worksheet.costpercapita_m118, 0.001); end
  def test_costpercapita_o118; assert_in_delta(0.0035673412337731835, worksheet.costpercapita_o118, 0.001); end
  def test_costpercapita_p118; assert_in_delta(0.03130363520206445, worksheet.costpercapita_p118, 0.001); end
  def test_costpercapita_q118; assert_in_delta(0.926986721735009, worksheet.costpercapita_q118, 0.001); end
  def test_costpercapita_r118; assert_in_epsilon(2.24570997945333, worksheet.costpercapita_r118, 0.001); end
  def test_costpercapita_s118; assert_in_epsilon(2.1843568390045642, worksheet.costpercapita_s118, 0.001); end
  def test_costpercapita_t118; assert_in_delta(0, (worksheet.costpercapita_t118||0), 0.001); end
  def test_costpercapita_u118; assert_in_delta(0, (worksheet.costpercapita_u118||0), 0.001); end
  def test_costpercapita_v118; assert_in_delta(0, (worksheet.costpercapita_v118||0), 0.001); end
  def test_costpercapita_w118; assert_in_delta(0, (worksheet.costpercapita_w118||0), 0.001); end
  def test_costpercapita_y118; assert_in_delta(0, (worksheet.costpercapita_y118||0), 0.001); end
  def test_costpercapita_z118; assert_in_delta(0, (worksheet.costpercapita_z118||0), 0.001); end
  def test_costpercapita_aa118; assert_in_delta(0, (worksheet.costpercapita_aa118||0), 0.001); end
  def test_costpercapita_ab118; assert_in_delta(0, (worksheet.costpercapita_ab118||0), 0.001); end
  def test_costpercapita_ac118; assert_in_delta(0, (worksheet.costpercapita_ac118||0), 0.001); end
  def test_costpercapita_ad118; assert_in_delta(0, (worksheet.costpercapita_ad118||0), 0.001); end
  def test_costpercapita_ae118; assert_in_delta(0, (worksheet.costpercapita_ae118||0), 0.001); end
  def test_costpercapita_af118; assert_in_delta(0, (worksheet.costpercapita_af118||0), 0.001); end
  def test_costpercapita_ag118; assert_in_delta(0, (worksheet.costpercapita_ag118||0), 0.001); end
  def test_costpercapita_ai118; assert_in_delta(0.06372800304047666, worksheet.costpercapita_ai118, 0.001); end
  def test_costpercapita_aj118; assert_in_delta(0.1767088235894876, worksheet.costpercapita_aj118, 0.001); end
  def test_costpercapita_ak118; assert_in_epsilon(3.1672724273040083, worksheet.costpercapita_ak118, 0.001); end
  def test_costpercapita_al118; assert_in_epsilon(5.755599933524734, worksheet.costpercapita_al118, 0.001); end
  def test_costpercapita_am118; assert_in_epsilon(2.1843568390045642, worksheet.costpercapita_am118, 0.001); end
  def test_costpercapita_an118; assert_in_delta(0, (worksheet.costpercapita_an118||0), 0.001); end
  def test_costpercapita_ao118; assert_in_delta(0.15709502587543153, worksheet.costpercapita_ao118, 0.001); end
  def test_costpercapita_ap118; assert_in_epsilon(2.1316046896209473, worksheet.costpercapita_ap118, 0.001); end
  def test_costpercapita_aq118; assert_in_epsilon(5.229563118234035, worksheet.costpercapita_aq118, 0.001); end
  def test_costpercapita_as118; assert_in_epsilon(2.0962143177992982, worksheet.costpercapita_as118, 0.001); end
  def test_costpercapita_at118; assert_in_epsilon(45.1878500939878, worksheet.costpercapita_at118, 0.001); end
  def test_costpercapita_av118; assert_in_delta(0.1, worksheet.costpercapita_av118, 0.001); end
  def test_costpercapita_aw118; assert_in_epsilon(30, worksheet.costpercapita_aw118, 0.001); end
  def test_costpercapita_ay118; assert_in_delta(0.019145393336508148, worksheet.costpercapita_ay118, 0.001); end
  def test_costpercapita_az118; assert_in_delta(0.07712236538085229, worksheet.costpercapita_az118, 0.001); end
  def test_costpercapita_ba118; assert_in_epsilon(1.1882391175894047, worksheet.costpercapita_ba118, 0.001); end
  def test_costpercapita_bb118; assert_in_epsilon(1.8616324388868315, worksheet.costpercapita_bb118, 0.001); end
  def test_costpercapita_bc118; assert_in_delta(0, (worksheet.costpercapita_bc118||0), 0.001); end
  def test_costpercapita_bd118; assert_in_delta(0, (worksheet.costpercapita_bd118||0), 0.001); end
  def test_costpercapita_be118; assert_in_delta(0.08332261124546925, worksheet.costpercapita_be118, 0.001); end
  def test_costpercapita_bf118; assert_in_epsilon(1.1305951152338956, worksheet.costpercapita_bf118, 0.001); end
  def test_costpercapita_bg118; assert_in_epsilon(2.773740621359832, worksheet.costpercapita_bg118, 0.001); end
  def test_costpercapita_bi118; assert_in_delta(0.019145393336508148, worksheet.costpercapita_bi118, 0.001); end
  def test_costpercapita_bj118; assert_in_delta(0.09563643804625059, worksheet.costpercapita_bj118, 0.001); end
  def test_costpercapita_bk118; assert_in_epsilon(1.2807445955386614, worksheet.costpercapita_bk118, 0.001); end
  def test_costpercapita_bl118; assert_in_epsilon(3.102720731478055, worksheet.costpercapita_bl118, 0.001); end
  def test_costpercapita_bm118; assert_in_epsilon(3.017953926078717, worksheet.costpercapita_bm118, 0.001); end
  def test_costpercapita_bn118; assert_in_epsilon(2.9468639214092573, worksheet.costpercapita_bn118, 0.001); end
  def test_costpercapita_bo118; assert_in_epsilon(2.9512103116090884, worksheet.costpercapita_bo118, 0.001); end
  def test_costpercapita_bp118; assert_in_epsilon(3.95708290331863, worksheet.costpercapita_bp118, 0.001); end
  def test_costpercapita_bq118; assert_in_epsilon(5.627617814142242, worksheet.costpercapita_bq118, 0.001); end
  def test_costpercapita_bs118; assert_in_delta(0.02271273457028133, worksheet.costpercapita_bs118, 0.001); end
  def test_costpercapita_bt118; assert_in_delta(0.12694007324831508, worksheet.costpercapita_bt118, 0.001); end
  def test_costpercapita_bu118; assert_in_epsilon(2.2077313172736703, worksheet.costpercapita_bu118, 0.001); end
  def test_costpercapita_bv118; assert_in_epsilon(5.348430710931385, worksheet.costpercapita_bv118, 0.001); end
  def test_costpercapita_bw118; assert_in_epsilon(5.202310765083282, worksheet.costpercapita_bw118, 0.001); end
  def test_costpercapita_bx118; assert_in_epsilon(2.9468639214092573, worksheet.costpercapita_bx118, 0.001); end
  def test_costpercapita_by118; assert_in_epsilon(2.9512103116090884, worksheet.costpercapita_by118, 0.001); end
  def test_costpercapita_bz118; assert_in_epsilon(3.95708290331863, worksheet.costpercapita_bz118, 0.001); end
  def test_costpercapita_ca118; assert_in_epsilon(5.627617814142242, worksheet.costpercapita_ca118, 0.001); end
  def test_costpercapita_cc118; assert_in_epsilon(3.1545445057317942, worksheet.costpercapita_cc118, 0.001); end
  def test_costpercapita_cd118; assert_in_epsilon(62.44949664162614, worksheet.costpercapita_cd118, 0.001); end
  def test_costpercapita_cf118; assert_in_delta(-0.04101526847019532, worksheet.costpercapita_cf118, 0.001); end
  def test_costpercapita_cg118; assert_in_delta(-0.04976875034117255, worksheet.costpercapita_cg118, 0.001); end
  def test_costpercapita_ch118; assert_in_delta(-0.959541110030338, worksheet.costpercapita_ch118, 0.001); end
  def test_costpercapita_ci118; assert_in_delta(-0.40716922259334903, worksheet.costpercapita_ci118, 0.001); end
  def test_costpercapita_cj118; assert_in_epsilon(3.017953926078717, worksheet.costpercapita_cj118, 0.001); end
  def test_costpercapita_ck118; assert_in_epsilon(2.9468639214092573, worksheet.costpercapita_ck118, 0.001); end
  def test_costpercapita_cl118; assert_in_epsilon(2.794115285733657, worksheet.costpercapita_cl118, 0.001); end
  def test_costpercapita_cm118; assert_in_epsilon(1.8254782136976826, worksheet.costpercapita_cm118, 0.001); end
  def test_costpercapita_cn118; assert_in_delta(0.39805469590820725, worksheet.costpercapita_cn118, 0.001); end
  def test_costpercapita_cp118; assert_in_epsilon(1.0583301879324962, worksheet.costpercapita_cp118, 0.001); end
  def test_costpercapita_cq118; assert_in_epsilon(17.261646547638346, worksheet.costpercapita_cq118, 0.001); end
  def test_costpercapita_cr118; assert_equal("ok", worksheet.costpercapita_cr118); end
  def test_costpercapita_a119; assert_equal("III.d", worksheet.costpercapita_a119); end
  def test_costpercapita_b119; assert_equal("Geothermal", worksheet.costpercapita_b119); end
  def test_costpercapita_c119; assert_equal("Electricity", worksheet.costpercapita_c119); end
  def test_costpercapita_e119; assert_in_delta(0, (worksheet.costpercapita_e119||0), 0.001); end
  def test_costpercapita_f119; assert_in_delta(0, (worksheet.costpercapita_f119||0), 0.001); end
  def test_costpercapita_g119; assert_in_delta(0, (worksheet.costpercapita_g119||0), 0.001); end
  def test_costpercapita_h119; assert_in_delta(0, (worksheet.costpercapita_h119||0), 0.001); end
  def test_costpercapita_i119; assert_in_delta(0, (worksheet.costpercapita_i119||0), 0.001); end
  def test_costpercapita_j119; assert_in_delta(0, (worksheet.costpercapita_j119||0), 0.001); end
  def test_costpercapita_k119; assert_in_delta(0, (worksheet.costpercapita_k119||0), 0.001); end
  def test_costpercapita_l119; assert_in_delta(0, (worksheet.costpercapita_l119||0), 0.001); end
  def test_costpercapita_m119; assert_in_delta(0, (worksheet.costpercapita_m119||0), 0.001); end
  def test_costpercapita_o119; assert_in_delta(0, (worksheet.costpercapita_o119||0), 0.001); end
  def test_costpercapita_p119; assert_in_delta(0, (worksheet.costpercapita_p119||0), 0.001); end
  def test_costpercapita_q119; assert_in_delta(0, (worksheet.costpercapita_q119||0), 0.001); end
  def test_costpercapita_r119; assert_in_delta(0, (worksheet.costpercapita_r119||0), 0.001); end
  def test_costpercapita_s119; assert_in_delta(0, (worksheet.costpercapita_s119||0), 0.001); end
  def test_costpercapita_t119; assert_in_delta(0, (worksheet.costpercapita_t119||0), 0.001); end
  def test_costpercapita_u119; assert_in_delta(0, (worksheet.costpercapita_u119||0), 0.001); end
  def test_costpercapita_v119; assert_in_delta(0, (worksheet.costpercapita_v119||0), 0.001); end
  def test_costpercapita_w119; assert_in_delta(0, (worksheet.costpercapita_w119||0), 0.001); end
  def test_costpercapita_y119; assert_in_delta(0, (worksheet.costpercapita_y119||0), 0.001); end
  def test_costpercapita_z119; assert_in_delta(0, (worksheet.costpercapita_z119||0), 0.001); end
  def test_costpercapita_aa119; assert_in_delta(0, (worksheet.costpercapita_aa119||0), 0.001); end
  def test_costpercapita_ab119; assert_in_delta(0, (worksheet.costpercapita_ab119||0), 0.001); end
  def test_costpercapita_ac119; assert_in_delta(0, (worksheet.costpercapita_ac119||0), 0.001); end
  def test_costpercapita_ad119; assert_in_delta(0, (worksheet.costpercapita_ad119||0), 0.001); end
  def test_costpercapita_ae119; assert_in_delta(0, (worksheet.costpercapita_ae119||0), 0.001); end
  def test_costpercapita_af119; assert_in_delta(0, (worksheet.costpercapita_af119||0), 0.001); end
  def test_costpercapita_ag119; assert_in_delta(0, (worksheet.costpercapita_ag119||0), 0.001); end
  def test_costpercapita_ai119; assert_in_delta(0, (worksheet.costpercapita_ai119||0), 0.001); end
  def test_costpercapita_aj119; assert_in_delta(0, (worksheet.costpercapita_aj119||0), 0.001); end
  def test_costpercapita_ak119; assert_in_delta(0, (worksheet.costpercapita_ak119||0), 0.001); end
  def test_costpercapita_al119; assert_in_delta(0, (worksheet.costpercapita_al119||0), 0.001); end
  def test_costpercapita_am119; assert_in_delta(0, (worksheet.costpercapita_am119||0), 0.001); end
  def test_costpercapita_an119; assert_in_delta(0, (worksheet.costpercapita_an119||0), 0.001); end
  def test_costpercapita_ao119; assert_in_delta(0, (worksheet.costpercapita_ao119||0), 0.001); end
  def test_costpercapita_ap119; assert_in_delta(0, (worksheet.costpercapita_ap119||0), 0.001); end
  def test_costpercapita_aq119; assert_in_delta(0, (worksheet.costpercapita_aq119||0), 0.001); end
  def test_costpercapita_as119; assert_in_delta(0, (worksheet.costpercapita_as119||0), 0.001); end
  def test_costpercapita_at119; assert_in_delta(0, (worksheet.costpercapita_at119||0), 0.001); end
  def test_costpercapita_av119; assert_in_delta(0.1, worksheet.costpercapita_av119, 0.001); end
  def test_costpercapita_aw119; assert_in_epsilon(25, worksheet.costpercapita_aw119, 0.001); end
  def test_costpercapita_ay119; assert_in_delta(0, (worksheet.costpercapita_ay119||0), 0.001); end
  def test_costpercapita_az119; assert_in_delta(0, (worksheet.costpercapita_az119||0), 0.001); end
  def test_costpercapita_ba119; assert_in_delta(0, (worksheet.costpercapita_ba119||0), 0.001); end
  def test_costpercapita_bb119; assert_in_delta(0, (worksheet.costpercapita_bb119||0), 0.001); end
  def test_costpercapita_bc119; assert_in_delta(0, (worksheet.costpercapita_bc119||0), 0.001); end
  def test_costpercapita_bd119; assert_in_delta(0, (worksheet.costpercapita_bd119||0), 0.001); end
  def test_costpercapita_be119; assert_in_delta(0, (worksheet.costpercapita_be119||0), 0.001); end
  def test_costpercapita_bf119; assert_in_delta(0, (worksheet.costpercapita_bf119||0), 0.001); end
  def test_costpercapita_bg119; assert_in_delta(0, (worksheet.costpercapita_bg119||0), 0.001); end
  def test_costpercapita_bi119; assert_in_delta(0, (worksheet.costpercapita_bi119||0), 0.001); end
  def test_costpercapita_bj119; assert_in_delta(0, (worksheet.costpercapita_bj119||0), 0.001); end
  def test_costpercapita_bk119; assert_in_delta(0, (worksheet.costpercapita_bk119||0), 0.001); end
  def test_costpercapita_bl119; assert_in_delta(0, (worksheet.costpercapita_bl119||0), 0.001); end
  def test_costpercapita_bm119; assert_in_delta(0, (worksheet.costpercapita_bm119||0), 0.001); end
  def test_costpercapita_bn119; assert_in_delta(0, (worksheet.costpercapita_bn119||0), 0.001); end
  def test_costpercapita_bo119; assert_in_delta(0, (worksheet.costpercapita_bo119||0), 0.001); end
  def test_costpercapita_bp119; assert_in_delta(0, (worksheet.costpercapita_bp119||0), 0.001); end
  def test_costpercapita_bq119; assert_in_delta(0, (worksheet.costpercapita_bq119||0), 0.001); end
  def test_costpercapita_bs119; assert_in_delta(0, (worksheet.costpercapita_bs119||0), 0.001); end
  def test_costpercapita_bt119; assert_in_delta(0, (worksheet.costpercapita_bt119||0), 0.001); end
  def test_costpercapita_bu119; assert_in_delta(0, (worksheet.costpercapita_bu119||0), 0.001); end
  def test_costpercapita_bv119; assert_in_delta(0, (worksheet.costpercapita_bv119||0), 0.001); end
  def test_costpercapita_bw119; assert_in_delta(0, (worksheet.costpercapita_bw119||0), 0.001); end
  def test_costpercapita_bx119; assert_in_delta(0, (worksheet.costpercapita_bx119||0), 0.001); end
  def test_costpercapita_by119; assert_in_delta(0, (worksheet.costpercapita_by119||0), 0.001); end
  def test_costpercapita_bz119; assert_in_delta(0, (worksheet.costpercapita_bz119||0), 0.001); end
  def test_costpercapita_ca119; assert_in_delta(0, (worksheet.costpercapita_ca119||0), 0.001); end
  def test_costpercapita_cc119; assert_in_delta(0, (worksheet.costpercapita_cc119||0), 0.001); end
  def test_costpercapita_cd119; assert_in_delta(0, (worksheet.costpercapita_cd119||0), 0.001); end
  def test_costpercapita_cf119; assert_in_delta(0, (worksheet.costpercapita_cf119||0), 0.001); end
  def test_costpercapita_cg119; assert_in_delta(0, (worksheet.costpercapita_cg119||0), 0.001); end
  def test_costpercapita_ch119; assert_in_delta(0, (worksheet.costpercapita_ch119||0), 0.001); end
  def test_costpercapita_ci119; assert_in_delta(0, (worksheet.costpercapita_ci119||0), 0.001); end
  def test_costpercapita_cj119; assert_in_delta(0, (worksheet.costpercapita_cj119||0), 0.001); end
  def test_costpercapita_ck119; assert_in_delta(0, (worksheet.costpercapita_ck119||0), 0.001); end
  def test_costpercapita_cl119; assert_in_delta(0, (worksheet.costpercapita_cl119||0), 0.001); end
  def test_costpercapita_cm119; assert_in_delta(0, (worksheet.costpercapita_cm119||0), 0.001); end
  def test_costpercapita_cn119; assert_in_delta(0, (worksheet.costpercapita_cn119||0), 0.001); end
  def test_costpercapita_cp119; assert_in_delta(0, (worksheet.costpercapita_cp119||0), 0.001); end
  def test_costpercapita_cq119; assert_in_delta(0, (worksheet.costpercapita_cq119||0), 0.001); end
  def test_costpercapita_cr119; assert_equal("ok", worksheet.costpercapita_cr119); end
  def test_costpercapita_a120; assert_equal("IV.a", worksheet.costpercapita_a120); end
  def test_costpercapita_b120; assert_equal("Distributed solar PV", worksheet.costpercapita_b120); end
  def test_costpercapita_c120; assert_equal("Electricity", worksheet.costpercapita_c120); end
  def test_costpercapita_e120; assert_in_delta(0.35378468641484867, worksheet.costpercapita_e120, 0.001); end
  def test_costpercapita_f120; assert_in_delta(0, (worksheet.costpercapita_f120||0), 0.001); end
  def test_costpercapita_g120; assert_in_delta(0, (worksheet.costpercapita_g120||0), 0.001); end
  def test_costpercapita_h120; assert_in_delta(0, (worksheet.costpercapita_h120||0), 0.001); end
  def test_costpercapita_i120; assert_in_delta(0, (worksheet.costpercapita_i120||0), 0.001); end
  def test_costpercapita_j120; assert_in_delta(0, (worksheet.costpercapita_j120||0), 0.001); end
  def test_costpercapita_k120; assert_in_delta(0, (worksheet.costpercapita_k120||0), 0.001); end
  def test_costpercapita_l120; assert_in_delta(0, (worksheet.costpercapita_l120||0), 0.001); end
  def test_costpercapita_m120; assert_in_delta(0, (worksheet.costpercapita_m120||0), 0.001); end
  def test_costpercapita_o120; assert_in_delta(0.03765524774091415, worksheet.costpercapita_o120, 0.001); end
  def test_costpercapita_p120; assert_in_delta(0.017655061012844742, worksheet.costpercapita_p120, 0.001); end
  def test_costpercapita_q120; assert_in_delta(0, (worksheet.costpercapita_q120||0), 0.001); end
  def test_costpercapita_r120; assert_in_delta(0, (worksheet.costpercapita_r120||0), 0.001); end
  def test_costpercapita_s120; assert_in_delta(0, (worksheet.costpercapita_s120||0), 0.001); end
  def test_costpercapita_t120; assert_in_delta(0, (worksheet.costpercapita_t120||0), 0.001); end
  def test_costpercapita_u120; assert_in_delta(0, (worksheet.costpercapita_u120||0), 0.001); end
  def test_costpercapita_v120; assert_in_delta(0, (worksheet.costpercapita_v120||0), 0.001); end
  def test_costpercapita_w120; assert_in_delta(0, (worksheet.costpercapita_w120||0), 0.001); end
  def test_costpercapita_y120; assert_in_delta(0, (worksheet.costpercapita_y120||0), 0.001); end
  def test_costpercapita_z120; assert_in_delta(0, (worksheet.costpercapita_z120||0), 0.001); end
  def test_costpercapita_aa120; assert_in_delta(0, (worksheet.costpercapita_aa120||0), 0.001); end
  def test_costpercapita_ab120; assert_in_delta(0, (worksheet.costpercapita_ab120||0), 0.001); end
  def test_costpercapita_ac120; assert_in_delta(0, (worksheet.costpercapita_ac120||0), 0.001); end
  def test_costpercapita_ad120; assert_in_delta(0, (worksheet.costpercapita_ad120||0), 0.001); end
  def test_costpercapita_ae120; assert_in_delta(0, (worksheet.costpercapita_ae120||0), 0.001); end
  def test_costpercapita_af120; assert_in_delta(0, (worksheet.costpercapita_af120||0), 0.001); end
  def test_costpercapita_ag120; assert_in_delta(0, (worksheet.costpercapita_ag120||0), 0.001); end
  def test_costpercapita_ai120; assert_in_delta(0.39143993415576284, worksheet.costpercapita_ai120, 0.001); end
  def test_costpercapita_aj120; assert_in_delta(0.017655061012844742, worksheet.costpercapita_aj120, 0.001); end
  def test_costpercapita_ak120; assert_in_delta(0, (worksheet.costpercapita_ak120||0), 0.001); end
  def test_costpercapita_al120; assert_in_delta(0, (worksheet.costpercapita_al120||0), 0.001); end
  def test_costpercapita_am120; assert_in_delta(0, (worksheet.costpercapita_am120||0), 0.001); end
  def test_costpercapita_an120; assert_in_delta(0, (worksheet.costpercapita_an120||0), 0.001); end
  def test_costpercapita_ao120; assert_in_delta(0, (worksheet.costpercapita_ao120||0), 0.001); end
  def test_costpercapita_ap120; assert_in_delta(0, (worksheet.costpercapita_ap120||0), 0.001); end
  def test_costpercapita_aq120; assert_in_delta(0, (worksheet.costpercapita_aq120||0), 0.001); end
  def test_costpercapita_as120; assert_in_delta(0.04545499946317862, worksheet.costpercapita_as120, 0.001); end
  def test_costpercapita_at120; assert_in_delta(0.4657653723160896, worksheet.costpercapita_at120, 0.001); end
  def test_costpercapita_av120; assert_in_delta(0.1, worksheet.costpercapita_av120, 0.001); end
  def test_costpercapita_aw120; assert_in_epsilon(25, worksheet.costpercapita_aw120, 0.001); end
  def test_costpercapita_ay120; assert_in_delta(0.1169273306180248, worksheet.costpercapita_ay120, 0.001); end
  def test_costpercapita_az120; assert_in_delta(0, (worksheet.costpercapita_az120||0), 0.001); end
  def test_costpercapita_ba120; assert_in_delta(0, (worksheet.costpercapita_ba120||0), 0.001); end
  def test_costpercapita_bb120; assert_in_delta(0, (worksheet.costpercapita_bb120||0), 0.001); end
  def test_costpercapita_bc120; assert_in_delta(0, (worksheet.costpercapita_bc120||0), 0.001); end
  def test_costpercapita_bd120; assert_in_delta(0, (worksheet.costpercapita_bd120||0), 0.001); end
  def test_costpercapita_be120; assert_in_delta(0, (worksheet.costpercapita_be120||0), 0.001); end
  def test_costpercapita_bf120; assert_in_delta(0, (worksheet.costpercapita_bf120||0), 0.001); end
  def test_costpercapita_bg120; assert_in_delta(0, (worksheet.costpercapita_bg120||0), 0.001); end
  def test_costpercapita_bi120; assert_in_delta(0.1169273306180248, worksheet.costpercapita_bi120, 0.001); end
  def test_costpercapita_bj120; assert_in_delta(0.11307164379355568, worksheet.costpercapita_bj120, 0.001); end
  def test_costpercapita_bk120; assert_in_delta(0.1093698873077282, worksheet.costpercapita_bk120, 0.001); end
  def test_costpercapita_bl120; assert_in_delta(0.10598341556347053, worksheet.costpercapita_bl120, 0.001); end
  def test_costpercapita_bm120; assert_in_delta(0.10308793242459771, worksheet.costpercapita_bm120, 0.001); end
  def test_costpercapita_bn120; assert_in_delta(0, (worksheet.costpercapita_bn120||0), 0.001); end
  def test_costpercapita_bo120; assert_in_delta(0, (worksheet.costpercapita_bo120||0), 0.001); end
  def test_costpercapita_bp120; assert_in_delta(0, (worksheet.costpercapita_bp120||0), 0.001); end
  def test_costpercapita_bq120; assert_in_delta(0, (worksheet.costpercapita_bq120||0), 0.001); end
  def test_costpercapita_bs120; assert_in_delta(0.15458257835893893, worksheet.costpercapita_bs120, 0.001); end
  def test_costpercapita_bt120; assert_in_delta(0.13072670480640042, worksheet.costpercapita_bt120, 0.001); end
  def test_costpercapita_bu120; assert_in_delta(0.1093698873077282, worksheet.costpercapita_bu120, 0.001); end
  def test_costpercapita_bv120; assert_in_delta(0.10598341556347053, worksheet.costpercapita_bv120, 0.001); end
  def test_costpercapita_bw120; assert_in_delta(0.10308793242459771, worksheet.costpercapita_bw120, 0.001); end
  def test_costpercapita_bx120; assert_in_delta(0, (worksheet.costpercapita_bx120||0), 0.001); end
  def test_costpercapita_by120; assert_in_delta(0, (worksheet.costpercapita_by120||0), 0.001); end
  def test_costpercapita_bz120; assert_in_delta(0, (worksheet.costpercapita_bz120||0), 0.001); end
  def test_costpercapita_ca120; assert_in_delta(0, (worksheet.costpercapita_ca120||0), 0.001); end
  def test_costpercapita_cc120; assert_in_delta(0.0670833909401262, worksheet.costpercapita_cc120, 0.001); end
  def test_costpercapita_cd120; assert_in_epsilon(1.6679412424461417, worksheet.costpercapita_cd120, 0.001); end
  def test_costpercapita_cf120; assert_in_delta(-0.23685735579682388, worksheet.costpercapita_cf120, 0.001); end
  def test_costpercapita_cg120; assert_in_delta(0.11307164379355568, worksheet.costpercapita_cg120, 0.001); end
  def test_costpercapita_ch120; assert_in_delta(0.1093698873077282, worksheet.costpercapita_ch120, 0.001); end
  def test_costpercapita_ci120; assert_in_delta(0.10598341556347053, worksheet.costpercapita_ci120, 0.001); end
  def test_costpercapita_cj120; assert_in_delta(0.10308793242459771, worksheet.costpercapita_cj120, 0.001); end
  def test_costpercapita_ck120; assert_in_delta(0, (worksheet.costpercapita_ck120||0), 0.001); end
  def test_costpercapita_cl120; assert_in_delta(0, (worksheet.costpercapita_cl120||0), 0.001); end
  def test_costpercapita_cm120; assert_in_delta(0, (worksheet.costpercapita_cm120||0), 0.001); end
  def test_costpercapita_cn120; assert_in_delta(0, (worksheet.costpercapita_cn120||0), 0.001); end
  def test_costpercapita_cp120; assert_in_delta(0.021628391476947582, worksheet.costpercapita_cp120, 0.001); end
  def test_costpercapita_cq120; assert_in_epsilon(1.202175870130052, worksheet.costpercapita_cq120, 0.001); end
  def test_costpercapita_cr120; assert_equal("ok", worksheet.costpercapita_cr120); end
  def test_costpercapita_a121; assert_equal("IV.b", worksheet.costpercapita_a121); end
  def test_costpercapita_b121; assert_equal("Distributed solar thermal", worksheet.costpercapita_b121); end
  def test_costpercapita_c121; assert_equal("Buildings", worksheet.costpercapita_c121); end
  def test_costpercapita_e121; assert_in_delta(0, (worksheet.costpercapita_e121||0), 0.001); end
  def test_costpercapita_f121; assert_in_delta(0, (worksheet.costpercapita_f121||0), 0.001); end
  def test_costpercapita_g121; assert_in_delta(0, (worksheet.costpercapita_g121||0), 0.001); end
  def test_costpercapita_h121; assert_in_delta(0, (worksheet.costpercapita_h121||0), 0.001); end
  def test_costpercapita_i121; assert_in_delta(0, (worksheet.costpercapita_i121||0), 0.001); end
  def test_costpercapita_j121; assert_in_delta(0, (worksheet.costpercapita_j121||0), 0.001); end
  def test_costpercapita_k121; assert_in_delta(0, (worksheet.costpercapita_k121||0), 0.001); end
  def test_costpercapita_l121; assert_in_delta(0, (worksheet.costpercapita_l121||0), 0.001); end
  def test_costpercapita_m121; assert_in_delta(0, (worksheet.costpercapita_m121||0), 0.001); end
  def test_costpercapita_o121; assert_in_delta(0, (worksheet.costpercapita_o121||0), 0.001); end
  def test_costpercapita_p121; assert_in_delta(0, (worksheet.costpercapita_p121||0), 0.001); end
  def test_costpercapita_q121; assert_in_delta(0, (worksheet.costpercapita_q121||0), 0.001); end
  def test_costpercapita_r121; assert_in_delta(0, (worksheet.costpercapita_r121||0), 0.001); end
  def test_costpercapita_s121; assert_in_delta(0, (worksheet.costpercapita_s121||0), 0.001); end
  def test_costpercapita_t121; assert_in_delta(0, (worksheet.costpercapita_t121||0), 0.001); end
  def test_costpercapita_u121; assert_in_delta(0, (worksheet.costpercapita_u121||0), 0.001); end
  def test_costpercapita_v121; assert_in_delta(0, (worksheet.costpercapita_v121||0), 0.001); end
  def test_costpercapita_w121; assert_in_delta(0, (worksheet.costpercapita_w121||0), 0.001); end
  def test_costpercapita_y121; assert_in_delta(0, (worksheet.costpercapita_y121||0), 0.001); end
  def test_costpercapita_z121; assert_in_delta(0, (worksheet.costpercapita_z121||0), 0.001); end
  def test_costpercapita_aa121; assert_in_delta(0, (worksheet.costpercapita_aa121||0), 0.001); end
  def test_costpercapita_ab121; assert_in_delta(0, (worksheet.costpercapita_ab121||0), 0.001); end
  def test_costpercapita_ac121; assert_in_delta(0, (worksheet.costpercapita_ac121||0), 0.001); end
  def test_costpercapita_ad121; assert_in_delta(0, (worksheet.costpercapita_ad121||0), 0.001); end
  def test_costpercapita_ae121; assert_in_delta(0, (worksheet.costpercapita_ae121||0), 0.001); end
  def test_costpercapita_af121; assert_in_delta(0, (worksheet.costpercapita_af121||0), 0.001); end
  def test_costpercapita_ag121; assert_in_delta(0, (worksheet.costpercapita_ag121||0), 0.001); end
  def test_costpercapita_ai121; assert_in_delta(0, (worksheet.costpercapita_ai121||0), 0.001); end
  def test_costpercapita_aj121; assert_in_delta(0, (worksheet.costpercapita_aj121||0), 0.001); end
  def test_costpercapita_ak121; assert_in_delta(0, (worksheet.costpercapita_ak121||0), 0.001); end
  def test_costpercapita_al121; assert_in_delta(0, (worksheet.costpercapita_al121||0), 0.001); end
  def test_costpercapita_am121; assert_in_delta(0, (worksheet.costpercapita_am121||0), 0.001); end
  def test_costpercapita_an121; assert_in_delta(0, (worksheet.costpercapita_an121||0), 0.001); end
  def test_costpercapita_ao121; assert_in_delta(0, (worksheet.costpercapita_ao121||0), 0.001); end
  def test_costpercapita_ap121; assert_in_delta(0, (worksheet.costpercapita_ap121||0), 0.001); end
  def test_costpercapita_aq121; assert_in_delta(0, (worksheet.costpercapita_aq121||0), 0.001); end
  def test_costpercapita_as121; assert_in_delta(0, (worksheet.costpercapita_as121||0), 0.001); end
  def test_costpercapita_at121; assert_in_delta(0, (worksheet.costpercapita_at121||0), 0.001); end
  def test_costpercapita_av121; assert_in_delta(0.1, worksheet.costpercapita_av121, 0.001); end
  def test_costpercapita_aw121; assert_in_epsilon(20, worksheet.costpercapita_aw121, 0.001); end
  def test_costpercapita_ay121; assert_in_delta(0, (worksheet.costpercapita_ay121||0), 0.001); end
  def test_costpercapita_az121; assert_in_delta(0, (worksheet.costpercapita_az121||0), 0.001); end
  def test_costpercapita_ba121; assert_in_delta(0, (worksheet.costpercapita_ba121||0), 0.001); end
  def test_costpercapita_bb121; assert_in_delta(0, (worksheet.costpercapita_bb121||0), 0.001); end
  def test_costpercapita_bc121; assert_in_delta(0, (worksheet.costpercapita_bc121||0), 0.001); end
  def test_costpercapita_bd121; assert_in_delta(0, (worksheet.costpercapita_bd121||0), 0.001); end
  def test_costpercapita_be121; assert_in_delta(0, (worksheet.costpercapita_be121||0), 0.001); end
  def test_costpercapita_bf121; assert_in_delta(0, (worksheet.costpercapita_bf121||0), 0.001); end
  def test_costpercapita_bg121; assert_in_delta(0, (worksheet.costpercapita_bg121||0), 0.001); end
  def test_costpercapita_bi121; assert_in_delta(0, (worksheet.costpercapita_bi121||0), 0.001); end
  def test_costpercapita_bj121; assert_in_delta(0, (worksheet.costpercapita_bj121||0), 0.001); end
  def test_costpercapita_bk121; assert_in_delta(0, (worksheet.costpercapita_bk121||0), 0.001); end
  def test_costpercapita_bl121; assert_in_delta(0, (worksheet.costpercapita_bl121||0), 0.001); end
  def test_costpercapita_bm121; assert_in_delta(0, (worksheet.costpercapita_bm121||0), 0.001); end
  def test_costpercapita_bn121; assert_in_delta(0, (worksheet.costpercapita_bn121||0), 0.001); end
  def test_costpercapita_bo121; assert_in_delta(0, (worksheet.costpercapita_bo121||0), 0.001); end
  def test_costpercapita_bp121; assert_in_delta(0, (worksheet.costpercapita_bp121||0), 0.001); end
  def test_costpercapita_bq121; assert_in_delta(0, (worksheet.costpercapita_bq121||0), 0.001); end
  def test_costpercapita_bs121; assert_in_delta(0, (worksheet.costpercapita_bs121||0), 0.001); end
  def test_costpercapita_bt121; assert_in_delta(0, (worksheet.costpercapita_bt121||0), 0.001); end
  def test_costpercapita_bu121; assert_in_delta(0, (worksheet.costpercapita_bu121||0), 0.001); end
  def test_costpercapita_bv121; assert_in_delta(0, (worksheet.costpercapita_bv121||0), 0.001); end
  def test_costpercapita_bw121; assert_in_delta(0, (worksheet.costpercapita_bw121||0), 0.001); end
  def test_costpercapita_bx121; assert_in_delta(0, (worksheet.costpercapita_bx121||0), 0.001); end
  def test_costpercapita_by121; assert_in_delta(0, (worksheet.costpercapita_by121||0), 0.001); end
  def test_costpercapita_bz121; assert_in_delta(0, (worksheet.costpercapita_bz121||0), 0.001); end
  def test_costpercapita_ca121; assert_in_delta(0, (worksheet.costpercapita_ca121||0), 0.001); end
  def test_costpercapita_cc121; assert_in_delta(0, (worksheet.costpercapita_cc121||0), 0.001); end
  def test_costpercapita_cd121; assert_in_delta(0, (worksheet.costpercapita_cd121||0), 0.001); end
  def test_costpercapita_cf121; assert_in_delta(0, (worksheet.costpercapita_cf121||0), 0.001); end
  def test_costpercapita_cg121; assert_in_delta(0, (worksheet.costpercapita_cg121||0), 0.001); end
  def test_costpercapita_ch121; assert_in_delta(0, (worksheet.costpercapita_ch121||0), 0.001); end
  def test_costpercapita_ci121; assert_in_delta(0, (worksheet.costpercapita_ci121||0), 0.001); end
  def test_costpercapita_cj121; assert_in_delta(0, (worksheet.costpercapita_cj121||0), 0.001); end
  def test_costpercapita_ck121; assert_in_delta(0, (worksheet.costpercapita_ck121||0), 0.001); end
  def test_costpercapita_cl121; assert_in_delta(0, (worksheet.costpercapita_cl121||0), 0.001); end
  def test_costpercapita_cm121; assert_in_delta(0, (worksheet.costpercapita_cm121||0), 0.001); end
  def test_costpercapita_cn121; assert_in_delta(0, (worksheet.costpercapita_cn121||0), 0.001); end
  def test_costpercapita_cp121; assert_in_delta(0, (worksheet.costpercapita_cp121||0), 0.001); end
  def test_costpercapita_cq121; assert_in_delta(0, (worksheet.costpercapita_cq121||0), 0.001); end
  def test_costpercapita_cr121; assert_equal("ok", worksheet.costpercapita_cr121); end
  def test_costpercapita_a122; assert_equal("IV.c", worksheet.costpercapita_a122); end
  def test_costpercapita_b122; assert_equal("Micro wind", worksheet.costpercapita_b122); end
  def test_costpercapita_c122; assert_equal("Electricity", worksheet.costpercapita_c122); end
  def test_costpercapita_e122; assert_in_delta(0, (worksheet.costpercapita_e122||0), 0.001); end
  def test_costpercapita_f122; assert_in_delta(0, (worksheet.costpercapita_f122||0), 0.001); end
  def test_costpercapita_g122; assert_in_delta(0, (worksheet.costpercapita_g122||0), 0.001); end
  def test_costpercapita_h122; assert_in_delta(0, (worksheet.costpercapita_h122||0), 0.001); end
  def test_costpercapita_i122; assert_in_delta(0, (worksheet.costpercapita_i122||0), 0.001); end
  def test_costpercapita_j122; assert_in_delta(0, (worksheet.costpercapita_j122||0), 0.001); end
  def test_costpercapita_k122; assert_in_delta(0, (worksheet.costpercapita_k122||0), 0.001); end
  def test_costpercapita_l122; assert_in_delta(0, (worksheet.costpercapita_l122||0), 0.001); end
  def test_costpercapita_m122; assert_in_delta(0, (worksheet.costpercapita_m122||0), 0.001); end
  def test_costpercapita_o122; assert_in_delta(0, (worksheet.costpercapita_o122||0), 0.001); end
  def test_costpercapita_p122; assert_in_delta(0, (worksheet.costpercapita_p122||0), 0.001); end
  def test_costpercapita_q122; assert_in_delta(0, (worksheet.costpercapita_q122||0), 0.001); end
  def test_costpercapita_r122; assert_in_delta(0, (worksheet.costpercapita_r122||0), 0.001); end
  def test_costpercapita_s122; assert_in_delta(0, (worksheet.costpercapita_s122||0), 0.001); end
  def test_costpercapita_t122; assert_in_delta(0, (worksheet.costpercapita_t122||0), 0.001); end
  def test_costpercapita_u122; assert_in_delta(0, (worksheet.costpercapita_u122||0), 0.001); end
  def test_costpercapita_v122; assert_in_delta(0, (worksheet.costpercapita_v122||0), 0.001); end
  def test_costpercapita_w122; assert_in_delta(0, (worksheet.costpercapita_w122||0), 0.001); end
  def test_costpercapita_y122; assert_in_delta(0, (worksheet.costpercapita_y122||0), 0.001); end
  def test_costpercapita_z122; assert_in_delta(0, (worksheet.costpercapita_z122||0), 0.001); end
  def test_costpercapita_aa122; assert_in_delta(0, (worksheet.costpercapita_aa122||0), 0.001); end
  def test_costpercapita_ab122; assert_in_delta(0, (worksheet.costpercapita_ab122||0), 0.001); end
  def test_costpercapita_ac122; assert_in_delta(0, (worksheet.costpercapita_ac122||0), 0.001); end
  def test_costpercapita_ad122; assert_in_delta(0, (worksheet.costpercapita_ad122||0), 0.001); end
  def test_costpercapita_ae122; assert_in_delta(0, (worksheet.costpercapita_ae122||0), 0.001); end
  def test_costpercapita_af122; assert_in_delta(0, (worksheet.costpercapita_af122||0), 0.001); end
  def test_costpercapita_ag122; assert_in_delta(0, (worksheet.costpercapita_ag122||0), 0.001); end
  def test_costpercapita_ai122; assert_in_delta(0, (worksheet.costpercapita_ai122||0), 0.001); end
  def test_costpercapita_aj122; assert_in_delta(0, (worksheet.costpercapita_aj122||0), 0.001); end
  def test_costpercapita_ak122; assert_in_delta(0, (worksheet.costpercapita_ak122||0), 0.001); end
  def test_costpercapita_al122; assert_in_delta(0, (worksheet.costpercapita_al122||0), 0.001); end
  def test_costpercapita_am122; assert_in_delta(0, (worksheet.costpercapita_am122||0), 0.001); end
  def test_costpercapita_an122; assert_in_delta(0, (worksheet.costpercapita_an122||0), 0.001); end
  def test_costpercapita_ao122; assert_in_delta(0, (worksheet.costpercapita_ao122||0), 0.001); end
  def test_costpercapita_ap122; assert_in_delta(0, (worksheet.costpercapita_ap122||0), 0.001); end
  def test_costpercapita_aq122; assert_in_delta(0, (worksheet.costpercapita_aq122||0), 0.001); end
  def test_costpercapita_as122; assert_in_delta(0, (worksheet.costpercapita_as122||0), 0.001); end
  def test_costpercapita_at122; assert_in_delta(0, (worksheet.costpercapita_at122||0), 0.001); end
  def test_costpercapita_av122; assert_in_delta(0.1, worksheet.costpercapita_av122, 0.001); end
  def test_costpercapita_aw122; assert_in_epsilon(25, worksheet.costpercapita_aw122, 0.001); end
  def test_costpercapita_ay122; assert_in_delta(0, (worksheet.costpercapita_ay122||0), 0.001); end
  def test_costpercapita_az122; assert_in_delta(0, (worksheet.costpercapita_az122||0), 0.001); end
  def test_costpercapita_ba122; assert_in_delta(0, (worksheet.costpercapita_ba122||0), 0.001); end
  def test_costpercapita_bb122; assert_in_delta(0, (worksheet.costpercapita_bb122||0), 0.001); end
  def test_costpercapita_bc122; assert_in_delta(0, (worksheet.costpercapita_bc122||0), 0.001); end
  def test_costpercapita_bd122; assert_in_delta(0, (worksheet.costpercapita_bd122||0), 0.001); end
  def test_costpercapita_be122; assert_in_delta(0, (worksheet.costpercapita_be122||0), 0.001); end
  def test_costpercapita_bf122; assert_in_delta(0, (worksheet.costpercapita_bf122||0), 0.001); end
  def test_costpercapita_bg122; assert_in_delta(0, (worksheet.costpercapita_bg122||0), 0.001); end
  def test_costpercapita_bi122; assert_in_delta(0, (worksheet.costpercapita_bi122||0), 0.001); end
  def test_costpercapita_bj122; assert_in_delta(0, (worksheet.costpercapita_bj122||0), 0.001); end
  def test_costpercapita_bk122; assert_in_delta(0, (worksheet.costpercapita_bk122||0), 0.001); end
  def test_costpercapita_bl122; assert_in_delta(0, (worksheet.costpercapita_bl122||0), 0.001); end
  def test_costpercapita_bm122; assert_in_delta(0, (worksheet.costpercapita_bm122||0), 0.001); end
  def test_costpercapita_bn122; assert_in_delta(0, (worksheet.costpercapita_bn122||0), 0.001); end
  def test_costpercapita_bo122; assert_in_delta(0, (worksheet.costpercapita_bo122||0), 0.001); end
  def test_costpercapita_bp122; assert_in_delta(0, (worksheet.costpercapita_bp122||0), 0.001); end
  def test_costpercapita_bq122; assert_in_delta(0, (worksheet.costpercapita_bq122||0), 0.001); end
  def test_costpercapita_bs122; assert_in_delta(0, (worksheet.costpercapita_bs122||0), 0.001); end
  def test_costpercapita_bt122; assert_in_delta(0, (worksheet.costpercapita_bt122||0), 0.001); end
  def test_costpercapita_bu122; assert_in_delta(0, (worksheet.costpercapita_bu122||0), 0.001); end
  def test_costpercapita_bv122; assert_in_delta(0, (worksheet.costpercapita_bv122||0), 0.001); end
  def test_costpercapita_bw122; assert_in_delta(0, (worksheet.costpercapita_bw122||0), 0.001); end
  def test_costpercapita_bx122; assert_in_delta(0, (worksheet.costpercapita_bx122||0), 0.001); end
  def test_costpercapita_by122; assert_in_delta(0, (worksheet.costpercapita_by122||0), 0.001); end
  def test_costpercapita_bz122; assert_in_delta(0, (worksheet.costpercapita_bz122||0), 0.001); end
  def test_costpercapita_ca122; assert_in_delta(0, (worksheet.costpercapita_ca122||0), 0.001); end
  def test_costpercapita_cc122; assert_in_delta(0, (worksheet.costpercapita_cc122||0), 0.001); end
  def test_costpercapita_cd122; assert_in_delta(0, (worksheet.costpercapita_cd122||0), 0.001); end
  def test_costpercapita_cf122; assert_in_delta(0, (worksheet.costpercapita_cf122||0), 0.001); end
  def test_costpercapita_cg122; assert_in_delta(0, (worksheet.costpercapita_cg122||0), 0.001); end
  def test_costpercapita_ch122; assert_in_delta(0, (worksheet.costpercapita_ch122||0), 0.001); end
  def test_costpercapita_ci122; assert_in_delta(0, (worksheet.costpercapita_ci122||0), 0.001); end
  def test_costpercapita_cj122; assert_in_delta(0, (worksheet.costpercapita_cj122||0), 0.001); end
  def test_costpercapita_ck122; assert_in_delta(0, (worksheet.costpercapita_ck122||0), 0.001); end
  def test_costpercapita_cl122; assert_in_delta(0, (worksheet.costpercapita_cl122||0), 0.001); end
  def test_costpercapita_cm122; assert_in_delta(0, (worksheet.costpercapita_cm122||0), 0.001); end
  def test_costpercapita_cn122; assert_in_delta(0, (worksheet.costpercapita_cn122||0), 0.001); end
  def test_costpercapita_cp122; assert_in_delta(0, (worksheet.costpercapita_cp122||0), 0.001); end
  def test_costpercapita_cq122; assert_in_delta(0, (worksheet.costpercapita_cq122||0), 0.001); end
  def test_costpercapita_cr122; assert_equal("ok", worksheet.costpercapita_cr122); end
  def test_costpercapita_a123; assert_equal("V.a", worksheet.costpercapita_a123); end
  def test_costpercapita_b123; assert_equal("Biomatter to fuel conversion", worksheet.costpercapita_b123); end
  def test_costpercapita_c123; assert_equal("Bioenergy", worksheet.costpercapita_c123); end
  def test_costpercapita_e123; assert_in_epsilon(20.743033631254647, worksheet.costpercapita_e123, 0.001); end
  def test_costpercapita_f123; assert_in_epsilon(52.27278762767282, worksheet.costpercapita_f123, 0.001); end
  def test_costpercapita_g123; assert_in_epsilon(31.28563958596829, worksheet.costpercapita_g123, 0.001); end
  def test_costpercapita_h123; assert_in_epsilon(22.72020020634803, worksheet.costpercapita_h123, 0.001); end
  def test_costpercapita_i123; assert_in_epsilon(22.46744973787959, worksheet.costpercapita_i123, 0.001); end
  def test_costpercapita_j123; assert_in_epsilon(23.122830497255695, worksheet.costpercapita_j123, 0.001); end
  def test_costpercapita_k123; assert_in_epsilon(23.87077957210684, worksheet.costpercapita_k123, 0.001); end
  def test_costpercapita_l123; assert_in_epsilon(24.686139172801703, worksheet.costpercapita_l123, 0.001); end
  def test_costpercapita_m123; assert_in_epsilon(19.17839684190845, worksheet.costpercapita_m123, 0.001); end
  def test_costpercapita_o123; assert_in_epsilon(18.29298065287589, worksheet.costpercapita_o123, 0.001); end
  def test_costpercapita_p123; assert_in_epsilon(22.90468643535987, worksheet.costpercapita_p123, 0.001); end
  def test_costpercapita_q123; assert_in_epsilon(36.37337135165574, worksheet.costpercapita_q123, 0.001); end
  def test_costpercapita_r123; assert_in_epsilon(42.17769301332784, worksheet.costpercapita_r123, 0.001); end
  def test_costpercapita_s123; assert_in_epsilon(44.04045505102777, worksheet.costpercapita_s123, 0.001); end
  def test_costpercapita_t123; assert_in_epsilon(45.54065917782545, worksheet.costpercapita_t123, 0.001); end
  def test_costpercapita_u123; assert_in_epsilon(47.19667071735273, worksheet.costpercapita_u123, 0.001); end
  def test_costpercapita_v123; assert_in_epsilon(48.97890974634164, worksheet.costpercapita_v123, 0.001); end
  def test_costpercapita_w123; assert_in_epsilon(50.888902434225734, worksheet.costpercapita_w123, 0.001); end
  def test_costpercapita_y123; assert_in_delta(0, (worksheet.costpercapita_y123||0), 0.001); end
  def test_costpercapita_z123; assert_in_delta(0, (worksheet.costpercapita_z123||0), 0.001); end
  def test_costpercapita_aa123; assert_in_delta(0, (worksheet.costpercapita_aa123||0), 0.001); end
  def test_costpercapita_ab123; assert_in_delta(0, (worksheet.costpercapita_ab123||0), 0.001); end
  def test_costpercapita_ac123; assert_in_delta(0, (worksheet.costpercapita_ac123||0), 0.001); end
  def test_costpercapita_ad123; assert_in_delta(0, (worksheet.costpercapita_ad123||0), 0.001); end
  def test_costpercapita_ae123; assert_in_delta(0, (worksheet.costpercapita_ae123||0), 0.001); end
  def test_costpercapita_af123; assert_in_delta(0, (worksheet.costpercapita_af123||0), 0.001); end
  def test_costpercapita_ag123; assert_in_delta(0, (worksheet.costpercapita_ag123||0), 0.001); end
  def test_costpercapita_ai123; assert_in_epsilon(39.03601428413054, worksheet.costpercapita_ai123, 0.001); end
  def test_costpercapita_aj123; assert_in_epsilon(75.17747406303269, worksheet.costpercapita_aj123, 0.001); end
  def test_costpercapita_ak123; assert_in_epsilon(67.65901093762403, worksheet.costpercapita_ak123, 0.001); end
  def test_costpercapita_al123; assert_in_epsilon(64.89789321967588, worksheet.costpercapita_al123, 0.001); end
  def test_costpercapita_am123; assert_in_epsilon(66.50790478890737, worksheet.costpercapita_am123, 0.001); end
  def test_costpercapita_an123; assert_in_epsilon(68.66348967508115, worksheet.costpercapita_an123, 0.001); end
  def test_costpercapita_ao123; assert_in_epsilon(71.06745028945959, worksheet.costpercapita_ao123, 0.001); end
  def test_costpercapita_ap123; assert_in_epsilon(73.66504891914335, worksheet.costpercapita_ap123, 0.001); end
  def test_costpercapita_aq123; assert_in_epsilon(70.06729927613418, worksheet.costpercapita_aq123, 0.001); end
  def test_costpercapita_as123; assert_in_epsilon(66.30462060590986, worksheet.costpercapita_as123, 0.001); end
  def test_costpercapita_at123; assert_in_epsilon(1434.1000997982806, worksheet.costpercapita_at123, 0.001); end
  def test_costpercapita_av123; assert_in_delta(0.1, worksheet.costpercapita_av123, 0.001); end
  def test_costpercapita_aw123; assert_in_epsilon(30, worksheet.costpercapita_aw123, 0.001); end
  def test_costpercapita_ay123; assert_in_epsilon(6.601216242247788, worksheet.costpercapita_ay123, 0.001); end
  def test_costpercapita_az123; assert_in_epsilon(27.72529007806557, worksheet.costpercapita_az123, 0.001); end
  def test_costpercapita_ba123; assert_in_epsilon(16.593785641911804, worksheet.costpercapita_ba123, 0.001); end
  def test_costpercapita_bb123; assert_in_epsilon(12.050708790193685, worksheet.costpercapita_bb123, 0.001); end
  def test_costpercapita_bc123; assert_in_epsilon(11.916650891740515, worksheet.costpercapita_bc123, 0.001); end
  def test_costpercapita_bd123; assert_in_epsilon(12.264262383109804, worksheet.costpercapita_bd123, 0.001); end
  def test_costpercapita_be123; assert_in_epsilon(12.660971761067117, worksheet.costpercapita_be123, 0.001); end
  def test_costpercapita_bf123; assert_in_epsilon(13.09343542855351, worksheet.costpercapita_bf123, 0.001); end
  def test_costpercapita_bg123; assert_in_epsilon(10.172149598401683, worksheet.costpercapita_bg123, 0.001); end
  def test_costpercapita_bi123; assert_in_epsilon(6.601216242247788, worksheet.costpercapita_bi123, 0.001); end
  def test_costpercapita_bj123; assert_in_epsilon(34.108830757584116, worksheet.costpercapita_bj123, 0.001); end
  def test_costpercapita_bk123; assert_in_epsilon(49.585956366575495, worksheet.costpercapita_bk123, 0.001); end
  def test_costpercapita_bl123; assert_in_epsilon(60.101311648769936, worksheet.costpercapita_bl123, 0.001); end
  def test_costpercapita_bm123; assert_in_epsilon(70.37598550497194, worksheet.costpercapita_bm123, 0.001); end
  def test_costpercapita_bn123; assert_in_epsilon(80.9824925807743, worksheet.costpercapita_bn123, 0.001); end
  def test_costpercapita_bo123; assert_in_epsilon(86.35478301960725, worksheet.costpercapita_bo123, 0.001); end
  def test_costpercapita_bp123; assert_in_epsilon(85.21262687665656, worksheet.costpercapita_bp123, 0.001); end
  def test_costpercapita_bq123; assert_in_epsilon(79.4195302637076, worksheet.costpercapita_bq123, 0.001); end
  def test_costpercapita_bs123; assert_in_epsilon(24.894196895123677, worksheet.costpercapita_bs123, 0.001); end
  def test_costpercapita_bt123; assert_in_epsilon(57.013517192943986, worksheet.costpercapita_bt123, 0.001); end
  def test_costpercapita_bu123; assert_in_epsilon(85.95932771823124, worksheet.costpercapita_bu123, 0.001); end
  def test_costpercapita_bv123; assert_in_epsilon(102.27900466209778, worksheet.costpercapita_bv123, 0.001); end
  def test_costpercapita_bw123; assert_in_epsilon(114.41644055599971, worksheet.costpercapita_bw123, 0.001); end
  def test_costpercapita_bx123; assert_in_epsilon(126.52315175859975, worksheet.costpercapita_bx123, 0.001); end
  def test_costpercapita_by123; assert_in_epsilon(133.55145373695999, worksheet.costpercapita_by123, 0.001); end
  def test_costpercapita_bz123; assert_in_epsilon(134.1915366229982, worksheet.costpercapita_bz123, 0.001); end
  def test_costpercapita_ca123; assert_in_epsilon(130.30843269793334, worksheet.costpercapita_ca123, 0.001); end
  def test_costpercapita_cc123; assert_in_epsilon(101.01522909343197, worksheet.costpercapita_cc123, 0.001); end
  def test_costpercapita_cd123; assert_in_epsilon(2046.8887209279562, worksheet.costpercapita_cd123, 0.001); end
  def test_costpercapita_cf123; assert_in_epsilon(-14.14181738900686, worksheet.costpercapita_cf123, 0.001); end
  def test_costpercapita_cg123; assert_in_epsilon(-18.163956870088704, worksheet.costpercapita_cg123, 0.001); end
  def test_costpercapita_ch123; assert_in_epsilon(18.300316780607204, worksheet.costpercapita_ch123, 0.001); end
  def test_costpercapita_ci123; assert_in_epsilon(37.381111442421904, worksheet.costpercapita_ci123, 0.001); end
  def test_costpercapita_cj123; assert_in_epsilon(47.90853576709235, worksheet.costpercapita_cj123, 0.001); end
  def test_costpercapita_ck123; assert_in_epsilon(57.859662083518614, worksheet.costpercapita_ck123, 0.001); end
  def test_costpercapita_cl123; assert_in_epsilon(62.48400344750041, worksheet.costpercapita_cl123, 0.001); end
  def test_costpercapita_cm123; assert_in_epsilon(60.52648770385485, worksheet.costpercapita_cm123, 0.001); end
  def test_costpercapita_cn123; assert_in_epsilon(60.24113342179915, worksheet.costpercapita_cn123, 0.001); end
  def test_costpercapita_cp123; assert_in_epsilon(34.7106084875221, worksheet.costpercapita_cp123, 0.001); end
  def test_costpercapita_cq123; assert_in_epsilon(612.7886211296756, worksheet.costpercapita_cq123, 0.001); end
  def test_costpercapita_cr123; assert_equal("ok", worksheet.costpercapita_cr123); end
  def test_costpercapita_a124; assert_equal("V.b", worksheet.costpercapita_a124); end
  def test_costpercapita_b124; assert_equal("Bioenergy imports", worksheet.costpercapita_b124); end
  def test_costpercapita_c124; assert_equal("Bioenergy", worksheet.costpercapita_c124); end
  def test_costpercapita_e124; assert_in_delta(0, (worksheet.costpercapita_e124||0), 0.001); end
  def test_costpercapita_f124; assert_in_delta(0, (worksheet.costpercapita_f124||0), 0.001); end
  def test_costpercapita_g124; assert_in_delta(0, (worksheet.costpercapita_g124||0), 0.001); end
  def test_costpercapita_h124; assert_in_delta(0, (worksheet.costpercapita_h124||0), 0.001); end
  def test_costpercapita_i124; assert_in_delta(0, (worksheet.costpercapita_i124||0), 0.001); end
  def test_costpercapita_j124; assert_in_delta(0, (worksheet.costpercapita_j124||0), 0.001); end
  def test_costpercapita_k124; assert_in_delta(0, (worksheet.costpercapita_k124||0), 0.001); end
  def test_costpercapita_l124; assert_in_delta(0, (worksheet.costpercapita_l124||0), 0.001); end
  def test_costpercapita_m124; assert_in_delta(0, (worksheet.costpercapita_m124||0), 0.001); end
  def test_costpercapita_o124; assert_in_delta(0, (worksheet.costpercapita_o124||0), 0.001); end
  def test_costpercapita_p124; assert_in_delta(0, (worksheet.costpercapita_p124||0), 0.001); end
  def test_costpercapita_q124; assert_in_delta(0, (worksheet.costpercapita_q124||0), 0.001); end
  def test_costpercapita_r124; assert_in_delta(0, (worksheet.costpercapita_r124||0), 0.001); end
  def test_costpercapita_s124; assert_in_delta(0, (worksheet.costpercapita_s124||0), 0.001); end
  def test_costpercapita_t124; assert_in_delta(0, (worksheet.costpercapita_t124||0), 0.001); end
  def test_costpercapita_u124; assert_in_delta(0, (worksheet.costpercapita_u124||0), 0.001); end
  def test_costpercapita_v124; assert_in_delta(0, (worksheet.costpercapita_v124||0), 0.001); end
  def test_costpercapita_w124; assert_in_delta(0, (worksheet.costpercapita_w124||0), 0.001); end
  def test_costpercapita_y124; assert_in_epsilon(5.849332075368716, worksheet.costpercapita_y124, 0.001); end
  def test_costpercapita_z124; assert_in_epsilon(4.949393701972193, worksheet.costpercapita_z124, 0.001); end
  def test_costpercapita_aa124; assert_in_epsilon(4.1034511768581625, worksheet.costpercapita_aa124, 0.001); end
  def test_costpercapita_ab124; assert_in_epsilon(3.3136617249569666, worksheet.costpercapita_ab124, 0.001); end
  def test_costpercapita_ac124; assert_in_epsilon(2.5785055834571837, worksheet.costpercapita_ac124, 0.001); end
  def test_costpercapita_ad124; assert_in_epsilon(1.8883253177050265, worksheet.costpercapita_ad124, 0.001); end
  def test_costpercapita_ae124; assert_in_epsilon(1.2320361083973466, worksheet.costpercapita_ae124, 0.001); end
  def test_costpercapita_af124; assert_in_delta(0.6037297720296557, worksheet.costpercapita_af124, 0.001); end
  def test_costpercapita_ag124; assert_in_delta(0, (worksheet.costpercapita_ag124||0), 0.001); end
  def test_costpercapita_ai124; assert_in_epsilon(5.849332075368716, worksheet.costpercapita_ai124, 0.001); end
  def test_costpercapita_aj124; assert_in_epsilon(4.949393701972193, worksheet.costpercapita_aj124, 0.001); end
  def test_costpercapita_ak124; assert_in_epsilon(4.1034511768581625, worksheet.costpercapita_ak124, 0.001); end
  def test_costpercapita_al124; assert_in_epsilon(3.3136617249569666, worksheet.costpercapita_al124, 0.001); end
  def test_costpercapita_am124; assert_in_epsilon(2.5785055834571837, worksheet.costpercapita_am124, 0.001); end
  def test_costpercapita_an124; assert_in_epsilon(1.8883253177050265, worksheet.costpercapita_an124, 0.001); end
  def test_costpercapita_ao124; assert_in_epsilon(1.2320361083973466, worksheet.costpercapita_ao124, 0.001); end
  def test_costpercapita_ap124; assert_in_delta(0.6037297720296557, worksheet.costpercapita_ap124, 0.001); end
  def test_costpercapita_aq124; assert_in_delta(0, (worksheet.costpercapita_aq124||0), 0.001); end
  def test_costpercapita_as124; assert_in_epsilon(2.7242706067494717, worksheet.costpercapita_as124, 0.001); end
  def test_costpercapita_at124; assert_in_epsilon(64.71715009447226, worksheet.costpercapita_at124, 0.001); end
  def test_costpercapita_av124; assert_in_delta(0, (worksheet.costpercapita_av124||0), 0.001); end
  def test_costpercapita_aw124; assert_in_epsilon(5, worksheet.costpercapita_aw124, 0.001); end
  def test_costpercapita_ay124; assert_in_delta(0, (worksheet.costpercapita_ay124||0), 0.001); end
  def test_costpercapita_az124; assert_in_delta(0, (worksheet.costpercapita_az124||0), 0.001); end
  def test_costpercapita_ba124; assert_in_delta(0, (worksheet.costpercapita_ba124||0), 0.001); end
  def test_costpercapita_bb124; assert_in_delta(0, (worksheet.costpercapita_bb124||0), 0.001); end
  def test_costpercapita_bc124; assert_in_delta(0, (worksheet.costpercapita_bc124||0), 0.001); end
  def test_costpercapita_bd124; assert_in_delta(0, (worksheet.costpercapita_bd124||0), 0.001); end
  def test_costpercapita_be124; assert_in_delta(0, (worksheet.costpercapita_be124||0), 0.001); end
  def test_costpercapita_bf124; assert_in_delta(0, (worksheet.costpercapita_bf124||0), 0.001); end
  def test_costpercapita_bg124; assert_in_delta(0, (worksheet.costpercapita_bg124||0), 0.001); end
  def test_costpercapita_bi124; assert_in_delta(0, (worksheet.costpercapita_bi124||0), 0.001); end
  def test_costpercapita_bj124; assert_in_delta(0, (worksheet.costpercapita_bj124||0), 0.001); end
  def test_costpercapita_bk124; assert_in_delta(0, (worksheet.costpercapita_bk124||0), 0.001); end
  def test_costpercapita_bl124; assert_in_delta(0, (worksheet.costpercapita_bl124||0), 0.001); end
  def test_costpercapita_bm124; assert_in_delta(0, (worksheet.costpercapita_bm124||0), 0.001); end
  def test_costpercapita_bn124; assert_in_delta(0, (worksheet.costpercapita_bn124||0), 0.001); end
  def test_costpercapita_bo124; assert_in_delta(0, (worksheet.costpercapita_bo124||0), 0.001); end
  def test_costpercapita_bp124; assert_in_delta(0, (worksheet.costpercapita_bp124||0), 0.001); end
  def test_costpercapita_bq124; assert_in_delta(0, (worksheet.costpercapita_bq124||0), 0.001); end
  def test_costpercapita_bs124; assert_in_epsilon(5.849332075368716, worksheet.costpercapita_bs124, 0.001); end
  def test_costpercapita_bt124; assert_in_epsilon(4.949393701972193, worksheet.costpercapita_bt124, 0.001); end
  def test_costpercapita_bu124; assert_in_epsilon(4.1034511768581625, worksheet.costpercapita_bu124, 0.001); end
  def test_costpercapita_bv124; assert_in_epsilon(3.3136617249569666, worksheet.costpercapita_bv124, 0.001); end
  def test_costpercapita_bw124; assert_in_epsilon(2.5785055834571837, worksheet.costpercapita_bw124, 0.001); end
  def test_costpercapita_bx124; assert_in_epsilon(1.8883253177050265, worksheet.costpercapita_bx124, 0.001); end
  def test_costpercapita_by124; assert_in_epsilon(1.2320361083973466, worksheet.costpercapita_by124, 0.001); end
  def test_costpercapita_bz124; assert_in_delta(0.6037297720296557, worksheet.costpercapita_bz124, 0.001); end
  def test_costpercapita_ca124; assert_in_delta(0, (worksheet.costpercapita_ca124||0), 0.001); end
  def test_costpercapita_cc124; assert_in_epsilon(2.7242706067494717, worksheet.costpercapita_cc124, 0.001); end
  def test_costpercapita_cd124; assert_in_epsilon(64.71715009447226, worksheet.costpercapita_cd124, 0.001); end
  def test_costpercapita_cf124; assert_in_delta(0, (worksheet.costpercapita_cf124||0), 0.001); end
  def test_costpercapita_cg124; assert_in_delta(0, (worksheet.costpercapita_cg124||0), 0.001); end
  def test_costpercapita_ch124; assert_in_delta(0, (worksheet.costpercapita_ch124||0), 0.001); end
  def test_costpercapita_ci124; assert_in_delta(0, (worksheet.costpercapita_ci124||0), 0.001); end
  def test_costpercapita_cj124; assert_in_delta(0, (worksheet.costpercapita_cj124||0), 0.001); end
  def test_costpercapita_ck124; assert_in_delta(0, (worksheet.costpercapita_ck124||0), 0.001); end
  def test_costpercapita_cl124; assert_in_delta(0, (worksheet.costpercapita_cl124||0), 0.001); end
  def test_costpercapita_cm124; assert_in_delta(0, (worksheet.costpercapita_cm124||0), 0.001); end
  def test_costpercapita_cn124; assert_in_delta(0, (worksheet.costpercapita_cn124||0), 0.001); end
  def test_costpercapita_cp124; assert_in_delta(0, (worksheet.costpercapita_cp124||0), 0.001); end
  def test_costpercapita_cq124; assert_in_delta(0, (worksheet.costpercapita_cq124||0), 0.001); end
  def test_costpercapita_cr124; assert_equal("ok", worksheet.costpercapita_cr124); end
  def test_costpercapita_a125; assert_equal("VI.a.Bioenergy", worksheet.costpercapita_a125); end
  def test_costpercapita_b125; assert_equal("Agriculture and land use", worksheet.costpercapita_b125); end
  def test_costpercapita_c125; assert_equal("Bioenergy", worksheet.costpercapita_c125); end
  def test_costpercapita_e125; assert_in_delta(0, (worksheet.costpercapita_e125||0), 0.001); end
  def test_costpercapita_f125; assert_in_delta(0, (worksheet.costpercapita_f125||0), 0.001); end
  def test_costpercapita_g125; assert_in_delta(0, (worksheet.costpercapita_g125||0), 0.001); end
  def test_costpercapita_h125; assert_in_delta(0, (worksheet.costpercapita_h125||0), 0.001); end
  def test_costpercapita_i125; assert_in_delta(0, (worksheet.costpercapita_i125||0), 0.001); end
  def test_costpercapita_j125; assert_in_delta(0, (worksheet.costpercapita_j125||0), 0.001); end
  def test_costpercapita_k125; assert_in_delta(0, (worksheet.costpercapita_k125||0), 0.001); end
  def test_costpercapita_l125; assert_in_delta(0, (worksheet.costpercapita_l125||0), 0.001); end
  def test_costpercapita_m125; assert_in_delta(0, (worksheet.costpercapita_m125||0), 0.001); end
  def test_costpercapita_o125; assert_in_delta(0, (worksheet.costpercapita_o125||0), 0.001); end
  def test_costpercapita_p125; assert_in_delta(0, (worksheet.costpercapita_p125||0), 0.001); end
  def test_costpercapita_q125; assert_in_delta(0, (worksheet.costpercapita_q125||0), 0.001); end
  def test_costpercapita_r125; assert_in_delta(0, (worksheet.costpercapita_r125||0), 0.001); end
  def test_costpercapita_s125; assert_in_delta(0, (worksheet.costpercapita_s125||0), 0.001); end
  def test_costpercapita_t125; assert_in_delta(0, (worksheet.costpercapita_t125||0), 0.001); end
  def test_costpercapita_u125; assert_in_delta(0, (worksheet.costpercapita_u125||0), 0.001); end
  def test_costpercapita_v125; assert_in_delta(0, (worksheet.costpercapita_v125||0), 0.001); end
  def test_costpercapita_w125; assert_in_delta(0, (worksheet.costpercapita_w125||0), 0.001); end
  def test_costpercapita_y125; assert_in_epsilon(5.758031255445047, worksheet.costpercapita_y125, 0.001); end
  def test_costpercapita_z125; assert_in_epsilon(8.370832002545143, worksheet.costpercapita_z125, 0.001); end
  def test_costpercapita_aa125; assert_in_epsilon(14.493266302919178, worksheet.costpercapita_aa125, 0.001); end
  def test_costpercapita_ab125; assert_in_epsilon(15.331561667286179, worksheet.costpercapita_ab125, 0.001); end
  def test_costpercapita_ac125; assert_in_epsilon(16.20375949059046, worksheet.costpercapita_ac125, 0.001); end
  def test_costpercapita_ad125; assert_in_epsilon(17.12225270188573, worksheet.costpercapita_ad125, 0.001); end
  def test_costpercapita_ae125; assert_in_epsilon(18.069574015042665, worksheet.costpercapita_ae125, 0.001); end
  def test_costpercapita_af125; assert_in_epsilon(19.03600379127845, worksheet.costpercapita_af125, 0.001); end
  def test_costpercapita_ag125; assert_in_epsilon(20.024103735362935, worksheet.costpercapita_ag125, 0.001); end
  def test_costpercapita_ai125; assert_in_epsilon(5.758031255445047, worksheet.costpercapita_ai125, 0.001); end
  def test_costpercapita_aj125; assert_in_epsilon(8.370832002545143, worksheet.costpercapita_aj125, 0.001); end
  def test_costpercapita_ak125; assert_in_epsilon(14.493266302919178, worksheet.costpercapita_ak125, 0.001); end
  def test_costpercapita_al125; assert_in_epsilon(15.331561667286179, worksheet.costpercapita_al125, 0.001); end
  def test_costpercapita_am125; assert_in_epsilon(16.20375949059046, worksheet.costpercapita_am125, 0.001); end
  def test_costpercapita_an125; assert_in_epsilon(17.12225270188573, worksheet.costpercapita_an125, 0.001); end
  def test_costpercapita_ao125; assert_in_epsilon(18.069574015042665, worksheet.costpercapita_ao125, 0.001); end
  def test_costpercapita_ap125; assert_in_epsilon(19.03600379127845, worksheet.costpercapita_ap125, 0.001); end
  def test_costpercapita_aq125; assert_in_epsilon(20.024103735362935, worksheet.costpercapita_aq125, 0.001); end
  def test_costpercapita_as125; assert_in_epsilon(14.934376106928418, worksheet.costpercapita_as125, 0.001); end
  def test_costpercapita_at125; assert_in_epsilon(303.0535899183907, worksheet.costpercapita_at125, 0.001); end
  def test_costpercapita_av125; assert_in_delta(0, (worksheet.costpercapita_av125||0), 0.001); end
  def test_costpercapita_aw125; assert_in_epsilon(5, worksheet.costpercapita_aw125, 0.001); end
  def test_costpercapita_ay125; assert_in_delta(0, (worksheet.costpercapita_ay125||0), 0.001); end
  def test_costpercapita_az125; assert_in_delta(0, (worksheet.costpercapita_az125||0), 0.001); end
  def test_costpercapita_ba125; assert_in_delta(0, (worksheet.costpercapita_ba125||0), 0.001); end
  def test_costpercapita_bb125; assert_in_delta(0, (worksheet.costpercapita_bb125||0), 0.001); end
  def test_costpercapita_bc125; assert_in_delta(0, (worksheet.costpercapita_bc125||0), 0.001); end
  def test_costpercapita_bd125; assert_in_delta(0, (worksheet.costpercapita_bd125||0), 0.001); end
  def test_costpercapita_be125; assert_in_delta(0, (worksheet.costpercapita_be125||0), 0.001); end
  def test_costpercapita_bf125; assert_in_delta(0, (worksheet.costpercapita_bf125||0), 0.001); end
  def test_costpercapita_bg125; assert_in_delta(0, (worksheet.costpercapita_bg125||0), 0.001); end
  def test_costpercapita_bi125; assert_in_delta(0, (worksheet.costpercapita_bi125||0), 0.001); end
  def test_costpercapita_bj125; assert_in_delta(0, (worksheet.costpercapita_bj125||0), 0.001); end
  def test_costpercapita_bk125; assert_in_delta(0, (worksheet.costpercapita_bk125||0), 0.001); end
  def test_costpercapita_bl125; assert_in_delta(0, (worksheet.costpercapita_bl125||0), 0.001); end
  def test_costpercapita_bm125; assert_in_delta(0, (worksheet.costpercapita_bm125||0), 0.001); end
  def test_costpercapita_bn125; assert_in_delta(0, (worksheet.costpercapita_bn125||0), 0.001); end
  def test_costpercapita_bo125; assert_in_delta(0, (worksheet.costpercapita_bo125||0), 0.001); end
  def test_costpercapita_bp125; assert_in_delta(0, (worksheet.costpercapita_bp125||0), 0.001); end
  def test_costpercapita_bq125; assert_in_delta(0, (worksheet.costpercapita_bq125||0), 0.001); end
  def test_costpercapita_bs125; assert_in_epsilon(5.758031255445047, worksheet.costpercapita_bs125, 0.001); end
  def test_costpercapita_bt125; assert_in_epsilon(8.370832002545143, worksheet.costpercapita_bt125, 0.001); end
  def test_costpercapita_bu125; assert_in_epsilon(14.493266302919178, worksheet.costpercapita_bu125, 0.001); end
  def test_costpercapita_bv125; assert_in_epsilon(15.331561667286179, worksheet.costpercapita_bv125, 0.001); end
  def test_costpercapita_bw125; assert_in_epsilon(16.20375949059046, worksheet.costpercapita_bw125, 0.001); end
  def test_costpercapita_bx125; assert_in_epsilon(17.12225270188573, worksheet.costpercapita_bx125, 0.001); end
  def test_costpercapita_by125; assert_in_epsilon(18.069574015042665, worksheet.costpercapita_by125, 0.001); end
  def test_costpercapita_bz125; assert_in_epsilon(19.03600379127845, worksheet.costpercapita_bz125, 0.001); end
  def test_costpercapita_ca125; assert_in_epsilon(20.024103735362935, worksheet.costpercapita_ca125, 0.001); end
  def test_costpercapita_cc125; assert_in_epsilon(14.934376106928418, worksheet.costpercapita_cc125, 0.001); end
  def test_costpercapita_cd125; assert_in_epsilon(303.0535899183907, worksheet.costpercapita_cd125, 0.001); end
  def test_costpercapita_cf125; assert_in_delta(0, (worksheet.costpercapita_cf125||0), 0.001); end
  def test_costpercapita_cg125; assert_in_delta(0, (worksheet.costpercapita_cg125||0), 0.001); end
  def test_costpercapita_ch125; assert_in_delta(0, (worksheet.costpercapita_ch125||0), 0.001); end
  def test_costpercapita_ci125; assert_in_delta(0, (worksheet.costpercapita_ci125||0), 0.001); end
  def test_costpercapita_cj125; assert_in_delta(0, (worksheet.costpercapita_cj125||0), 0.001); end
  def test_costpercapita_ck125; assert_in_delta(0, (worksheet.costpercapita_ck125||0), 0.001); end
  def test_costpercapita_cl125; assert_in_delta(0, (worksheet.costpercapita_cl125||0), 0.001); end
  def test_costpercapita_cm125; assert_in_delta(0, (worksheet.costpercapita_cm125||0), 0.001); end
  def test_costpercapita_cn125; assert_in_delta(0, (worksheet.costpercapita_cn125||0), 0.001); end
  def test_costpercapita_cp125; assert_in_delta(0, (worksheet.costpercapita_cp125||0), 0.001); end
  def test_costpercapita_cq125; assert_in_delta(0, (worksheet.costpercapita_cq125||0), 0.001); end
  def test_costpercapita_cr125; assert_equal("ok", worksheet.costpercapita_cr125); end
  def test_costpercapita_a126; assert_equal("VI.a.Emissions", worksheet.costpercapita_a126); end
  def test_costpercapita_b126; assert_equal("Agriculture and land use", worksheet.costpercapita_b126); end
  def test_costpercapita_c126; assert_equal("Bioenergy", worksheet.costpercapita_c126); end
  def test_costpercapita_e126; assert_in_delta(0, (worksheet.costpercapita_e126||0), 0.001); end
  def test_costpercapita_f126; assert_in_delta(0, (worksheet.costpercapita_f126||0), 0.001); end
  def test_costpercapita_g126; assert_in_delta(0, (worksheet.costpercapita_g126||0), 0.001); end
  def test_costpercapita_h126; assert_in_delta(0, (worksheet.costpercapita_h126||0), 0.001); end
  def test_costpercapita_i126; assert_in_delta(0, (worksheet.costpercapita_i126||0), 0.001); end
  def test_costpercapita_j126; assert_in_delta(0, (worksheet.costpercapita_j126||0), 0.001); end
  def test_costpercapita_k126; assert_in_delta(0, (worksheet.costpercapita_k126||0), 0.001); end
  def test_costpercapita_l126; assert_in_delta(0, (worksheet.costpercapita_l126||0), 0.001); end
  def test_costpercapita_m126; assert_in_delta(0, (worksheet.costpercapita_m126||0), 0.001); end
  def test_costpercapita_o126; assert_in_delta(3.452883527939801e-08, worksheet.costpercapita_o126, 0.001); end
  def test_costpercapita_p126; assert_in_delta(8.155017123604852e-08, worksheet.costpercapita_p126, 0.001); end
  def test_costpercapita_q126; assert_in_delta(8.254614924722045e-08, worksheet.costpercapita_q126, 0.001); end
  def test_costpercapita_r126; assert_in_delta(9.242935219503228e-08, worksheet.costpercapita_r126, 0.001); end
  def test_costpercapita_s126; assert_in_delta(1.0275075361433352e-07, worksheet.costpercapita_s126, 0.001); end
  def test_costpercapita_t126; assert_in_delta(1.1364055953921603e-07, worksheet.costpercapita_t126, 0.001); end
  def test_costpercapita_u126; assert_in_delta(1.2503052493364069e-07, worksheet.costpercapita_u126, 0.001); end
  def test_costpercapita_v126; assert_in_delta(1.368841258710367e-07, worksheet.costpercapita_v126, 0.001); end
  def test_costpercapita_w126; assert_in_delta(1.4924344612641147e-07, worksheet.costpercapita_w126, 0.001); end
  def test_costpercapita_y126; assert_in_delta(0, (worksheet.costpercapita_y126||0), 0.001); end
  def test_costpercapita_z126; assert_in_delta(0, (worksheet.costpercapita_z126||0), 0.001); end
  def test_costpercapita_aa126; assert_in_delta(0, (worksheet.costpercapita_aa126||0), 0.001); end
  def test_costpercapita_ab126; assert_in_delta(0, (worksheet.costpercapita_ab126||0), 0.001); end
  def test_costpercapita_ac126; assert_in_delta(0, (worksheet.costpercapita_ac126||0), 0.001); end
  def test_costpercapita_ad126; assert_in_delta(0, (worksheet.costpercapita_ad126||0), 0.001); end
  def test_costpercapita_ae126; assert_in_delta(0, (worksheet.costpercapita_ae126||0), 0.001); end
  def test_costpercapita_af126; assert_in_delta(0, (worksheet.costpercapita_af126||0), 0.001); end
  def test_costpercapita_ag126; assert_in_delta(0, (worksheet.costpercapita_ag126||0), 0.001); end
  def test_costpercapita_ai126; assert_in_delta(3.452883527939801e-08, worksheet.costpercapita_ai126, 0.001); end
  def test_costpercapita_aj126; assert_in_delta(8.155017123604852e-08, worksheet.costpercapita_aj126, 0.001); end
  def test_costpercapita_ak126; assert_in_delta(8.254614924722045e-08, worksheet.costpercapita_ak126, 0.001); end
  def test_costpercapita_al126; assert_in_delta(9.242935219503228e-08, worksheet.costpercapita_al126, 0.001); end
  def test_costpercapita_am126; assert_in_delta(1.0275075361433352e-07, worksheet.costpercapita_am126, 0.001); end
  def test_costpercapita_an126; assert_in_delta(1.1364055953921603e-07, worksheet.costpercapita_an126, 0.001); end
  def test_costpercapita_ao126; assert_in_delta(1.2503052493364069e-07, worksheet.costpercapita_ao126, 0.001); end
  def test_costpercapita_ap126; assert_in_delta(1.368841258710367e-07, worksheet.costpercapita_ap126, 0.001); end
  def test_costpercapita_aq126; assert_in_delta(1.4924344612641147e-07, worksheet.costpercapita_aq126, 0.001); end
  def test_costpercapita_as126; assert_in_delta(1.0206710200470419e-07, worksheet.costpercapita_as126, 0.001); end
  def test_costpercapita_at126; assert_in_delta(2.0758124239641153e-06, worksheet.costpercapita_at126, 0.001); end
  def test_costpercapita_av126; assert_in_delta(0, (worksheet.costpercapita_av126||0), 0.001); end
  def test_costpercapita_aw126; assert_in_epsilon(5, worksheet.costpercapita_aw126, 0.001); end
  def test_costpercapita_ay126; assert_in_delta(0, (worksheet.costpercapita_ay126||0), 0.001); end
  def test_costpercapita_az126; assert_in_delta(0, (worksheet.costpercapita_az126||0), 0.001); end
  def test_costpercapita_ba126; assert_in_delta(0, (worksheet.costpercapita_ba126||0), 0.001); end
  def test_costpercapita_bb126; assert_in_delta(0, (worksheet.costpercapita_bb126||0), 0.001); end
  def test_costpercapita_bc126; assert_in_delta(0, (worksheet.costpercapita_bc126||0), 0.001); end
  def test_costpercapita_bd126; assert_in_delta(0, (worksheet.costpercapita_bd126||0), 0.001); end
  def test_costpercapita_be126; assert_in_delta(0, (worksheet.costpercapita_be126||0), 0.001); end
  def test_costpercapita_bf126; assert_in_delta(0, (worksheet.costpercapita_bf126||0), 0.001); end
  def test_costpercapita_bg126; assert_in_delta(0, (worksheet.costpercapita_bg126||0), 0.001); end
  def test_costpercapita_bi126; assert_in_delta(0, (worksheet.costpercapita_bi126||0), 0.001); end
  def test_costpercapita_bj126; assert_in_delta(0, (worksheet.costpercapita_bj126||0), 0.001); end
  def test_costpercapita_bk126; assert_in_delta(0, (worksheet.costpercapita_bk126||0), 0.001); end
  def test_costpercapita_bl126; assert_in_delta(0, (worksheet.costpercapita_bl126||0), 0.001); end
  def test_costpercapita_bm126; assert_in_delta(0, (worksheet.costpercapita_bm126||0), 0.001); end
  def test_costpercapita_bn126; assert_in_delta(0, (worksheet.costpercapita_bn126||0), 0.001); end
  def test_costpercapita_bo126; assert_in_delta(0, (worksheet.costpercapita_bo126||0), 0.001); end
  def test_costpercapita_bp126; assert_in_delta(0, (worksheet.costpercapita_bp126||0), 0.001); end
  def test_costpercapita_bq126; assert_in_delta(0, (worksheet.costpercapita_bq126||0), 0.001); end
  def test_costpercapita_bs126; assert_in_delta(3.452883527939801e-08, worksheet.costpercapita_bs126, 0.001); end
  def test_costpercapita_bt126; assert_in_delta(8.155017123604852e-08, worksheet.costpercapita_bt126, 0.001); end
  def test_costpercapita_bu126; assert_in_delta(8.254614924722045e-08, worksheet.costpercapita_bu126, 0.001); end
  def test_costpercapita_bv126; assert_in_delta(9.242935219503228e-08, worksheet.costpercapita_bv126, 0.001); end
  def test_costpercapita_bw126; assert_in_delta(1.0275075361433352e-07, worksheet.costpercapita_bw126, 0.001); end
  def test_costpercapita_bx126; assert_in_delta(1.1364055953921603e-07, worksheet.costpercapita_bx126, 0.001); end
  def test_costpercapita_by126; assert_in_delta(1.2503052493364069e-07, worksheet.costpercapita_by126, 0.001); end
  def test_costpercapita_bz126; assert_in_delta(1.368841258710367e-07, worksheet.costpercapita_bz126, 0.001); end
  def test_costpercapita_ca126; assert_in_delta(1.4924344612641147e-07, worksheet.costpercapita_ca126, 0.001); end
  def test_costpercapita_cc126; assert_in_delta(1.0206710200470419e-07, worksheet.costpercapita_cc126, 0.001); end
  def test_costpercapita_cd126; assert_in_delta(2.0758124239641153e-06, worksheet.costpercapita_cd126, 0.001); end
  def test_costpercapita_cf126; assert_in_delta(0, (worksheet.costpercapita_cf126||0), 0.001); end
  def test_costpercapita_cg126; assert_in_delta(0, (worksheet.costpercapita_cg126||0), 0.001); end
  def test_costpercapita_ch126; assert_in_delta(0, (worksheet.costpercapita_ch126||0), 0.001); end
  def test_costpercapita_ci126; assert_in_delta(0, (worksheet.costpercapita_ci126||0), 0.001); end
  def test_costpercapita_cj126; assert_in_delta(0, (worksheet.costpercapita_cj126||0), 0.001); end
  def test_costpercapita_ck126; assert_in_delta(0, (worksheet.costpercapita_ck126||0), 0.001); end
  def test_costpercapita_cl126; assert_in_delta(0, (worksheet.costpercapita_cl126||0), 0.001); end
  def test_costpercapita_cm126; assert_in_delta(0, (worksheet.costpercapita_cm126||0), 0.001); end
  def test_costpercapita_cn126; assert_in_delta(0, (worksheet.costpercapita_cn126||0), 0.001); end
  def test_costpercapita_cp126; assert_in_delta(0, (worksheet.costpercapita_cp126||0), 0.001); end
  def test_costpercapita_cq126; assert_in_delta(0, (worksheet.costpercapita_cq126||0), 0.001); end
  def test_costpercapita_cr126; assert_equal("ok", worksheet.costpercapita_cr126); end
  def test_costpercapita_a127; assert_equal("VI.b.Bioenergy", worksheet.costpercapita_a127); end
  def test_costpercapita_b127; assert_equal("Energy from waste", worksheet.costpercapita_b127); end
  def test_costpercapita_c127; assert_equal("Bioenergy", worksheet.costpercapita_c127); end
  def test_costpercapita_e127; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_e127, 0.001); end
  def test_costpercapita_f127; assert_in_epsilon(3.167015791158481, worksheet.costpercapita_f127, 0.001); end
  def test_costpercapita_g127; assert_in_epsilon(3.3382361136520706, worksheet.costpercapita_g127, 0.001); end
  def test_costpercapita_h127; assert_in_epsilon(3.8613445609448562, worksheet.costpercapita_h127, 0.001); end
  def test_costpercapita_i127; assert_in_epsilon(4.427832351516481, worksheet.costpercapita_i127, 0.001); end
  def test_costpercapita_j127; assert_in_epsilon(4.710991999158746, worksheet.costpercapita_j127, 0.001); end
  def test_costpercapita_k127; assert_in_epsilon(5.005262837377495, worksheet.costpercapita_k127, 0.001); end
  def test_costpercapita_l127; assert_in_epsilon(5.3163048873933265, worksheet.costpercapita_l127, 0.001); end
  def test_costpercapita_m127; assert_in_epsilon(5.641405594429478, worksheet.costpercapita_m127, 0.001); end
  def test_costpercapita_o127; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_o127, 0.001); end
  def test_costpercapita_p127; assert_in_epsilon(3.163751694170952, worksheet.costpercapita_p127, 0.001); end
  def test_costpercapita_q127; assert_in_epsilon(3.3344820770620087, worksheet.costpercapita_q127, 0.001); end
  def test_costpercapita_r127; assert_in_epsilon(4.10486233002682, worksheet.costpercapita_r127, 0.001); end
  def test_costpercapita_s127; assert_in_epsilon(4.946292422698839, worksheet.costpercapita_s127, 0.001); end
  def test_costpercapita_t127; assert_in_epsilon(5.413123221570472, worksheet.costpercapita_t127, 0.001); end
  def test_costpercapita_u127; assert_in_epsilon(5.915526003929274, worksheet.costpercapita_u127, 0.001); end
  def test_costpercapita_v127; assert_in_epsilon(6.4510686303048175, worksheet.costpercapita_v127, 0.001); end
  def test_costpercapita_w127; assert_in_epsilon(7.021139555613964, worksheet.costpercapita_w127, 0.001); end
  def test_costpercapita_y127; assert_in_delta(0, (worksheet.costpercapita_y127||0), 0.001); end
  def test_costpercapita_z127; assert_in_delta(0, (worksheet.costpercapita_z127||0), 0.001); end
  def test_costpercapita_aa127; assert_in_delta(0, (worksheet.costpercapita_aa127||0), 0.001); end
  def test_costpercapita_ab127; assert_in_delta(0, (worksheet.costpercapita_ab127||0), 0.001); end
  def test_costpercapita_ac127; assert_in_delta(0, (worksheet.costpercapita_ac127||0), 0.001); end
  def test_costpercapita_ad127; assert_in_delta(0, (worksheet.costpercapita_ad127||0), 0.001); end
  def test_costpercapita_ae127; assert_in_delta(0, (worksheet.costpercapita_ae127||0), 0.001); end
  def test_costpercapita_af127; assert_in_delta(0, (worksheet.costpercapita_af127||0), 0.001); end
  def test_costpercapita_ag127; assert_in_delta(0, (worksheet.costpercapita_ag127||0), 0.001); end
  def test_costpercapita_ai127; assert_in_epsilon(5.976545007430845, worksheet.costpercapita_ai127, 0.001); end
  def test_costpercapita_aj127; assert_in_epsilon(6.3307674853294325, worksheet.costpercapita_aj127, 0.001); end
  def test_costpercapita_ak127; assert_in_epsilon(6.67271819071408, worksheet.costpercapita_ak127, 0.001); end
  def test_costpercapita_al127; assert_in_epsilon(7.966206890971677, worksheet.costpercapita_al127, 0.001); end
  def test_costpercapita_am127; assert_in_epsilon(9.37412477421532, worksheet.costpercapita_am127, 0.001); end
  def test_costpercapita_an127; assert_in_epsilon(10.124115220729218, worksheet.costpercapita_an127, 0.001); end
  def test_costpercapita_ao127; assert_in_epsilon(10.920788841306768, worksheet.costpercapita_ao127, 0.001); end
  def test_costpercapita_ap127; assert_in_epsilon(11.767373517698145, worksheet.costpercapita_ap127, 0.001); end
  def test_costpercapita_aq127; assert_in_epsilon(12.66254515004344, worksheet.costpercapita_aq127, 0.001); end
  def test_costpercapita_as127; assert_in_epsilon(9.088353897604325, worksheet.costpercapita_as127, 0.001); end
  def test_costpercapita_at127; assert_in_epsilon(179.35156591005762, worksheet.costpercapita_at127, 0.001); end
  def test_costpercapita_av127; assert_in_delta(0.1, worksheet.costpercapita_av127, 0.001); end
  def test_costpercapita_aw127; assert_in_epsilon(15, worksheet.costpercapita_aw127, 0.001); end
  def test_costpercapita_ay127; assert_in_epsilon(1.1786384172964512, worksheet.costpercapita_ay127, 0.001); end
  def test_costpercapita_az127; assert_in_epsilon(2.0818976376277734, worksheet.costpercapita_az127, 0.001); end
  def test_costpercapita_ba127; assert_in_epsilon(2.1944525500183034, worksheet.costpercapita_ba127, 0.001); end
  def test_costpercapita_bb127; assert_in_epsilon(2.5383277664546604, worksheet.costpercapita_bb127, 0.001); end
  def test_costpercapita_bc127; assert_in_epsilon(2.9107192133898314, worksheet.costpercapita_bc127, 0.001); end
  def test_costpercapita_bd127; assert_in_epsilon(3.0968595550779616, worksheet.costpercapita_bd127, 0.001); end
  def test_costpercapita_be127; assert_in_epsilon(3.2903040477201215, worksheet.costpercapita_be127, 0.001); end
  def test_costpercapita_bf127; assert_in_epsilon(3.4947734131519828, worksheet.costpercapita_bf127, 0.001); end
  def test_costpercapita_bg127; assert_in_epsilon(3.7084845022659714, worksheet.costpercapita_bg127, 0.001); end
  def test_costpercapita_bi127; assert_in_epsilon(1.1786384172964512, worksheet.costpercapita_bi127, 0.001); end
  def test_costpercapita_bj127; assert_in_epsilon(3.221670371491933, worksheet.costpercapita_bj127, 0.001); end
  def test_costpercapita_bk127; assert_in_epsilon(5.310651392196994, worksheet.costpercapita_bk127, 0.001); end
  def test_costpercapita_bl127; assert_in_epsilon(6.616220207310996, worksheet.costpercapita_bl127, 0.001); end
  def test_costpercapita_bm127; assert_in_epsilon(7.4481077172970345, worksheet.costpercapita_bm127, 0.001); end
  def test_costpercapita_bn127; assert_in_epsilon(8.349836467280392, worksheet.costpercapita_bn127, 0.001); end
  def test_costpercapita_bo127; assert_in_epsilon(9.102661077187815, worksheet.costpercapita_bo127, 0.001); end
  def test_costpercapita_bp127; assert_in_epsilon(9.68979898724174, worksheet.costpercapita_bp127, 0.001); end
  def test_costpercapita_bq127; assert_in_epsilon(10.302530762623034, worksheet.costpercapita_bq127, 0.001); end
  def test_costpercapita_bs127; assert_in_epsilon(4.1669109210118735, worksheet.costpercapita_bs127, 0.001); end
  def test_costpercapita_bt127; assert_in_epsilon(6.385422065662884, worksheet.costpercapita_bt127, 0.001); end
  def test_costpercapita_bu127; assert_in_epsilon(8.645133469259003, worksheet.costpercapita_bu127, 0.001); end
  def test_costpercapita_bv127; assert_in_epsilon(10.721082537337816, worksheet.costpercapita_bv127, 0.001); end
  def test_costpercapita_bw127; assert_in_epsilon(12.394400139995874, worksheet.costpercapita_bw127, 0.001); end
  def test_costpercapita_bx127; assert_in_epsilon(13.762959688850865, worksheet.costpercapita_bx127, 0.001); end
  def test_costpercapita_by127; assert_in_epsilon(15.01818708111709, worksheet.costpercapita_by127, 0.001); end
  def test_costpercapita_bz127; assert_in_epsilon(16.140867617546558, worksheet.costpercapita_bz127, 0.001); end
  def test_costpercapita_ca127; assert_in_epsilon(17.323670318237, worksheet.costpercapita_ca127, 0.001); end
  def test_costpercapita_cc127; assert_in_epsilon(11.617625982113218, worksheet.costpercapita_cc127, 0.001); end
  def test_costpercapita_cd127; assert_in_epsilon(228.47150270234903, worksheet.costpercapita_cd127, 0.001); end
  def test_costpercapita_cf127; assert_in_epsilon(-1.809634086418971, worksheet.costpercapita_cf127, 0.001); end
  def test_costpercapita_cg127; assert_in_delta(0.054654580333451636, worksheet.costpercapita_cg127, 0.001); end
  def test_costpercapita_ch127; assert_in_epsilon(1.9724152785449236, worksheet.costpercapita_ch127, 0.001); end
  def test_costpercapita_ci127; assert_in_epsilon(2.7548756463661395, worksheet.costpercapita_ci127, 0.001); end
  def test_costpercapita_cj127; assert_in_epsilon(3.0202753657805532, worksheet.costpercapita_cj127, 0.001); end
  def test_costpercapita_ck127; assert_in_epsilon(3.638844468121647, worksheet.costpercapita_ck127, 0.001); end
  def test_costpercapita_cl127; assert_in_epsilon(4.097398239810319, worksheet.costpercapita_cl127, 0.001); end
  def test_costpercapita_cm127; assert_in_epsilon(4.373494099848414, worksheet.costpercapita_cm127, 0.001); end
  def test_costpercapita_cn127; assert_in_epsilon(4.661125168193556, worksheet.costpercapita_cn127, 0.001); end
  def test_costpercapita_cp127; assert_in_epsilon(2.5292720845088925, worksheet.costpercapita_cp127, 0.001); end
  def test_costpercapita_cq127; assert_in_epsilon(49.11993679229143, worksheet.costpercapita_cq127, 0.001); end
  def test_costpercapita_cr127; assert_equal("ok", worksheet.costpercapita_cr127); end
  def test_costpercapita_a128; assert_equal("VI.b.Waste", worksheet.costpercapita_a128); end
  def test_costpercapita_b128; assert_equal("Waste arising", worksheet.costpercapita_b128); end
  def test_costpercapita_c128; assert_equal("Bioenergy", worksheet.costpercapita_c128); end
  def test_costpercapita_e128; assert_in_epsilon(49.59823459405771, worksheet.costpercapita_e128, 0.001); end
  def test_costpercapita_f128; assert_in_epsilon(49.088246611599814, worksheet.costpercapita_f128, 0.001); end
  def test_costpercapita_g128; assert_in_epsilon(53.517956324845024, worksheet.costpercapita_g128, 0.001); end
  def test_costpercapita_h128; assert_in_epsilon(51.91273087965383, worksheet.costpercapita_h128, 0.001); end
  def test_costpercapita_i128; assert_in_epsilon(55.12460404632951, worksheet.costpercapita_i128, 0.001); end
  def test_costpercapita_j128; assert_in_epsilon(62.01201546758443, worksheet.costpercapita_j128, 0.001); end
  def test_costpercapita_k128; assert_in_epsilon(60.23893198482402, worksheet.costpercapita_k128, 0.001); end
  def test_costpercapita_l128; assert_in_epsilon(62.94848184685445, worksheet.costpercapita_l128, 0.001); end
  def test_costpercapita_m128; assert_in_epsilon(69.53038324516392, worksheet.costpercapita_m128, 0.001); end
  def test_costpercapita_o128; assert_in_epsilon(120.66987051271548, worksheet.costpercapita_o128, 0.001); end
  def test_costpercapita_p128; assert_in_epsilon(119.38043133977078, worksheet.costpercapita_p128, 0.001); end
  def test_costpercapita_q128; assert_in_epsilon(118.06916900517757, worksheet.costpercapita_q128, 0.001); end
  def test_costpercapita_r128; assert_in_epsilon(125.64810927788983, worksheet.costpercapita_r128, 0.001); end
  def test_costpercapita_s128; assert_in_epsilon(133.3372163076718, worksheet.costpercapita_s128, 0.001); end
  def test_costpercapita_t128; assert_in_epsilon(139.21130167206815, worksheet.costpercapita_t128, 0.001); end
  def test_costpercapita_u128; assert_in_epsilon(145.3060608303537, worksheet.costpercapita_u128, 0.001); end
  def test_costpercapita_v128; assert_in_epsilon(151.5264852251034, worksheet.costpercapita_v128, 0.001); end
  def test_costpercapita_w128; assert_in_epsilon(157.87928043870278, worksheet.costpercapita_w128, 0.001); end
  def test_costpercapita_y128; assert_in_delta(0, (worksheet.costpercapita_y128||0), 0.001); end
  def test_costpercapita_z128; assert_in_delta(0, (worksheet.costpercapita_z128||0), 0.001); end
  def test_costpercapita_aa128; assert_in_delta(0, (worksheet.costpercapita_aa128||0), 0.001); end
  def test_costpercapita_ab128; assert_in_delta(0, (worksheet.costpercapita_ab128||0), 0.001); end
  def test_costpercapita_ac128; assert_in_delta(0, (worksheet.costpercapita_ac128||0), 0.001); end
  def test_costpercapita_ad128; assert_in_delta(0, (worksheet.costpercapita_ad128||0), 0.001); end
  def test_costpercapita_ae128; assert_in_delta(0, (worksheet.costpercapita_ae128||0), 0.001); end
  def test_costpercapita_af128; assert_in_delta(0, (worksheet.costpercapita_af128||0), 0.001); end
  def test_costpercapita_ag128; assert_in_delta(0, (worksheet.costpercapita_ag128||0), 0.001); end
  def test_costpercapita_ai128; assert_in_epsilon(170.2681051067732, worksheet.costpercapita_ai128, 0.001); end
  def test_costpercapita_aj128; assert_in_epsilon(168.4686779513706, worksheet.costpercapita_aj128, 0.001); end
  def test_costpercapita_ak128; assert_in_epsilon(171.58712533002262, worksheet.costpercapita_ak128, 0.001); end
  def test_costpercapita_al128; assert_in_epsilon(177.56084015754365, worksheet.costpercapita_al128, 0.001); end
  def test_costpercapita_am128; assert_in_epsilon(188.46182035400133, worksheet.costpercapita_am128, 0.001); end
  def test_costpercapita_an128; assert_in_epsilon(201.22331713965258, worksheet.costpercapita_an128, 0.001); end
  def test_costpercapita_ao128; assert_in_epsilon(205.5449928151777, worksheet.costpercapita_ao128, 0.001); end
  def test_costpercapita_ap128; assert_in_epsilon(214.47496707195785, worksheet.costpercapita_ap128, 0.001); end
  def test_costpercapita_aq128; assert_in_epsilon(227.40966368386674, worksheet.costpercapita_aq128, 0.001); end
  def test_costpercapita_as128; assert_in_epsilon(191.66661217892957, worksheet.costpercapita_as128, 0.001); end
  def test_costpercapita_at128; assert_in_epsilon(3914.099670696726, worksheet.costpercapita_at128, 0.001); end
  def test_costpercapita_av128; assert_in_delta(0.1, worksheet.costpercapita_av128, 0.001); end
  def test_costpercapita_aw128; assert_in_epsilon(15, worksheet.costpercapita_aw128, 0.001); end
  def test_costpercapita_ay128; assert_in_epsilon(19.56260168708006, worksheet.costpercapita_ay128, 0.001); end
  def test_costpercapita_az128; assert_in_epsilon(32.269085914028885, worksheet.costpercapita_az128, 0.001); end
  def test_costpercapita_ba128; assert_in_epsilon(35.18103924660401, worksheet.costpercapita_ba128, 0.001); end
  def test_costpercapita_bb128; assert_in_epsilon(34.125813986429016, worksheet.costpercapita_bb128, 0.001); end
  def test_costpercapita_bc128; assert_in_epsilon(36.2371994669593, worksheet.costpercapita_bc128, 0.001); end
  def test_costpercapita_bd128; assert_in_epsilon(40.76476942960735, worksheet.costpercapita_bd128, 0.001); end
  def test_costpercapita_be128; assert_in_epsilon(39.599199518531705, worksheet.costpercapita_be128, 0.001); end
  def test_costpercapita_bf128; assert_in_epsilon(41.3803732886607, worksheet.costpercapita_bf128, 0.001); end
  def test_costpercapita_bg128; assert_in_epsilon(45.7071104683408, worksheet.costpercapita_bg128, 0.001); end
  def test_costpercapita_bi128; assert_in_epsilon(19.56260168708006, worksheet.costpercapita_bi128, 0.001); end
  def test_costpercapita_bj128; assert_in_epsilon(51.18660945574688, worksheet.costpercapita_bj128, 0.001); end
  def test_costpercapita_bk128; assert_in_epsilon(84.69189378110575, worksheet.costpercapita_bk128, 0.001); end
  def test_costpercapita_bl128; assert_in_epsilon(98.46372945969671, worksheet.costpercapita_bl128, 0.001); end
  def test_costpercapita_bm128; assert_in_epsilon(102.59101222501782, worksheet.costpercapita_bm128, 0.001); end
  def test_costpercapita_bn128; assert_in_epsilon(108.55997218307368, worksheet.costpercapita_bn128, 0.001); end
  def test_costpercapita_bo128; assert_in_epsilon(114.12360627805016, worksheet.costpercapita_bo128, 0.001); end
  def test_costpercapita_bp128; assert_in_epsilon(119.2892245959996, worksheet.costpercapita_bp128, 0.001); end
  def test_costpercapita_bq128; assert_in_epsilon(124.40028336534913, worksheet.costpercapita_bq128, 0.001); end
  def test_costpercapita_bs128; assert_in_epsilon(140.23247219979552, worksheet.costpercapita_bs128, 0.001); end
  def test_costpercapita_bt128; assert_in_epsilon(170.56704079551767, worksheet.costpercapita_bt128, 0.001); end
  def test_costpercapita_bu128; assert_in_epsilon(202.76106278628333, worksheet.costpercapita_bu128, 0.001); end
  def test_costpercapita_bv128; assert_in_epsilon(224.11183873758654, worksheet.costpercapita_bv128, 0.001); end
  def test_costpercapita_bw128; assert_in_epsilon(235.92822853268962, worksheet.costpercapita_bw128, 0.001); end
  def test_costpercapita_bx128; assert_in_epsilon(247.77127385514183, worksheet.costpercapita_bx128, 0.001); end
  def test_costpercapita_by128; assert_in_epsilon(259.42966710840386, worksheet.costpercapita_by128, 0.001); end
  def test_costpercapita_bz128; assert_in_epsilon(270.815709821103, worksheet.costpercapita_bz128, 0.001); end
  def test_costpercapita_ca128; assert_in_epsilon(282.2795638040519, worksheet.costpercapita_ca128, 0.001); end
  def test_costpercapita_cc128; assert_in_epsilon(225.98853973784148, worksheet.costpercapita_cc128, 0.001); end
  def test_costpercapita_cd128; assert_in_epsilon(4615.380948244658, worksheet.costpercapita_cd128, 0.001); end
  def test_costpercapita_cf128; assert_in_epsilon(-30.035632906977643, worksheet.costpercapita_cf128, 0.001); end
  def test_costpercapita_cg128; assert_in_epsilon(2.0983628441470694, worksheet.costpercapita_cg128, 0.001); end
  def test_costpercapita_ch128; assert_in_epsilon(31.173937456260727, worksheet.costpercapita_ch128, 0.001); end
  def test_costpercapita_ci128; assert_in_epsilon(46.55099858004289, worksheet.costpercapita_ci128, 0.001); end
  def test_costpercapita_cj128; assert_in_epsilon(47.46640817868831, worksheet.costpercapita_cj128, 0.001); end
  def test_costpercapita_ck128; assert_in_epsilon(46.54795671548924, worksheet.costpercapita_ck128, 0.001); end
  def test_costpercapita_cl128; assert_in_epsilon(53.884674293226134, worksheet.costpercapita_cl128, 0.001); end
  def test_costpercapita_cm128; assert_in_epsilon(56.34074274914514, worksheet.costpercapita_cm128, 0.001); end
  def test_costpercapita_cn128; assert_in_epsilon(54.869900120185214, worksheet.costpercapita_cn128, 0.001); end
  def test_costpercapita_cp128; assert_in_epsilon(34.321927558911895, worksheet.costpercapita_cp128, 0.001); end
  def test_costpercapita_cq128; assert_in_epsilon(701.2812775479329, worksheet.costpercapita_cq128, 0.001); end
  def test_costpercapita_cr128; assert_equal("ok", worksheet.costpercapita_cr128); end
  def test_costpercapita_a129; assert_equal("VI.c", worksheet.costpercapita_a129); end
  def test_costpercapita_b129; assert_equal("Marine algae", worksheet.costpercapita_b129); end
  def test_costpercapita_c129; assert_equal("Bioenergy", worksheet.costpercapita_c129); end
  def test_costpercapita_e129; assert_in_delta(0, (worksheet.costpercapita_e129||0), 0.001); end
  def test_costpercapita_f129; assert_in_delta(0, (worksheet.costpercapita_f129||0), 0.001); end
  def test_costpercapita_g129; assert_in_delta(0, (worksheet.costpercapita_g129||0), 0.001); end
  def test_costpercapita_h129; assert_in_delta(0, (worksheet.costpercapita_h129||0), 0.001); end
  def test_costpercapita_i129; assert_in_delta(0, (worksheet.costpercapita_i129||0), 0.001); end
  def test_costpercapita_j129; assert_in_delta(0, (worksheet.costpercapita_j129||0), 0.001); end
  def test_costpercapita_k129; assert_in_delta(0, (worksheet.costpercapita_k129||0), 0.001); end
  def test_costpercapita_l129; assert_in_delta(0, (worksheet.costpercapita_l129||0), 0.001); end
  def test_costpercapita_m129; assert_in_delta(0, (worksheet.costpercapita_m129||0), 0.001); end
  def test_costpercapita_o129; assert_in_delta(0, (worksheet.costpercapita_o129||0), 0.001); end
  def test_costpercapita_p129; assert_in_delta(0, (worksheet.costpercapita_p129||0), 0.001); end
  def test_costpercapita_q129; assert_in_delta(0, (worksheet.costpercapita_q129||0), 0.001); end
  def test_costpercapita_r129; assert_in_delta(0, (worksheet.costpercapita_r129||0), 0.001); end
  def test_costpercapita_s129; assert_in_delta(0, (worksheet.costpercapita_s129||0), 0.001); end
  def test_costpercapita_t129; assert_in_delta(0, (worksheet.costpercapita_t129||0), 0.001); end
  def test_costpercapita_u129; assert_in_delta(0, (worksheet.costpercapita_u129||0), 0.001); end
  def test_costpercapita_v129; assert_in_delta(0, (worksheet.costpercapita_v129||0), 0.001); end
  def test_costpercapita_w129; assert_in_delta(0, (worksheet.costpercapita_w129||0), 0.001); end
  def test_costpercapita_y129; assert_in_delta(0, (worksheet.costpercapita_y129||0), 0.001); end
  def test_costpercapita_z129; assert_in_delta(0, (worksheet.costpercapita_z129||0), 0.001); end
  def test_costpercapita_aa129; assert_in_delta(0, (worksheet.costpercapita_aa129||0), 0.001); end
  def test_costpercapita_ab129; assert_in_delta(0, (worksheet.costpercapita_ab129||0), 0.001); end
  def test_costpercapita_ac129; assert_in_delta(0, (worksheet.costpercapita_ac129||0), 0.001); end
  def test_costpercapita_ad129; assert_in_delta(0, (worksheet.costpercapita_ad129||0), 0.001); end
  def test_costpercapita_ae129; assert_in_delta(0, (worksheet.costpercapita_ae129||0), 0.001); end
  def test_costpercapita_af129; assert_in_delta(0, (worksheet.costpercapita_af129||0), 0.001); end
  def test_costpercapita_ag129; assert_in_delta(0, (worksheet.costpercapita_ag129||0), 0.001); end
  def test_costpercapita_ai129; assert_in_delta(0, (worksheet.costpercapita_ai129||0), 0.001); end
  def test_costpercapita_aj129; assert_in_delta(0, (worksheet.costpercapita_aj129||0), 0.001); end
  def test_costpercapita_ak129; assert_in_delta(0, (worksheet.costpercapita_ak129||0), 0.001); end
  def test_costpercapita_al129; assert_in_delta(0, (worksheet.costpercapita_al129||0), 0.001); end
  def test_costpercapita_am129; assert_in_delta(0, (worksheet.costpercapita_am129||0), 0.001); end
  def test_costpercapita_an129; assert_in_delta(0, (worksheet.costpercapita_an129||0), 0.001); end
  def test_costpercapita_ao129; assert_in_delta(0, (worksheet.costpercapita_ao129||0), 0.001); end
  def test_costpercapita_ap129; assert_in_delta(0, (worksheet.costpercapita_ap129||0), 0.001); end
  def test_costpercapita_aq129; assert_in_delta(0, (worksheet.costpercapita_aq129||0), 0.001); end
  def test_costpercapita_as129; assert_in_delta(0, (worksheet.costpercapita_as129||0), 0.001); end
  def test_costpercapita_at129; assert_in_delta(0, (worksheet.costpercapita_at129||0), 0.001); end
  def test_costpercapita_av129; assert_in_delta(0, (worksheet.costpercapita_av129||0), 0.001); end
  def test_costpercapita_aw129; assert_in_epsilon(5, worksheet.costpercapita_aw129, 0.001); end
  def test_costpercapita_ay129; assert_in_delta(0, (worksheet.costpercapita_ay129||0), 0.001); end
  def test_costpercapita_az129; assert_in_delta(0, (worksheet.costpercapita_az129||0), 0.001); end
  def test_costpercapita_ba129; assert_in_delta(0, (worksheet.costpercapita_ba129||0), 0.001); end
  def test_costpercapita_bb129; assert_in_delta(0, (worksheet.costpercapita_bb129||0), 0.001); end
  def test_costpercapita_bc129; assert_in_delta(0, (worksheet.costpercapita_bc129||0), 0.001); end
  def test_costpercapita_bd129; assert_in_delta(0, (worksheet.costpercapita_bd129||0), 0.001); end
  def test_costpercapita_be129; assert_in_delta(0, (worksheet.costpercapita_be129||0), 0.001); end
  def test_costpercapita_bf129; assert_in_delta(0, (worksheet.costpercapita_bf129||0), 0.001); end
  def test_costpercapita_bg129; assert_in_delta(0, (worksheet.costpercapita_bg129||0), 0.001); end
  def test_costpercapita_bi129; assert_in_delta(0, (worksheet.costpercapita_bi129||0), 0.001); end
  def test_costpercapita_bj129; assert_in_delta(0, (worksheet.costpercapita_bj129||0), 0.001); end
  def test_costpercapita_bk129; assert_in_delta(0, (worksheet.costpercapita_bk129||0), 0.001); end
  def test_costpercapita_bl129; assert_in_delta(0, (worksheet.costpercapita_bl129||0), 0.001); end
  def test_costpercapita_bm129; assert_in_delta(0, (worksheet.costpercapita_bm129||0), 0.001); end
  def test_costpercapita_bn129; assert_in_delta(0, (worksheet.costpercapita_bn129||0), 0.001); end
  def test_costpercapita_bo129; assert_in_delta(0, (worksheet.costpercapita_bo129||0), 0.001); end
  def test_costpercapita_bp129; assert_in_delta(0, (worksheet.costpercapita_bp129||0), 0.001); end
  def test_costpercapita_bq129; assert_in_delta(0, (worksheet.costpercapita_bq129||0), 0.001); end
  def test_costpercapita_bs129; assert_in_delta(0, (worksheet.costpercapita_bs129||0), 0.001); end
  def test_costpercapita_bt129; assert_in_delta(0, (worksheet.costpercapita_bt129||0), 0.001); end
  def test_costpercapita_bu129; assert_in_delta(0, (worksheet.costpercapita_bu129||0), 0.001); end
  def test_costpercapita_bv129; assert_in_delta(0, (worksheet.costpercapita_bv129||0), 0.001); end
  def test_costpercapita_bw129; assert_in_delta(0, (worksheet.costpercapita_bw129||0), 0.001); end
  def test_costpercapita_bx129; assert_in_delta(0, (worksheet.costpercapita_bx129||0), 0.001); end
  def test_costpercapita_by129; assert_in_delta(0, (worksheet.costpercapita_by129||0), 0.001); end
  def test_costpercapita_bz129; assert_in_delta(0, (worksheet.costpercapita_bz129||0), 0.001); end
  def test_costpercapita_ca129; assert_in_delta(0, (worksheet.costpercapita_ca129||0), 0.001); end
  def test_costpercapita_cc129; assert_in_delta(0, (worksheet.costpercapita_cc129||0), 0.001); end
  def test_costpercapita_cd129; assert_in_delta(0, (worksheet.costpercapita_cd129||0), 0.001); end
  def test_costpercapita_cf129; assert_in_delta(0, (worksheet.costpercapita_cf129||0), 0.001); end
  def test_costpercapita_cg129; assert_in_delta(0, (worksheet.costpercapita_cg129||0), 0.001); end
  def test_costpercapita_ch129; assert_in_delta(0, (worksheet.costpercapita_ch129||0), 0.001); end
  def test_costpercapita_ci129; assert_in_delta(0, (worksheet.costpercapita_ci129||0), 0.001); end
  def test_costpercapita_cj129; assert_in_delta(0, (worksheet.costpercapita_cj129||0), 0.001); end
  def test_costpercapita_ck129; assert_in_delta(0, (worksheet.costpercapita_ck129||0), 0.001); end
  def test_costpercapita_cl129; assert_in_delta(0, (worksheet.costpercapita_cl129||0), 0.001); end
  def test_costpercapita_cm129; assert_in_delta(0, (worksheet.costpercapita_cm129||0), 0.001); end
  def test_costpercapita_cn129; assert_in_delta(0, (worksheet.costpercapita_cn129||0), 0.001); end
  def test_costpercapita_cp129; assert_in_delta(0, (worksheet.costpercapita_cp129||0), 0.001); end
  def test_costpercapita_cq129; assert_in_delta(0, (worksheet.costpercapita_cq129||0), 0.001); end
  def test_costpercapita_cr129; assert_equal("ok", worksheet.costpercapita_cr129); end
  def test_costpercapita_a130; assert_equal("VII.a.Imports", worksheet.costpercapita_a130); end
  def test_costpercapita_b130; assert_equal("Electricity imports", worksheet.costpercapita_b130); end
  def test_costpercapita_c130; assert_equal("Electricity", worksheet.costpercapita_c130); end
  def test_costpercapita_e130; assert_in_delta(0, (worksheet.costpercapita_e130||0), 0.001); end
  def test_costpercapita_f130; assert_in_delta(0, (worksheet.costpercapita_f130||0), 0.001); end
  def test_costpercapita_g130; assert_in_delta(0, (worksheet.costpercapita_g130||0), 0.001); end
  def test_costpercapita_h130; assert_in_delta(0, (worksheet.costpercapita_h130||0), 0.001); end
  def test_costpercapita_i130; assert_in_delta(0, (worksheet.costpercapita_i130||0), 0.001); end
  def test_costpercapita_j130; assert_in_delta(0, (worksheet.costpercapita_j130||0), 0.001); end
  def test_costpercapita_k130; assert_in_delta(0, (worksheet.costpercapita_k130||0), 0.001); end
  def test_costpercapita_l130; assert_in_delta(0, (worksheet.costpercapita_l130||0), 0.001); end
  def test_costpercapita_m130; assert_in_delta(0, (worksheet.costpercapita_m130||0), 0.001); end
  def test_costpercapita_o130; assert_in_delta(0, (worksheet.costpercapita_o130||0), 0.001); end
  def test_costpercapita_p130; assert_in_delta(0, (worksheet.costpercapita_p130||0), 0.001); end
  def test_costpercapita_q130; assert_in_delta(0, (worksheet.costpercapita_q130||0), 0.001); end
  def test_costpercapita_r130; assert_in_delta(0, (worksheet.costpercapita_r130||0), 0.001); end
  def test_costpercapita_s130; assert_in_delta(0, (worksheet.costpercapita_s130||0), 0.001); end
  def test_costpercapita_t130; assert_in_delta(0, (worksheet.costpercapita_t130||0), 0.001); end
  def test_costpercapita_u130; assert_in_delta(0, (worksheet.costpercapita_u130||0), 0.001); end
  def test_costpercapita_v130; assert_in_delta(0, (worksheet.costpercapita_v130||0), 0.001); end
  def test_costpercapita_w130; assert_in_delta(0, (worksheet.costpercapita_w130||0), 0.001); end
  def test_costpercapita_y130; assert_in_delta(0, (worksheet.costpercapita_y130||0), 0.001); end
  def test_costpercapita_z130; assert_in_delta(0, (worksheet.costpercapita_z130||0), 0.001); end
  def test_costpercapita_aa130; assert_in_delta(0, (worksheet.costpercapita_aa130||0), 0.001); end
  def test_costpercapita_ab130; assert_in_delta(0, (worksheet.costpercapita_ab130||0), 0.001); end
  def test_costpercapita_ac130; assert_in_delta(0, (worksheet.costpercapita_ac130||0), 0.001); end
  def test_costpercapita_ad130; assert_in_delta(0, (worksheet.costpercapita_ad130||0), 0.001); end
  def test_costpercapita_ae130; assert_in_delta(0, (worksheet.costpercapita_ae130||0), 0.001); end
  def test_costpercapita_af130; assert_in_delta(0, (worksheet.costpercapita_af130||0), 0.001); end
  def test_costpercapita_ag130; assert_in_delta(0, (worksheet.costpercapita_ag130||0), 0.001); end
  def test_costpercapita_ai130; assert_in_delta(0, (worksheet.costpercapita_ai130||0), 0.001); end
  def test_costpercapita_aj130; assert_in_delta(0, (worksheet.costpercapita_aj130||0), 0.001); end
  def test_costpercapita_ak130; assert_in_delta(0, (worksheet.costpercapita_ak130||0), 0.001); end
  def test_costpercapita_al130; assert_in_delta(0, (worksheet.costpercapita_al130||0), 0.001); end
  def test_costpercapita_am130; assert_in_delta(0, (worksheet.costpercapita_am130||0), 0.001); end
  def test_costpercapita_an130; assert_in_delta(0, (worksheet.costpercapita_an130||0), 0.001); end
  def test_costpercapita_ao130; assert_in_delta(0, (worksheet.costpercapita_ao130||0), 0.001); end
  def test_costpercapita_ap130; assert_in_delta(0, (worksheet.costpercapita_ap130||0), 0.001); end
  def test_costpercapita_aq130; assert_in_delta(0, (worksheet.costpercapita_aq130||0), 0.001); end
  def test_costpercapita_as130; assert_in_delta(0, (worksheet.costpercapita_as130||0), 0.001); end
  def test_costpercapita_at130; assert_in_delta(0, (worksheet.costpercapita_at130||0), 0.001); end
  def test_costpercapita_av130; assert_in_delta(0, (worksheet.costpercapita_av130||0), 0.001); end
  def test_costpercapita_aw130; assert_in_epsilon(5, worksheet.costpercapita_aw130, 0.001); end
  def test_costpercapita_ay130; assert_in_delta(0, (worksheet.costpercapita_ay130||0), 0.001); end
  def test_costpercapita_az130; assert_in_delta(0, (worksheet.costpercapita_az130||0), 0.001); end
  def test_costpercapita_ba130; assert_in_delta(0, (worksheet.costpercapita_ba130||0), 0.001); end
  def test_costpercapita_bb130; assert_in_delta(0, (worksheet.costpercapita_bb130||0), 0.001); end
  def test_costpercapita_bc130; assert_in_delta(0, (worksheet.costpercapita_bc130||0), 0.001); end
  def test_costpercapita_bd130; assert_in_delta(0, (worksheet.costpercapita_bd130||0), 0.001); end
  def test_costpercapita_be130; assert_in_delta(0, (worksheet.costpercapita_be130||0), 0.001); end
  def test_costpercapita_bf130; assert_in_delta(0, (worksheet.costpercapita_bf130||0), 0.001); end
  def test_costpercapita_bg130; assert_in_delta(0, (worksheet.costpercapita_bg130||0), 0.001); end
  def test_costpercapita_bi130; assert_in_delta(0, (worksheet.costpercapita_bi130||0), 0.001); end
  def test_costpercapita_bj130; assert_in_delta(0, (worksheet.costpercapita_bj130||0), 0.001); end
  def test_costpercapita_bk130; assert_in_delta(0, (worksheet.costpercapita_bk130||0), 0.001); end
  def test_costpercapita_bl130; assert_in_delta(0, (worksheet.costpercapita_bl130||0), 0.001); end
  def test_costpercapita_bm130; assert_in_delta(0, (worksheet.costpercapita_bm130||0), 0.001); end
  def test_costpercapita_bn130; assert_in_delta(0, (worksheet.costpercapita_bn130||0), 0.001); end
  def test_costpercapita_bo130; assert_in_delta(0, (worksheet.costpercapita_bo130||0), 0.001); end
  def test_costpercapita_bp130; assert_in_delta(0, (worksheet.costpercapita_bp130||0), 0.001); end
  def test_costpercapita_bq130; assert_in_delta(0, (worksheet.costpercapita_bq130||0), 0.001); end
  def test_costpercapita_bs130; assert_in_delta(0, (worksheet.costpercapita_bs130||0), 0.001); end
  def test_costpercapita_bt130; assert_in_delta(0, (worksheet.costpercapita_bt130||0), 0.001); end
  def test_costpercapita_bu130; assert_in_delta(0, (worksheet.costpercapita_bu130||0), 0.001); end
  def test_costpercapita_bv130; assert_in_delta(0, (worksheet.costpercapita_bv130||0), 0.001); end
  def test_costpercapita_bw130; assert_in_delta(0, (worksheet.costpercapita_bw130||0), 0.001); end
  def test_costpercapita_bx130; assert_in_delta(0, (worksheet.costpercapita_bx130||0), 0.001); end
  def test_costpercapita_by130; assert_in_delta(0, (worksheet.costpercapita_by130||0), 0.001); end
  def test_costpercapita_bz130; assert_in_delta(0, (worksheet.costpercapita_bz130||0), 0.001); end
  def test_costpercapita_ca130; assert_in_delta(0, (worksheet.costpercapita_ca130||0), 0.001); end
  def test_costpercapita_cc130; assert_in_delta(0, (worksheet.costpercapita_cc130||0), 0.001); end
  def test_costpercapita_cd130; assert_in_delta(0, (worksheet.costpercapita_cd130||0), 0.001); end
  def test_costpercapita_cf130; assert_in_delta(0, (worksheet.costpercapita_cf130||0), 0.001); end
  def test_costpercapita_cg130; assert_in_delta(0, (worksheet.costpercapita_cg130||0), 0.001); end
  def test_costpercapita_ch130; assert_in_delta(0, (worksheet.costpercapita_ch130||0), 0.001); end
  def test_costpercapita_ci130; assert_in_delta(0, (worksheet.costpercapita_ci130||0), 0.001); end
  def test_costpercapita_cj130; assert_in_delta(0, (worksheet.costpercapita_cj130||0), 0.001); end
  def test_costpercapita_ck130; assert_in_delta(0, (worksheet.costpercapita_ck130||0), 0.001); end
  def test_costpercapita_cl130; assert_in_delta(0, (worksheet.costpercapita_cl130||0), 0.001); end
  def test_costpercapita_cm130; assert_in_delta(0, (worksheet.costpercapita_cm130||0), 0.001); end
  def test_costpercapita_cn130; assert_in_delta(0, (worksheet.costpercapita_cn130||0), 0.001); end
  def test_costpercapita_cp130; assert_in_delta(0, (worksheet.costpercapita_cp130||0), 0.001); end
  def test_costpercapita_cq130; assert_in_delta(0, (worksheet.costpercapita_cq130||0), 0.001); end
  def test_costpercapita_cr130; assert_equal("ok", worksheet.costpercapita_cr130); end
  def test_costpercapita_a131; assert_equal("VII.a.Exports", worksheet.costpercapita_a131); end
  def test_costpercapita_b131; assert_equal("Electricity Exports", worksheet.costpercapita_b131); end
  def test_costpercapita_c131; assert_equal("Electricity", worksheet.costpercapita_c131); end
  def test_costpercapita_e131; assert_in_delta(0, (worksheet.costpercapita_e131||0), 0.001); end
  def test_costpercapita_f131; assert_in_delta(0, (worksheet.costpercapita_f131||0), 0.001); end
  def test_costpercapita_g131; assert_in_delta(0, (worksheet.costpercapita_g131||0), 0.001); end
  def test_costpercapita_h131; assert_in_delta(0, (worksheet.costpercapita_h131||0), 0.001); end
  def test_costpercapita_i131; assert_in_delta(0, (worksheet.costpercapita_i131||0), 0.001); end
  def test_costpercapita_j131; assert_in_delta(0, (worksheet.costpercapita_j131||0), 0.001); end
  def test_costpercapita_k131; assert_in_delta(0, (worksheet.costpercapita_k131||0), 0.001); end
  def test_costpercapita_l131; assert_in_delta(0, (worksheet.costpercapita_l131||0), 0.001); end
  def test_costpercapita_m131; assert_in_delta(0, (worksheet.costpercapita_m131||0), 0.001); end
  def test_costpercapita_o131; assert_in_delta(0, (worksheet.costpercapita_o131||0), 0.001); end
  def test_costpercapita_p131; assert_in_delta(0, (worksheet.costpercapita_p131||0), 0.001); end
  def test_costpercapita_q131; assert_in_delta(0, (worksheet.costpercapita_q131||0), 0.001); end
  def test_costpercapita_r131; assert_in_delta(0, (worksheet.costpercapita_r131||0), 0.001); end
  def test_costpercapita_s131; assert_in_delta(0, (worksheet.costpercapita_s131||0), 0.001); end
  def test_costpercapita_t131; assert_in_delta(0, (worksheet.costpercapita_t131||0), 0.001); end
  def test_costpercapita_u131; assert_in_delta(0, (worksheet.costpercapita_u131||0), 0.001); end
  def test_costpercapita_v131; assert_in_delta(0, (worksheet.costpercapita_v131||0), 0.001); end
  def test_costpercapita_w131; assert_in_delta(0, (worksheet.costpercapita_w131||0), 0.001); end
  def test_costpercapita_y131; assert_in_delta(-3.142619883728688e-13, worksheet.costpercapita_y131, 0.001); end
  def test_costpercapita_z131; assert_in_delta(0, (worksheet.costpercapita_z131||0), 0.001); end
  def test_costpercapita_aa131; assert_in_delta(0, (worksheet.costpercapita_aa131||0), 0.001); end
  def test_costpercapita_ab131; assert_in_delta(0, (worksheet.costpercapita_ab131||0), 0.001); end
  def test_costpercapita_ac131; assert_in_delta(0, (worksheet.costpercapita_ac131||0), 0.001); end
  def test_costpercapita_ad131; assert_in_delta(0, (worksheet.costpercapita_ad131||0), 0.001); end
  def test_costpercapita_ae131; assert_in_delta(0, (worksheet.costpercapita_ae131||0), 0.001); end
  def test_costpercapita_af131; assert_in_delta(0, (worksheet.costpercapita_af131||0), 0.001); end
  def test_costpercapita_ag131; assert_in_delta(0, (worksheet.costpercapita_ag131||0), 0.001); end
  def test_costpercapita_ai131; assert_in_delta(-3.142619883728688e-13, worksheet.costpercapita_ai131, 0.001); end
  def test_costpercapita_aj131; assert_in_delta(0, (worksheet.costpercapita_aj131||0), 0.001); end
  def test_costpercapita_ak131; assert_in_delta(0, (worksheet.costpercapita_ak131||0), 0.001); end
  def test_costpercapita_al131; assert_in_delta(0, (worksheet.costpercapita_al131||0), 0.001); end
  def test_costpercapita_am131; assert_in_delta(0, (worksheet.costpercapita_am131||0), 0.001); end
  def test_costpercapita_an131; assert_in_delta(0, (worksheet.costpercapita_an131||0), 0.001); end
  def test_costpercapita_ao131; assert_in_delta(0, (worksheet.costpercapita_ao131||0), 0.001); end
  def test_costpercapita_ap131; assert_in_delta(0, (worksheet.costpercapita_ap131||0), 0.001); end
  def test_costpercapita_aq131; assert_in_delta(0, (worksheet.costpercapita_aq131||0), 0.001); end
  def test_costpercapita_as131; assert_in_delta(-3.4917998708096535e-14, worksheet.costpercapita_as131, 0.001); end
  def test_costpercapita_at131; assert_in_delta(-3.142619883728688e-13, worksheet.costpercapita_at131, 0.001); end
  def test_costpercapita_av131; assert_in_delta(0, (worksheet.costpercapita_av131||0), 0.001); end
  def test_costpercapita_aw131; assert_in_epsilon(5, worksheet.costpercapita_aw131, 0.001); end
  def test_costpercapita_ay131; assert_in_delta(0, (worksheet.costpercapita_ay131||0), 0.001); end
  def test_costpercapita_az131; assert_in_delta(0, (worksheet.costpercapita_az131||0), 0.001); end
  def test_costpercapita_ba131; assert_in_delta(0, (worksheet.costpercapita_ba131||0), 0.001); end
  def test_costpercapita_bb131; assert_in_delta(0, (worksheet.costpercapita_bb131||0), 0.001); end
  def test_costpercapita_bc131; assert_in_delta(0, (worksheet.costpercapita_bc131||0), 0.001); end
  def test_costpercapita_bd131; assert_in_delta(0, (worksheet.costpercapita_bd131||0), 0.001); end
  def test_costpercapita_be131; assert_in_delta(0, (worksheet.costpercapita_be131||0), 0.001); end
  def test_costpercapita_bf131; assert_in_delta(0, (worksheet.costpercapita_bf131||0), 0.001); end
  def test_costpercapita_bg131; assert_in_delta(0, (worksheet.costpercapita_bg131||0), 0.001); end
  def test_costpercapita_bi131; assert_in_delta(0, (worksheet.costpercapita_bi131||0), 0.001); end
  def test_costpercapita_bj131; assert_in_delta(0, (worksheet.costpercapita_bj131||0), 0.001); end
  def test_costpercapita_bk131; assert_in_delta(0, (worksheet.costpercapita_bk131||0), 0.001); end
  def test_costpercapita_bl131; assert_in_delta(0, (worksheet.costpercapita_bl131||0), 0.001); end
  def test_costpercapita_bm131; assert_in_delta(0, (worksheet.costpercapita_bm131||0), 0.001); end
  def test_costpercapita_bn131; assert_in_delta(0, (worksheet.costpercapita_bn131||0), 0.001); end
  def test_costpercapita_bo131; assert_in_delta(0, (worksheet.costpercapita_bo131||0), 0.001); end
  def test_costpercapita_bp131; assert_in_delta(0, (worksheet.costpercapita_bp131||0), 0.001); end
  def test_costpercapita_bq131; assert_in_delta(0, (worksheet.costpercapita_bq131||0), 0.001); end
  def test_costpercapita_bs131; assert_in_delta(-3.142619883728688e-13, worksheet.costpercapita_bs131, 0.001); end
  def test_costpercapita_bt131; assert_in_delta(0, (worksheet.costpercapita_bt131||0), 0.001); end
  def test_costpercapita_bu131; assert_in_delta(0, (worksheet.costpercapita_bu131||0), 0.001); end
  def test_costpercapita_bv131; assert_in_delta(0, (worksheet.costpercapita_bv131||0), 0.001); end
  def test_costpercapita_bw131; assert_in_delta(0, (worksheet.costpercapita_bw131||0), 0.001); end
  def test_costpercapita_bx131; assert_in_delta(0, (worksheet.costpercapita_bx131||0), 0.001); end
  def test_costpercapita_by131; assert_in_delta(0, (worksheet.costpercapita_by131||0), 0.001); end
  def test_costpercapita_bz131; assert_in_delta(0, (worksheet.costpercapita_bz131||0), 0.001); end
  def test_costpercapita_ca131; assert_in_delta(0, (worksheet.costpercapita_ca131||0), 0.001); end
  def test_costpercapita_cc131; assert_in_delta(-3.4917998708096535e-14, worksheet.costpercapita_cc131, 0.001); end
  def test_costpercapita_cd131; assert_in_delta(-3.142619883728688e-13, worksheet.costpercapita_cd131, 0.001); end
  def test_costpercapita_cf131; assert_in_delta(0, (worksheet.costpercapita_cf131||0), 0.001); end
  def test_costpercapita_cg131; assert_in_delta(0, (worksheet.costpercapita_cg131||0), 0.001); end
  def test_costpercapita_ch131; assert_in_delta(0, (worksheet.costpercapita_ch131||0), 0.001); end
  def test_costpercapita_ci131; assert_in_delta(0, (worksheet.costpercapita_ci131||0), 0.001); end
  def test_costpercapita_cj131; assert_in_delta(0, (worksheet.costpercapita_cj131||0), 0.001); end
  def test_costpercapita_ck131; assert_in_delta(0, (worksheet.costpercapita_ck131||0), 0.001); end
  def test_costpercapita_cl131; assert_in_delta(0, (worksheet.costpercapita_cl131||0), 0.001); end
  def test_costpercapita_cm131; assert_in_delta(0, (worksheet.costpercapita_cm131||0), 0.001); end
  def test_costpercapita_cn131; assert_in_delta(0, (worksheet.costpercapita_cn131||0), 0.001); end
  def test_costpercapita_cp131; assert_in_delta(0, (worksheet.costpercapita_cp131||0), 0.001); end
  def test_costpercapita_cq131; assert_in_delta(0, (worksheet.costpercapita_cq131||0), 0.001); end
  def test_costpercapita_cr131; assert_equal("ok", worksheet.costpercapita_cr131); end
  def test_costpercapita_a132; assert_equal("VII.b", worksheet.costpercapita_a132); end
  def test_costpercapita_b132; assert_equal("Electricity grid distribution", worksheet.costpercapita_b132); end
  def test_costpercapita_c132; assert_equal("Electricity", worksheet.costpercapita_c132); end
  def test_costpercapita_e132; assert_in_epsilon(128.9292553258558, worksheet.costpercapita_e132, 0.001); end
  def test_costpercapita_f132; assert_in_epsilon(115.11444831371831, worksheet.costpercapita_f132, 0.001); end
  def test_costpercapita_g132; assert_in_epsilon(148.79261245464232, worksheet.costpercapita_g132, 0.001); end
  def test_costpercapita_h132; assert_in_epsilon(153.67832889591367, worksheet.costpercapita_h132, 0.001); end
  def test_costpercapita_i132; assert_in_epsilon(132.16020175018767, worksheet.costpercapita_i132, 0.001); end
  def test_costpercapita_j132; assert_in_epsilon(135.1568431324647, worksheet.costpercapita_j132, 0.001); end
  def test_costpercapita_k132; assert_in_epsilon(138.1781573518557, worksheet.costpercapita_k132, 0.001); end
  def test_costpercapita_l132; assert_in_epsilon(141.2136723953131, worksheet.costpercapita_l132, 0.001); end
  def test_costpercapita_m132; assert_in_epsilon(157.65512710703294, worksheet.costpercapita_m132, 0.001); end
  def test_costpercapita_o132; assert_in_epsilon(18.44720405796029, worksheet.costpercapita_o132, 0.001); end
  def test_costpercapita_p132; assert_in_epsilon(17.359623940871135, worksheet.costpercapita_p132, 0.001); end
  def test_costpercapita_q132; assert_in_epsilon(17.738449238582007, worksheet.costpercapita_q132, 0.001); end
  def test_costpercapita_r132; assert_in_epsilon(18.20581569763449, worksheet.costpercapita_r132, 0.001); end
  def test_costpercapita_s132; assert_in_epsilon(17.851177351450257, worksheet.costpercapita_s132, 0.001); end
  def test_costpercapita_t132; assert_in_epsilon(17.74648347321178, worksheet.costpercapita_t132, 0.001); end
  def test_costpercapita_u132; assert_in_epsilon(17.80395591733292, worksheet.costpercapita_u132, 0.001); end
  def test_costpercapita_v132; assert_in_epsilon(17.96951001772224, worksheet.costpercapita_v132, 0.001); end
  def test_costpercapita_w132; assert_in_epsilon(18.677047933839848, worksheet.costpercapita_w132, 0.001); end
  def test_costpercapita_y132; assert_in_delta(0, (worksheet.costpercapita_y132||0), 0.001); end
  def test_costpercapita_z132; assert_in_delta(0, (worksheet.costpercapita_z132||0), 0.001); end
  def test_costpercapita_aa132; assert_in_delta(0, (worksheet.costpercapita_aa132||0), 0.001); end
  def test_costpercapita_ab132; assert_in_delta(0, (worksheet.costpercapita_ab132||0), 0.001); end
  def test_costpercapita_ac132; assert_in_delta(0, (worksheet.costpercapita_ac132||0), 0.001); end
  def test_costpercapita_ad132; assert_in_delta(0, (worksheet.costpercapita_ad132||0), 0.001); end
  def test_costpercapita_ae132; assert_in_delta(0, (worksheet.costpercapita_ae132||0), 0.001); end
  def test_costpercapita_af132; assert_in_delta(0, (worksheet.costpercapita_af132||0), 0.001); end
  def test_costpercapita_ag132; assert_in_delta(0, (worksheet.costpercapita_ag132||0), 0.001); end
  def test_costpercapita_ai132; assert_in_epsilon(147.3764593838161, worksheet.costpercapita_ai132, 0.001); end
  def test_costpercapita_aj132; assert_in_epsilon(132.47407225458943, worksheet.costpercapita_aj132, 0.001); end
  def test_costpercapita_ak132; assert_in_epsilon(166.53106169322433, worksheet.costpercapita_ak132, 0.001); end
  def test_costpercapita_al132; assert_in_epsilon(171.88414459354814, worksheet.costpercapita_al132, 0.001); end
  def test_costpercapita_am132; assert_in_epsilon(150.0113791016379, worksheet.costpercapita_am132, 0.001); end
  def test_costpercapita_an132; assert_in_epsilon(152.90332660567645, worksheet.costpercapita_an132, 0.001); end
  def test_costpercapita_ao132; assert_in_epsilon(155.98211326918863, worksheet.costpercapita_ao132, 0.001); end
  def test_costpercapita_ap132; assert_in_epsilon(159.18318241303535, worksheet.costpercapita_ap132, 0.001); end
  def test_costpercapita_aq132; assert_in_epsilon(176.33217504087278, worksheet.costpercapita_aq132, 0.001); end
  def test_costpercapita_as132; assert_in_epsilon(156.96421270617657, worksheet.costpercapita_as132, 0.001); end
  def test_costpercapita_at132; assert_in_epsilon(3265.0012286132146, worksheet.costpercapita_at132, 0.001); end
  def test_costpercapita_av132; assert_in_delta(0.1, worksheet.costpercapita_av132, 0.001); end
  def test_costpercapita_aw132; assert_in_epsilon(20, worksheet.costpercapita_aw132, 0.001); end
  def test_costpercapita_ay132; assert_in_epsilon(45.43194585833631, worksheet.costpercapita_ay132, 0.001); end
  def test_costpercapita_az132; assert_in_epsilon(67.60649952413983, worksheet.costpercapita_az132, 0.001); end
  def test_costpercapita_ba132; assert_in_epsilon(87.38562213924554, worksheet.costpercapita_ba132, 0.001); end
  def test_costpercapita_bb132; assert_in_epsilon(90.25499423892948, worksheet.costpercapita_bb132, 0.001); end
  def test_costpercapita_bc132; assert_in_epsilon(77.61743853720493, worksheet.costpercapita_bc132, 0.001); end
  def test_costpercapita_bd132; assert_in_epsilon(79.37736039890567, worksheet.costpercapita_bd132, 0.001); end
  def test_costpercapita_be132; assert_in_epsilon(81.15177257155378, worksheet.costpercapita_be132, 0.001); end
  def test_costpercapita_bf132; assert_in_epsilon(82.9345248615334, worksheet.costpercapita_bf132, 0.001); end
  def test_costpercapita_bg132; assert_in_epsilon(92.59056036730048, worksheet.costpercapita_bg132, 0.001); end
  def test_costpercapita_bi132; assert_in_epsilon(45.43194585833631, worksheet.costpercapita_bi132, 0.001); end
  def test_costpercapita_bj132; assert_in_epsilon(111.5403238215878, worksheet.costpercapita_bj132, 0.001); end
  def test_costpercapita_bk132; assert_in_epsilon(195.274322058631, worksheet.costpercapita_bk132, 0.001); end
  def test_costpercapita_bl132; assert_in_epsilon(279.4829447568274, worksheet.costpercapita_bl132, 0.001); end
  def test_costpercapita_bm132; assert_in_epsilon(309.41019882720605, worksheet.costpercapita_bm132, 0.001); end
  def test_costpercapita_bn132; assert_in_epsilon(321.31393933044984, worksheet.costpercapita_bn132, 0.001); end
  def test_costpercapita_bo132; assert_in_epsilon(316.9022516173319, worksheet.costpercapita_bo132, 0.001); end
  def test_costpercapita_bp132; assert_in_epsilon(383.9887800759309, worksheet.costpercapita_bp132, 0.001); end
  def test_costpercapita_bq132; assert_in_epsilon(326.7401970084082, worksheet.costpercapita_bq132, 0.001); end
  def test_costpercapita_bs132; assert_in_epsilon(63.879149916296605, worksheet.costpercapita_bs132, 0.001); end
  def test_costpercapita_bt132; assert_in_epsilon(128.89994776245894, worksheet.costpercapita_bt132, 0.001); end
  def test_costpercapita_bu132; assert_in_epsilon(213.012771297213, worksheet.costpercapita_bu132, 0.001); end
  def test_costpercapita_bv132; assert_in_epsilon(297.68876045446194, worksheet.costpercapita_bv132, 0.001); end
  def test_costpercapita_bw132; assert_in_epsilon(327.2613761786563, worksheet.costpercapita_bw132, 0.001); end
  def test_costpercapita_bx132; assert_in_epsilon(339.0604228036616, worksheet.costpercapita_bx132, 0.001); end
  def test_costpercapita_by132; assert_in_epsilon(334.7062075346649, worksheet.costpercapita_by132, 0.001); end
  def test_costpercapita_bz132; assert_in_epsilon(401.9582900936531, worksheet.costpercapita_bz132, 0.001); end
  def test_costpercapita_ca132; assert_in_epsilon(345.417244942248, worksheet.costpercapita_ca132, 0.001); end
  def test_costpercapita_cc132; assert_in_epsilon(272.43157455370164, worksheet.costpercapita_cc132, 0.001); end
  def test_costpercapita_cd132; assert_in_epsilon(5461.495029164712, worksheet.costpercapita_cd132, 0.001); end
  def test_costpercapita_cf132; assert_in_epsilon(-83.49730946751949, worksheet.costpercapita_cf132, 0.001); end
  def test_costpercapita_cg132; assert_in_epsilon(-3.574124492130511, worksheet.costpercapita_cg132, 0.001); end
  def test_costpercapita_ch132; assert_in_epsilon(46.48170960398866, worksheet.costpercapita_ch132, 0.001); end
  def test_costpercapita_ci132; assert_in_epsilon(125.80461586091376, worksheet.costpercapita_ci132, 0.001); end
  def test_costpercapita_cj132; assert_in_epsilon(177.24999707701835, worksheet.costpercapita_cj132, 0.001); end
  def test_costpercapita_ck132; assert_in_epsilon(186.15709619798514, worksheet.costpercapita_ck132, 0.001); end
  def test_costpercapita_cl132; assert_in_epsilon(178.72409426547623, worksheet.costpercapita_cl132, 0.001); end
  def test_costpercapita_cm132; assert_in_epsilon(242.7751076806178, worksheet.costpercapita_cm132, 0.001); end
  def test_costpercapita_cn132; assert_in_epsilon(169.08506990137525, worksheet.costpercapita_cn132, 0.001); end
  def test_costpercapita_cp132; assert_in_epsilon(115.46736184752503, worksheet.costpercapita_cp132, 0.001); end
  def test_costpercapita_cq132; assert_in_epsilon(2196.4938005514978, worksheet.costpercapita_cq132, 0.001); end
  def test_costpercapita_cr132; assert_equal("ok", worksheet.costpercapita_cr132); end
  def test_costpercapita_a133; assert_equal("VII.c", worksheet.costpercapita_a133); end
  def test_costpercapita_b133; assert_equal("Storage, demand shifting, backup", worksheet.costpercapita_b133); end
  def test_costpercapita_c133; assert_equal("Electricity", worksheet.costpercapita_c133); end
  def test_costpercapita_e133; assert_in_delta(0, (worksheet.costpercapita_e133||0), 0.001); end
  def test_costpercapita_f133; assert_in_epsilon(3.6506811900679836, worksheet.costpercapita_f133, 0.001); end
  def test_costpercapita_g133; assert_in_delta(0, (worksheet.costpercapita_g133||0), 0.001); end
  def test_costpercapita_h133; assert_in_delta(0, (worksheet.costpercapita_h133||0), 0.001); end
  def test_costpercapita_i133; assert_in_delta(0, (worksheet.costpercapita_i133||0), 0.001); end
  def test_costpercapita_j133; assert_in_delta(0, (worksheet.costpercapita_j133||0), 0.001); end
  def test_costpercapita_k133; assert_in_delta(0, (worksheet.costpercapita_k133||0), 0.001); end
  def test_costpercapita_l133; assert_in_delta(0, (worksheet.costpercapita_l133||0), 0.001); end
  def test_costpercapita_m133; assert_in_delta(0, (worksheet.costpercapita_m133||0), 0.001); end
  def test_costpercapita_o133; assert_in_epsilon(2.6107540216924687, worksheet.costpercapita_o133, 0.001); end
  def test_costpercapita_p133; assert_in_epsilon(2.538160920077827, worksheet.costpercapita_p133, 0.001); end
  def test_costpercapita_q133; assert_in_epsilon(2.455066226017074, worksheet.costpercapita_q133, 0.001); end
  def test_costpercapita_r133; assert_in_epsilon(2.379048844913851, worksheet.costpercapita_r133, 0.001); end
  def test_costpercapita_s133; assert_in_epsilon(2.314052866247004, worksheet.costpercapita_s133, 0.001); end
  def test_costpercapita_t133; assert_in_epsilon(2.2595437408275107, worksheet.costpercapita_t133, 0.001); end
  def test_costpercapita_u133; assert_in_epsilon(2.2113558382403444, worksheet.costpercapita_u133, 0.001); end
  def test_costpercapita_v133; assert_in_epsilon(2.167243877022341, worksheet.costpercapita_v133, 0.001); end
  def test_costpercapita_w133; assert_in_epsilon(2.126799345616004, worksheet.costpercapita_w133, 0.001); end
  def test_costpercapita_y133; assert_in_delta(0, (worksheet.costpercapita_y133||0), 0.001); end
  def test_costpercapita_z133; assert_in_delta(0, (worksheet.costpercapita_z133||0), 0.001); end
  def test_costpercapita_aa133; assert_in_delta(0, (worksheet.costpercapita_aa133||0), 0.001); end
  def test_costpercapita_ab133; assert_in_delta(0, (worksheet.costpercapita_ab133||0), 0.001); end
  def test_costpercapita_ac133; assert_in_delta(0, (worksheet.costpercapita_ac133||0), 0.001); end
  def test_costpercapita_ad133; assert_in_delta(0, (worksheet.costpercapita_ad133||0), 0.001); end
  def test_costpercapita_ae133; assert_in_delta(0, (worksheet.costpercapita_ae133||0), 0.001); end
  def test_costpercapita_af133; assert_in_delta(0, (worksheet.costpercapita_af133||0), 0.001); end
  def test_costpercapita_ag133; assert_in_delta(0, (worksheet.costpercapita_ag133||0), 0.001); end
  def test_costpercapita_ai133; assert_in_epsilon(2.6107540216924687, worksheet.costpercapita_ai133, 0.001); end
  def test_costpercapita_aj133; assert_in_epsilon(6.18884211014581, worksheet.costpercapita_aj133, 0.001); end
  def test_costpercapita_ak133; assert_in_epsilon(2.455066226017074, worksheet.costpercapita_ak133, 0.001); end
  def test_costpercapita_al133; assert_in_epsilon(2.379048844913851, worksheet.costpercapita_al133, 0.001); end
  def test_costpercapita_am133; assert_in_epsilon(2.314052866247004, worksheet.costpercapita_am133, 0.001); end
  def test_costpercapita_an133; assert_in_epsilon(2.2595437408275107, worksheet.costpercapita_an133, 0.001); end
  def test_costpercapita_ao133; assert_in_epsilon(2.2113558382403444, worksheet.costpercapita_ao133, 0.001); end
  def test_costpercapita_ap133; assert_in_epsilon(2.167243877022341, worksheet.costpercapita_ap133, 0.001); end
  def test_costpercapita_aq133; assert_in_epsilon(2.126799345616004, worksheet.costpercapita_aq133, 0.001); end
  def test_costpercapita_as133; assert_in_epsilon(2.745856318969156, worksheet.costpercapita_as133, 0.001); end
  def test_costpercapita_at133; assert_in_epsilon(65.15143400024371, worksheet.costpercapita_at133, 0.001); end
  def test_costpercapita_av133; assert_in_delta(0.1, worksheet.costpercapita_av133, 0.001); end
  def test_costpercapita_aw133; assert_in_epsilon(15, worksheet.costpercapita_aw133, 0.001); end
  def test_costpercapita_ay133; assert_in_delta(0, (worksheet.costpercapita_ay133||0), 0.001); end
  def test_costpercapita_az133; assert_in_epsilon(2.3998442213496225, worksheet.costpercapita_az133, 0.001); end
  def test_costpercapita_ba133; assert_in_delta(0, (worksheet.costpercapita_ba133||0), 0.001); end
  def test_costpercapita_bb133; assert_in_delta(0, (worksheet.costpercapita_bb133||0), 0.001); end
  def test_costpercapita_bc133; assert_in_delta(0, (worksheet.costpercapita_bc133||0), 0.001); end
  def test_costpercapita_bd133; assert_in_delta(0, (worksheet.costpercapita_bd133||0), 0.001); end
  def test_costpercapita_be133; assert_in_delta(0, (worksheet.costpercapita_be133||0), 0.001); end
  def test_costpercapita_bf133; assert_in_delta(0, (worksheet.costpercapita_bf133||0), 0.001); end
  def test_costpercapita_bg133; assert_in_delta(0, (worksheet.costpercapita_bg133||0), 0.001); end
  def test_costpercapita_bi133; assert_in_delta(0, (worksheet.costpercapita_bi133||0), 0.001); end
  def test_costpercapita_bj133; assert_in_epsilon(2.3998442213496225, worksheet.costpercapita_bj133, 0.001); end
  def test_costpercapita_bk133; assert_in_epsilon(2.321277760181196, worksheet.costpercapita_bk133, 0.001); end
  def test_costpercapita_bl133; assert_in_epsilon(2.249402934861961, worksheet.costpercapita_bl133, 0.001); end
  def test_costpercapita_bm133; assert_in_delta(0, (worksheet.costpercapita_bm133||0), 0.001); end
  def test_costpercapita_bn133; assert_in_delta(0, (worksheet.costpercapita_bn133||0), 0.001); end
  def test_costpercapita_bo133; assert_in_delta(0, (worksheet.costpercapita_bo133||0), 0.001); end
  def test_costpercapita_bp133; assert_in_delta(0, (worksheet.costpercapita_bp133||0), 0.001); end
  def test_costpercapita_bq133; assert_in_delta(0, (worksheet.costpercapita_bq133||0), 0.001); end
  def test_costpercapita_bs133; assert_in_epsilon(2.6107540216924687, worksheet.costpercapita_bs133, 0.001); end
  def test_costpercapita_bt133; assert_in_epsilon(4.93800514142745, worksheet.costpercapita_bt133, 0.001); end
  def test_costpercapita_bu133; assert_in_epsilon(4.77634398619827, worksheet.costpercapita_bu133, 0.001); end
  def test_costpercapita_bv133; assert_in_epsilon(4.628451779775812, worksheet.costpercapita_bv133, 0.001); end
  def test_costpercapita_bw133; assert_in_epsilon(2.314052866247004, worksheet.costpercapita_bw133, 0.001); end
  def test_costpercapita_bx133; assert_in_epsilon(2.2595437408275107, worksheet.costpercapita_bx133, 0.001); end
  def test_costpercapita_by133; assert_in_epsilon(2.2113558382403444, worksheet.costpercapita_by133, 0.001); end
  def test_costpercapita_bz133; assert_in_epsilon(2.167243877022341, worksheet.costpercapita_bz133, 0.001); end
  def test_costpercapita_ca133; assert_in_epsilon(2.126799345616004, worksheet.costpercapita_ca133, 0.001); end
  def test_costpercapita_cc133; assert_in_epsilon(3.1147278441163557, worksheet.costpercapita_cc133, 0.001); end
  def test_costpercapita_cd133; assert_in_epsilon(74.82680310818984, worksheet.costpercapita_cd133, 0.001); end
  def test_costpercapita_cf133; assert_in_delta(0, (worksheet.costpercapita_cf133||0), 0.001); end
  def test_costpercapita_cg133; assert_in_epsilon(-1.2508369687183611, worksheet.costpercapita_cg133, 0.001); end
  def test_costpercapita_ch133; assert_in_epsilon(2.321277760181196, worksheet.costpercapita_ch133, 0.001); end
  def test_costpercapita_ci133; assert_in_epsilon(2.249402934861961, worksheet.costpercapita_ci133, 0.001); end
  def test_costpercapita_cj133; assert_in_delta(0, (worksheet.costpercapita_cj133||0), 0.001); end
  def test_costpercapita_ck133; assert_in_delta(0, (worksheet.costpercapita_ck133||0), 0.001); end
  def test_costpercapita_cl133; assert_in_delta(0, (worksheet.costpercapita_cl133||0), 0.001); end
  def test_costpercapita_cm133; assert_in_delta(0, (worksheet.costpercapita_cm133||0), 0.001); end
  def test_costpercapita_cn133; assert_in_delta(0, (worksheet.costpercapita_cn133||0), 0.001); end
  def test_costpercapita_cp133; assert_in_delta(0.36887152514719956, worksheet.costpercapita_cp133, 0.001); end
  def test_costpercapita_cq133; assert_in_epsilon(9.675369107946116, worksheet.costpercapita_cq133, 0.001); end
  def test_costpercapita_cr133; assert_equal("ok", worksheet.costpercapita_cr133); end
  def test_costpercapita_a134; assert_equal("VIII.a", worksheet.costpercapita_a134); end
  def test_costpercapita_b134; assert_equal("H2 Production", worksheet.costpercapita_b134); end
  def test_costpercapita_c134; assert_equal("Transport", worksheet.costpercapita_c134); end
  def test_costpercapita_e134; assert_in_delta(0, (worksheet.costpercapita_e134||0), 0.001); end
  def test_costpercapita_f134; assert_in_delta(0, (worksheet.costpercapita_f134||0), 0.001); end
  def test_costpercapita_g134; assert_in_delta(0, (worksheet.costpercapita_g134||0), 0.001); end
  def test_costpercapita_h134; assert_in_delta(0, (worksheet.costpercapita_h134||0), 0.001); end
  def test_costpercapita_i134; assert_in_delta(0, (worksheet.costpercapita_i134||0), 0.001); end
  def test_costpercapita_j134; assert_in_delta(0, (worksheet.costpercapita_j134||0), 0.001); end
  def test_costpercapita_k134; assert_in_delta(0, (worksheet.costpercapita_k134||0), 0.001); end
  def test_costpercapita_l134; assert_in_delta(0, (worksheet.costpercapita_l134||0), 0.001); end
  def test_costpercapita_m134; assert_in_delta(0, (worksheet.costpercapita_m134||0), 0.001); end
  def test_costpercapita_o134; assert_in_delta(0, (worksheet.costpercapita_o134||0), 0.001); end
  def test_costpercapita_p134; assert_in_delta(0, (worksheet.costpercapita_p134||0), 0.001); end
  def test_costpercapita_q134; assert_in_delta(0, (worksheet.costpercapita_q134||0), 0.001); end
  def test_costpercapita_r134; assert_in_delta(0, (worksheet.costpercapita_r134||0), 0.001); end
  def test_costpercapita_s134; assert_in_delta(0, (worksheet.costpercapita_s134||0), 0.001); end
  def test_costpercapita_t134; assert_in_delta(0, (worksheet.costpercapita_t134||0), 0.001); end
  def test_costpercapita_u134; assert_in_delta(0, (worksheet.costpercapita_u134||0), 0.001); end
  def test_costpercapita_v134; assert_in_delta(0, (worksheet.costpercapita_v134||0), 0.001); end
  def test_costpercapita_w134; assert_in_delta(0, (worksheet.costpercapita_w134||0), 0.001); end
  def test_costpercapita_y134; assert_in_delta(0, (worksheet.costpercapita_y134||0), 0.001); end
  def test_costpercapita_z134; assert_in_delta(0, (worksheet.costpercapita_z134||0), 0.001); end
  def test_costpercapita_aa134; assert_in_delta(0, (worksheet.costpercapita_aa134||0), 0.001); end
  def test_costpercapita_ab134; assert_in_delta(0, (worksheet.costpercapita_ab134||0), 0.001); end
  def test_costpercapita_ac134; assert_in_delta(0, (worksheet.costpercapita_ac134||0), 0.001); end
  def test_costpercapita_ad134; assert_in_delta(0, (worksheet.costpercapita_ad134||0), 0.001); end
  def test_costpercapita_ae134; assert_in_delta(0, (worksheet.costpercapita_ae134||0), 0.001); end
  def test_costpercapita_af134; assert_in_delta(0, (worksheet.costpercapita_af134||0), 0.001); end
  def test_costpercapita_ag134; assert_in_delta(0, (worksheet.costpercapita_ag134||0), 0.001); end
  def test_costpercapita_ai134; assert_in_delta(0, (worksheet.costpercapita_ai134||0), 0.001); end
  def test_costpercapita_aj134; assert_in_delta(0, (worksheet.costpercapita_aj134||0), 0.001); end
  def test_costpercapita_ak134; assert_in_delta(0, (worksheet.costpercapita_ak134||0), 0.001); end
  def test_costpercapita_al134; assert_in_delta(0, (worksheet.costpercapita_al134||0), 0.001); end
  def test_costpercapita_am134; assert_in_delta(0, (worksheet.costpercapita_am134||0), 0.001); end
  def test_costpercapita_an134; assert_in_delta(0, (worksheet.costpercapita_an134||0), 0.001); end
  def test_costpercapita_ao134; assert_in_delta(0, (worksheet.costpercapita_ao134||0), 0.001); end
  def test_costpercapita_ap134; assert_in_delta(0, (worksheet.costpercapita_ap134||0), 0.001); end
  def test_costpercapita_aq134; assert_in_delta(0, (worksheet.costpercapita_aq134||0), 0.001); end
  def test_costpercapita_as134; assert_in_delta(0, (worksheet.costpercapita_as134||0), 0.001); end
  def test_costpercapita_at134; assert_in_delta(0, (worksheet.costpercapita_at134||0), 0.001); end
  def test_costpercapita_av134; assert_in_delta(0.1, worksheet.costpercapita_av134, 0.001); end
  def test_costpercapita_aw134; assert_in_epsilon(25, worksheet.costpercapita_aw134, 0.001); end
  def test_costpercapita_ay134; assert_in_delta(0, (worksheet.costpercapita_ay134||0), 0.001); end
  def test_costpercapita_az134; assert_in_delta(0, (worksheet.costpercapita_az134||0), 0.001); end
  def test_costpercapita_ba134; assert_in_delta(0, (worksheet.costpercapita_ba134||0), 0.001); end
  def test_costpercapita_bb134; assert_in_delta(0, (worksheet.costpercapita_bb134||0), 0.001); end
  def test_costpercapita_bc134; assert_in_delta(0, (worksheet.costpercapita_bc134||0), 0.001); end
  def test_costpercapita_bd134; assert_in_delta(0, (worksheet.costpercapita_bd134||0), 0.001); end
  def test_costpercapita_be134; assert_in_delta(0, (worksheet.costpercapita_be134||0), 0.001); end
  def test_costpercapita_bf134; assert_in_delta(0, (worksheet.costpercapita_bf134||0), 0.001); end
  def test_costpercapita_bg134; assert_in_delta(0, (worksheet.costpercapita_bg134||0), 0.001); end
  def test_costpercapita_bi134; assert_in_delta(0, (worksheet.costpercapita_bi134||0), 0.001); end
  def test_costpercapita_bj134; assert_in_delta(0, (worksheet.costpercapita_bj134||0), 0.001); end
  def test_costpercapita_bk134; assert_in_delta(0, (worksheet.costpercapita_bk134||0), 0.001); end
  def test_costpercapita_bl134; assert_in_delta(0, (worksheet.costpercapita_bl134||0), 0.001); end
  def test_costpercapita_bm134; assert_in_delta(0, (worksheet.costpercapita_bm134||0), 0.001); end
  def test_costpercapita_bn134; assert_in_delta(0, (worksheet.costpercapita_bn134||0), 0.001); end
  def test_costpercapita_bo134; assert_in_delta(0, (worksheet.costpercapita_bo134||0), 0.001); end
  def test_costpercapita_bp134; assert_in_delta(0, (worksheet.costpercapita_bp134||0), 0.001); end
  def test_costpercapita_bq134; assert_in_delta(0, (worksheet.costpercapita_bq134||0), 0.001); end
  def test_costpercapita_bs134; assert_in_delta(0, (worksheet.costpercapita_bs134||0), 0.001); end
  def test_costpercapita_bt134; assert_in_delta(0, (worksheet.costpercapita_bt134||0), 0.001); end
  def test_costpercapita_bu134; assert_in_delta(0, (worksheet.costpercapita_bu134||0), 0.001); end
  def test_costpercapita_bv134; assert_in_delta(0, (worksheet.costpercapita_bv134||0), 0.001); end
  def test_costpercapita_bw134; assert_in_delta(0, (worksheet.costpercapita_bw134||0), 0.001); end
  def test_costpercapita_bx134; assert_in_delta(0, (worksheet.costpercapita_bx134||0), 0.001); end
  def test_costpercapita_by134; assert_in_delta(0, (worksheet.costpercapita_by134||0), 0.001); end
  def test_costpercapita_bz134; assert_in_delta(0, (worksheet.costpercapita_bz134||0), 0.001); end
  def test_costpercapita_ca134; assert_in_delta(0, (worksheet.costpercapita_ca134||0), 0.001); end
  def test_costpercapita_cc134; assert_in_delta(0, (worksheet.costpercapita_cc134||0), 0.001); end
  def test_costpercapita_cd134; assert_in_delta(0, (worksheet.costpercapita_cd134||0), 0.001); end
  def test_costpercapita_cf134; assert_in_delta(0, (worksheet.costpercapita_cf134||0), 0.001); end
  def test_costpercapita_cg134; assert_in_delta(0, (worksheet.costpercapita_cg134||0), 0.001); end
  def test_costpercapita_ch134; assert_in_delta(0, (worksheet.costpercapita_ch134||0), 0.001); end
  def test_costpercapita_ci134; assert_in_delta(0, (worksheet.costpercapita_ci134||0), 0.001); end
  def test_costpercapita_cj134; assert_in_delta(0, (worksheet.costpercapita_cj134||0), 0.001); end
  def test_costpercapita_ck134; assert_in_delta(0, (worksheet.costpercapita_ck134||0), 0.001); end
  def test_costpercapita_cl134; assert_in_delta(0, (worksheet.costpercapita_cl134||0), 0.001); end
  def test_costpercapita_cm134; assert_in_delta(0, (worksheet.costpercapita_cm134||0), 0.001); end
  def test_costpercapita_cn134; assert_in_delta(0, (worksheet.costpercapita_cn134||0), 0.001); end
  def test_costpercapita_cp134; assert_in_delta(0, (worksheet.costpercapita_cp134||0), 0.001); end
  def test_costpercapita_cq134; assert_in_delta(0, (worksheet.costpercapita_cq134||0), 0.001); end
  def test_costpercapita_cr134; assert_equal("ok", worksheet.costpercapita_cr134); end
  def test_costpercapita_a135; assert_equal("IX.a.Heating", worksheet.costpercapita_a135); end
  def test_costpercapita_b135; assert_equal("Domestic heating", worksheet.costpercapita_b135); end
  def test_costpercapita_c135; assert_equal("Buildings", worksheet.costpercapita_c135); end
  def test_costpercapita_e135; assert_in_epsilon(173.80600732972863, worksheet.costpercapita_e135, 0.001); end
  def test_costpercapita_f135; assert_in_epsilon(151.81171060962154, worksheet.costpercapita_f135, 0.001); end
  def test_costpercapita_g135; assert_in_epsilon(154.91469376096828, worksheet.costpercapita_g135, 0.001); end
  def test_costpercapita_h135; assert_in_epsilon(195.88181650404886, worksheet.costpercapita_h135, 0.001); end
  def test_costpercapita_i135; assert_in_epsilon(234.49914340344068, worksheet.costpercapita_i135, 0.001); end
  def test_costpercapita_j135; assert_in_epsilon(275.8824842256332, worksheet.costpercapita_j135, 0.001); end
  def test_costpercapita_k135; assert_in_epsilon(314.33329626304067, worksheet.costpercapita_k135, 0.001); end
  def test_costpercapita_l135; assert_in_epsilon(359.16070897681413, worksheet.costpercapita_l135, 0.001); end
  def test_costpercapita_m135; assert_in_epsilon(405.9637877965479, worksheet.costpercapita_m135, 0.001); end
  def test_costpercapita_o135; assert_in_epsilon(87.33795510919114, worksheet.costpercapita_o135, 0.001); end
  def test_costpercapita_p135; assert_in_epsilon(87.034025133001, worksheet.costpercapita_p135, 0.001); end
  def test_costpercapita_q135; assert_in_epsilon(87.75254093958796, worksheet.costpercapita_q135, 0.001); end
  def test_costpercapita_r135; assert_in_epsilon(88.09969348097981, worksheet.costpercapita_r135, 0.001); end
  def test_costpercapita_s135; assert_in_epsilon(88.26242787315003, worksheet.costpercapita_s135, 0.001); end
  def test_costpercapita_t135; assert_in_epsilon(89.55177744025016, worksheet.costpercapita_t135, 0.001); end
  def test_costpercapita_u135; assert_in_epsilon(91.05540790654503, worksheet.costpercapita_u135, 0.001); end
  def test_costpercapita_v135; assert_in_epsilon(92.70219244068079, worksheet.costpercapita_v135, 0.001); end
  def test_costpercapita_w135; assert_in_epsilon(94.48957995625537, worksheet.costpercapita_w135, 0.001); end
  def test_costpercapita_y135; assert_in_delta(0, (worksheet.costpercapita_y135||0), 0.001); end
  def test_costpercapita_z135; assert_in_delta(0, (worksheet.costpercapita_z135||0), 0.001); end
  def test_costpercapita_aa135; assert_in_delta(0, (worksheet.costpercapita_aa135||0), 0.001); end
  def test_costpercapita_ab135; assert_in_delta(0, (worksheet.costpercapita_ab135||0), 0.001); end
  def test_costpercapita_ac135; assert_in_delta(0, (worksheet.costpercapita_ac135||0), 0.001); end
  def test_costpercapita_ad135; assert_in_delta(0, (worksheet.costpercapita_ad135||0), 0.001); end
  def test_costpercapita_ae135; assert_in_delta(0, (worksheet.costpercapita_ae135||0), 0.001); end
  def test_costpercapita_af135; assert_in_delta(0, (worksheet.costpercapita_af135||0), 0.001); end
  def test_costpercapita_ag135; assert_in_delta(0, (worksheet.costpercapita_ag135||0), 0.001); end
  def test_costpercapita_ai135; assert_in_epsilon(261.1439624389198, worksheet.costpercapita_ai135, 0.001); end
  def test_costpercapita_aj135; assert_in_epsilon(238.84573574262254, worksheet.costpercapita_aj135, 0.001); end
  def test_costpercapita_ak135; assert_in_epsilon(242.66723470055624, worksheet.costpercapita_ak135, 0.001); end
  def test_costpercapita_al135; assert_in_epsilon(283.98150998502865, worksheet.costpercapita_al135, 0.001); end
  def test_costpercapita_am135; assert_in_epsilon(322.76157127659076, worksheet.costpercapita_am135, 0.001); end
  def test_costpercapita_an135; assert_in_epsilon(365.4342616658834, worksheet.costpercapita_an135, 0.001); end
  def test_costpercapita_ao135; assert_in_epsilon(405.38870416958565, worksheet.costpercapita_ao135, 0.001); end
  def test_costpercapita_ap135; assert_in_epsilon(451.8629014174949, worksheet.costpercapita_ap135, 0.001); end
  def test_costpercapita_aq135; assert_in_epsilon(500.4533677528033, worksheet.costpercapita_aq135, 0.001); end
  def test_costpercapita_as135; assert_in_epsilon(341.39324990549835, worksheet.costpercapita_as135, 0.001); end
  def test_costpercapita_at135; assert_in_epsilon(6638.416883086602, worksheet.costpercapita_at135, 0.001); end
  def test_costpercapita_av135; assert_in_delta(0.1, worksheet.costpercapita_av135, 0.001); end
  def test_costpercapita_aw135; assert_in_epsilon(15, worksheet.costpercapita_aw135, 0.001); end
  def test_costpercapita_ay135; assert_in_epsilon(68.55279668806116, worksheet.costpercapita_ay135, 0.001); end
  def test_costpercapita_az135; assert_in_epsilon(99.79629484789848, worksheet.costpercapita_az135, 0.001); end
  def test_costpercapita_ba135; assert_in_epsilon(101.83609942052566, worksheet.costpercapita_ba135, 0.001); end
  def test_costpercapita_bb135; assert_in_epsilon(128.76661119673247, worksheet.costpercapita_bb135, 0.001); end
  def test_costpercapita_bc135; assert_in_epsilon(154.1524403005193, worksheet.costpercapita_bc135, 0.001); end
  def test_costpercapita_bd135; assert_in_epsilon(181.3565608910744, worksheet.costpercapita_bd135, 0.001); end
  def test_costpercapita_be135; assert_in_epsilon(206.63292830579633, worksheet.costpercapita_be135, 0.001); end
  def test_costpercapita_bf135; assert_in_epsilon(236.10107459364033, worksheet.costpercapita_bf135, 0.001); end
  def test_costpercapita_bg135; assert_in_epsilon(266.8679623055792, worksheet.costpercapita_bg135, 0.001); end
  def test_costpercapita_bi135; assert_in_epsilon(68.55279668806116, worksheet.costpercapita_bi135, 0.001); end
  def test_costpercapita_bj135; assert_in_epsilon(166.08855831781807, worksheet.costpercapita_bj135, 0.001); end
  def test_costpercapita_bk135; assert_in_epsilon(262.4872255285737, worksheet.costpercapita_bk135, 0.001); end
  def test_costpercapita_bl135; assert_in_epsilon(320.9897819975165, worksheet.costpercapita_bl135, 0.001); end
  def test_costpercapita_bm135; assert_in_epsilon(375.3879959589417, worksheet.costpercapita_bm135, 0.001); end
  def test_costpercapita_bn135; assert_in_epsilon(454.1762008757169, worksheet.costpercapita_bn135, 0.001); end
  def test_costpercapita_bo135; assert_in_epsilon(531.4330066426094, worksheet.costpercapita_bo135, 0.001); end
  def test_costpercapita_bp135; assert_in_epsilon(612.560450542453, worksheet.costpercapita_bp135, 0.001); end
  def test_costpercapita_bq135; assert_in_epsilon(697.2948040082297, worksheet.costpercapita_bq135, 0.001); end
  def test_costpercapita_bs135; assert_in_epsilon(155.8907517972523, worksheet.costpercapita_bs135, 0.001); end
  def test_costpercapita_bt135; assert_in_epsilon(253.12258345081904, worksheet.costpercapita_bt135, 0.001); end
  def test_costpercapita_bu135; assert_in_epsilon(350.23976646816163, worksheet.costpercapita_bu135, 0.001); end
  def test_costpercapita_bv135; assert_in_epsilon(409.0894754784963, worksheet.costpercapita_bv135, 0.001); end
  def test_costpercapita_bw135; assert_in_epsilon(463.65042383209175, worksheet.costpercapita_bw135, 0.001); end
  def test_costpercapita_bx135; assert_in_epsilon(543.7279783159671, worksheet.costpercapita_bx135, 0.001); end
  def test_costpercapita_by135; assert_in_epsilon(622.4884145491544, worksheet.costpercapita_by135, 0.001); end
  def test_costpercapita_bz135; assert_in_epsilon(705.2626429831339, worksheet.costpercapita_bz135, 0.001); end
  def test_costpercapita_ca135; assert_in_epsilon(791.7843839644851, worksheet.costpercapita_ca135, 0.001); end
  def test_costpercapita_cc135; assert_in_epsilon(477.25071342661795, worksheet.costpercapita_cc135, 0.001); end
  def test_costpercapita_cd135; assert_in_epsilon(9241.489959251172, worksheet.costpercapita_cd135, 0.001); end
  def test_costpercapita_cf135; assert_in_epsilon(-105.25321064166748, worksheet.costpercapita_cf135, 0.001); end
  def test_costpercapita_cg135; assert_in_epsilon(14.276847708196511, worksheet.costpercapita_cg135, 0.001); end
  def test_costpercapita_ch135; assert_in_epsilon(107.57253176760541, worksheet.costpercapita_ch135, 0.001); end
  def test_costpercapita_ci135; assert_in_epsilon(125.10796549346766, worksheet.costpercapita_ci135, 0.001); end
  def test_costpercapita_cj135; assert_in_epsilon(140.88885255550102, worksheet.costpercapita_cj135, 0.001); end
  def test_costpercapita_ck135; assert_in_epsilon(178.2937166500837, worksheet.costpercapita_ck135, 0.001); end
  def test_costpercapita_cl135; assert_in_epsilon(217.0997103795687, worksheet.costpercapita_cl135, 0.001); end
  def test_costpercapita_cm135; assert_in_epsilon(253.3997415656389, worksheet.costpercapita_cm135, 0.001); end
  def test_costpercapita_cn135; assert_in_epsilon(291.3310162116818, worksheet.costpercapita_cn135, 0.001); end
  def test_costpercapita_cp135; assert_in_epsilon(135.85746352111957, worksheet.costpercapita_cp135, 0.001); end
  def test_costpercapita_cq135; assert_in_epsilon(2603.073076164568, worksheet.costpercapita_cq135, 0.001); end
  def test_costpercapita_cr135; assert_equal("ok", worksheet.costpercapita_cr135); end
  def test_costpercapita_a136; assert_equal("IX.a.Insulation", worksheet.costpercapita_a136); end
  def test_costpercapita_b136; assert_equal("Domestic insulation", worksheet.costpercapita_b136); end
  def test_costpercapita_c136; assert_equal("Buildings", worksheet.costpercapita_c136); end
  def test_costpercapita_e136; assert_in_epsilon(35.514652560802965, worksheet.costpercapita_e136, 0.001); end
  def test_costpercapita_f136; assert_in_epsilon(19.98528260504752, worksheet.costpercapita_f136, 0.001); end
  def test_costpercapita_g136; assert_in_epsilon(10.072195706483582, worksheet.costpercapita_g136, 0.001); end
  def test_costpercapita_h136; assert_in_epsilon(9.760325529030908, worksheet.costpercapita_h136, 0.001); end
  def test_costpercapita_i136; assert_in_epsilon(9.493671941307134, worksheet.costpercapita_i136, 0.001); end
  def test_costpercapita_j136; assert_in_epsilon(9.270041892880663, worksheet.costpercapita_j136, 0.001); end
  def test_costpercapita_k136; assert_in_epsilon(9.072345398831168, worksheet.costpercapita_k136, 0.001); end
  def test_costpercapita_l136; assert_in_epsilon(8.891370929924332, worksheet.costpercapita_l136, 0.001); end
  def test_costpercapita_m136; assert_in_epsilon(8.725442519820897, worksheet.costpercapita_m136, 0.001); end
  def test_costpercapita_o136; assert_in_delta(0, (worksheet.costpercapita_o136||0), 0.001); end
  def test_costpercapita_p136; assert_in_delta(0, (worksheet.costpercapita_p136||0), 0.001); end
  def test_costpercapita_q136; assert_in_delta(0, (worksheet.costpercapita_q136||0), 0.001); end
  def test_costpercapita_r136; assert_in_delta(0, (worksheet.costpercapita_r136||0), 0.001); end
  def test_costpercapita_s136; assert_in_delta(0, (worksheet.costpercapita_s136||0), 0.001); end
  def test_costpercapita_t136; assert_in_delta(0, (worksheet.costpercapita_t136||0), 0.001); end
  def test_costpercapita_u136; assert_in_delta(0, (worksheet.costpercapita_u136||0), 0.001); end
  def test_costpercapita_v136; assert_in_delta(0, (worksheet.costpercapita_v136||0), 0.001); end
  def test_costpercapita_w136; assert_in_delta(0, (worksheet.costpercapita_w136||0), 0.001); end
  def test_costpercapita_y136; assert_in_delta(0, (worksheet.costpercapita_y136||0), 0.001); end
  def test_costpercapita_z136; assert_in_delta(0, (worksheet.costpercapita_z136||0), 0.001); end
  def test_costpercapita_aa136; assert_in_delta(0, (worksheet.costpercapita_aa136||0), 0.001); end
  def test_costpercapita_ab136; assert_in_delta(0, (worksheet.costpercapita_ab136||0), 0.001); end
  def test_costpercapita_ac136; assert_in_delta(0, (worksheet.costpercapita_ac136||0), 0.001); end
  def test_costpercapita_ad136; assert_in_delta(0, (worksheet.costpercapita_ad136||0), 0.001); end
  def test_costpercapita_ae136; assert_in_delta(0, (worksheet.costpercapita_ae136||0), 0.001); end
  def test_costpercapita_af136; assert_in_delta(0, (worksheet.costpercapita_af136||0), 0.001); end
  def test_costpercapita_ag136; assert_in_delta(0, (worksheet.costpercapita_ag136||0), 0.001); end
  def test_costpercapita_ai136; assert_in_epsilon(35.514652560802965, worksheet.costpercapita_ai136, 0.001); end
  def test_costpercapita_aj136; assert_in_epsilon(19.98528260504752, worksheet.costpercapita_aj136, 0.001); end
  def test_costpercapita_ak136; assert_in_epsilon(10.072195706483582, worksheet.costpercapita_ak136, 0.001); end
  def test_costpercapita_al136; assert_in_epsilon(9.760325529030908, worksheet.costpercapita_al136, 0.001); end
  def test_costpercapita_am136; assert_in_epsilon(9.493671941307134, worksheet.costpercapita_am136, 0.001); end
  def test_costpercapita_an136; assert_in_epsilon(9.270041892880663, worksheet.costpercapita_an136, 0.001); end
  def test_costpercapita_ao136; assert_in_epsilon(9.072345398831168, worksheet.costpercapita_ao136, 0.001); end
  def test_costpercapita_ap136; assert_in_epsilon(8.891370929924332, worksheet.costpercapita_ap136, 0.001); end
  def test_costpercapita_aq136; assert_in_epsilon(8.725442519820897, worksheet.costpercapita_aq136, 0.001); end
  def test_costpercapita_as136; assert_in_epsilon(13.4205921204588, worksheet.costpercapita_as136, 0.001); end
  def test_costpercapita_at136; assert_in_epsilon(269.3400738964204, worksheet.costpercapita_at136, 0.001); end
  def test_costpercapita_av136; assert_in_delta(0.1, worksheet.costpercapita_av136, 0.001); end
  def test_costpercapita_aw136; assert_in_epsilon(30, worksheet.costpercapita_aw136, 0.001); end
  def test_costpercapita_ay136; assert_in_epsilon(11.302102936810371, worksheet.costpercapita_ay136, 0.001); end
  def test_costpercapita_az136; assert_in_epsilon(10.600118774299409, worksheet.costpercapita_az136, 0.001); end
  def test_costpercapita_ba136; assert_in_epsilon(5.342254743985926, worksheet.costpercapita_ba136, 0.001); end
  def test_costpercapita_bb136; assert_in_epsilon(5.1768399741029505, worksheet.costpercapita_bb136, 0.001); end
  def test_costpercapita_bc136; assert_in_epsilon(5.035407913454922, worksheet.costpercapita_bc136, 0.001); end
  def test_costpercapita_bd136; assert_in_epsilon(4.91679537633602, worksheet.costpercapita_bd136, 0.001); end
  def test_costpercapita_be136; assert_in_epsilon(4.811937898981261, worksheet.costpercapita_be136, 0.001); end
  def test_costpercapita_bf136; assert_in_epsilon(4.715949720908478, worksheet.costpercapita_bf136, 0.001); end
  def test_costpercapita_bg136; assert_in_epsilon(4.627941915870842, worksheet.costpercapita_bg136, 0.001); end
  def test_costpercapita_bi136; assert_in_epsilon(11.302102936810371, worksheet.costpercapita_bi136, 0.001); end
  def test_costpercapita_bj136; assert_in_epsilon(21.529534084086027, worksheet.costpercapita_bj136, 0.001); end
  def test_costpercapita_bk136; assert_in_epsilon(26.166951702168678, worksheet.costpercapita_bk136, 0.001); end
  def test_costpercapita_bl136; assert_in_epsilon(30.53357192791053, worksheet.costpercapita_bl136, 0.001); end
  def test_costpercapita_bm136; assert_in_epsilon(34.73479798171516, worksheet.costpercapita_bm136, 0.001); end
  def test_costpercapita_bn136; assert_in_epsilon(38.83339102256315, worksheet.costpercapita_bn136, 0.001); end
  def test_costpercapita_bo136; assert_in_epsilon(33.29497255050915, worksheet.costpercapita_bo136, 0.001); end
  def test_costpercapita_bp136; assert_in_epsilon(33.01164804635935, worksheet.costpercapita_bp136, 0.001); end
  def test_costpercapita_bq136; assert_in_epsilon(32.395593411095895, worksheet.costpercapita_bq136, 0.001); end
  def test_costpercapita_bs136; assert_in_epsilon(11.302102936810371, worksheet.costpercapita_bs136, 0.001); end
  def test_costpercapita_bt136; assert_in_epsilon(21.529534084086027, worksheet.costpercapita_bt136, 0.001); end
  def test_costpercapita_bu136; assert_in_epsilon(26.166951702168678, worksheet.costpercapita_bu136, 0.001); end
  def test_costpercapita_bv136; assert_in_epsilon(30.53357192791053, worksheet.costpercapita_bv136, 0.001); end
  def test_costpercapita_bw136; assert_in_epsilon(34.73479798171516, worksheet.costpercapita_bw136, 0.001); end
  def test_costpercapita_bx136; assert_in_epsilon(38.83339102256315, worksheet.costpercapita_bx136, 0.001); end
  def test_costpercapita_by136; assert_in_epsilon(33.29497255050915, worksheet.costpercapita_by136, 0.001); end
  def test_costpercapita_bz136; assert_in_epsilon(33.01164804635935, worksheet.costpercapita_bz136, 0.001); end
  def test_costpercapita_ca136; assert_in_epsilon(32.395593411095895, worksheet.costpercapita_ca136, 0.001); end
  def test_costpercapita_cc136; assert_in_epsilon(29.089173740357595, worksheet.costpercapita_cc136, 0.001); end
  def test_costpercapita_cd136; assert_in_epsilon(608.2392411455191, worksheet.costpercapita_cd136, 0.001); end
  def test_costpercapita_cf136; assert_in_epsilon(-24.212549623992594, worksheet.costpercapita_cf136, 0.001); end
  def test_costpercapita_cg136; assert_in_epsilon(1.544251479038508, worksheet.costpercapita_cg136, 0.001); end
  def test_costpercapita_ch136; assert_in_epsilon(16.094755995685095, worksheet.costpercapita_ch136, 0.001); end
  def test_costpercapita_ci136; assert_in_epsilon(20.773246398879618, worksheet.costpercapita_ci136, 0.001); end
  def test_costpercapita_cj136; assert_in_epsilon(25.241126040408027, worksheet.costpercapita_cj136, 0.001); end
  def test_costpercapita_ck136; assert_in_epsilon(29.563349129682482, worksheet.costpercapita_ck136, 0.001); end
  def test_costpercapita_cl136; assert_in_epsilon(24.222627151677987, worksheet.costpercapita_cl136, 0.001); end
  def test_costpercapita_cm136; assert_in_epsilon(24.120277116435016, worksheet.costpercapita_cm136, 0.001); end
  def test_costpercapita_cn136; assert_in_epsilon(23.670150891275, worksheet.costpercapita_cn136, 0.001); end
  def test_costpercapita_cp136; assert_in_epsilon(15.668581619898792, worksheet.costpercapita_cp136, 0.001); end
  def test_costpercapita_cq136; assert_in_epsilon(338.89916724909875, worksheet.costpercapita_cq136, 0.001); end
  def test_costpercapita_cr136; assert_equal("ok", worksheet.costpercapita_cr136); end
  def test_costpercapita_a137; assert_equal("IX.c", worksheet.costpercapita_a137); end
  def test_costpercapita_b137; assert_equal("Commercial heating and cooling", worksheet.costpercapita_b137); end
  def test_costpercapita_c137; assert_equal("Buildings", worksheet.costpercapita_c137); end
  def test_costpercapita_e137; assert_in_epsilon(120.90593647892787, worksheet.costpercapita_e137, 0.001); end
  def test_costpercapita_f137; assert_in_epsilon(198.57618745089482, worksheet.costpercapita_f137, 0.001); end
  def test_costpercapita_g137; assert_in_epsilon(213.14360098911644, worksheet.costpercapita_g137, 0.001); end
  def test_costpercapita_h137; assert_in_epsilon(227.05552175675783, worksheet.costpercapita_h137, 0.001); end
  def test_costpercapita_i137; assert_in_epsilon(240.49255163086403, worksheet.costpercapita_i137, 0.001); end
  def test_costpercapita_j137; assert_in_epsilon(253.76206881934704, worksheet.costpercapita_j137, 0.001); end
  def test_costpercapita_k137; assert_in_epsilon(267.1061894909604, worksheet.costpercapita_k137, 0.001); end
  def test_costpercapita_l137; assert_in_epsilon(280.6877431521684, worksheet.costpercapita_l137, 0.001); end
  def test_costpercapita_m137; assert_in_epsilon(294.0919315695117, worksheet.costpercapita_m137, 0.001); end
  def test_costpercapita_o137; assert_in_epsilon(26.69623194430041, worksheet.costpercapita_o137, 0.001); end
  def test_costpercapita_p137; assert_in_epsilon(27.448951903335242, worksheet.costpercapita_p137, 0.001); end
  def test_costpercapita_q137; assert_in_epsilon(28.742917797001642, worksheet.costpercapita_q137, 0.001); end
  def test_costpercapita_r137; assert_in_epsilon(30.18170799614726, worksheet.costpercapita_r137, 0.001); end
  def test_costpercapita_s137; assert_in_epsilon(31.83989743347613, worksheet.costpercapita_s137, 0.001); end
  def test_costpercapita_t137; assert_in_epsilon(33.74698597370086, worksheet.costpercapita_t137, 0.001); end
  def test_costpercapita_u137; assert_in_epsilon(35.8772667693311, worksheet.costpercapita_u137, 0.001); end
  def test_costpercapita_v137; assert_in_epsilon(38.22245229759264, worksheet.costpercapita_v137, 0.001); end
  def test_costpercapita_w137; assert_in_epsilon(40.8003947128125, worksheet.costpercapita_w137, 0.001); end
  def test_costpercapita_y137; assert_in_delta(0, (worksheet.costpercapita_y137||0), 0.001); end
  def test_costpercapita_z137; assert_in_delta(0, (worksheet.costpercapita_z137||0), 0.001); end
  def test_costpercapita_aa137; assert_in_delta(0, (worksheet.costpercapita_aa137||0), 0.001); end
  def test_costpercapita_ab137; assert_in_delta(0, (worksheet.costpercapita_ab137||0), 0.001); end
  def test_costpercapita_ac137; assert_in_delta(0, (worksheet.costpercapita_ac137||0), 0.001); end
  def test_costpercapita_ad137; assert_in_delta(0, (worksheet.costpercapita_ad137||0), 0.001); end
  def test_costpercapita_ae137; assert_in_delta(0, (worksheet.costpercapita_ae137||0), 0.001); end
  def test_costpercapita_af137; assert_in_delta(0, (worksheet.costpercapita_af137||0), 0.001); end
  def test_costpercapita_ag137; assert_in_delta(0, (worksheet.costpercapita_ag137||0), 0.001); end
  def test_costpercapita_ai137; assert_in_epsilon(147.60216842322828, worksheet.costpercapita_ai137, 0.001); end
  def test_costpercapita_aj137; assert_in_epsilon(226.02513935423008, worksheet.costpercapita_aj137, 0.001); end
  def test_costpercapita_ak137; assert_in_epsilon(241.88651878611807, worksheet.costpercapita_ak137, 0.001); end
  def test_costpercapita_al137; assert_in_epsilon(257.2372297529051, worksheet.costpercapita_al137, 0.001); end
  def test_costpercapita_am137; assert_in_epsilon(272.33244906434015, worksheet.costpercapita_am137, 0.001); end
  def test_costpercapita_an137; assert_in_epsilon(287.5090547930479, worksheet.costpercapita_an137, 0.001); end
  def test_costpercapita_ao137; assert_in_epsilon(302.9834562602915, worksheet.costpercapita_ao137, 0.001); end
  def test_costpercapita_ap137; assert_in_epsilon(318.91019544976103, worksheet.costpercapita_ap137, 0.001); end
  def test_costpercapita_aq137; assert_in_epsilon(334.8923262823242, worksheet.costpercapita_aq137, 0.001); end
  def test_costpercapita_as137; assert_in_epsilon(265.486504240694, worksheet.costpercapita_as137, 0.001); end
  def test_costpercapita_at137; assert_in_epsilon(5490.548965580112, worksheet.costpercapita_at137, 0.001); end
  def test_costpercapita_av137; assert_in_delta(0.1, worksheet.costpercapita_av137, 0.001); end
  def test_costpercapita_aw137; assert_in_epsilon(15, worksheet.costpercapita_aw137, 0.001); end
  def test_costpercapita_ay137; assert_in_epsilon(47.68788035096807, worksheet.costpercapita_ay137, 0.001); end
  def test_costpercapita_az137; assert_in_epsilon(130.5378068203197, worksheet.costpercapita_az137, 0.001); end
  def test_costpercapita_ba137; assert_in_epsilon(140.11397120707085, worksheet.costpercapita_ba137, 0.001); end
  def test_costpercapita_bb137; assert_in_epsilon(149.2592350424693, worksheet.costpercapita_bb137, 0.001); end
  def test_costpercapita_bc137; assert_in_epsilon(158.09232038095524, worksheet.costpercapita_bc137, 0.001); end
  def test_costpercapita_bd137; assert_in_epsilon(166.81528809216408, worksheet.costpercapita_bd137, 0.001); end
  def test_costpercapita_be137; assert_in_epsilon(175.5872978118534, worksheet.costpercapita_be137, 0.001); end
  def test_costpercapita_bf137; assert_in_epsilon(184.5153885910411, worksheet.costpercapita_bf137, 0.001); end
  def test_costpercapita_bg137; assert_in_epsilon(193.32688497773154, worksheet.costpercapita_bg137, 0.001); end
  def test_costpercapita_bi137; assert_in_epsilon(47.68788035096807, worksheet.costpercapita_bi137, 0.001); end
  def test_costpercapita_bj137; assert_in_epsilon(176.6531760142791, worksheet.costpercapita_bj137, 0.001); end
  def test_costpercapita_bk137; assert_in_epsilon(310.9838489680159, worksheet.costpercapita_bk137, 0.001); end
  def test_costpercapita_bl137; assert_in_epsilon(407.38945167970024, worksheet.costpercapita_bl137, 0.001); end
  def test_costpercapita_bm137; assert_in_epsilon(435.3399170971145, worksheet.costpercapita_bm137, 0.001); end
  def test_costpercapita_bn137; assert_in_epsilon(462.94523368169746, worksheet.costpercapita_bn137, 0.001); end
  def test_costpercapita_bo137; assert_in_epsilon(489.92124543922455, worksheet.costpercapita_bo137, 0.001); end
  def test_costpercapita_bp137; assert_in_epsilon(516.6011520849523, worksheet.costpercapita_bp137, 0.001); end
  def test_costpercapita_bq137; assert_in_epsilon(543.2721927173295, worksheet.costpercapita_bq137, 0.001); end
  def test_costpercapita_bs137; assert_in_epsilon(74.38411229526848, worksheet.costpercapita_bs137, 0.001); end
  def test_costpercapita_bt137; assert_in_epsilon(204.10212791761435, worksheet.costpercapita_bt137, 0.001); end
  def test_costpercapita_bu137; assert_in_epsilon(339.72676676501754, worksheet.costpercapita_bu137, 0.001); end
  def test_costpercapita_bv137; assert_in_epsilon(437.5711596758475, worksheet.costpercapita_bv137, 0.001); end
  def test_costpercapita_bw137; assert_in_epsilon(467.1798145305906, worksheet.costpercapita_bw137, 0.001); end
  def test_costpercapita_bx137; assert_in_epsilon(496.69221965539833, worksheet.costpercapita_bx137, 0.001); end
  def test_costpercapita_by137; assert_in_epsilon(525.7985122085556, worksheet.costpercapita_by137, 0.001); end
  def test_costpercapita_bz137; assert_in_epsilon(554.823604382545, worksheet.costpercapita_bz137, 0.001); end
  def test_costpercapita_ca137; assert_in_epsilon(584.072587430142, worksheet.costpercapita_ca137, 0.001); end
  def test_costpercapita_cc137; assert_in_epsilon(409.37232276233107, worksheet.costpercapita_cc137, 0.001); end
  def test_costpercapita_cd137; assert_in_epsilon(8231.964575616652, worksheet.costpercapita_cd137, 0.001); end
  def test_costpercapita_cf137; assert_in_epsilon(-73.21805612795981, worksheet.costpercapita_cf137, 0.001); end
  def test_costpercapita_cg137; assert_in_epsilon(-21.92301143661574, worksheet.costpercapita_cg137, 0.001); end
  def test_costpercapita_ch137; assert_in_epsilon(97.84024797889943, worksheet.costpercapita_ch137, 0.001); end
  def test_costpercapita_ci137; assert_in_epsilon(180.33392992294242, worksheet.costpercapita_ci137, 0.001); end
  def test_costpercapita_cj137; assert_in_epsilon(194.8473654662505, worksheet.costpercapita_cj137, 0.001); end
  def test_costpercapita_ck137; assert_in_epsilon(209.1831648623504, worksheet.costpercapita_ck137, 0.001); end
  def test_costpercapita_cl137; assert_in_epsilon(222.81505594826413, worksheet.costpercapita_cl137, 0.001); end
  def test_costpercapita_cm137; assert_in_epsilon(235.9134089327839, worksheet.costpercapita_cm137, 0.001); end
  def test_costpercapita_cn137; assert_in_epsilon(249.1802611478178, worksheet.costpercapita_cn137, 0.001); end
  def test_costpercapita_cp137; assert_in_epsilon(143.885818521637, worksheet.costpercapita_cp137, 0.001); end
  def test_costpercapita_cq137; assert_in_epsilon(2741.415610036538, worksheet.costpercapita_cq137, 0.001); end
  def test_costpercapita_cr137; assert_equal("ok", worksheet.costpercapita_cr137); end
  def test_costpercapita_a138; assert_equal("X.a", worksheet.costpercapita_a138); end
  def test_costpercapita_b138; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costpercapita_b138); end
  def test_costpercapita_c138; assert_equal("Buildings", worksheet.costpercapita_c138); end
  def test_costpercapita_e138; assert_in_epsilon(55.88187846996484, worksheet.costpercapita_e138, 0.001); end
  def test_costpercapita_f138; assert_in_epsilon(59.54922733055961, worksheet.costpercapita_f138, 0.001); end
  def test_costpercapita_g138; assert_in_epsilon(60.338975525437284, worksheet.costpercapita_g138, 0.001); end
  def test_costpercapita_h138; assert_in_epsilon(60.615807045277386, worksheet.costpercapita_h138, 0.001); end
  def test_costpercapita_i138; assert_in_epsilon(60.7907575145572, worksheet.costpercapita_i138, 0.001); end
  def test_costpercapita_j138; assert_in_epsilon(63.38572134271137, worksheet.costpercapita_j138, 0.001); end
  def test_costpercapita_k138; assert_in_epsilon(65.19828699451516, worksheet.costpercapita_k138, 0.001); end
  def test_costpercapita_l138; assert_in_epsilon(67.1571421480342, worksheet.costpercapita_l138, 0.001); end
  def test_costpercapita_m138; assert_in_epsilon(69.26563322362614, worksheet.costpercapita_m138, 0.001); end
  def test_costpercapita_o138; assert_in_delta(0, (worksheet.costpercapita_o138||0), 0.001); end
  def test_costpercapita_p138; assert_in_delta(0, (worksheet.costpercapita_p138||0), 0.001); end
  def test_costpercapita_q138; assert_in_delta(0, (worksheet.costpercapita_q138||0), 0.001); end
  def test_costpercapita_r138; assert_in_delta(0, (worksheet.costpercapita_r138||0), 0.001); end
  def test_costpercapita_s138; assert_in_delta(0, (worksheet.costpercapita_s138||0), 0.001); end
  def test_costpercapita_t138; assert_in_delta(0, (worksheet.costpercapita_t138||0), 0.001); end
  def test_costpercapita_u138; assert_in_delta(0, (worksheet.costpercapita_u138||0), 0.001); end
  def test_costpercapita_v138; assert_in_delta(0, (worksheet.costpercapita_v138||0), 0.001); end
  def test_costpercapita_w138; assert_in_delta(0, (worksheet.costpercapita_w138||0), 0.001); end
  def test_costpercapita_y138; assert_in_delta(0, (worksheet.costpercapita_y138||0), 0.001); end
  def test_costpercapita_z138; assert_in_delta(0, (worksheet.costpercapita_z138||0), 0.001); end
  def test_costpercapita_aa138; assert_in_delta(0, (worksheet.costpercapita_aa138||0), 0.001); end
  def test_costpercapita_ab138; assert_in_delta(0, (worksheet.costpercapita_ab138||0), 0.001); end
  def test_costpercapita_ac138; assert_in_delta(0, (worksheet.costpercapita_ac138||0), 0.001); end
  def test_costpercapita_ad138; assert_in_delta(0, (worksheet.costpercapita_ad138||0), 0.001); end
  def test_costpercapita_ae138; assert_in_delta(0, (worksheet.costpercapita_ae138||0), 0.001); end
  def test_costpercapita_af138; assert_in_delta(0, (worksheet.costpercapita_af138||0), 0.001); end
  def test_costpercapita_ag138; assert_in_delta(0, (worksheet.costpercapita_ag138||0), 0.001); end
  def test_costpercapita_ai138; assert_in_epsilon(55.88187846996484, worksheet.costpercapita_ai138, 0.001); end
  def test_costpercapita_aj138; assert_in_epsilon(59.54922733055961, worksheet.costpercapita_aj138, 0.001); end
  def test_costpercapita_ak138; assert_in_epsilon(60.338975525437284, worksheet.costpercapita_ak138, 0.001); end
  def test_costpercapita_al138; assert_in_epsilon(60.615807045277386, worksheet.costpercapita_al138, 0.001); end
  def test_costpercapita_am138; assert_in_epsilon(60.7907575145572, worksheet.costpercapita_am138, 0.001); end
  def test_costpercapita_an138; assert_in_epsilon(63.38572134271137, worksheet.costpercapita_an138, 0.001); end
  def test_costpercapita_ao138; assert_in_epsilon(65.19828699451516, worksheet.costpercapita_ao138, 0.001); end
  def test_costpercapita_ap138; assert_in_epsilon(67.1571421480342, worksheet.costpercapita_ap138, 0.001); end
  def test_costpercapita_aq138; assert_in_epsilon(69.26563322362614, worksheet.costpercapita_aq138, 0.001); end
  def test_costpercapita_as138; assert_in_epsilon(62.46482551052036, worksheet.costpercapita_as138, 0.001); end
  def test_costpercapita_at138; assert_in_epsilon(1299.3760814576958, worksheet.costpercapita_at138, 0.001); end
  def test_costpercapita_av138; assert_in_delta(0.1, worksheet.costpercapita_av138, 0.001); end
  def test_costpercapita_aw138; assert_in_epsilon(15, worksheet.costpercapita_aw138, 0.001); end
  def test_costpercapita_ay138; assert_in_epsilon(22.04100486602221, worksheet.costpercapita_ay138, 0.001); end
  def test_costpercapita_az138; assert_in_epsilon(39.145809139366996, worksheet.costpercapita_az138, 0.001); end
  def test_costpercapita_ba138; assert_in_epsilon(39.66496502921976, worksheet.costpercapita_ba138, 0.001); end
  def test_costpercapita_bb138; assert_in_epsilon(39.846945456594, worksheet.costpercapita_bb138, 0.001); end
  def test_costpercapita_bc138; assert_in_epsilon(39.96195245141619, worksheet.costpercapita_bc138, 0.001); end
  def test_costpercapita_bd138; assert_in_epsilon(41.667800928283896, worksheet.costpercapita_bd138, 0.001); end
  def test_costpercapita_be138; assert_in_epsilon(42.85932518877871, worksheet.costpercapita_be138, 0.001); end
  def test_costpercapita_bf138; assert_in_epsilon(44.14701561582093, worksheet.costpercapita_bf138, 0.001); end
  def test_costpercapita_bg138; assert_in_epsilon(45.53307204202788, worksheet.costpercapita_bg138, 0.001); end
  def test_costpercapita_bi138; assert_in_epsilon(22.04100486602221, worksheet.costpercapita_bi138, 0.001); end
  def test_costpercapita_bj138; assert_in_epsilon(60.460010343569515, worksheet.costpercapita_bj138, 0.001); end
  def test_costpercapita_bk138; assert_in_epsilon(98.14562645812124, worksheet.costpercapita_bk138, 0.001); end
  def test_costpercapita_bl138; assert_in_epsilon(114.97558441377163, worksheet.costpercapita_bl138, 0.001); end
  def test_costpercapita_bm138; assert_in_epsilon(116.10697388629849, worksheet.costpercapita_bm138, 0.001); end
  def test_costpercapita_bn138; assert_in_epsilon(118.53376337458397, worksheet.costpercapita_bn138, 0.001); end
  def test_costpercapita_bo138; assert_in_epsilon(121.82695452269239, worksheet.costpercapita_bo138, 0.001); end
  def test_costpercapita_bp138; assert_in_epsilon(126.11710351014398, worksheet.costpercapita_bp138, 0.001); end
  def test_costpercapita_bq138; assert_in_epsilon(130.0767238680872, worksheet.costpercapita_bq138, 0.001); end
  def test_costpercapita_bs138; assert_in_epsilon(22.04100486602221, worksheet.costpercapita_bs138, 0.001); end
  def test_costpercapita_bt138; assert_in_epsilon(60.460010343569515, worksheet.costpercapita_bt138, 0.001); end
  def test_costpercapita_bu138; assert_in_epsilon(98.14562645812124, worksheet.costpercapita_bu138, 0.001); end
  def test_costpercapita_bv138; assert_in_epsilon(114.97558441377163, worksheet.costpercapita_bv138, 0.001); end
  def test_costpercapita_bw138; assert_in_epsilon(116.10697388629849, worksheet.costpercapita_bw138, 0.001); end
  def test_costpercapita_bx138; assert_in_epsilon(118.53376337458397, worksheet.costpercapita_bx138, 0.001); end
  def test_costpercapita_by138; assert_in_epsilon(121.82695452269239, worksheet.costpercapita_by138, 0.001); end
  def test_costpercapita_bz138; assert_in_epsilon(126.11710351014398, worksheet.costpercapita_bz138, 0.001); end
  def test_costpercapita_ca138; assert_in_epsilon(130.0767238680872, worksheet.costpercapita_ca138, 0.001); end
  def test_costpercapita_cc138; assert_in_epsilon(100.9204161381434, worksheet.costpercapita_cc138, 0.001); end
  def test_costpercapita_cd138; assert_in_epsilon(2093.376627490823, worksheet.costpercapita_cd138, 0.001); end
  def test_costpercapita_cf138; assert_in_epsilon(-33.84087360394263, worksheet.costpercapita_cf138, 0.001); end
  def test_costpercapita_cg138; assert_in_delta(0.9107830130099077, worksheet.costpercapita_cg138, 0.001); end
  def test_costpercapita_ch138; assert_in_epsilon(37.80665093268396, worksheet.costpercapita_ch138, 0.001); end
  def test_costpercapita_ci138; assert_in_epsilon(54.35977736849424, worksheet.costpercapita_ci138, 0.001); end
  def test_costpercapita_cj138; assert_in_epsilon(55.31621637174129, worksheet.costpercapita_cj138, 0.001); end
  def test_costpercapita_ck138; assert_in_epsilon(55.1480420318726, worksheet.costpercapita_ck138, 0.001); end
  def test_costpercapita_cl138; assert_in_epsilon(56.628667528177246, worksheet.costpercapita_cl138, 0.001); end
  def test_costpercapita_cm138; assert_in_epsilon(58.95996136210979, worksheet.costpercapita_cm138, 0.001); end
  def test_costpercapita_cn138; assert_in_epsilon(60.81109064446108, worksheet.costpercapita_cn138, 0.001); end
  def test_costpercapita_cp138; assert_in_epsilon(38.45559062762305, worksheet.costpercapita_cp138, 0.001); end
  def test_costpercapita_cq138; assert_in_epsilon(794.0005460331276, worksheet.costpercapita_cq138, 0.001); end
  def test_costpercapita_cr138; assert_equal("ok", worksheet.costpercapita_cr138); end
  def test_costpercapita_a139; assert_equal("X.b", worksheet.costpercapita_a139); end
  def test_costpercapita_b139; assert_equal("Commercial lighting, appliances, and catering", worksheet.costpercapita_b139); end
  def test_costpercapita_c139; assert_equal("Buildings", worksheet.costpercapita_c139); end
  def test_costpercapita_e139; assert_in_delta(0, (worksheet.costpercapita_e139||0), 0.001); end
  def test_costpercapita_f139; assert_in_delta(0, (worksheet.costpercapita_f139||0), 0.001); end
  def test_costpercapita_g139; assert_in_delta(0, (worksheet.costpercapita_g139||0), 0.001); end
  def test_costpercapita_h139; assert_in_delta(0, (worksheet.costpercapita_h139||0), 0.001); end
  def test_costpercapita_i139; assert_in_delta(0, (worksheet.costpercapita_i139||0), 0.001); end
  def test_costpercapita_j139; assert_in_delta(0, (worksheet.costpercapita_j139||0), 0.001); end
  def test_costpercapita_k139; assert_in_delta(0, (worksheet.costpercapita_k139||0), 0.001); end
  def test_costpercapita_l139; assert_in_delta(0, (worksheet.costpercapita_l139||0), 0.001); end
  def test_costpercapita_m139; assert_in_delta(0, (worksheet.costpercapita_m139||0), 0.001); end
  def test_costpercapita_o139; assert_in_delta(0, (worksheet.costpercapita_o139||0), 0.001); end
  def test_costpercapita_p139; assert_in_delta(0, (worksheet.costpercapita_p139||0), 0.001); end
  def test_costpercapita_q139; assert_in_delta(0, (worksheet.costpercapita_q139||0), 0.001); end
  def test_costpercapita_r139; assert_in_delta(0, (worksheet.costpercapita_r139||0), 0.001); end
  def test_costpercapita_s139; assert_in_delta(0, (worksheet.costpercapita_s139||0), 0.001); end
  def test_costpercapita_t139; assert_in_delta(0, (worksheet.costpercapita_t139||0), 0.001); end
  def test_costpercapita_u139; assert_in_delta(0, (worksheet.costpercapita_u139||0), 0.001); end
  def test_costpercapita_v139; assert_in_delta(0, (worksheet.costpercapita_v139||0), 0.001); end
  def test_costpercapita_w139; assert_in_delta(0, (worksheet.costpercapita_w139||0), 0.001); end
  def test_costpercapita_y139; assert_in_delta(0, (worksheet.costpercapita_y139||0), 0.001); end
  def test_costpercapita_z139; assert_in_delta(0, (worksheet.costpercapita_z139||0), 0.001); end
  def test_costpercapita_aa139; assert_in_delta(0, (worksheet.costpercapita_aa139||0), 0.001); end
  def test_costpercapita_ab139; assert_in_delta(0, (worksheet.costpercapita_ab139||0), 0.001); end
  def test_costpercapita_ac139; assert_in_delta(0, (worksheet.costpercapita_ac139||0), 0.001); end
  def test_costpercapita_ad139; assert_in_delta(0, (worksheet.costpercapita_ad139||0), 0.001); end
  def test_costpercapita_ae139; assert_in_delta(0, (worksheet.costpercapita_ae139||0), 0.001); end
  def test_costpercapita_af139; assert_in_delta(0, (worksheet.costpercapita_af139||0), 0.001); end
  def test_costpercapita_ag139; assert_in_delta(0, (worksheet.costpercapita_ag139||0), 0.001); end
  def test_costpercapita_ai139; assert_in_delta(0, (worksheet.costpercapita_ai139||0), 0.001); end
  def test_costpercapita_aj139; assert_in_delta(0, (worksheet.costpercapita_aj139||0), 0.001); end
  def test_costpercapita_ak139; assert_in_delta(0, (worksheet.costpercapita_ak139||0), 0.001); end
  def test_costpercapita_al139; assert_in_delta(0, (worksheet.costpercapita_al139||0), 0.001); end
  def test_costpercapita_am139; assert_in_delta(0, (worksheet.costpercapita_am139||0), 0.001); end
  def test_costpercapita_an139; assert_in_delta(0, (worksheet.costpercapita_an139||0), 0.001); end
  def test_costpercapita_ao139; assert_in_delta(0, (worksheet.costpercapita_ao139||0), 0.001); end
  def test_costpercapita_ap139; assert_in_delta(0, (worksheet.costpercapita_ap139||0), 0.001); end
  def test_costpercapita_aq139; assert_in_delta(0, (worksheet.costpercapita_aq139||0), 0.001); end
  def test_costpercapita_as139; assert_in_delta(0, (worksheet.costpercapita_as139||0), 0.001); end
  def test_costpercapita_at139; assert_in_delta(0, (worksheet.costpercapita_at139||0), 0.001); end
  def test_costpercapita_av139; assert_in_delta(0, (worksheet.costpercapita_av139||0), 0.001); end
  def test_costpercapita_aw139; assert_in_epsilon(5, worksheet.costpercapita_aw139, 0.001); end
  def test_costpercapita_ay139; assert_in_delta(0, (worksheet.costpercapita_ay139||0), 0.001); end
  def test_costpercapita_az139; assert_in_delta(0, (worksheet.costpercapita_az139||0), 0.001); end
  def test_costpercapita_ba139; assert_in_delta(0, (worksheet.costpercapita_ba139||0), 0.001); end
  def test_costpercapita_bb139; assert_in_delta(0, (worksheet.costpercapita_bb139||0), 0.001); end
  def test_costpercapita_bc139; assert_in_delta(0, (worksheet.costpercapita_bc139||0), 0.001); end
  def test_costpercapita_bd139; assert_in_delta(0, (worksheet.costpercapita_bd139||0), 0.001); end
  def test_costpercapita_be139; assert_in_delta(0, (worksheet.costpercapita_be139||0), 0.001); end
  def test_costpercapita_bf139; assert_in_delta(0, (worksheet.costpercapita_bf139||0), 0.001); end
  def test_costpercapita_bg139; assert_in_delta(0, (worksheet.costpercapita_bg139||0), 0.001); end
  def test_costpercapita_bi139; assert_in_delta(0, (worksheet.costpercapita_bi139||0), 0.001); end
  def test_costpercapita_bj139; assert_in_delta(0, (worksheet.costpercapita_bj139||0), 0.001); end
  def test_costpercapita_bk139; assert_in_delta(0, (worksheet.costpercapita_bk139||0), 0.001); end
  def test_costpercapita_bl139; assert_in_delta(0, (worksheet.costpercapita_bl139||0), 0.001); end
  def test_costpercapita_bm139; assert_in_delta(0, (worksheet.costpercapita_bm139||0), 0.001); end
  def test_costpercapita_bn139; assert_in_delta(0, (worksheet.costpercapita_bn139||0), 0.001); end
  def test_costpercapita_bo139; assert_in_delta(0, (worksheet.costpercapita_bo139||0), 0.001); end
  def test_costpercapita_bp139; assert_in_delta(0, (worksheet.costpercapita_bp139||0), 0.001); end
  def test_costpercapita_bq139; assert_in_delta(0, (worksheet.costpercapita_bq139||0), 0.001); end
  def test_costpercapita_bs139; assert_in_delta(0, (worksheet.costpercapita_bs139||0), 0.001); end
  def test_costpercapita_bt139; assert_in_delta(0, (worksheet.costpercapita_bt139||0), 0.001); end
  def test_costpercapita_bu139; assert_in_delta(0, (worksheet.costpercapita_bu139||0), 0.001); end
  def test_costpercapita_bv139; assert_in_delta(0, (worksheet.costpercapita_bv139||0), 0.001); end
  def test_costpercapita_bw139; assert_in_delta(0, (worksheet.costpercapita_bw139||0), 0.001); end
  def test_costpercapita_bx139; assert_in_delta(0, (worksheet.costpercapita_bx139||0), 0.001); end
  def test_costpercapita_by139; assert_in_delta(0, (worksheet.costpercapita_by139||0), 0.001); end
  def test_costpercapita_bz139; assert_in_delta(0, (worksheet.costpercapita_bz139||0), 0.001); end
  def test_costpercapita_ca139; assert_in_delta(0, (worksheet.costpercapita_ca139||0), 0.001); end
  def test_costpercapita_cc139; assert_in_delta(0, (worksheet.costpercapita_cc139||0), 0.001); end
  def test_costpercapita_cd139; assert_in_delta(0, (worksheet.costpercapita_cd139||0), 0.001); end
  def test_costpercapita_cf139; assert_in_delta(0, (worksheet.costpercapita_cf139||0), 0.001); end
  def test_costpercapita_cg139; assert_in_delta(0, (worksheet.costpercapita_cg139||0), 0.001); end
  def test_costpercapita_ch139; assert_in_delta(0, (worksheet.costpercapita_ch139||0), 0.001); end
  def test_costpercapita_ci139; assert_in_delta(0, (worksheet.costpercapita_ci139||0), 0.001); end
  def test_costpercapita_cj139; assert_in_delta(0, (worksheet.costpercapita_cj139||0), 0.001); end
  def test_costpercapita_ck139; assert_in_delta(0, (worksheet.costpercapita_ck139||0), 0.001); end
  def test_costpercapita_cl139; assert_in_delta(0, (worksheet.costpercapita_cl139||0), 0.001); end
  def test_costpercapita_cm139; assert_in_delta(0, (worksheet.costpercapita_cm139||0), 0.001); end
  def test_costpercapita_cn139; assert_in_delta(0, (worksheet.costpercapita_cn139||0), 0.001); end
  def test_costpercapita_cp139; assert_in_delta(0, (worksheet.costpercapita_cp139||0), 0.001); end
  def test_costpercapita_cq139; assert_in_delta(0, (worksheet.costpercapita_cq139||0), 0.001); end
  def test_costpercapita_cr139; assert_equal("ok", worksheet.costpercapita_cr139); end
  def test_costpercapita_a140; assert_equal("XI.a", worksheet.costpercapita_a140); end
  def test_costpercapita_b140; assert_equal("Industrial processes", worksheet.costpercapita_b140); end
  def test_costpercapita_c140; assert_equal("Industry", worksheet.costpercapita_c140); end
  def test_costpercapita_e140; assert_in_delta(0, (worksheet.costpercapita_e140||0), 0.001); end
  def test_costpercapita_f140; assert_in_delta(0, (worksheet.costpercapita_f140||0), 0.001); end
  def test_costpercapita_g140; assert_in_delta(0, (worksheet.costpercapita_g140||0), 0.001); end
  def test_costpercapita_h140; assert_in_delta(0, (worksheet.costpercapita_h140||0), 0.001); end
  def test_costpercapita_i140; assert_in_delta(0, (worksheet.costpercapita_i140||0), 0.001); end
  def test_costpercapita_j140; assert_in_delta(0, (worksheet.costpercapita_j140||0), 0.001); end
  def test_costpercapita_k140; assert_in_delta(0, (worksheet.costpercapita_k140||0), 0.001); end
  def test_costpercapita_l140; assert_in_delta(0, (worksheet.costpercapita_l140||0), 0.001); end
  def test_costpercapita_m140; assert_in_delta(0, (worksheet.costpercapita_m140||0), 0.001); end
  def test_costpercapita_o140; assert_in_delta(0, (worksheet.costpercapita_o140||0), 0.001); end
  def test_costpercapita_p140; assert_in_delta(0, (worksheet.costpercapita_p140||0), 0.001); end
  def test_costpercapita_q140; assert_in_delta(0, (worksheet.costpercapita_q140||0), 0.001); end
  def test_costpercapita_r140; assert_in_delta(0, (worksheet.costpercapita_r140||0), 0.001); end
  def test_costpercapita_s140; assert_in_delta(0, (worksheet.costpercapita_s140||0), 0.001); end
  def test_costpercapita_t140; assert_in_delta(0, (worksheet.costpercapita_t140||0), 0.001); end
  def test_costpercapita_u140; assert_in_delta(0, (worksheet.costpercapita_u140||0), 0.001); end
  def test_costpercapita_v140; assert_in_delta(0, (worksheet.costpercapita_v140||0), 0.001); end
  def test_costpercapita_w140; assert_in_delta(0, (worksheet.costpercapita_w140||0), 0.001); end
  def test_costpercapita_y140; assert_in_delta(0, (worksheet.costpercapita_y140||0), 0.001); end
  def test_costpercapita_z140; assert_in_delta(0, (worksheet.costpercapita_z140||0), 0.001); end
  def test_costpercapita_aa140; assert_in_delta(0, (worksheet.costpercapita_aa140||0), 0.001); end
  def test_costpercapita_ab140; assert_in_delta(0, (worksheet.costpercapita_ab140||0), 0.001); end
  def test_costpercapita_ac140; assert_in_delta(0, (worksheet.costpercapita_ac140||0), 0.001); end
  def test_costpercapita_ad140; assert_in_delta(0, (worksheet.costpercapita_ad140||0), 0.001); end
  def test_costpercapita_ae140; assert_in_delta(0, (worksheet.costpercapita_ae140||0), 0.001); end
  def test_costpercapita_af140; assert_in_delta(0, (worksheet.costpercapita_af140||0), 0.001); end
  def test_costpercapita_ag140; assert_in_delta(0, (worksheet.costpercapita_ag140||0), 0.001); end
  def test_costpercapita_ai140; assert_in_delta(0, (worksheet.costpercapita_ai140||0), 0.001); end
  def test_costpercapita_aj140; assert_in_delta(0, (worksheet.costpercapita_aj140||0), 0.001); end
  def test_costpercapita_ak140; assert_in_delta(0, (worksheet.costpercapita_ak140||0), 0.001); end
  def test_costpercapita_al140; assert_in_delta(0, (worksheet.costpercapita_al140||0), 0.001); end
  def test_costpercapita_am140; assert_in_delta(0, (worksheet.costpercapita_am140||0), 0.001); end
  def test_costpercapita_an140; assert_in_delta(0, (worksheet.costpercapita_an140||0), 0.001); end
  def test_costpercapita_ao140; assert_in_delta(0, (worksheet.costpercapita_ao140||0), 0.001); end
  def test_costpercapita_ap140; assert_in_delta(0, (worksheet.costpercapita_ap140||0), 0.001); end
  def test_costpercapita_aq140; assert_in_delta(0, (worksheet.costpercapita_aq140||0), 0.001); end
  def test_costpercapita_as140; assert_in_delta(0, (worksheet.costpercapita_as140||0), 0.001); end
  def test_costpercapita_at140; assert_in_delta(0, (worksheet.costpercapita_at140||0), 0.001); end
  def test_costpercapita_av140; assert_in_delta(0, (worksheet.costpercapita_av140||0), 0.001); end
  def test_costpercapita_aw140; assert_in_epsilon(5, worksheet.costpercapita_aw140, 0.001); end
  def test_costpercapita_ay140; assert_in_delta(0, (worksheet.costpercapita_ay140||0), 0.001); end
  def test_costpercapita_az140; assert_in_delta(0, (worksheet.costpercapita_az140||0), 0.001); end
  def test_costpercapita_ba140; assert_in_delta(0, (worksheet.costpercapita_ba140||0), 0.001); end
  def test_costpercapita_bb140; assert_in_delta(0, (worksheet.costpercapita_bb140||0), 0.001); end
  def test_costpercapita_bc140; assert_in_delta(0, (worksheet.costpercapita_bc140||0), 0.001); end
  def test_costpercapita_bd140; assert_in_delta(0, (worksheet.costpercapita_bd140||0), 0.001); end
  def test_costpercapita_be140; assert_in_delta(0, (worksheet.costpercapita_be140||0), 0.001); end
  def test_costpercapita_bf140; assert_in_delta(0, (worksheet.costpercapita_bf140||0), 0.001); end
  def test_costpercapita_bg140; assert_in_delta(0, (worksheet.costpercapita_bg140||0), 0.001); end
  def test_costpercapita_bi140; assert_in_delta(0, (worksheet.costpercapita_bi140||0), 0.001); end
  def test_costpercapita_bj140; assert_in_delta(0, (worksheet.costpercapita_bj140||0), 0.001); end
  def test_costpercapita_bk140; assert_in_delta(0, (worksheet.costpercapita_bk140||0), 0.001); end
  def test_costpercapita_bl140; assert_in_delta(0, (worksheet.costpercapita_bl140||0), 0.001); end
  def test_costpercapita_bm140; assert_in_delta(0, (worksheet.costpercapita_bm140||0), 0.001); end
  def test_costpercapita_bn140; assert_in_delta(0, (worksheet.costpercapita_bn140||0), 0.001); end
  def test_costpercapita_bo140; assert_in_delta(0, (worksheet.costpercapita_bo140||0), 0.001); end
  def test_costpercapita_bp140; assert_in_delta(0, (worksheet.costpercapita_bp140||0), 0.001); end
  def test_costpercapita_bq140; assert_in_delta(0, (worksheet.costpercapita_bq140||0), 0.001); end
  def test_costpercapita_bs140; assert_in_delta(0, (worksheet.costpercapita_bs140||0), 0.001); end
  def test_costpercapita_bt140; assert_in_delta(0, (worksheet.costpercapita_bt140||0), 0.001); end
  def test_costpercapita_bu140; assert_in_delta(0, (worksheet.costpercapita_bu140||0), 0.001); end
  def test_costpercapita_bv140; assert_in_delta(0, (worksheet.costpercapita_bv140||0), 0.001); end
  def test_costpercapita_bw140; assert_in_delta(0, (worksheet.costpercapita_bw140||0), 0.001); end
  def test_costpercapita_bx140; assert_in_delta(0, (worksheet.costpercapita_bx140||0), 0.001); end
  def test_costpercapita_by140; assert_in_delta(0, (worksheet.costpercapita_by140||0), 0.001); end
  def test_costpercapita_bz140; assert_in_delta(0, (worksheet.costpercapita_bz140||0), 0.001); end
  def test_costpercapita_ca140; assert_in_delta(0, (worksheet.costpercapita_ca140||0), 0.001); end
  def test_costpercapita_cc140; assert_in_delta(0, (worksheet.costpercapita_cc140||0), 0.001); end
  def test_costpercapita_cd140; assert_in_delta(0, (worksheet.costpercapita_cd140||0), 0.001); end
  def test_costpercapita_cf140; assert_in_delta(0, (worksheet.costpercapita_cf140||0), 0.001); end
  def test_costpercapita_cg140; assert_in_delta(0, (worksheet.costpercapita_cg140||0), 0.001); end
  def test_costpercapita_ch140; assert_in_delta(0, (worksheet.costpercapita_ch140||0), 0.001); end
  def test_costpercapita_ci140; assert_in_delta(0, (worksheet.costpercapita_ci140||0), 0.001); end
  def test_costpercapita_cj140; assert_in_delta(0, (worksheet.costpercapita_cj140||0), 0.001); end
  def test_costpercapita_ck140; assert_in_delta(0, (worksheet.costpercapita_ck140||0), 0.001); end
  def test_costpercapita_cl140; assert_in_delta(0, (worksheet.costpercapita_cl140||0), 0.001); end
  def test_costpercapita_cm140; assert_in_delta(0, (worksheet.costpercapita_cm140||0), 0.001); end
  def test_costpercapita_cn140; assert_in_delta(0, (worksheet.costpercapita_cn140||0), 0.001); end
  def test_costpercapita_cp140; assert_in_delta(0, (worksheet.costpercapita_cp140||0), 0.001); end
  def test_costpercapita_cq140; assert_in_delta(0, (worksheet.costpercapita_cq140||0), 0.001); end
  def test_costpercapita_cr140; assert_equal("ok", worksheet.costpercapita_cr140); end
  def test_costpercapita_a141; assert_equal("XII.a.ICE", worksheet.costpercapita_a141); end
  def test_costpercapita_b141; assert_equal("Conventional cars and buses", worksheet.costpercapita_b141); end
  def test_costpercapita_c141; assert_equal("Transport", worksheet.costpercapita_c141); end
  def test_costpercapita_e141; assert_in_epsilon(1046.1681898639663, worksheet.costpercapita_e141, 0.001); end
  def test_costpercapita_f141; assert_in_epsilon(970.643178276923, worksheet.costpercapita_f141, 0.001); end
  def test_costpercapita_g141; assert_in_epsilon(1027.3399927852709, worksheet.costpercapita_g141, 0.001); end
  def test_costpercapita_h141; assert_in_epsilon(957.0050666050329, worksheet.costpercapita_h141, 0.001); end
  def test_costpercapita_i141; assert_in_epsilon(917.2289145022638, worksheet.costpercapita_i141, 0.001); end
  def test_costpercapita_j141; assert_in_epsilon(876.4271105715496, worksheet.costpercapita_j141, 0.001); end
  def test_costpercapita_k141; assert_in_epsilon(827.3982838700391, worksheet.costpercapita_k141, 0.001); end
  def test_costpercapita_l141; assert_in_epsilon(806.1145746962238, worksheet.costpercapita_l141, 0.001); end
  def test_costpercapita_m141; assert_in_epsilon(774.8953731440007, worksheet.costpercapita_m141, 0.001); end
  def test_costpercapita_o141; assert_in_epsilon(906.6199100558307, worksheet.costpercapita_o141, 0.001); end
  def test_costpercapita_p141; assert_in_epsilon(892.5930676462598, worksheet.costpercapita_p141, 0.001); end
  def test_costpercapita_q141; assert_in_epsilon(906.7529556283889, worksheet.costpercapita_q141, 0.001); end
  def test_costpercapita_r141; assert_in_epsilon(888.3713426813279, worksheet.costpercapita_r141, 0.001); end
  def test_costpercapita_s141; assert_in_epsilon(864.3036373500805, worksheet.costpercapita_s141, 0.001); end
  def test_costpercapita_t141; assert_in_epsilon(836.5956473156454, worksheet.costpercapita_t141, 0.001); end
  def test_costpercapita_u141; assert_in_epsilon(802.6954758695884, worksheet.costpercapita_u141, 0.001); end
  def test_costpercapita_v141; assert_in_epsilon(775.5023601168507, worksheet.costpercapita_v141, 0.001); end
  def test_costpercapita_w141; assert_in_epsilon(748.1995025532132, worksheet.costpercapita_w141, 0.001); end
  def test_costpercapita_y141; assert_in_delta(0, (worksheet.costpercapita_y141||0), 0.001); end
  def test_costpercapita_z141; assert_in_delta(0, (worksheet.costpercapita_z141||0), 0.001); end
  def test_costpercapita_aa141; assert_in_delta(0, (worksheet.costpercapita_aa141||0), 0.001); end
  def test_costpercapita_ab141; assert_in_delta(0, (worksheet.costpercapita_ab141||0), 0.001); end
  def test_costpercapita_ac141; assert_in_delta(0, (worksheet.costpercapita_ac141||0), 0.001); end
  def test_costpercapita_ad141; assert_in_delta(0, (worksheet.costpercapita_ad141||0), 0.001); end
  def test_costpercapita_ae141; assert_in_delta(0, (worksheet.costpercapita_ae141||0), 0.001); end
  def test_costpercapita_af141; assert_in_delta(0, (worksheet.costpercapita_af141||0), 0.001); end
  def test_costpercapita_ag141; assert_in_delta(0, (worksheet.costpercapita_ag141||0), 0.001); end
  def test_costpercapita_ai141; assert_in_epsilon(1952.788099919797, worksheet.costpercapita_ai141, 0.001); end
  def test_costpercapita_aj141; assert_in_epsilon(1863.2362459231829, worksheet.costpercapita_aj141, 0.001); end
  def test_costpercapita_ak141; assert_in_epsilon(1934.09294841366, worksheet.costpercapita_ak141, 0.001); end
  def test_costpercapita_al141; assert_in_epsilon(1845.3764092863607, worksheet.costpercapita_al141, 0.001); end
  def test_costpercapita_am141; assert_in_epsilon(1781.532551852344, worksheet.costpercapita_am141, 0.001); end
  def test_costpercapita_an141; assert_in_epsilon(1713.022757887195, worksheet.costpercapita_an141, 0.001); end
  def test_costpercapita_ao141; assert_in_epsilon(1630.0937597396273, worksheet.costpercapita_ao141, 0.001); end
  def test_costpercapita_ap141; assert_in_epsilon(1581.6169348130745, worksheet.costpercapita_ap141, 0.001); end
  def test_costpercapita_aq141; assert_in_epsilon(1523.0948756972139, worksheet.costpercapita_aq141, 0.001); end
  def test_costpercapita_as141; assert_in_epsilon(1758.3171759480508, worksheet.costpercapita_as141, 0.001); end
  def test_costpercapita_at141; assert_in_epsilon(37613.88216057194, worksheet.costpercapita_at141, 0.001); end
  def test_costpercapita_av141; assert_in_delta(0.1, worksheet.costpercapita_av141, 0.001); end
  def test_costpercapita_aw141; assert_in_epsilon(15, worksheet.costpercapita_aw141, 0.001); end
  def test_costpercapita_ay141; assert_in_epsilon(412.6310495425234, worksheet.costpercapita_ay141, 0.001); end
  def test_costpercapita_az141; assert_in_epsilon(638.07062329015, worksheet.costpercapita_az141, 0.001); end
  def test_costpercapita_ba141; assert_in_epsilon(675.3413449946263, worksheet.costpercapita_ba141, 0.001); end
  def test_costpercapita_bb141; assert_in_epsilon(629.1053530345741, worksheet.costpercapita_bb141, 0.001); end
  def test_costpercapita_bc141; assert_in_epsilon(602.957748299586, worksheet.costpercapita_bc141, 0.001); end
  def test_costpercapita_bd141; assert_in_epsilon(576.1359119666408, worksheet.costpercapita_bd141, 0.001); end
  def test_costpercapita_be141; assert_in_epsilon(543.9058868526206, worksheet.costpercapita_be141, 0.001); end
  def test_costpercapita_bf141; assert_in_epsilon(529.9146386963512, worksheet.costpercapita_bf141, 0.001); end
  def test_costpercapita_bg141; assert_in_epsilon(509.3921069989568, worksheet.costpercapita_bg141, 0.001); end
  def test_costpercapita_bi141; assert_in_epsilon(412.6310495425234, worksheet.costpercapita_bi141, 0.001); end
  def test_costpercapita_bj141; assert_in_epsilon(1037.0951353988776, worksheet.costpercapita_bj141, 0.001); end
  def test_costpercapita_bk141; assert_in_epsilon(1678.4839038227392, worksheet.costpercapita_bk141, 0.001); end
  def test_costpercapita_bl141; assert_in_epsilon(1881.6070747682404, worksheet.costpercapita_bl141, 0.001); end
  def test_costpercapita_bm141; assert_in_epsilon(1851.4271375385376, worksheet.costpercapita_bm141, 0.001); end
  def test_costpercapita_bn141; assert_in_epsilon(1762.3945128412674, worksheet.costpercapita_bn141, 0.001); end
  def test_costpercapita_bo141; assert_in_epsilon(1683.9535515436842, worksheet.costpercapita_bo141, 0.001); end
  def test_costpercapita_bp141; assert_in_epsilon(1615.5721284140948, worksheet.costpercapita_bp141, 0.001); end
  def test_costpercapita_bq141; assert_in_epsilon(1552.5259601650569, worksheet.costpercapita_bq141, 0.001); end
  def test_costpercapita_bs141; assert_in_epsilon(1319.250959598354, worksheet.costpercapita_bs141, 0.001); end
  def test_costpercapita_bt141; assert_in_epsilon(1929.6882030451375, worksheet.costpercapita_bt141, 0.001); end
  def test_costpercapita_bu141; assert_in_epsilon(2585.236859451128, worksheet.costpercapita_bu141, 0.001); end
  def test_costpercapita_bv141; assert_in_epsilon(2769.978417449568, worksheet.costpercapita_bv141, 0.001); end
  def test_costpercapita_bw141; assert_in_epsilon(2715.730774888618, worksheet.costpercapita_bw141, 0.001); end
  def test_costpercapita_bx141; assert_in_epsilon(2598.9901601569127, worksheet.costpercapita_bx141, 0.001); end
  def test_costpercapita_by141; assert_in_epsilon(2486.6490274132725, worksheet.costpercapita_by141, 0.001); end
  def test_costpercapita_bz141; assert_in_epsilon(2391.074488530945, worksheet.costpercapita_bz141, 0.001); end
  def test_costpercapita_ca141; assert_in_epsilon(2300.7254627182697, worksheet.costpercapita_ca141, 0.001); end
  def test_costpercapita_cc141; assert_in_epsilon(2344.1471503613566, worksheet.costpercapita_cc141, 0.001); end
  def test_costpercapita_cd141; assert_in_epsilon(50350.000396460375, worksheet.costpercapita_cd141, 0.001); end
  def test_costpercapita_cf141; assert_in_epsilon(-633.5371403214428, worksheet.costpercapita_cf141, 0.001); end
  def test_costpercapita_cg141; assert_in_epsilon(66.45195712195462, worksheet.costpercapita_cg141, 0.001); end
  def test_costpercapita_ch141; assert_in_epsilon(651.1439110374682, worksheet.costpercapita_ch141, 0.001); end
  def test_costpercapita_ci141; assert_in_epsilon(924.6020081632074, worksheet.costpercapita_ci141, 0.001); end
  def test_costpercapita_cj141; assert_in_epsilon(934.1982230362737, worksheet.costpercapita_cj141, 0.001); end
  def test_costpercapita_ck141; assert_in_epsilon(885.9674022697178, worksheet.costpercapita_ck141, 0.001); end
  def test_costpercapita_cl141; assert_in_epsilon(856.5552676736451, worksheet.costpercapita_cl141, 0.001); end
  def test_costpercapita_cm141; assert_in_epsilon(809.4575537178708, worksheet.costpercapita_cm141, 0.001); end
  def test_costpercapita_cn141; assert_in_epsilon(777.6305870210562, worksheet.costpercapita_cn141, 0.001); end
  def test_costpercapita_cp141; assert_in_epsilon(585.8299744133058, worksheet.costpercapita_cp141, 0.001); end
  def test_costpercapita_cq141; assert_in_epsilon(12736.118235888425, worksheet.costpercapita_cq141, 0.001); end
  def test_costpercapita_cr141; assert_equal("ok", worksheet.costpercapita_cr141); end
  def test_costpercapita_a142; assert_equal("XII.a.HEV", worksheet.costpercapita_a142); end
  def test_costpercapita_b142; assert_equal("Hybrid cars and buses", worksheet.costpercapita_b142); end
  def test_costpercapita_c142; assert_equal("Transport", worksheet.costpercapita_c142); end
  def test_costpercapita_e142; assert_in_epsilon(1.493996908618019, worksheet.costpercapita_e142, 0.001); end
  def test_costpercapita_f142; assert_in_epsilon(20.708371749558648, worksheet.costpercapita_f142, 0.001); end
  def test_costpercapita_g142; assert_in_epsilon(30.35287129845597, worksheet.costpercapita_g142, 0.001); end
  def test_costpercapita_h142; assert_in_epsilon(175.96462035589897, worksheet.costpercapita_h142, 0.001); end
  def test_costpercapita_i142; assert_in_epsilon(247.3047276829371, worksheet.costpercapita_i142, 0.001); end
  def test_costpercapita_j142; assert_in_epsilon(337.5590202913724, worksheet.costpercapita_j142, 0.001); end
  def test_costpercapita_k142; assert_in_epsilon(414.86083389181135, worksheet.costpercapita_k142, 0.001); end
  def test_costpercapita_l142; assert_in_epsilon(469.4933067952619, worksheet.costpercapita_l142, 0.001); end
  def test_costpercapita_m142; assert_in_epsilon(539.2490098499441, worksheet.costpercapita_m142, 0.001); end
  def test_costpercapita_o142; assert_in_delta(0.4130168017123628, worksheet.costpercapita_o142, 0.001); end
  def test_costpercapita_p142; assert_in_epsilon(7.781629136420298, worksheet.costpercapita_p142, 0.001); end
  def test_costpercapita_q142; assert_in_epsilon(15.564627750841824, worksheet.costpercapita_q142, 0.001); end
  def test_costpercapita_r142; assert_in_epsilon(69.43253582373355, worksheet.costpercapita_r142, 0.001); end
  def test_costpercapita_s142; assert_in_epsilon(124.48019141724666, worksheet.costpercapita_s142, 0.001); end
  def test_costpercapita_t142; assert_in_epsilon(186.84610177132672, worksheet.costpercapita_t142, 0.001); end
  def test_costpercapita_u142; assert_in_epsilon(249.10692899441528, worksheet.costpercapita_u142, 0.001); end
  def test_costpercapita_v142; assert_in_epsilon(303.72984944041247, worksheet.costpercapita_v142, 0.001); end
  def test_costpercapita_w142; assert_in_epsilon(359.18575382212845, worksheet.costpercapita_w142, 0.001); end
  def test_costpercapita_y142; assert_in_delta(0, (worksheet.costpercapita_y142||0), 0.001); end
  def test_costpercapita_z142; assert_in_delta(0, (worksheet.costpercapita_z142||0), 0.001); end
  def test_costpercapita_aa142; assert_in_delta(0, (worksheet.costpercapita_aa142||0), 0.001); end
  def test_costpercapita_ab142; assert_in_delta(0, (worksheet.costpercapita_ab142||0), 0.001); end
  def test_costpercapita_ac142; assert_in_delta(0, (worksheet.costpercapita_ac142||0), 0.001); end
  def test_costpercapita_ad142; assert_in_delta(0, (worksheet.costpercapita_ad142||0), 0.001); end
  def test_costpercapita_ae142; assert_in_delta(0, (worksheet.costpercapita_ae142||0), 0.001); end
  def test_costpercapita_af142; assert_in_delta(0, (worksheet.costpercapita_af142||0), 0.001); end
  def test_costpercapita_ag142; assert_in_delta(0, (worksheet.costpercapita_ag142||0), 0.001); end
  def test_costpercapita_ai142; assert_in_epsilon(1.9070137103303817, worksheet.costpercapita_ai142, 0.001); end
  def test_costpercapita_aj142; assert_in_epsilon(28.490000885978947, worksheet.costpercapita_aj142, 0.001); end
  def test_costpercapita_ak142; assert_in_epsilon(45.917499049297795, worksheet.costpercapita_ak142, 0.001); end
  def test_costpercapita_al142; assert_in_epsilon(245.39715617963253, worksheet.costpercapita_al142, 0.001); end
  def test_costpercapita_am142; assert_in_epsilon(371.7849191001838, worksheet.costpercapita_am142, 0.001); end
  def test_costpercapita_an142; assert_in_epsilon(524.4051220626991, worksheet.costpercapita_an142, 0.001); end
  def test_costpercapita_ao142; assert_in_epsilon(663.9677628862268, worksheet.costpercapita_ao142, 0.001); end
  def test_costpercapita_ap142; assert_in_epsilon(773.2231562356743, worksheet.costpercapita_ap142, 0.001); end
  def test_costpercapita_aq142; assert_in_epsilon(898.4347636720724, worksheet.costpercapita_aq142, 0.001); end
  def test_costpercapita_as142; assert_in_epsilon(394.8363770868995, worksheet.costpercapita_as142, 0.001); end
  def test_costpercapita_at142; assert_in_epsilon(6622.567504184437, worksheet.costpercapita_at142, 0.001); end
  def test_costpercapita_av142; assert_in_delta(0.1, worksheet.costpercapita_av142, 0.001); end
  def test_costpercapita_aw142; assert_in_epsilon(15, worksheet.costpercapita_aw142, 0.001); end
  def test_costpercapita_ay142; assert_in_delta(0.5892642487022075, worksheet.costpercapita_ay142, 0.001); end
  def test_costpercapita_az142; assert_in_epsilon(13.613039235511174, worksheet.costpercapita_az142, 0.001); end
  def test_costpercapita_ba142; assert_in_epsilon(19.95303314492161, worksheet.costpercapita_ba142, 0.001); end
  def test_costpercapita_bb142; assert_in_epsilon(115.67366618371304, worksheet.costpercapita_bb142, 0.001); end
  def test_costpercapita_bc142; assert_in_epsilon(162.57043295289407, worksheet.costpercapita_bc142, 0.001); end
  def test_costpercapita_bd142; assert_in_epsilon(221.90079660053917, worksheet.costpercapita_bd142, 0.001); end
  def test_costpercapita_be142; assert_in_epsilon(272.7166035720059, worksheet.costpercapita_be142, 0.001); end
  def test_costpercapita_bf142; assert_in_epsilon(308.63029133857424, worksheet.costpercapita_bf142, 0.001); end
  def test_costpercapita_bg142; assert_in_epsilon(354.4855200387395, worksheet.costpercapita_bg142, 0.001); end
  def test_costpercapita_bi142; assert_in_delta(0.5892642487022075, worksheet.costpercapita_bi142, 0.001); end
  def test_costpercapita_bj142; assert_in_epsilon(14.18287245480526, worksheet.costpercapita_bj142, 0.001); end
  def test_costpercapita_bk142; assert_in_epsilon(33.671584587527775, worksheet.costpercapita_bk142, 0.001); end
  def test_costpercapita_bl142; assert_in_epsilon(147.76854996241323, worksheet.costpercapita_bl142, 0.001); end
  def test_costpercapita_bm142; assert_in_epsilon(293.89085366079513, worksheet.costpercapita_bm142, 0.001); end
  def test_costpercapita_bn142; assert_in_epsilon(490.50488134041086, worksheet.costpercapita_bn142, 0.001); end
  def test_costpercapita_bo142; assert_in_epsilon(645.2406600470244, worksheet.costpercapita_bo142, 0.001); end
  def test_costpercapita_bp142; assert_in_epsilon(788.7431588353592, worksheet.costpercapita_bp142, 0.001); end
  def test_costpercapita_bq142; assert_in_epsilon(919.6448649413103, worksheet.costpercapita_bq142, 0.001); end
  def test_costpercapita_bs142; assert_in_epsilon(1.0022810504145703, worksheet.costpercapita_bs142, 0.001); end
  def test_costpercapita_bt142; assert_in_epsilon(21.96450159122556, worksheet.costpercapita_bt142, 0.001); end
  def test_costpercapita_bu142; assert_in_epsilon(49.2362123383696, worksheet.costpercapita_bu142, 0.001); end
  def test_costpercapita_bv142; assert_in_epsilon(217.2010857861468, worksheet.costpercapita_bv142, 0.001); end
  def test_costpercapita_bw142; assert_in_epsilon(418.3710450780418, worksheet.costpercapita_bw142, 0.001); end
  def test_costpercapita_bx142; assert_in_epsilon(677.3509831117376, worksheet.costpercapita_bx142, 0.001); end
  def test_costpercapita_by142; assert_in_epsilon(894.3475890414397, worksheet.costpercapita_by142, 0.001); end
  def test_costpercapita_bz142; assert_in_epsilon(1092.4730082757717, worksheet.costpercapita_bz142, 0.001); end
  def test_costpercapita_ca142; assert_in_epsilon(1278.830618763439, worksheet.costpercapita_ca142, 0.001); end
  def test_costpercapita_cc142; assert_in_epsilon(516.7530361151762, worksheet.costpercapita_cc142, 0.001); end
  def test_costpercapita_cd142; assert_in_epsilon(8367.654577515412, worksheet.costpercapita_cd142, 0.001); end
  def test_costpercapita_cf142; assert_in_delta(-0.9047326599158113, worksheet.costpercapita_cf142, 0.001); end
  def test_costpercapita_cg142; assert_in_epsilon(-6.525499294753386, worksheet.costpercapita_cg142, 0.001); end
  def test_costpercapita_ch142; assert_in_epsilon(3.318713289071804, worksheet.costpercapita_ch142, 0.001); end
  def test_costpercapita_ci142; assert_in_epsilon(-28.19607039348574, worksheet.costpercapita_ci142, 0.001); end
  def test_costpercapita_cj142; assert_in_epsilon(46.586125977858, worksheet.costpercapita_cj142, 0.001); end
  def test_costpercapita_ck142; assert_in_epsilon(152.94586104903846, worksheet.costpercapita_ck142, 0.001); end
  def test_costpercapita_cl142; assert_in_epsilon(230.37982615521312, worksheet.costpercapita_cl142, 0.001); end
  def test_costpercapita_cm142; assert_in_epsilon(319.2498520400972, worksheet.costpercapita_cm142, 0.001); end
  def test_costpercapita_cn142; assert_in_epsilon(380.3958550913663, worksheet.costpercapita_cn142, 0.001); end
  def test_costpercapita_cp142; assert_in_epsilon(121.91665902827665, worksheet.costpercapita_cp142, 0.001); end
  def test_costpercapita_cq142; assert_in_epsilon(1745.0870733309769, worksheet.costpercapita_cq142, 0.001); end
  def test_costpercapita_cr142; assert_equal("ok", worksheet.costpercapita_cr142); end
  def test_costpercapita_a143; assert_equal("XII.a.EV", worksheet.costpercapita_a143); end
  def test_costpercapita_b143; assert_equal("Electric cars and buses", worksheet.costpercapita_b143); end
  def test_costpercapita_c143; assert_equal("Transport", worksheet.costpercapita_c143); end
  def test_costpercapita_e143; assert_in_delta(0, (worksheet.costpercapita_e143||0), 0.001); end
  def test_costpercapita_f143; assert_in_epsilon(3.5778063548748227, worksheet.costpercapita_f143, 0.001); end
  def test_costpercapita_g143; assert_in_epsilon(5.278579343295515, worksheet.costpercapita_g143, 0.001); end
  def test_costpercapita_h143; assert_in_epsilon(34.1792250614382, worksheet.costpercapita_h143, 0.001); end
  def test_costpercapita_i143; assert_in_epsilon(48.22555970502398, worksheet.costpercapita_i143, 0.001); end
  def test_costpercapita_j143; assert_in_epsilon(66.0592455826994, worksheet.costpercapita_j143, 0.001); end
  def test_costpercapita_k143; assert_in_epsilon(81.29284827993803, worksheet.costpercapita_k143, 0.001); end
  def test_costpercapita_l143; assert_in_epsilon(79.24063448727328, worksheet.costpercapita_l143, 0.001); end
  def test_costpercapita_m143; assert_in_epsilon(87.32785836113763, worksheet.costpercapita_m143, 0.001); end
  def test_costpercapita_o143; assert_in_delta(0, (worksheet.costpercapita_o143||0), 0.001); end
  def test_costpercapita_p143; assert_in_delta(0.697506235010551, worksheet.costpercapita_p143, 0.001); end
  def test_costpercapita_q143; assert_in_epsilon(1.430006760444356, worksheet.costpercapita_q143, 0.001); end
  def test_costpercapita_r143; assert_in_epsilon(6.897396129180132, worksheet.costpercapita_r143, 0.001); end
  def test_costpercapita_s143; assert_in_epsilon(12.475771810202161, worksheet.costpercapita_s143, 0.001); end
  def test_costpercapita_t143; assert_in_epsilon(18.808367108507596, worksheet.costpercapita_t143, 0.001); end
  def test_costpercapita_u143; assert_in_epsilon(25.1214397192571, worksheet.costpercapita_u143, 0.001); end
  def test_costpercapita_v143; assert_in_epsilon(28.386799017516644, worksheet.costpercapita_v143, 0.001); end
  def test_costpercapita_w143; assert_in_epsilon(31.699934359889394, worksheet.costpercapita_w143, 0.001); end
  def test_costpercapita_y143; assert_in_delta(0, (worksheet.costpercapita_y143||0), 0.001); end
  def test_costpercapita_z143; assert_in_delta(0, (worksheet.costpercapita_z143||0), 0.001); end
  def test_costpercapita_aa143; assert_in_delta(0, (worksheet.costpercapita_aa143||0), 0.001); end
  def test_costpercapita_ab143; assert_in_delta(0, (worksheet.costpercapita_ab143||0), 0.001); end
  def test_costpercapita_ac143; assert_in_delta(0, (worksheet.costpercapita_ac143||0), 0.001); end
  def test_costpercapita_ad143; assert_in_delta(0, (worksheet.costpercapita_ad143||0), 0.001); end
  def test_costpercapita_ae143; assert_in_delta(0, (worksheet.costpercapita_ae143||0), 0.001); end
  def test_costpercapita_af143; assert_in_delta(0, (worksheet.costpercapita_af143||0), 0.001); end
  def test_costpercapita_ag143; assert_in_delta(0, (worksheet.costpercapita_ag143||0), 0.001); end
  def test_costpercapita_ai143; assert_in_delta(0, (worksheet.costpercapita_ai143||0), 0.001); end
  def test_costpercapita_aj143; assert_in_epsilon(4.275312589885374, worksheet.costpercapita_aj143, 0.001); end
  def test_costpercapita_ak143; assert_in_epsilon(6.708586103739871, worksheet.costpercapita_ak143, 0.001); end
  def test_costpercapita_al143; assert_in_epsilon(41.07662119061834, worksheet.costpercapita_al143, 0.001); end
  def test_costpercapita_am143; assert_in_epsilon(60.70133151522615, worksheet.costpercapita_am143, 0.001); end
  def test_costpercapita_an143; assert_in_epsilon(84.867612691207, worksheet.costpercapita_an143, 0.001); end
  def test_costpercapita_ao143; assert_in_epsilon(106.41428799919512, worksheet.costpercapita_ao143, 0.001); end
  def test_costpercapita_ap143; assert_in_epsilon(107.62743350478992, worksheet.costpercapita_ap143, 0.001); end
  def test_costpercapita_aq143; assert_in_epsilon(119.02779272102701, worksheet.costpercapita_aq143, 0.001); end
  def test_costpercapita_as143; assert_in_epsilon(58.96655314618764, worksheet.costpercapita_as143, 0.001); end
  def test_costpercapita_at143; assert_in_epsilon(1009.1831607093295, worksheet.costpercapita_at143, 0.001); end
  def test_costpercapita_av143; assert_in_delta(0.1, worksheet.costpercapita_av143, 0.001); end
  def test_costpercapita_aw143; assert_in_epsilon(15, worksheet.costpercapita_aw143, 0.001); end
  def test_costpercapita_ay143; assert_in_delta(0, (worksheet.costpercapita_ay143||0), 0.001); end
  def test_costpercapita_az143; assert_in_epsilon(2.351938572235174, worksheet.costpercapita_az143, 0.001); end
  def test_costpercapita_ba143; assert_in_epsilon(3.469973814313631, worksheet.costpercapita_ba143, 0.001); end
  def test_costpercapita_bb143; assert_in_epsilon(22.46835904955403, worksheet.costpercapita_bb143, 0.001); end
  def test_costpercapita_bc143; assert_in_epsilon(31.70198238463485, worksheet.costpercapita_bc143, 0.001); end
  def test_costpercapita_bd143; assert_in_epsilon(43.42529257543974, worksheet.costpercapita_bd143, 0.001); end
  def test_costpercapita_be143; assert_in_epsilon(53.439388986477844, worksheet.costpercapita_be143, 0.001); end
  def test_costpercapita_bf143; assert_in_epsilon(52.09032749496788, worksheet.costpercapita_bf143, 0.001); end
  def test_costpercapita_bg143; assert_in_epsilon(57.406616831121234, worksheet.costpercapita_bg143, 0.001); end
  def test_costpercapita_bi143; assert_in_delta(0, (worksheet.costpercapita_bi143||0), 0.001); end
  def test_costpercapita_bj143; assert_in_epsilon(2.351938572235174, worksheet.costpercapita_bj143, 0.001); end
  def test_costpercapita_bk143; assert_in_epsilon(5.744914267728359, worksheet.costpercapita_bk143, 0.001); end
  def test_costpercapita_bl143; assert_in_epsilon(28.03539080940245, worksheet.costpercapita_bl143, 0.001); end
  def test_costpercapita_bm143; assert_in_epsilon(56.827168921097424, worksheet.costpercapita_bm143, 0.001); end
  def test_costpercapita_bn143; assert_in_epsilon(95.72023432047398, worksheet.costpercapita_bn143, 0.001); end
  def test_costpercapita_bo143; assert_in_epsilon(126.23363414858058, worksheet.costpercapita_bo143, 0.001); end
  def test_costpercapita_bp143; assert_in_epsilon(146.11512892033062, worksheet.costpercapita_bp143, 0.001); end
  def test_costpercapita_bq143; assert_in_epsilon(159.92085424387415, worksheet.costpercapita_bq143, 0.001); end
  def test_costpercapita_bs143; assert_in_delta(0, (worksheet.costpercapita_bs143||0), 0.001); end
  def test_costpercapita_bt143; assert_in_epsilon(3.049444807245725, worksheet.costpercapita_bt143, 0.001); end
  def test_costpercapita_bu143; assert_in_epsilon(7.174921028172714, worksheet.costpercapita_bu143, 0.001); end
  def test_costpercapita_bv143; assert_in_epsilon(34.93278693858258, worksheet.costpercapita_bv143, 0.001); end
  def test_costpercapita_bw143; assert_in_epsilon(69.30294073129959, worksheet.costpercapita_bw143, 0.001); end
  def test_costpercapita_bx143; assert_in_epsilon(114.52860142898157, worksheet.costpercapita_bx143, 0.001); end
  def test_costpercapita_by143; assert_in_epsilon(151.3550738678377, worksheet.costpercapita_by143, 0.001); end
  def test_costpercapita_bz143; assert_in_epsilon(174.50192793784726, worksheet.costpercapita_bz143, 0.001); end
  def test_costpercapita_ca143; assert_in_epsilon(191.62078860376351, worksheet.costpercapita_ca143, 0.001); end
  def test_costpercapita_cc143; assert_in_epsilon(82.94072059374786, worksheet.costpercapita_cc143, 0.001); end
  def test_costpercapita_cd143; assert_in_epsilon(1350.7517349378224, worksheet.costpercapita_cd143, 0.001); end
  def test_costpercapita_cf143; assert_in_delta(0, (worksheet.costpercapita_cf143||0), 0.001); end
  def test_costpercapita_cg143; assert_in_epsilon(-1.225867782639649, worksheet.costpercapita_cg143, 0.001); end
  def test_costpercapita_ch143; assert_in_delta(0.46633492443284336, worksheet.costpercapita_ch143, 0.001); end
  def test_costpercapita_ci143; assert_in_epsilon(-6.143834252035753, worksheet.costpercapita_ci143, 0.001); end
  def test_costpercapita_cj143; assert_in_epsilon(8.601609216073442, worksheet.costpercapita_cj143, 0.001); end
  def test_costpercapita_ck143; assert_in_epsilon(29.660988737774566, worksheet.costpercapita_ck143, 0.001); end
  def test_costpercapita_cl143; assert_in_epsilon(44.94078586864255, worksheet.costpercapita_cl143, 0.001); end
  def test_costpercapita_cm143; assert_in_epsilon(66.87449443305734, worksheet.costpercapita_cm143, 0.001); end
  def test_costpercapita_cn143; assert_in_epsilon(72.5929958827365, worksheet.costpercapita_cn143, 0.001); end
  def test_costpercapita_cp143; assert_in_epsilon(23.974167447560205, worksheet.costpercapita_cp143, 0.001); end
  def test_costpercapita_cq143; assert_in_epsilon(341.56857422849293, worksheet.costpercapita_cq143, 0.001); end
  def test_costpercapita_cr143; assert_equal("ok", worksheet.costpercapita_cr143); end
  def test_costpercapita_a144; assert_equal("XII.a.FCV", worksheet.costpercapita_a144); end
  def test_costpercapita_b144; assert_equal("Fuel cell cars and buses", worksheet.costpercapita_b144); end
  def test_costpercapita_c144; assert_equal("Transport", worksheet.costpercapita_c144); end
  def test_costpercapita_e144; assert_in_delta(0, (worksheet.costpercapita_e144||0), 0.001); end
  def test_costpercapita_f144; assert_in_delta(0, (worksheet.costpercapita_f144||0), 0.001); end
  def test_costpercapita_g144; assert_in_delta(0, (worksheet.costpercapita_g144||0), 0.001); end
  def test_costpercapita_h144; assert_in_delta(0, (worksheet.costpercapita_h144||0), 0.001); end
  def test_costpercapita_i144; assert_in_delta(0, (worksheet.costpercapita_i144||0), 0.001); end
  def test_costpercapita_j144; assert_in_delta(0, (worksheet.costpercapita_j144||0), 0.001); end
  def test_costpercapita_k144; assert_in_delta(0, (worksheet.costpercapita_k144||0), 0.001); end
  def test_costpercapita_l144; assert_in_delta(0, (worksheet.costpercapita_l144||0), 0.001); end
  def test_costpercapita_m144; assert_in_delta(0, (worksheet.costpercapita_m144||0), 0.001); end
  def test_costpercapita_o144; assert_in_delta(0, (worksheet.costpercapita_o144||0), 0.001); end
  def test_costpercapita_p144; assert_in_delta(0, (worksheet.costpercapita_p144||0), 0.001); end
  def test_costpercapita_q144; assert_in_delta(0, (worksheet.costpercapita_q144||0), 0.001); end
  def test_costpercapita_r144; assert_in_delta(0, (worksheet.costpercapita_r144||0), 0.001); end
  def test_costpercapita_s144; assert_in_delta(0, (worksheet.costpercapita_s144||0), 0.001); end
  def test_costpercapita_t144; assert_in_delta(0, (worksheet.costpercapita_t144||0), 0.001); end
  def test_costpercapita_u144; assert_in_delta(0, (worksheet.costpercapita_u144||0), 0.001); end
  def test_costpercapita_v144; assert_in_delta(0, (worksheet.costpercapita_v144||0), 0.001); end
  def test_costpercapita_w144; assert_in_delta(0, (worksheet.costpercapita_w144||0), 0.001); end
  def test_costpercapita_y144; assert_in_delta(0, (worksheet.costpercapita_y144||0), 0.001); end
  def test_costpercapita_z144; assert_in_delta(0, (worksheet.costpercapita_z144||0), 0.001); end
  def test_costpercapita_aa144; assert_in_delta(0, (worksheet.costpercapita_aa144||0), 0.001); end
  def test_costpercapita_ab144; assert_in_delta(0, (worksheet.costpercapita_ab144||0), 0.001); end
  def test_costpercapita_ac144; assert_in_delta(0, (worksheet.costpercapita_ac144||0), 0.001); end
  def test_costpercapita_ad144; assert_in_delta(0, (worksheet.costpercapita_ad144||0), 0.001); end
  def test_costpercapita_ae144; assert_in_delta(0, (worksheet.costpercapita_ae144||0), 0.001); end
  def test_costpercapita_af144; assert_in_delta(0, (worksheet.costpercapita_af144||0), 0.001); end
  def test_costpercapita_ag144; assert_in_delta(0, (worksheet.costpercapita_ag144||0), 0.001); end
  def test_costpercapita_ai144; assert_in_delta(0, (worksheet.costpercapita_ai144||0), 0.001); end
  def test_costpercapita_aj144; assert_in_delta(0, (worksheet.costpercapita_aj144||0), 0.001); end
  def test_costpercapita_ak144; assert_in_delta(0, (worksheet.costpercapita_ak144||0), 0.001); end
  def test_costpercapita_al144; assert_in_delta(0, (worksheet.costpercapita_al144||0), 0.001); end
  def test_costpercapita_am144; assert_in_delta(0, (worksheet.costpercapita_am144||0), 0.001); end
  def test_costpercapita_an144; assert_in_delta(0, (worksheet.costpercapita_an144||0), 0.001); end
  def test_costpercapita_ao144; assert_in_delta(0, (worksheet.costpercapita_ao144||0), 0.001); end
  def test_costpercapita_ap144; assert_in_delta(0, (worksheet.costpercapita_ap144||0), 0.001); end
  def test_costpercapita_aq144; assert_in_delta(0, (worksheet.costpercapita_aq144||0), 0.001); end
  def test_costpercapita_as144; assert_in_delta(0, (worksheet.costpercapita_as144||0), 0.001); end
  def test_costpercapita_at144; assert_in_delta(0, (worksheet.costpercapita_at144||0), 0.001); end
  def test_costpercapita_av144; assert_in_delta(0.1, worksheet.costpercapita_av144, 0.001); end
  def test_costpercapita_aw144; assert_in_epsilon(15, worksheet.costpercapita_aw144, 0.001); end
  def test_costpercapita_ay144; assert_in_delta(0, (worksheet.costpercapita_ay144||0), 0.001); end
  def test_costpercapita_az144; assert_in_delta(0, (worksheet.costpercapita_az144||0), 0.001); end
  def test_costpercapita_ba144; assert_in_delta(0, (worksheet.costpercapita_ba144||0), 0.001); end
  def test_costpercapita_bb144; assert_in_delta(0, (worksheet.costpercapita_bb144||0), 0.001); end
  def test_costpercapita_bc144; assert_in_delta(0, (worksheet.costpercapita_bc144||0), 0.001); end
  def test_costpercapita_bd144; assert_in_delta(0, (worksheet.costpercapita_bd144||0), 0.001); end
  def test_costpercapita_be144; assert_in_delta(0, (worksheet.costpercapita_be144||0), 0.001); end
  def test_costpercapita_bf144; assert_in_delta(0, (worksheet.costpercapita_bf144||0), 0.001); end
  def test_costpercapita_bg144; assert_in_delta(0, (worksheet.costpercapita_bg144||0), 0.001); end
  def test_costpercapita_bi144; assert_in_delta(0, (worksheet.costpercapita_bi144||0), 0.001); end
  def test_costpercapita_bj144; assert_in_delta(0, (worksheet.costpercapita_bj144||0), 0.001); end
  def test_costpercapita_bk144; assert_in_delta(0, (worksheet.costpercapita_bk144||0), 0.001); end
  def test_costpercapita_bl144; assert_in_delta(0, (worksheet.costpercapita_bl144||0), 0.001); end
  def test_costpercapita_bm144; assert_in_delta(0, (worksheet.costpercapita_bm144||0), 0.001); end
  def test_costpercapita_bn144; assert_in_delta(0, (worksheet.costpercapita_bn144||0), 0.001); end
  def test_costpercapita_bo144; assert_in_delta(0, (worksheet.costpercapita_bo144||0), 0.001); end
  def test_costpercapita_bp144; assert_in_delta(0, (worksheet.costpercapita_bp144||0), 0.001); end
  def test_costpercapita_bq144; assert_in_delta(0, (worksheet.costpercapita_bq144||0), 0.001); end
  def test_costpercapita_bs144; assert_in_delta(0, (worksheet.costpercapita_bs144||0), 0.001); end
  def test_costpercapita_bt144; assert_in_delta(0, (worksheet.costpercapita_bt144||0), 0.001); end
  def test_costpercapita_bu144; assert_in_delta(0, (worksheet.costpercapita_bu144||0), 0.001); end
  def test_costpercapita_bv144; assert_in_delta(0, (worksheet.costpercapita_bv144||0), 0.001); end
  def test_costpercapita_bw144; assert_in_delta(0, (worksheet.costpercapita_bw144||0), 0.001); end
  def test_costpercapita_bx144; assert_in_delta(0, (worksheet.costpercapita_bx144||0), 0.001); end
  def test_costpercapita_by144; assert_in_delta(0, (worksheet.costpercapita_by144||0), 0.001); end
  def test_costpercapita_bz144; assert_in_delta(0, (worksheet.costpercapita_bz144||0), 0.001); end
  def test_costpercapita_ca144; assert_in_delta(0, (worksheet.costpercapita_ca144||0), 0.001); end
  def test_costpercapita_cc144; assert_in_delta(0, (worksheet.costpercapita_cc144||0), 0.001); end
  def test_costpercapita_cd144; assert_in_delta(0, (worksheet.costpercapita_cd144||0), 0.001); end
  def test_costpercapita_cf144; assert_in_delta(0, (worksheet.costpercapita_cf144||0), 0.001); end
  def test_costpercapita_cg144; assert_in_delta(0, (worksheet.costpercapita_cg144||0), 0.001); end
  def test_costpercapita_ch144; assert_in_delta(0, (worksheet.costpercapita_ch144||0), 0.001); end
  def test_costpercapita_ci144; assert_in_delta(0, (worksheet.costpercapita_ci144||0), 0.001); end
  def test_costpercapita_cj144; assert_in_delta(0, (worksheet.costpercapita_cj144||0), 0.001); end
  def test_costpercapita_ck144; assert_in_delta(0, (worksheet.costpercapita_ck144||0), 0.001); end
  def test_costpercapita_cl144; assert_in_delta(0, (worksheet.costpercapita_cl144||0), 0.001); end
  def test_costpercapita_cm144; assert_in_delta(0, (worksheet.costpercapita_cm144||0), 0.001); end
  def test_costpercapita_cn144; assert_in_delta(0, (worksheet.costpercapita_cn144||0), 0.001); end
  def test_costpercapita_cp144; assert_in_delta(0, (worksheet.costpercapita_cp144||0), 0.001); end
  def test_costpercapita_cq144; assert_in_delta(0, (worksheet.costpercapita_cq144||0), 0.001); end
  def test_costpercapita_cr144; assert_equal("ok", worksheet.costpercapita_cr144); end
  def test_costpercapita_a145; assert_equal("XII.a.Bike", worksheet.costpercapita_a145); end
  def test_costpercapita_b145; assert_equal("Bikes", worksheet.costpercapita_b145); end
  def test_costpercapita_c145; assert_equal("Transport", worksheet.costpercapita_c145); end
  def test_costpercapita_e145; assert_in_epsilon(53.20482346514259, worksheet.costpercapita_e145, 0.001); end
  def test_costpercapita_f145; assert_in_epsilon(54.12243546772614, worksheet.costpercapita_f145, 0.001); end
  def test_costpercapita_g145; assert_in_epsilon(59.89559634040153, worksheet.costpercapita_g145, 0.001); end
  def test_costpercapita_h145; assert_in_epsilon(65.99599676942734, worksheet.costpercapita_h145, 0.001); end
  def test_costpercapita_i145; assert_in_epsilon(72.34295196575151, worksheet.costpercapita_i145, 0.001); end
  def test_costpercapita_j145; assert_in_epsilon(79.41247039825308, worksheet.costpercapita_j145, 0.001); end
  def test_costpercapita_k145; assert_in_epsilon(86.67016146832964, worksheet.costpercapita_k145, 0.001); end
  def test_costpercapita_l145; assert_in_epsilon(94.73009932963778, worksheet.costpercapita_l145, 0.001); end
  def test_costpercapita_m145; assert_in_epsilon(103.72957866226623, worksheet.costpercapita_m145, 0.001); end
  def test_costpercapita_o145; assert_in_epsilon(25.33060278324329, worksheet.costpercapita_o145, 0.001); end
  def test_costpercapita_p145; assert_in_epsilon(27.061217733863067, worksheet.costpercapita_p145, 0.001); end
  def test_costpercapita_q145; assert_in_epsilon(29.947798170200763, worksheet.costpercapita_q145, 0.001); end
  def test_costpercapita_r145; assert_in_epsilon(32.99799838471367, worksheet.costpercapita_r145, 0.001); end
  def test_costpercapita_s145; assert_in_epsilon(36.171475982875755, worksheet.costpercapita_s145, 0.001); end
  def test_costpercapita_t145; assert_in_epsilon(39.70623519912653, worksheet.costpercapita_t145, 0.001); end
  def test_costpercapita_u145; assert_in_epsilon(43.33508073416481, worksheet.costpercapita_u145, 0.001); end
  def test_costpercapita_v145; assert_in_epsilon(47.36504966481889, worksheet.costpercapita_v145, 0.001); end
  def test_costpercapita_w145; assert_in_epsilon(51.86478933113311, worksheet.costpercapita_w145, 0.001); end
  def test_costpercapita_y145; assert_in_delta(0, (worksheet.costpercapita_y145||0), 0.001); end
  def test_costpercapita_z145; assert_in_delta(0, (worksheet.costpercapita_z145||0), 0.001); end
  def test_costpercapita_aa145; assert_in_delta(0, (worksheet.costpercapita_aa145||0), 0.001); end
  def test_costpercapita_ab145; assert_in_delta(0, (worksheet.costpercapita_ab145||0), 0.001); end
  def test_costpercapita_ac145; assert_in_delta(0, (worksheet.costpercapita_ac145||0), 0.001); end
  def test_costpercapita_ad145; assert_in_delta(0, (worksheet.costpercapita_ad145||0), 0.001); end
  def test_costpercapita_ae145; assert_in_delta(0, (worksheet.costpercapita_ae145||0), 0.001); end
  def test_costpercapita_af145; assert_in_delta(0, (worksheet.costpercapita_af145||0), 0.001); end
  def test_costpercapita_ag145; assert_in_delta(0, (worksheet.costpercapita_ag145||0), 0.001); end
  def test_costpercapita_ai145; assert_in_epsilon(78.53542624838589, worksheet.costpercapita_ai145, 0.001); end
  def test_costpercapita_aj145; assert_in_epsilon(81.18365320158921, worksheet.costpercapita_aj145, 0.001); end
  def test_costpercapita_ak145; assert_in_epsilon(89.84339451060228, worksheet.costpercapita_ak145, 0.001); end
  def test_costpercapita_al145; assert_in_epsilon(98.99399515414099, worksheet.costpercapita_al145, 0.001); end
  def test_costpercapita_am145; assert_in_epsilon(108.51442794862729, worksheet.costpercapita_am145, 0.001); end
  def test_costpercapita_an145; assert_in_epsilon(119.11870559737963, worksheet.costpercapita_an145, 0.001); end
  def test_costpercapita_ao145; assert_in_epsilon(130.00524220249446, worksheet.costpercapita_ao145, 0.001); end
  def test_costpercapita_ap145; assert_in_epsilon(142.09514899445668, worksheet.costpercapita_ap145, 0.001); end
  def test_costpercapita_aq145; assert_in_epsilon(155.59436799339935, worksheet.costpercapita_aq145, 0.001); end
  def test_costpercapita_as145; assert_in_epsilon(111.54270687234174, worksheet.costpercapita_as145, 0.001); end
  def test_costpercapita_at145; assert_in_epsilon(2215.0948043522963, worksheet.costpercapita_at145, 0.001); end
  def test_costpercapita_av145; assert_in_delta(0.1, worksheet.costpercapita_av145, 0.001); end
  def test_costpercapita_aw145; assert_in_epsilon(5, worksheet.costpercapita_aw145, 0.001); end
  def test_costpercapita_ay145; assert_in_epsilon(42.10589518870129, worksheet.costpercapita_ay145, 0.001); end
  def test_costpercapita_az145; assert_in_epsilon(71.38681065431162, worksheet.costpercapita_az145, 0.001); end
  def test_costpercapita_ba145; assert_in_epsilon(79.00153712648442, worksheet.costpercapita_ba145, 0.001); end
  def test_costpercapita_bb145; assert_in_epsilon(87.04788845156537, worksheet.costpercapita_bb145, 0.001); end
  def test_costpercapita_bc145; assert_in_epsilon(95.41944240910256, worksheet.costpercapita_bc145, 0.001); end
  def test_costpercapita_bd145; assert_in_epsilon(104.7440481737322, worksheet.costpercapita_bd145, 0.001); end
  def test_costpercapita_be145; assert_in_epsilon(114.31685127709578, worksheet.costpercapita_be145, 0.001); end
  def test_costpercapita_bf145; assert_in_epsilon(124.94780779297218, worksheet.costpercapita_bf145, 0.001); end
  def test_costpercapita_bg145; assert_in_epsilon(136.81800767503094, worksheet.costpercapita_bg145, 0.001); end
  def test_costpercapita_bi145; assert_in_epsilon(42.10589518870129, worksheet.costpercapita_bi145, 0.001); end
  def test_costpercapita_bj145; assert_in_epsilon(71.38681065431162, worksheet.costpercapita_bj145, 0.001); end
  def test_costpercapita_bk145; assert_in_epsilon(79.00153712648442, worksheet.costpercapita_bk145, 0.001); end
  def test_costpercapita_bl145; assert_in_epsilon(87.04788845156537, worksheet.costpercapita_bl145, 0.001); end
  def test_costpercapita_bm145; assert_in_epsilon(95.41944240910256, worksheet.costpercapita_bm145, 0.001); end
  def test_costpercapita_bn145; assert_in_epsilon(104.7440481737322, worksheet.costpercapita_bn145, 0.001); end
  def test_costpercapita_bo145; assert_in_epsilon(114.31685127709578, worksheet.costpercapita_bo145, 0.001); end
  def test_costpercapita_bp145; assert_in_epsilon(124.94780779297218, worksheet.costpercapita_bp145, 0.001); end
  def test_costpercapita_bq145; assert_in_epsilon(136.81800767503094, worksheet.costpercapita_bq145, 0.001); end
  def test_costpercapita_bs145; assert_in_epsilon(67.43649797194458, worksheet.costpercapita_bs145, 0.001); end
  def test_costpercapita_bt145; assert_in_epsilon(98.44802838817468, worksheet.costpercapita_bt145, 0.001); end
  def test_costpercapita_bu145; assert_in_epsilon(108.94933529668518, worksheet.costpercapita_bu145, 0.001); end
  def test_costpercapita_bv145; assert_in_epsilon(120.04588683627905, worksheet.costpercapita_bv145, 0.001); end
  def test_costpercapita_bw145; assert_in_epsilon(131.5909183919783, worksheet.costpercapita_bw145, 0.001); end
  def test_costpercapita_bx145; assert_in_epsilon(144.45028337285873, worksheet.costpercapita_bx145, 0.001); end
  def test_costpercapita_by145; assert_in_epsilon(157.6519320112606, worksheet.costpercapita_by145, 0.001); end
  def test_costpercapita_bz145; assert_in_epsilon(172.31285745779107, worksheet.costpercapita_bz145, 0.001); end
  def test_costpercapita_ca145; assert_in_epsilon(188.68279700616407, worksheet.costpercapita_ca145, 0.001); end
  def test_costpercapita_cc145; assert_in_epsilon(132.17428185923734, worksheet.costpercapita_cc145, 0.001); end
  def test_costpercapita_cd145; assert_in_epsilon(2658.352895713911, worksheet.costpercapita_cd145, 0.001); end
  def test_costpercapita_cf145; assert_in_epsilon(-11.098928276441303, worksheet.costpercapita_cf145, 0.001); end
  def test_costpercapita_cg145; assert_in_epsilon(17.26437518658548, worksheet.costpercapita_cg145, 0.001); end
  def test_costpercapita_ch145; assert_in_epsilon(19.10594078608289, worksheet.costpercapita_ch145, 0.001); end
  def test_costpercapita_ci145; assert_in_epsilon(21.051891682138045, worksheet.costpercapita_ci145, 0.001); end
  def test_costpercapita_cj145; assert_in_epsilon(23.076490443351037, worksheet.costpercapita_cj145, 0.001); end
  def test_costpercapita_ck145; assert_in_epsilon(25.33157777547912, worksheet.costpercapita_ck145, 0.001); end
  def test_costpercapita_cl145; assert_in_epsilon(27.646689808766144, worksheet.costpercapita_cl145, 0.001); end
  def test_costpercapita_cm145; assert_in_epsilon(30.217708463334393, worksheet.costpercapita_cm145, 0.001); end
  def test_costpercapita_cn145; assert_in_epsilon(33.08842901276471, worksheet.costpercapita_cn145, 0.001); end
  def test_costpercapita_cp145; assert_in_epsilon(20.631574986895615, worksheet.costpercapita_cp145, 0.001); end
  def test_costpercapita_cq145; assert_in_epsilon(443.2580913616154, worksheet.costpercapita_cq145, 0.001); end
  def test_costpercapita_cr145; assert_equal("ok", worksheet.costpercapita_cr145); end
  def test_costpercapita_a146; assert_equal("XII.a.Rail", worksheet.costpercapita_a146); end
  def test_costpercapita_b146; assert_equal("Rail", worksheet.costpercapita_b146); end
  def test_costpercapita_c146; assert_equal("Transport", worksheet.costpercapita_c146); end
  def test_costpercapita_e146; assert_in_epsilon(1.241582045011786, worksheet.costpercapita_e146, 0.001); end
  def test_costpercapita_f146; assert_in_epsilon(1.1233556280853512, worksheet.costpercapita_f146, 0.001); end
  def test_costpercapita_g146; assert_in_epsilon(1.3569751634959204, worksheet.costpercapita_g146, 0.001); end
  def test_costpercapita_h146; assert_in_epsilon(1.290762626571086, worksheet.costpercapita_h146, 0.001); end
  def test_costpercapita_i146; assert_in_epsilon(1.1947324193968267, worksheet.costpercapita_i146, 0.001); end
  def test_costpercapita_j146; assert_in_epsilon(1.147373828242409, worksheet.costpercapita_j146, 0.001); end
  def test_costpercapita_k146; assert_in_epsilon(1.048919191111714, worksheet.costpercapita_k146, 0.001); end
  def test_costpercapita_l146; assert_in_epsilon(1.0100807576754305, worksheet.costpercapita_l146, 0.001); end
  def test_costpercapita_m146; assert_in_delta(0.9726212136466733, worksheet.costpercapita_m146, 0.001); end
  def test_costpercapita_o146; assert_in_epsilon(133.70395383068492, worksheet.costpercapita_o146, 0.001); end
  def test_costpercapita_p146; assert_in_epsilon(129.07885631308855, worksheet.costpercapita_p146, 0.001); end
  def test_costpercapita_q146; assert_in_epsilon(128.50825955820358, worksheet.costpercapita_q146, 0.001); end
  def test_costpercapita_r146; assert_in_epsilon(127.2850193216049, worksheet.costpercapita_r146, 0.001); end
  def test_costpercapita_s146; assert_in_epsilon(125.29047939724141, worksheet.costpercapita_s146, 0.001); end
  def test_costpercapita_t146; assert_in_epsilon(123.33339064706897, worksheet.costpercapita_t146, 0.001); end
  def test_costpercapita_u146; assert_in_epsilon(120.50432299949576, worksheet.costpercapita_u146, 0.001); end
  def test_costpercapita_v146; assert_in_epsilon(117.67572814603646, worksheet.costpercapita_v146, 0.001); end
  def test_costpercapita_w146; assert_in_epsilon(114.85078685581392, worksheet.costpercapita_w146, 0.001); end
  def test_costpercapita_y146; assert_in_delta(0, (worksheet.costpercapita_y146||0), 0.001); end
  def test_costpercapita_z146; assert_in_delta(0, (worksheet.costpercapita_z146||0), 0.001); end
  def test_costpercapita_aa146; assert_in_delta(0, (worksheet.costpercapita_aa146||0), 0.001); end
  def test_costpercapita_ab146; assert_in_delta(0, (worksheet.costpercapita_ab146||0), 0.001); end
  def test_costpercapita_ac146; assert_in_delta(0, (worksheet.costpercapita_ac146||0), 0.001); end
  def test_costpercapita_ad146; assert_in_delta(0, (worksheet.costpercapita_ad146||0), 0.001); end
  def test_costpercapita_ae146; assert_in_delta(0, (worksheet.costpercapita_ae146||0), 0.001); end
  def test_costpercapita_af146; assert_in_delta(0, (worksheet.costpercapita_af146||0), 0.001); end
  def test_costpercapita_ag146; assert_in_delta(0, (worksheet.costpercapita_ag146||0), 0.001); end
  def test_costpercapita_ai146; assert_in_epsilon(134.94553587569672, worksheet.costpercapita_ai146, 0.001); end
  def test_costpercapita_aj146; assert_in_epsilon(130.20221194117389, worksheet.costpercapita_aj146, 0.001); end
  def test_costpercapita_ak146; assert_in_epsilon(129.8652347216995, worksheet.costpercapita_ak146, 0.001); end
  def test_costpercapita_al146; assert_in_epsilon(128.575781948176, worksheet.costpercapita_al146, 0.001); end
  def test_costpercapita_am146; assert_in_epsilon(126.48521181663823, worksheet.costpercapita_am146, 0.001); end
  def test_costpercapita_an146; assert_in_epsilon(124.48076447531137, worksheet.costpercapita_an146, 0.001); end
  def test_costpercapita_ao146; assert_in_epsilon(121.55324219060746, worksheet.costpercapita_ao146, 0.001); end
  def test_costpercapita_ap146; assert_in_epsilon(118.6858089037119, worksheet.costpercapita_ap146, 0.001); end
  def test_costpercapita_aq146; assert_in_epsilon(115.8234080694606, worksheet.costpercapita_aq146, 0.001); end
  def test_costpercapita_as146; assert_in_epsilon(125.62413332694172, worksheet.costpercapita_as146, 0.001); end
  def test_costpercapita_at146; assert_in_epsilon(2660.769832606865, worksheet.costpercapita_at146, 0.001); end
  def test_costpercapita_av146; assert_in_delta(0.1, worksheet.costpercapita_av146, 0.001); end
  def test_costpercapita_aw146; assert_in_epsilon(30, worksheet.costpercapita_aw146, 0.001); end
  def test_costpercapita_ay146; assert_in_delta(0.3951182699364544, worksheet.costpercapita_ay146, 0.001); end
  def test_costpercapita_az146; assert_in_delta(0.5958236027382973, worksheet.costpercapita_az146, 0.001); end
  def test_costpercapita_ba146; assert_in_delta(0.7197345262057111, worksheet.costpercapita_ba146, 0.001); end
  def test_costpercapita_bb146; assert_in_delta(0.6846156454962802, worksheet.costpercapita_bb146, 0.001); end
  def test_costpercapita_bc146; assert_in_delta(0.6336815845633296, worksheet.costpercapita_bc146, 0.001); end
  def test_costpercapita_bd146; assert_in_delta(0.6085627658235071, worksheet.costpercapita_bd146, 0.001); end
  def test_costpercapita_be146; assert_in_delta(0.5563427963544572, worksheet.costpercapita_be146, 0.001); end
  def test_costpercapita_bf146; assert_in_delta(0.5357430372433027, worksheet.costpercapita_bf146, 0.001); end
  def test_costpercapita_bg146; assert_in_delta(0.5158746358910177, worksheet.costpercapita_bg146, 0.001); end
  def test_costpercapita_bi146; assert_in_delta(0.3951182699364544, worksheet.costpercapita_bi146, 0.001); end
  def test_costpercapita_bj146; assert_in_delta(0.9779128203612442, worksheet.costpercapita_bj146, 0.001); end
  def test_costpercapita_bk146; assert_in_epsilon(1.6656322895297075, worksheet.costpercapita_bk146, 0.001); end
  def test_costpercapita_bl146; assert_in_epsilon(2.2986741716833876, worksheet.costpercapita_bl146, 0.001); end
  def test_costpercapita_bm146; assert_in_epsilon(2.869555625957599, worksheet.costpercapita_bm146, 0.001); end
  def test_costpercapita_bn146; assert_in_epsilon(3.410524012328913, worksheet.costpercapita_bn146, 0.001); end
  def test_costpercapita_bo146; assert_in_epsilon(3.5612399639712065, worksheet.costpercapita_bo146, 0.001); end
  def test_costpercapita_bp146; assert_in_epsilon(4.110670737166428, worksheet.costpercapita_bp146, 0.001); end
  def test_costpercapita_bq146; assert_in_epsilon(3.9263342942112436, worksheet.costpercapita_bq146, 0.001); end
  def test_costpercapita_bs146; assert_in_epsilon(134.09907210062138, worksheet.costpercapita_bs146, 0.001); end
  def test_costpercapita_bt146; assert_in_epsilon(130.0567691334498, worksheet.costpercapita_bt146, 0.001); end
  def test_costpercapita_bu146; assert_in_epsilon(130.1738918477333, worksheet.costpercapita_bu146, 0.001); end
  def test_costpercapita_bv146; assert_in_epsilon(129.5836934932883, worksheet.costpercapita_bv146, 0.001); end
  def test_costpercapita_bw146; assert_in_epsilon(128.160035023199, worksheet.costpercapita_bw146, 0.001); end
  def test_costpercapita_bx146; assert_in_epsilon(126.74391465939789, worksheet.costpercapita_bx146, 0.001); end
  def test_costpercapita_by146; assert_in_epsilon(124.06556296346696, worksheet.costpercapita_by146, 0.001); end
  def test_costpercapita_bz146; assert_in_epsilon(121.78639888320289, worksheet.costpercapita_bz146, 0.001); end
  def test_costpercapita_ca146; assert_in_epsilon(118.77712115002517, worksheet.costpercapita_ca146, 0.001); end
  def test_costpercapita_cc146; assert_in_epsilon(127.04960658382053, worksheet.costpercapita_cc146, 0.001); end
  def test_costpercapita_cd146; assert_in_epsilon(2685.5651212108214, worksheet.costpercapita_cd146, 0.001); end
  def test_costpercapita_cf146; assert_in_delta(-0.8464637750753315, worksheet.costpercapita_cf146, 0.001); end
  def test_costpercapita_cg146; assert_in_delta(-0.145442807724107, worksheet.costpercapita_cg146, 0.001); end
  def test_costpercapita_ch146; assert_in_delta(0.3086571260337871, worksheet.costpercapita_ch146, 0.001); end
  def test_costpercapita_ci146; assert_in_epsilon(1.0079115451123017, worksheet.costpercapita_ci146, 0.001); end
  def test_costpercapita_cj146; assert_in_epsilon(1.6748232065607727, worksheet.costpercapita_cj146, 0.001); end
  def test_costpercapita_ck146; assert_in_epsilon(2.263150184086504, worksheet.costpercapita_ck146, 0.001); end
  def test_costpercapita_cl146; assert_in_epsilon(2.5123207728594927, worksheet.costpercapita_cl146, 0.001); end
  def test_costpercapita_cm146; assert_in_epsilon(3.1005899794909975, worksheet.costpercapita_cm146, 0.001); end
  def test_costpercapita_cn146; assert_in_epsilon(2.95371308056457, worksheet.costpercapita_cn146, 0.001); end
  def test_costpercapita_cp146; assert_in_epsilon(1.4254732568787765, worksheet.costpercapita_cp146, 0.001); end
  def test_costpercapita_cq146; assert_in_epsilon(24.795288603956354, worksheet.costpercapita_cq146, 0.001); end
  def test_costpercapita_cr146; assert_equal("ok", worksheet.costpercapita_cr146); end
  def test_costpercapita_a147; assert_equal("XII.a.Air", worksheet.costpercapita_a147); end
  def test_costpercapita_b147; assert_equal("Domestic aviation", worksheet.costpercapita_b147); end
  def test_costpercapita_c147; assert_equal("Transport", worksheet.costpercapita_c147); end
  def test_costpercapita_e147; assert_in_epsilon(8.896398734813296, worksheet.costpercapita_e147, 0.001); end
  def test_costpercapita_f147; assert_in_epsilon(8.410890692521994, worksheet.costpercapita_f147, 0.001); end
  def test_costpercapita_g147; assert_in_epsilon(9.971059183044035, worksheet.costpercapita_g147, 0.001); end
  def test_costpercapita_h147; assert_in_epsilon(10.57718289110006, worksheet.costpercapita_h147, 0.001); end
  def test_costpercapita_i147; assert_in_epsilon(11.01379591524008, worksheet.costpercapita_i147, 0.001); end
  def test_costpercapita_j147; assert_in_epsilon(11.643140139334115, worksheet.costpercapita_j147, 0.001); end
  def test_costpercapita_k147; assert_in_epsilon(11.966261692267832, worksheet.costpercapita_k147, 0.001); end
  def test_costpercapita_l147; assert_in_epsilon(12.574404324026537, worksheet.costpercapita_l147, 0.001); end
  def test_costpercapita_m147; assert_in_epsilon(13.197131973328728, worksheet.costpercapita_m147, 0.001); end
  def test_costpercapita_o147; assert_in_epsilon(3.996006703994697, worksheet.costpercapita_o147, 0.001); end
  def test_costpercapita_p147; assert_in_epsilon(4.324014827298457, worksheet.costpercapita_p147, 0.001); end
  def test_costpercapita_q147; assert_in_epsilon(4.793946375544617, worksheet.costpercapita_q147, 0.001); end
  def test_costpercapita_r147; assert_in_epsilon(5.259370767991622, worksheet.costpercapita_r147, 0.001); end
  def test_costpercapita_s147; assert_in_epsilon(5.708482707833969, worksheet.costpercapita_s147, 0.001); end
  def test_costpercapita_t147; assert_in_epsilon(6.173018575666719, worksheet.costpercapita_t147, 0.001); end
  def test_costpercapita_u147; assert_in_epsilon(6.604886414724205, worksheet.costpercapita_u147, 0.001); end
  def test_costpercapita_v147; assert_in_epsilon(7.044498828535568, worksheet.costpercapita_v147, 0.001); end
  def test_costpercapita_w147; assert_in_epsilon(7.492809818930669, worksheet.costpercapita_w147, 0.001); end
  def test_costpercapita_y147; assert_in_delta(0, (worksheet.costpercapita_y147||0), 0.001); end
  def test_costpercapita_z147; assert_in_delta(0, (worksheet.costpercapita_z147||0), 0.001); end
  def test_costpercapita_aa147; assert_in_delta(0, (worksheet.costpercapita_aa147||0), 0.001); end
  def test_costpercapita_ab147; assert_in_delta(0, (worksheet.costpercapita_ab147||0), 0.001); end
  def test_costpercapita_ac147; assert_in_delta(0, (worksheet.costpercapita_ac147||0), 0.001); end
  def test_costpercapita_ad147; assert_in_delta(0, (worksheet.costpercapita_ad147||0), 0.001); end
  def test_costpercapita_ae147; assert_in_delta(0, (worksheet.costpercapita_ae147||0), 0.001); end
  def test_costpercapita_af147; assert_in_delta(0, (worksheet.costpercapita_af147||0), 0.001); end
  def test_costpercapita_ag147; assert_in_delta(0, (worksheet.costpercapita_ag147||0), 0.001); end
  def test_costpercapita_ai147; assert_in_epsilon(12.892405438807991, worksheet.costpercapita_ai147, 0.001); end
  def test_costpercapita_aj147; assert_in_epsilon(12.734905519820451, worksheet.costpercapita_aj147, 0.001); end
  def test_costpercapita_ak147; assert_in_epsilon(14.765005558588653, worksheet.costpercapita_ak147, 0.001); end
  def test_costpercapita_al147; assert_in_epsilon(15.836553659091683, worksheet.costpercapita_al147, 0.001); end
  def test_costpercapita_am147; assert_in_epsilon(16.722278623074047, worksheet.costpercapita_am147, 0.001); end
  def test_costpercapita_an147; assert_in_epsilon(17.81615871500083, worksheet.costpercapita_an147, 0.001); end
  def test_costpercapita_ao147; assert_in_epsilon(18.571148106992037, worksheet.costpercapita_ao147, 0.001); end
  def test_costpercapita_ap147; assert_in_epsilon(19.618903152562105, worksheet.costpercapita_ap147, 0.001); end
  def test_costpercapita_aq147; assert_in_epsilon(20.6899417922594, worksheet.costpercapita_aq147, 0.001); end
  def test_costpercapita_as147; assert_in_epsilon(16.627477840688574, worksheet.costpercapita_as147, 0.001); end
  def test_costpercapita_at147; assert_in_epsilon(336.4733225096944, worksheet.costpercapita_at147, 0.001); end
  def test_costpercapita_av147; assert_in_delta(0.1, worksheet.costpercapita_av147, 0.001); end
  def test_costpercapita_aw147; assert_in_epsilon(30, worksheet.costpercapita_aw147, 0.001); end
  def test_costpercapita_ay147; assert_in_epsilon(2.831169869834033, worksheet.costpercapita_ay147, 0.001); end
  def test_costpercapita_az147; assert_in_epsilon(4.461104808989042, worksheet.costpercapita_az147, 0.001); end
  def test_costpercapita_ba147; assert_in_epsilon(5.288612312099167, worksheet.costpercapita_ba147, 0.001); end
  def test_costpercapita_bb147; assert_in_epsilon(5.610098048592576, worksheet.costpercapita_bb147, 0.001); end
  def test_costpercapita_bc147; assert_in_epsilon(5.841675955482987, worksheet.costpercapita_bc147, 0.001); end
  def test_costpercapita_bd147; assert_in_epsilon(6.175477766403151, worksheet.costpercapita_bd147, 0.001); end
  def test_costpercapita_be147; assert_in_epsilon(6.346860223550312, worksheet.costpercapita_be147, 0.001); end
  def test_costpercapita_bf147; assert_in_epsilon(6.669416789587019, worksheet.costpercapita_bf147, 0.001); end
  def test_costpercapita_bg147; assert_in_epsilon(6.999709194107553, worksheet.costpercapita_bg147, 0.001); end
  def test_costpercapita_bi147; assert_in_epsilon(2.831169869834033, worksheet.costpercapita_bi147, 0.001); end
  def test_costpercapita_bj147; assert_in_epsilon(7.198916656303827, worksheet.costpercapita_bj147, 0.001); end
  def test_costpercapita_bk147; assert_in_epsilon(12.251849751851948, worksheet.costpercapita_bk147, 0.001); end
  def test_costpercapita_bl147; assert_in_epsilon(17.48258795999047, worksheet.costpercapita_bl147, 0.001); end
  def test_costpercapita_bm147; assert_in_epsilon(22.84663693588534, worksheet.costpercapita_bm147, 0.001); end
  def test_costpercapita_bn147; assert_in_epsilon(28.483946272207834, worksheet.costpercapita_bn147, 0.001); end
  def test_costpercapita_bo147; assert_in_epsilon(31.83804647323399, worksheet.costpercapita_bo147, 0.001); end
  def test_costpercapita_bp147; assert_in_epsilon(39.53425033266522, worksheet.costpercapita_bp147, 0.001); end
  def test_costpercapita_bq147; assert_in_epsilon(41.214709801635806, worksheet.costpercapita_bq147, 0.001); end
  def test_costpercapita_bs147; assert_in_epsilon(6.82717657382873, worksheet.costpercapita_bs147, 0.001); end
  def test_costpercapita_bt147; assert_in_epsilon(11.522931483602285, worksheet.costpercapita_bt147, 0.001); end
  def test_costpercapita_bu147; assert_in_epsilon(17.045796127396567, worksheet.costpercapita_bu147, 0.001); end
  def test_costpercapita_bv147; assert_in_epsilon(22.741958727982095, worksheet.costpercapita_bv147, 0.001); end
  def test_costpercapita_bw147; assert_in_epsilon(28.55511964371931, worksheet.costpercapita_bw147, 0.001); end
  def test_costpercapita_bx147; assert_in_epsilon(34.65696484787455, worksheet.costpercapita_bx147, 0.001); end
  def test_costpercapita_by147; assert_in_epsilon(38.44293288795819, worksheet.costpercapita_by147, 0.001); end
  def test_costpercapita_bz147; assert_in_epsilon(46.57874916120079, worksheet.costpercapita_bz147, 0.001); end
  def test_costpercapita_ca147; assert_in_epsilon(48.70751962056648, worksheet.costpercapita_ca147, 0.001); end
  def test_costpercapita_cc147; assert_in_epsilon(28.34212767490322, worksheet.costpercapita_cc147, 0.001); end
  def test_costpercapita_cd147; assert_in_epsilon(533.328853145153, worksheet.costpercapita_cd147, 0.001); end
  def test_costpercapita_cf147; assert_in_epsilon(-6.065228864979264, worksheet.costpercapita_cf147, 0.001); end
  def test_costpercapita_cg147; assert_in_epsilon(-1.2119740362181664, worksheet.costpercapita_cg147, 0.001); end
  def test_costpercapita_ch147; assert_in_epsilon(2.2807905688079115, worksheet.costpercapita_ch147, 0.001); end
  def test_costpercapita_ci147; assert_in_epsilon(6.9054050688904125, worksheet.costpercapita_ci147, 0.001); end
  def test_costpercapita_cj147; assert_in_epsilon(11.832841020645262, worksheet.costpercapita_cj147, 0.001); end
  def test_costpercapita_ck147; assert_in_epsilon(16.84080613287372, worksheet.costpercapita_ck147, 0.001); end
  def test_costpercapita_cl147; assert_in_epsilon(19.871784780966156, worksheet.costpercapita_cl147, 0.001); end
  def test_costpercapita_cm147; assert_in_epsilon(26.959846008638685, worksheet.costpercapita_cm147, 0.001); end
  def test_costpercapita_cn147; assert_in_epsilon(28.01757782830708, worksheet.costpercapita_cn147, 0.001); end
  def test_costpercapita_cp147; assert_in_epsilon(11.714649834214644, worksheet.costpercapita_cp147, 0.001); end
  def test_costpercapita_cq147; assert_in_epsilon(196.85553063545856, worksheet.costpercapita_cq147, 0.001); end
  def test_costpercapita_cr147; assert_equal("ok", worksheet.costpercapita_cr147); end
  def test_costpercapita_a148; assert_equal("XII.b", worksheet.costpercapita_a148); end
  def test_costpercapita_b148; assert_equal("Domestic freight", worksheet.costpercapita_b148); end
  def test_costpercapita_c148; assert_equal("Transport", worksheet.costpercapita_c148); end
  def test_costpercapita_e148; assert_in_epsilon(67.56923951216662, worksheet.costpercapita_e148, 0.001); end
  def test_costpercapita_f148; assert_in_epsilon(76.98514970938436, worksheet.costpercapita_f148, 0.001); end
  def test_costpercapita_g148; assert_in_epsilon(76.51606089918467, worksheet.costpercapita_g148, 0.001); end
  def test_costpercapita_h148; assert_in_epsilon(77.21868064748223, worksheet.costpercapita_h148, 0.001); end
  def test_costpercapita_i148; assert_in_epsilon(78.09695466732002, worksheet.costpercapita_i148, 0.001); end
  def test_costpercapita_j148; assert_in_epsilon(79.17484468789169, worksheet.costpercapita_j148, 0.001); end
  def test_costpercapita_k148; assert_in_epsilon(80.34162937839022, worksheet.costpercapita_k148, 0.001); end
  def test_costpercapita_l148; assert_in_epsilon(81.53732129055525, worksheet.costpercapita_l148, 0.001); end
  def test_costpercapita_m148; assert_in_epsilon(82.76181223429975, worksheet.costpercapita_m148, 0.001); end
  def test_costpercapita_o148; assert_in_epsilon(104.33805341280801, worksheet.costpercapita_o148, 0.001); end
  def test_costpercapita_p148; assert_in_epsilon(110.026886244722, worksheet.costpercapita_p148, 0.001); end
  def test_costpercapita_q148; assert_in_epsilon(111.10695824626555, worksheet.costpercapita_q148, 0.001); end
  def test_costpercapita_r148; assert_in_epsilon(112.20387391171141, worksheet.costpercapita_r148, 0.001); end
  def test_costpercapita_s148; assert_in_epsilon(113.55166379487936, worksheet.costpercapita_s148, 0.001); end
  def test_costpercapita_t148; assert_in_epsilon(115.18613584478634, worksheet.costpercapita_t148, 0.001); end
  def test_costpercapita_u148; assert_in_epsilon(116.94699136772934, worksheet.costpercapita_u148, 0.001); end
  def test_costpercapita_v148; assert_in_epsilon(118.74737348640706, worksheet.costpercapita_v148, 0.001); end
  def test_costpercapita_w148; assert_in_epsilon(120.58744013692298, worksheet.costpercapita_w148, 0.001); end
  def test_costpercapita_y148; assert_in_delta(0, (worksheet.costpercapita_y148||0), 0.001); end
  def test_costpercapita_z148; assert_in_delta(0, (worksheet.costpercapita_z148||0), 0.001); end
  def test_costpercapita_aa148; assert_in_delta(0, (worksheet.costpercapita_aa148||0), 0.001); end
  def test_costpercapita_ab148; assert_in_delta(0, (worksheet.costpercapita_ab148||0), 0.001); end
  def test_costpercapita_ac148; assert_in_delta(0, (worksheet.costpercapita_ac148||0), 0.001); end
  def test_costpercapita_ad148; assert_in_delta(0, (worksheet.costpercapita_ad148||0), 0.001); end
  def test_costpercapita_ae148; assert_in_delta(0, (worksheet.costpercapita_ae148||0), 0.001); end
  def test_costpercapita_af148; assert_in_delta(0, (worksheet.costpercapita_af148||0), 0.001); end
  def test_costpercapita_ag148; assert_in_delta(0, (worksheet.costpercapita_ag148||0), 0.001); end
  def test_costpercapita_ai148; assert_in_epsilon(171.90729292497463, worksheet.costpercapita_ai148, 0.001); end
  def test_costpercapita_aj148; assert_in_epsilon(187.01203595410632, worksheet.costpercapita_aj148, 0.001); end
  def test_costpercapita_ak148; assert_in_epsilon(187.6230191454502, worksheet.costpercapita_ak148, 0.001); end
  def test_costpercapita_al148; assert_in_epsilon(189.42255455919366, worksheet.costpercapita_al148, 0.001); end
  def test_costpercapita_am148; assert_in_epsilon(191.64861846219938, worksheet.costpercapita_am148, 0.001); end
  def test_costpercapita_an148; assert_in_epsilon(194.36098053267804, worksheet.costpercapita_an148, 0.001); end
  def test_costpercapita_ao148; assert_in_epsilon(197.28862074611956, worksheet.costpercapita_ao148, 0.001); end
  def test_costpercapita_ap148; assert_in_epsilon(200.2846947769623, worksheet.costpercapita_ap148, 0.001); end
  def test_costpercapita_aq148; assert_in_epsilon(203.34925237122272, worksheet.costpercapita_aq148, 0.001); end
  def test_costpercapita_as148; assert_in_epsilon(191.43300771921187, worksheet.costpercapita_as148, 0.001); end
  def test_costpercapita_at148; assert_in_epsilon(4011.1285000526204, worksheet.costpercapita_at148, 0.001); end
  def test_costpercapita_av148; assert_in_delta(0.1, worksheet.costpercapita_av148, 0.001); end
  def test_costpercapita_aw148; assert_in_epsilon(10, worksheet.costpercapita_aw148, 0.001); end
  def test_costpercapita_ay148; assert_in_epsilon(32.989747698955675, worksheet.costpercapita_ay148, 0.001); end
  def test_costpercapita_az148; assert_in_epsilon(62.64489294771512, worksheet.costpercapita_az148, 0.001); end
  def test_costpercapita_ba148; assert_in_epsilon(62.26318272946054, worksheet.costpercapita_ba148, 0.001); end
  def test_costpercapita_bb148; assert_in_epsilon(62.83492337140524, worksheet.costpercapita_bb148, 0.001); end
  def test_costpercapita_bc148; assert_in_epsilon(63.549598632273, worksheet.costpercapita_bc148, 0.001); end
  def test_costpercapita_bd148; assert_in_epsilon(64.42670681746228, worksheet.costpercapita_bd148, 0.001); end
  def test_costpercapita_be148; assert_in_epsilon(65.37615099345254, worksheet.costpercapita_be148, 0.001); end
  def test_costpercapita_bf148; assert_in_epsilon(66.34911775546816, worksheet.costpercapita_bf148, 0.001); end
  def test_costpercapita_bg148; assert_in_epsilon(67.34551906631694, worksheet.costpercapita_bg148, 0.001); end
  def test_costpercapita_bi148; assert_in_epsilon(32.989747698955675, worksheet.costpercapita_bi148, 0.001); end
  def test_costpercapita_bj148; assert_in_epsilon(94.54680143172325, worksheet.costpercapita_bj148, 0.001); end
  def test_costpercapita_bk148; assert_in_epsilon(122.85719774710361, worksheet.costpercapita_bk148, 0.001); end
  def test_costpercapita_bl148; assert_in_epsilon(123.17022161445676, worksheet.costpercapita_bl148, 0.001); end
  def test_costpercapita_bm148; assert_in_epsilon(124.66786227737124, worksheet.costpercapita_bm148, 0.001); end
  def test_costpercapita_bn148; assert_in_epsilon(126.47935043512359, worksheet.costpercapita_bn148, 0.001); end
  def test_costpercapita_bo148; assert_in_epsilon(128.42886897589682, worksheet.costpercapita_bo148, 0.001); end
  def test_costpercapita_bp148; assert_in_epsilon(130.42115016821307, worksheet.costpercapita_bp148, 0.001); end
  def test_costpercapita_bq148; assert_in_epsilon(132.4564471536566, worksheet.costpercapita_bq148, 0.001); end
  def test_costpercapita_bs148; assert_in_epsilon(137.32780111176368, worksheet.costpercapita_bs148, 0.001); end
  def test_costpercapita_bt148; assert_in_epsilon(204.57368767644525, worksheet.costpercapita_bt148, 0.001); end
  def test_costpercapita_bu148; assert_in_epsilon(233.96415599336916, worksheet.costpercapita_bu148, 0.001); end
  def test_costpercapita_bv148; assert_in_epsilon(235.37409552616816, worksheet.costpercapita_bv148, 0.001); end
  def test_costpercapita_bw148; assert_in_epsilon(238.2195260722506, worksheet.costpercapita_bw148, 0.001); end
  def test_costpercapita_bx148; assert_in_epsilon(241.6654862799099, worksheet.costpercapita_bx148, 0.001); end
  def test_costpercapita_by148; assert_in_epsilon(245.37586034362616, worksheet.costpercapita_by148, 0.001); end
  def test_costpercapita_bz148; assert_in_epsilon(249.16852365462015, worksheet.costpercapita_bz148, 0.001); end
  def test_costpercapita_ca148; assert_in_epsilon(253.04388729057953, worksheet.costpercapita_ca148, 0.001); end
  def test_costpercapita_cc148; assert_in_epsilon(226.52366932763695, worksheet.costpercapita_cc148, 0.001); end
  def test_costpercapita_cd148; assert_in_epsilon(4795.641156878328, worksheet.costpercapita_cd148, 0.001); end
  def test_costpercapita_cf148; assert_in_epsilon(-34.57949181321094, worksheet.costpercapita_cf148, 0.001); end
  def test_costpercapita_cg148; assert_in_epsilon(17.561651722338897, worksheet.costpercapita_cg148, 0.001); end
  def test_costpercapita_ch148; assert_in_epsilon(46.341136847918946, worksheet.costpercapita_ch148, 0.001); end
  def test_costpercapita_ci148; assert_in_epsilon(45.951540966974534, worksheet.costpercapita_ci148, 0.001); end
  def test_costpercapita_cj148; assert_in_epsilon(46.570907610051215, worksheet.costpercapita_cj148, 0.001); end
  def test_costpercapita_ck148; assert_in_epsilon(47.3045057472319, worksheet.costpercapita_ck148, 0.001); end
  def test_costpercapita_cl148; assert_in_epsilon(48.087239597506596, worksheet.costpercapita_cl148, 0.001); end
  def test_costpercapita_cm148; assert_in_epsilon(48.88382887765782, worksheet.costpercapita_cm148, 0.001); end
  def test_costpercapita_cn148; assert_in_epsilon(49.69463491935684, worksheet.costpercapita_cn148, 0.001); end
  def test_costpercapita_cp148; assert_in_epsilon(35.09066160842509, worksheet.costpercapita_cp148, 0.001); end
  def test_costpercapita_cq148; assert_in_epsilon(784.5126568257075, worksheet.costpercapita_cq148, 0.001); end
  def test_costpercapita_cr148; assert_equal("ok", worksheet.costpercapita_cr148); end
  def test_costpercapita_a149; assert_equal("XII.c", worksheet.costpercapita_a149); end
  def test_costpercapita_b149; assert_equal("International aviation", worksheet.costpercapita_b149); end
  def test_costpercapita_c149; assert_equal("Transport", worksheet.costpercapita_c149); end
  def test_costpercapita_e149; assert_in_delta(0, (worksheet.costpercapita_e149||0), 0.001); end
  def test_costpercapita_f149; assert_in_delta(0, (worksheet.costpercapita_f149||0), 0.001); end
  def test_costpercapita_g149; assert_in_delta(0, (worksheet.costpercapita_g149||0), 0.001); end
  def test_costpercapita_h149; assert_in_delta(0, (worksheet.costpercapita_h149||0), 0.001); end
  def test_costpercapita_i149; assert_in_delta(0, (worksheet.costpercapita_i149||0), 0.001); end
  def test_costpercapita_j149; assert_in_delta(0, (worksheet.costpercapita_j149||0), 0.001); end
  def test_costpercapita_k149; assert_in_delta(0, (worksheet.costpercapita_k149||0), 0.001); end
  def test_costpercapita_l149; assert_in_delta(0, (worksheet.costpercapita_l149||0), 0.001); end
  def test_costpercapita_m149; assert_in_delta(0, (worksheet.costpercapita_m149||0), 0.001); end
  def test_costpercapita_o149; assert_in_delta(0, (worksheet.costpercapita_o149||0), 0.001); end
  def test_costpercapita_p149; assert_in_delta(0, (worksheet.costpercapita_p149||0), 0.001); end
  def test_costpercapita_q149; assert_in_delta(0, (worksheet.costpercapita_q149||0), 0.001); end
  def test_costpercapita_r149; assert_in_delta(0, (worksheet.costpercapita_r149||0), 0.001); end
  def test_costpercapita_s149; assert_in_delta(0, (worksheet.costpercapita_s149||0), 0.001); end
  def test_costpercapita_t149; assert_in_delta(0, (worksheet.costpercapita_t149||0), 0.001); end
  def test_costpercapita_u149; assert_in_delta(0, (worksheet.costpercapita_u149||0), 0.001); end
  def test_costpercapita_v149; assert_in_delta(0, (worksheet.costpercapita_v149||0), 0.001); end
  def test_costpercapita_w149; assert_in_delta(0, (worksheet.costpercapita_w149||0), 0.001); end
  def test_costpercapita_y149; assert_in_delta(0, (worksheet.costpercapita_y149||0), 0.001); end
  def test_costpercapita_z149; assert_in_delta(0, (worksheet.costpercapita_z149||0), 0.001); end
  def test_costpercapita_aa149; assert_in_delta(0, (worksheet.costpercapita_aa149||0), 0.001); end
  def test_costpercapita_ab149; assert_in_delta(0, (worksheet.costpercapita_ab149||0), 0.001); end
  def test_costpercapita_ac149; assert_in_delta(0, (worksheet.costpercapita_ac149||0), 0.001); end
  def test_costpercapita_ad149; assert_in_delta(0, (worksheet.costpercapita_ad149||0), 0.001); end
  def test_costpercapita_ae149; assert_in_delta(0, (worksheet.costpercapita_ae149||0), 0.001); end
  def test_costpercapita_af149; assert_in_delta(0, (worksheet.costpercapita_af149||0), 0.001); end
  def test_costpercapita_ag149; assert_in_delta(0, (worksheet.costpercapita_ag149||0), 0.001); end
  def test_costpercapita_ai149; assert_in_delta(0, (worksheet.costpercapita_ai149||0), 0.001); end
  def test_costpercapita_aj149; assert_in_delta(0, (worksheet.costpercapita_aj149||0), 0.001); end
  def test_costpercapita_ak149; assert_in_delta(0, (worksheet.costpercapita_ak149||0), 0.001); end
  def test_costpercapita_al149; assert_in_delta(0, (worksheet.costpercapita_al149||0), 0.001); end
  def test_costpercapita_am149; assert_in_delta(0, (worksheet.costpercapita_am149||0), 0.001); end
  def test_costpercapita_an149; assert_in_delta(0, (worksheet.costpercapita_an149||0), 0.001); end
  def test_costpercapita_ao149; assert_in_delta(0, (worksheet.costpercapita_ao149||0), 0.001); end
  def test_costpercapita_ap149; assert_in_delta(0, (worksheet.costpercapita_ap149||0), 0.001); end
  def test_costpercapita_aq149; assert_in_delta(0, (worksheet.costpercapita_aq149||0), 0.001); end
  def test_costpercapita_as149; assert_in_delta(0, (worksheet.costpercapita_as149||0), 0.001); end
  def test_costpercapita_at149; assert_in_delta(0, (worksheet.costpercapita_at149||0), 0.001); end
  def test_costpercapita_av149; assert_in_delta(0.1, worksheet.costpercapita_av149, 0.001); end
  def test_costpercapita_aw149; assert_in_epsilon(15, worksheet.costpercapita_aw149, 0.001); end
  def test_costpercapita_ay149; assert_in_delta(0, (worksheet.costpercapita_ay149||0), 0.001); end
  def test_costpercapita_az149; assert_in_delta(0, (worksheet.costpercapita_az149||0), 0.001); end
  def test_costpercapita_ba149; assert_in_delta(0, (worksheet.costpercapita_ba149||0), 0.001); end
  def test_costpercapita_bb149; assert_in_delta(0, (worksheet.costpercapita_bb149||0), 0.001); end
  def test_costpercapita_bc149; assert_in_delta(0, (worksheet.costpercapita_bc149||0), 0.001); end
  def test_costpercapita_bd149; assert_in_delta(0, (worksheet.costpercapita_bd149||0), 0.001); end
  def test_costpercapita_be149; assert_in_delta(0, (worksheet.costpercapita_be149||0), 0.001); end
  def test_costpercapita_bf149; assert_in_delta(0, (worksheet.costpercapita_bf149||0), 0.001); end
  def test_costpercapita_bg149; assert_in_delta(0, (worksheet.costpercapita_bg149||0), 0.001); end
  def test_costpercapita_bi149; assert_in_delta(0, (worksheet.costpercapita_bi149||0), 0.001); end
  def test_costpercapita_bj149; assert_in_delta(0, (worksheet.costpercapita_bj149||0), 0.001); end
  def test_costpercapita_bk149; assert_in_delta(0, (worksheet.costpercapita_bk149||0), 0.001); end
  def test_costpercapita_bl149; assert_in_delta(0, (worksheet.costpercapita_bl149||0), 0.001); end
  def test_costpercapita_bm149; assert_in_delta(0, (worksheet.costpercapita_bm149||0), 0.001); end
  def test_costpercapita_bn149; assert_in_delta(0, (worksheet.costpercapita_bn149||0), 0.001); end
  def test_costpercapita_bo149; assert_in_delta(0, (worksheet.costpercapita_bo149||0), 0.001); end
  def test_costpercapita_bp149; assert_in_delta(0, (worksheet.costpercapita_bp149||0), 0.001); end
  def test_costpercapita_bq149; assert_in_delta(0, (worksheet.costpercapita_bq149||0), 0.001); end
  def test_costpercapita_bs149; assert_in_delta(0, (worksheet.costpercapita_bs149||0), 0.001); end
  def test_costpercapita_bt149; assert_in_delta(0, (worksheet.costpercapita_bt149||0), 0.001); end
  def test_costpercapita_bu149; assert_in_delta(0, (worksheet.costpercapita_bu149||0), 0.001); end
  def test_costpercapita_bv149; assert_in_delta(0, (worksheet.costpercapita_bv149||0), 0.001); end
  def test_costpercapita_bw149; assert_in_delta(0, (worksheet.costpercapita_bw149||0), 0.001); end
  def test_costpercapita_bx149; assert_in_delta(0, (worksheet.costpercapita_bx149||0), 0.001); end
  def test_costpercapita_by149; assert_in_delta(0, (worksheet.costpercapita_by149||0), 0.001); end
  def test_costpercapita_bz149; assert_in_delta(0, (worksheet.costpercapita_bz149||0), 0.001); end
  def test_costpercapita_ca149; assert_in_delta(0, (worksheet.costpercapita_ca149||0), 0.001); end
  def test_costpercapita_cc149; assert_in_delta(0, (worksheet.costpercapita_cc149||0), 0.001); end
  def test_costpercapita_cd149; assert_in_delta(0, (worksheet.costpercapita_cd149||0), 0.001); end
  def test_costpercapita_cf149; assert_in_delta(0, (worksheet.costpercapita_cf149||0), 0.001); end
  def test_costpercapita_cg149; assert_in_delta(0, (worksheet.costpercapita_cg149||0), 0.001); end
  def test_costpercapita_ch149; assert_in_delta(0, (worksheet.costpercapita_ch149||0), 0.001); end
  def test_costpercapita_ci149; assert_in_delta(0, (worksheet.costpercapita_ci149||0), 0.001); end
  def test_costpercapita_cj149; assert_in_delta(0, (worksheet.costpercapita_cj149||0), 0.001); end
  def test_costpercapita_ck149; assert_in_delta(0, (worksheet.costpercapita_ck149||0), 0.001); end
  def test_costpercapita_cl149; assert_in_delta(0, (worksheet.costpercapita_cl149||0), 0.001); end
  def test_costpercapita_cm149; assert_in_delta(0, (worksheet.costpercapita_cm149||0), 0.001); end
  def test_costpercapita_cn149; assert_in_delta(0, (worksheet.costpercapita_cn149||0), 0.001); end
  def test_costpercapita_cp149; assert_in_delta(0, (worksheet.costpercapita_cp149||0), 0.001); end
  def test_costpercapita_cq149; assert_in_delta(0, (worksheet.costpercapita_cq149||0), 0.001); end
  def test_costpercapita_cr149; assert_equal("ok", worksheet.costpercapita_cr149); end
  def test_costpercapita_a150; assert_equal("XII.e", worksheet.costpercapita_a150); end
  def test_costpercapita_b150; assert_equal("International shipping (maritime bunkers)", worksheet.costpercapita_b150); end
  def test_costpercapita_c150; assert_equal("Transport", worksheet.costpercapita_c150); end
  def test_costpercapita_e150; assert_in_delta(0, (worksheet.costpercapita_e150||0), 0.001); end
  def test_costpercapita_f150; assert_in_delta(0, (worksheet.costpercapita_f150||0), 0.001); end
  def test_costpercapita_g150; assert_in_delta(0, (worksheet.costpercapita_g150||0), 0.001); end
  def test_costpercapita_h150; assert_in_delta(0, (worksheet.costpercapita_h150||0), 0.001); end
  def test_costpercapita_i150; assert_in_delta(0, (worksheet.costpercapita_i150||0), 0.001); end
  def test_costpercapita_j150; assert_in_delta(0, (worksheet.costpercapita_j150||0), 0.001); end
  def test_costpercapita_k150; assert_in_delta(0, (worksheet.costpercapita_k150||0), 0.001); end
  def test_costpercapita_l150; assert_in_delta(0, (worksheet.costpercapita_l150||0), 0.001); end
  def test_costpercapita_m150; assert_in_delta(0, (worksheet.costpercapita_m150||0), 0.001); end
  def test_costpercapita_o150; assert_in_delta(0, (worksheet.costpercapita_o150||0), 0.001); end
  def test_costpercapita_p150; assert_in_delta(0, (worksheet.costpercapita_p150||0), 0.001); end
  def test_costpercapita_q150; assert_in_delta(0, (worksheet.costpercapita_q150||0), 0.001); end
  def test_costpercapita_r150; assert_in_delta(0, (worksheet.costpercapita_r150||0), 0.001); end
  def test_costpercapita_s150; assert_in_delta(0, (worksheet.costpercapita_s150||0), 0.001); end
  def test_costpercapita_t150; assert_in_delta(0, (worksheet.costpercapita_t150||0), 0.001); end
  def test_costpercapita_u150; assert_in_delta(0, (worksheet.costpercapita_u150||0), 0.001); end
  def test_costpercapita_v150; assert_in_delta(0, (worksheet.costpercapita_v150||0), 0.001); end
  def test_costpercapita_w150; assert_in_delta(0, (worksheet.costpercapita_w150||0), 0.001); end
  def test_costpercapita_y150; assert_in_delta(0, (worksheet.costpercapita_y150||0), 0.001); end
  def test_costpercapita_z150; assert_in_delta(0, (worksheet.costpercapita_z150||0), 0.001); end
  def test_costpercapita_aa150; assert_in_delta(0, (worksheet.costpercapita_aa150||0), 0.001); end
  def test_costpercapita_ab150; assert_in_delta(0, (worksheet.costpercapita_ab150||0), 0.001); end
  def test_costpercapita_ac150; assert_in_delta(0, (worksheet.costpercapita_ac150||0), 0.001); end
  def test_costpercapita_ad150; assert_in_delta(0, (worksheet.costpercapita_ad150||0), 0.001); end
  def test_costpercapita_ae150; assert_in_delta(0, (worksheet.costpercapita_ae150||0), 0.001); end
  def test_costpercapita_af150; assert_in_delta(0, (worksheet.costpercapita_af150||0), 0.001); end
  def test_costpercapita_ag150; assert_in_delta(0, (worksheet.costpercapita_ag150||0), 0.001); end
  def test_costpercapita_ai150; assert_in_delta(0, (worksheet.costpercapita_ai150||0), 0.001); end
  def test_costpercapita_aj150; assert_in_delta(0, (worksheet.costpercapita_aj150||0), 0.001); end
  def test_costpercapita_ak150; assert_in_delta(0, (worksheet.costpercapita_ak150||0), 0.001); end
  def test_costpercapita_al150; assert_in_delta(0, (worksheet.costpercapita_al150||0), 0.001); end
  def test_costpercapita_am150; assert_in_delta(0, (worksheet.costpercapita_am150||0), 0.001); end
  def test_costpercapita_an150; assert_in_delta(0, (worksheet.costpercapita_an150||0), 0.001); end
  def test_costpercapita_ao150; assert_in_delta(0, (worksheet.costpercapita_ao150||0), 0.001); end
  def test_costpercapita_ap150; assert_in_delta(0, (worksheet.costpercapita_ap150||0), 0.001); end
  def test_costpercapita_aq150; assert_in_delta(0, (worksheet.costpercapita_aq150||0), 0.001); end
  def test_costpercapita_as150; assert_in_delta(0, (worksheet.costpercapita_as150||0), 0.001); end
  def test_costpercapita_at150; assert_in_delta(0, (worksheet.costpercapita_at150||0), 0.001); end
  def test_costpercapita_av150; assert_in_delta(0.1, worksheet.costpercapita_av150, 0.001); end
  def test_costpercapita_aw150; assert_in_epsilon(15, worksheet.costpercapita_aw150, 0.001); end
  def test_costpercapita_ay150; assert_in_delta(0, (worksheet.costpercapita_ay150||0), 0.001); end
  def test_costpercapita_az150; assert_in_delta(0, (worksheet.costpercapita_az150||0), 0.001); end
  def test_costpercapita_ba150; assert_in_delta(0, (worksheet.costpercapita_ba150||0), 0.001); end
  def test_costpercapita_bb150; assert_in_delta(0, (worksheet.costpercapita_bb150||0), 0.001); end
  def test_costpercapita_bc150; assert_in_delta(0, (worksheet.costpercapita_bc150||0), 0.001); end
  def test_costpercapita_bd150; assert_in_delta(0, (worksheet.costpercapita_bd150||0), 0.001); end
  def test_costpercapita_be150; assert_in_delta(0, (worksheet.costpercapita_be150||0), 0.001); end
  def test_costpercapita_bf150; assert_in_delta(0, (worksheet.costpercapita_bf150||0), 0.001); end
  def test_costpercapita_bg150; assert_in_delta(0, (worksheet.costpercapita_bg150||0), 0.001); end
  def test_costpercapita_bi150; assert_in_delta(0, (worksheet.costpercapita_bi150||0), 0.001); end
  def test_costpercapita_bj150; assert_in_delta(0, (worksheet.costpercapita_bj150||0), 0.001); end
  def test_costpercapita_bk150; assert_in_delta(0, (worksheet.costpercapita_bk150||0), 0.001); end
  def test_costpercapita_bl150; assert_in_delta(0, (worksheet.costpercapita_bl150||0), 0.001); end
  def test_costpercapita_bm150; assert_in_delta(0, (worksheet.costpercapita_bm150||0), 0.001); end
  def test_costpercapita_bn150; assert_in_delta(0, (worksheet.costpercapita_bn150||0), 0.001); end
  def test_costpercapita_bo150; assert_in_delta(0, (worksheet.costpercapita_bo150||0), 0.001); end
  def test_costpercapita_bp150; assert_in_delta(0, (worksheet.costpercapita_bp150||0), 0.001); end
  def test_costpercapita_bq150; assert_in_delta(0, (worksheet.costpercapita_bq150||0), 0.001); end
  def test_costpercapita_bs150; assert_in_delta(0, (worksheet.costpercapita_bs150||0), 0.001); end
  def test_costpercapita_bt150; assert_in_delta(0, (worksheet.costpercapita_bt150||0), 0.001); end
  def test_costpercapita_bu150; assert_in_delta(0, (worksheet.costpercapita_bu150||0), 0.001); end
  def test_costpercapita_bv150; assert_in_delta(0, (worksheet.costpercapita_bv150||0), 0.001); end
  def test_costpercapita_bw150; assert_in_delta(0, (worksheet.costpercapita_bw150||0), 0.001); end
  def test_costpercapita_bx150; assert_in_delta(0, (worksheet.costpercapita_bx150||0), 0.001); end
  def test_costpercapita_by150; assert_in_delta(0, (worksheet.costpercapita_by150||0), 0.001); end
  def test_costpercapita_bz150; assert_in_delta(0, (worksheet.costpercapita_bz150||0), 0.001); end
  def test_costpercapita_ca150; assert_in_delta(0, (worksheet.costpercapita_ca150||0), 0.001); end
  def test_costpercapita_cc150; assert_in_delta(0, (worksheet.costpercapita_cc150||0), 0.001); end
  def test_costpercapita_cd150; assert_in_delta(0, (worksheet.costpercapita_cd150||0), 0.001); end
  def test_costpercapita_cf150; assert_in_delta(0, (worksheet.costpercapita_cf150||0), 0.001); end
  def test_costpercapita_cg150; assert_in_delta(0, (worksheet.costpercapita_cg150||0), 0.001); end
  def test_costpercapita_ch150; assert_in_delta(0, (worksheet.costpercapita_ch150||0), 0.001); end
  def test_costpercapita_ci150; assert_in_delta(0, (worksheet.costpercapita_ci150||0), 0.001); end
  def test_costpercapita_cj150; assert_in_delta(0, (worksheet.costpercapita_cj150||0), 0.001); end
  def test_costpercapita_ck150; assert_in_delta(0, (worksheet.costpercapita_ck150||0), 0.001); end
  def test_costpercapita_cl150; assert_in_delta(0, (worksheet.costpercapita_cl150||0), 0.001); end
  def test_costpercapita_cm150; assert_in_delta(0, (worksheet.costpercapita_cm150||0), 0.001); end
  def test_costpercapita_cn150; assert_in_delta(0, (worksheet.costpercapita_cn150||0), 0.001); end
  def test_costpercapita_cp150; assert_in_delta(0, (worksheet.costpercapita_cp150||0), 0.001); end
  def test_costpercapita_cq150; assert_in_delta(0, (worksheet.costpercapita_cq150||0), 0.001); end
  def test_costpercapita_cr150; assert_equal("ok", worksheet.costpercapita_cr150); end
  def test_costpercapita_a151; assert_equal("XIV.a", worksheet.costpercapita_a151); end
  def test_costpercapita_b151; assert_equal("Geosequestration", worksheet.costpercapita_b151); end
  def test_costpercapita_c151; assert_equal("Other", worksheet.costpercapita_c151); end
  def test_costpercapita_e151; assert_in_delta(0, (worksheet.costpercapita_e151||0), 0.001); end
  def test_costpercapita_f151; assert_in_delta(0, (worksheet.costpercapita_f151||0), 0.001); end
  def test_costpercapita_g151; assert_in_delta(0, (worksheet.costpercapita_g151||0), 0.001); end
  def test_costpercapita_h151; assert_in_delta(0, (worksheet.costpercapita_h151||0), 0.001); end
  def test_costpercapita_i151; assert_in_delta(0, (worksheet.costpercapita_i151||0), 0.001); end
  def test_costpercapita_j151; assert_in_delta(0, (worksheet.costpercapita_j151||0), 0.001); end
  def test_costpercapita_k151; assert_in_delta(0, (worksheet.costpercapita_k151||0), 0.001); end
  def test_costpercapita_l151; assert_in_delta(0, (worksheet.costpercapita_l151||0), 0.001); end
  def test_costpercapita_m151; assert_in_delta(0, (worksheet.costpercapita_m151||0), 0.001); end
  def test_costpercapita_o151; assert_in_delta(0, (worksheet.costpercapita_o151||0), 0.001); end
  def test_costpercapita_p151; assert_in_delta(0, (worksheet.costpercapita_p151||0), 0.001); end
  def test_costpercapita_q151; assert_in_delta(0, (worksheet.costpercapita_q151||0), 0.001); end
  def test_costpercapita_r151; assert_in_delta(0, (worksheet.costpercapita_r151||0), 0.001); end
  def test_costpercapita_s151; assert_in_delta(0, (worksheet.costpercapita_s151||0), 0.001); end
  def test_costpercapita_t151; assert_in_delta(0, (worksheet.costpercapita_t151||0), 0.001); end
  def test_costpercapita_u151; assert_in_delta(0, (worksheet.costpercapita_u151||0), 0.001); end
  def test_costpercapita_v151; assert_in_delta(0, (worksheet.costpercapita_v151||0), 0.001); end
  def test_costpercapita_w151; assert_in_delta(0, (worksheet.costpercapita_w151||0), 0.001); end
  def test_costpercapita_y151; assert_in_delta(0, (worksheet.costpercapita_y151||0), 0.001); end
  def test_costpercapita_z151; assert_in_delta(0, (worksheet.costpercapita_z151||0), 0.001); end
  def test_costpercapita_aa151; assert_in_delta(0, (worksheet.costpercapita_aa151||0), 0.001); end
  def test_costpercapita_ab151; assert_in_delta(0, (worksheet.costpercapita_ab151||0), 0.001); end
  def test_costpercapita_ac151; assert_in_delta(0, (worksheet.costpercapita_ac151||0), 0.001); end
  def test_costpercapita_ad151; assert_in_delta(0, (worksheet.costpercapita_ad151||0), 0.001); end
  def test_costpercapita_ae151; assert_in_delta(0, (worksheet.costpercapita_ae151||0), 0.001); end
  def test_costpercapita_af151; assert_in_delta(0, (worksheet.costpercapita_af151||0), 0.001); end
  def test_costpercapita_ag151; assert_in_delta(0, (worksheet.costpercapita_ag151||0), 0.001); end
  def test_costpercapita_ai151; assert_in_delta(0, (worksheet.costpercapita_ai151||0), 0.001); end
  def test_costpercapita_aj151; assert_in_delta(0, (worksheet.costpercapita_aj151||0), 0.001); end
  def test_costpercapita_ak151; assert_in_delta(0, (worksheet.costpercapita_ak151||0), 0.001); end
  def test_costpercapita_al151; assert_in_delta(0, (worksheet.costpercapita_al151||0), 0.001); end
  def test_costpercapita_am151; assert_in_delta(0, (worksheet.costpercapita_am151||0), 0.001); end
  def test_costpercapita_an151; assert_in_delta(0, (worksheet.costpercapita_an151||0), 0.001); end
  def test_costpercapita_ao151; assert_in_delta(0, (worksheet.costpercapita_ao151||0), 0.001); end
  def test_costpercapita_ap151; assert_in_delta(0, (worksheet.costpercapita_ap151||0), 0.001); end
  def test_costpercapita_aq151; assert_in_delta(0, (worksheet.costpercapita_aq151||0), 0.001); end
  def test_costpercapita_as151; assert_in_delta(0, (worksheet.costpercapita_as151||0), 0.001); end
  def test_costpercapita_at151; assert_in_delta(0, (worksheet.costpercapita_at151||0), 0.001); end
  def test_costpercapita_av151; assert_in_delta(0, (worksheet.costpercapita_av151||0), 0.001); end
  def test_costpercapita_aw151; assert_in_epsilon(5, worksheet.costpercapita_aw151, 0.001); end
  def test_costpercapita_ay151; assert_in_delta(0, (worksheet.costpercapita_ay151||0), 0.001); end
  def test_costpercapita_az151; assert_in_delta(0, (worksheet.costpercapita_az151||0), 0.001); end
  def test_costpercapita_ba151; assert_in_delta(0, (worksheet.costpercapita_ba151||0), 0.001); end
  def test_costpercapita_bb151; assert_in_delta(0, (worksheet.costpercapita_bb151||0), 0.001); end
  def test_costpercapita_bc151; assert_in_delta(0, (worksheet.costpercapita_bc151||0), 0.001); end
  def test_costpercapita_bd151; assert_in_delta(0, (worksheet.costpercapita_bd151||0), 0.001); end
  def test_costpercapita_be151; assert_in_delta(0, (worksheet.costpercapita_be151||0), 0.001); end
  def test_costpercapita_bf151; assert_in_delta(0, (worksheet.costpercapita_bf151||0), 0.001); end
  def test_costpercapita_bg151; assert_in_delta(0, (worksheet.costpercapita_bg151||0), 0.001); end
  def test_costpercapita_bi151; assert_in_delta(0, (worksheet.costpercapita_bi151||0), 0.001); end
  def test_costpercapita_bj151; assert_in_delta(0, (worksheet.costpercapita_bj151||0), 0.001); end
  def test_costpercapita_bk151; assert_in_delta(0, (worksheet.costpercapita_bk151||0), 0.001); end
  def test_costpercapita_bl151; assert_in_delta(0, (worksheet.costpercapita_bl151||0), 0.001); end
  def test_costpercapita_bm151; assert_in_delta(0, (worksheet.costpercapita_bm151||0), 0.001); end
  def test_costpercapita_bn151; assert_in_delta(0, (worksheet.costpercapita_bn151||0), 0.001); end
  def test_costpercapita_bo151; assert_in_delta(0, (worksheet.costpercapita_bo151||0), 0.001); end
  def test_costpercapita_bp151; assert_in_delta(0, (worksheet.costpercapita_bp151||0), 0.001); end
  def test_costpercapita_bq151; assert_in_delta(0, (worksheet.costpercapita_bq151||0), 0.001); end
  def test_costpercapita_bs151; assert_in_delta(0, (worksheet.costpercapita_bs151||0), 0.001); end
  def test_costpercapita_bt151; assert_in_delta(0, (worksheet.costpercapita_bt151||0), 0.001); end
  def test_costpercapita_bu151; assert_in_delta(0, (worksheet.costpercapita_bu151||0), 0.001); end
  def test_costpercapita_bv151; assert_in_delta(0, (worksheet.costpercapita_bv151||0), 0.001); end
  def test_costpercapita_bw151; assert_in_delta(0, (worksheet.costpercapita_bw151||0), 0.001); end
  def test_costpercapita_bx151; assert_in_delta(0, (worksheet.costpercapita_bx151||0), 0.001); end
  def test_costpercapita_by151; assert_in_delta(0, (worksheet.costpercapita_by151||0), 0.001); end
  def test_costpercapita_bz151; assert_in_delta(0, (worksheet.costpercapita_bz151||0), 0.001); end
  def test_costpercapita_ca151; assert_in_delta(0, (worksheet.costpercapita_ca151||0), 0.001); end
  def test_costpercapita_cc151; assert_in_delta(0, (worksheet.costpercapita_cc151||0), 0.001); end
  def test_costpercapita_cd151; assert_in_delta(0, (worksheet.costpercapita_cd151||0), 0.001); end
  def test_costpercapita_cf151; assert_in_delta(0, (worksheet.costpercapita_cf151||0), 0.001); end
  def test_costpercapita_cg151; assert_in_delta(0, (worksheet.costpercapita_cg151||0), 0.001); end
  def test_costpercapita_ch151; assert_in_delta(0, (worksheet.costpercapita_ch151||0), 0.001); end
  def test_costpercapita_ci151; assert_in_delta(0, (worksheet.costpercapita_ci151||0), 0.001); end
  def test_costpercapita_cj151; assert_in_delta(0, (worksheet.costpercapita_cj151||0), 0.001); end
  def test_costpercapita_ck151; assert_in_delta(0, (worksheet.costpercapita_ck151||0), 0.001); end
  def test_costpercapita_cl151; assert_in_delta(0, (worksheet.costpercapita_cl151||0), 0.001); end
  def test_costpercapita_cm151; assert_in_delta(0, (worksheet.costpercapita_cm151||0), 0.001); end
  def test_costpercapita_cn151; assert_in_delta(0, (worksheet.costpercapita_cn151||0), 0.001); end
  def test_costpercapita_cp151; assert_in_delta(0, (worksheet.costpercapita_cp151||0), 0.001); end
  def test_costpercapita_cq151; assert_in_delta(0, (worksheet.costpercapita_cq151||0), 0.001); end
  def test_costpercapita_cr151; assert_equal("ok", worksheet.costpercapita_cr151); end
  def test_costpercapita_a152; assert_equal("XV.a", worksheet.costpercapita_a152); end
  def test_costpercapita_b152; assert_equal("Petroleum refineries", worksheet.costpercapita_b152); end
  def test_costpercapita_c152; assert_equal("Industry", worksheet.costpercapita_c152); end
  def test_costpercapita_e152; assert_in_epsilon(9.501503394061272, worksheet.costpercapita_e152, 0.001); end
  def test_costpercapita_f152; assert_in_epsilon(8.654657730685964, worksheet.costpercapita_f152, 0.001); end
  def test_costpercapita_g152; assert_in_epsilon(7.932778118698089, worksheet.costpercapita_g152, 0.001); end
  def test_costpercapita_h152; assert_in_epsilon(7.291332390419164, worksheet.costpercapita_h152, 0.001); end
  def test_costpercapita_i152; assert_in_epsilon(6.790810821928129, worksheet.costpercapita_i152, 0.001); end
  def test_costpercapita_j152; assert_in_epsilon(6.40318407443384, worksheet.costpercapita_j152, 0.001); end
  def test_costpercapita_k152; assert_in_epsilon(6.094221775906331, worksheet.costpercapita_k152, 0.001); end
  def test_costpercapita_l152; assert_in_epsilon(5.841911723728388, worksheet.costpercapita_l152, 0.001); end
  def test_costpercapita_m152; assert_in_epsilon(5.6336130361418455, worksheet.costpercapita_m152, 0.001); end
  def test_costpercapita_o152; assert_in_epsilon(14.366948484265311, worksheet.costpercapita_o152, 0.001); end
  def test_costpercapita_p152; assert_in_epsilon(13.1653847697148, worksheet.costpercapita_p152, 0.001); end
  def test_costpercapita_q152; assert_in_epsilon(12.078668379868073, worksheet.costpercapita_q152, 0.001); end
  def test_costpercapita_r152; assert_in_epsilon(11.207378058178438, worksheet.costpercapita_r152, 0.001); end
  def test_costpercapita_s152; assert_in_epsilon(10.52690777830955, worksheet.costpercapita_s152, 0.001); end
  def test_costpercapita_t152; assert_in_epsilon(9.99614813048735, worksheet.costpercapita_t152, 0.001); end
  def test_costpercapita_u152; assert_in_epsilon(9.568814724711372, worksheet.costpercapita_u152, 0.001); end
  def test_costpercapita_v152; assert_in_epsilon(9.215535728368746, worksheet.costpercapita_v152, 0.001); end
  def test_costpercapita_w152; assert_in_epsilon(8.920240132730445, worksheet.costpercapita_w152, 0.001); end
  def test_costpercapita_y152; assert_in_delta(0, (worksheet.costpercapita_y152||0), 0.001); end
  def test_costpercapita_z152; assert_in_delta(0, (worksheet.costpercapita_z152||0), 0.001); end
  def test_costpercapita_aa152; assert_in_delta(0, (worksheet.costpercapita_aa152||0), 0.001); end
  def test_costpercapita_ab152; assert_in_delta(0, (worksheet.costpercapita_ab152||0), 0.001); end
  def test_costpercapita_ac152; assert_in_delta(0, (worksheet.costpercapita_ac152||0), 0.001); end
  def test_costpercapita_ad152; assert_in_delta(0, (worksheet.costpercapita_ad152||0), 0.001); end
  def test_costpercapita_ae152; assert_in_delta(0, (worksheet.costpercapita_ae152||0), 0.001); end
  def test_costpercapita_af152; assert_in_delta(0, (worksheet.costpercapita_af152||0), 0.001); end
  def test_costpercapita_ag152; assert_in_delta(0, (worksheet.costpercapita_ag152||0), 0.001); end
  def test_costpercapita_ai152; assert_in_epsilon(23.86845187832658, worksheet.costpercapita_ai152, 0.001); end
  def test_costpercapita_aj152; assert_in_epsilon(21.820042500400763, worksheet.costpercapita_aj152, 0.001); end
  def test_costpercapita_ak152; assert_in_epsilon(20.011446498566162, worksheet.costpercapita_ak152, 0.001); end
  def test_costpercapita_al152; assert_in_epsilon(18.498710448597603, worksheet.costpercapita_al152, 0.001); end
  def test_costpercapita_am152; assert_in_epsilon(17.31771860023768, worksheet.costpercapita_am152, 0.001); end
  def test_costpercapita_an152; assert_in_epsilon(16.39933220492119, worksheet.costpercapita_an152, 0.001); end
  def test_costpercapita_ao152; assert_in_epsilon(15.663036500617702, worksheet.costpercapita_ao152, 0.001); end
  def test_costpercapita_ap152; assert_in_epsilon(15.057447452097135, worksheet.costpercapita_ap152, 0.001); end
  def test_costpercapita_aq152; assert_in_epsilon(14.553853168872289, worksheet.costpercapita_aq152, 0.001); end
  def test_costpercapita_as152; assert_in_epsilon(18.132226583626345, worksheet.costpercapita_as152, 0.001); end
  def test_costpercapita_at152; assert_in_epsilon(390.41342302506314, worksheet.costpercapita_at152, 0.001); end
  def test_costpercapita_av152; assert_in_delta(0.1, worksheet.costpercapita_av152, 0.001); end
  def test_costpercapita_aw152; assert_in_epsilon(15, worksheet.costpercapita_aw152, 0.001); end
  def test_costpercapita_ay152; assert_in_epsilon(3.747595611976263, worksheet.costpercapita_ay152, 0.001); end
  def test_costpercapita_az152; assert_in_epsilon(5.689302697603886, worksheet.costpercapita_az152, 0.001); end
  def test_costpercapita_ba152; assert_in_epsilon(5.214761502373702, worksheet.costpercapita_ba152, 0.001); end
  def test_costpercapita_bb152; assert_in_epsilon(4.793095039548196, worksheet.costpercapita_bb152, 0.001); end
  def test_costpercapita_bc152; assert_in_epsilon(4.464067734432657, worksheet.costpercapita_bc152, 0.001); end
  def test_costpercapita_bd152; assert_in_epsilon(4.209253971854447, worksheet.costpercapita_bd152, 0.001); end
  def test_costpercapita_be152; assert_in_epsilon(4.00615177033837, worksheet.costpercapita_be152, 0.001); end
  def test_costpercapita_bf152; assert_in_epsilon(3.8402909928059494, worksheet.costpercapita_bf152, 0.001); end
  def test_costpercapita_bg152; assert_in_epsilon(3.7033619169175216, worksheet.costpercapita_bg152, 0.001); end
  def test_costpercapita_bi152; assert_in_epsilon(3.747595611976263, worksheet.costpercapita_bi152, 0.001); end
  def test_costpercapita_bj152; assert_in_epsilon(9.31332108475032, worksheet.costpercapita_bj152, 0.001); end
  def test_costpercapita_bk152; assert_in_epsilon(14.223181680288237, worksheet.costpercapita_bk152, 0.001); end
  def test_costpercapita_bl152; assert_in_epsilon(15.179041446909165, worksheet.costpercapita_bl152, 0.001); end
  def test_costpercapita_bm152; assert_in_epsilon(14.04145227422591, worksheet.costpercapita_bm152, 0.001); end
  def test_costpercapita_bn152; assert_in_epsilon(13.120494318508502, worksheet.costpercapita_bn152, 0.001); end
  def test_costpercapita_bo152; assert_in_epsilon(12.39159120565756, worksheet.costpercapita_bo152, 0.001); end
  def test_costpercapita_bp152; assert_in_epsilon(11.80383894721361, worksheet.costpercapita_bp152, 0.001); end
  def test_costpercapita_bq152; assert_in_epsilon(11.324953367902515, worksheet.costpercapita_bq152, 0.001); end
  def test_costpercapita_bs152; assert_in_epsilon(18.114544096241573, worksheet.costpercapita_bs152, 0.001); end
  def test_costpercapita_bt152; assert_in_epsilon(22.47870585446512, worksheet.costpercapita_bt152, 0.001); end
  def test_costpercapita_bu152; assert_in_epsilon(26.301850060156312, worksheet.costpercapita_bu152, 0.001); end
  def test_costpercapita_bv152; assert_in_epsilon(26.386419505087606, worksheet.costpercapita_bv152, 0.001); end
  def test_costpercapita_bw152; assert_in_epsilon(24.56836005253546, worksheet.costpercapita_bw152, 0.001); end
  def test_costpercapita_bx152; assert_in_epsilon(23.116642448995854, worksheet.costpercapita_bx152, 0.001); end
  def test_costpercapita_by152; assert_in_epsilon(21.960405930368932, worksheet.costpercapita_by152, 0.001); end
  def test_costpercapita_bz152; assert_in_epsilon(21.019374675582355, worksheet.costpercapita_bz152, 0.001); end
  def test_costpercapita_ca152; assert_in_epsilon(20.245193500632958, worksheet.costpercapita_ca152, 0.001); end
  def test_costpercapita_cc152; assert_in_epsilon(22.687944013785128, worksheet.costpercapita_cc152, 0.001); end
  def test_costpercapita_cd152; assert_in_epsilon(493.6249462097008, worksheet.costpercapita_cd152, 0.001); end
  def test_costpercapita_cf152; assert_in_epsilon(-5.753907782085008, worksheet.costpercapita_cf152, 0.001); end
  def test_costpercapita_cg152; assert_in_delta(0.6586633540643572, worksheet.costpercapita_cg152, 0.001); end
  def test_costpercapita_ch152; assert_in_epsilon(6.290403561590148, worksheet.costpercapita_ch152, 0.001); end
  def test_costpercapita_ci152; assert_in_epsilon(7.887709056490001, worksheet.costpercapita_ci152, 0.001); end
  def test_costpercapita_cj152; assert_in_epsilon(7.2506414522977805, worksheet.costpercapita_cj152, 0.001); end
  def test_costpercapita_ck152; assert_in_epsilon(6.717310244074663, worksheet.costpercapita_ck152, 0.001); end
  def test_costpercapita_cl152; assert_in_epsilon(6.297369429751228, worksheet.costpercapita_cl152, 0.001); end
  def test_costpercapita_cm152; assert_in_epsilon(5.961927223485222, worksheet.costpercapita_cm152, 0.001); end
  def test_costpercapita_cn152; assert_in_epsilon(5.691340331760669, worksheet.costpercapita_cn152, 0.001); end
  def test_costpercapita_cp152; assert_in_epsilon(4.555717430158785, worksheet.costpercapita_cp152, 0.001); end
  def test_costpercapita_cq152; assert_in_epsilon(103.21152318463771, worksheet.costpercapita_cq152, 0.001); end
  def test_costpercapita_cr152; assert_equal("ok", worksheet.costpercapita_cr152); end
  def test_costpercapita_a153; assert_equal("XV.b.Coal", worksheet.costpercapita_a153); end
  def test_costpercapita_b153; assert_equal("Indigenous fossil-fuel production - Coal", worksheet.costpercapita_b153); end
  def test_costpercapita_c153; assert_equal("Fossil Fuels", worksheet.costpercapita_c153); end
  def test_costpercapita_e153; assert_in_delta(0, (worksheet.costpercapita_e153||0), 0.001); end
  def test_costpercapita_f153; assert_in_delta(0, (worksheet.costpercapita_f153||0), 0.001); end
  def test_costpercapita_g153; assert_in_delta(0, (worksheet.costpercapita_g153||0), 0.001); end
  def test_costpercapita_h153; assert_in_delta(0, (worksheet.costpercapita_h153||0), 0.001); end
  def test_costpercapita_i153; assert_in_delta(0, (worksheet.costpercapita_i153||0), 0.001); end
  def test_costpercapita_j153; assert_in_delta(0, (worksheet.costpercapita_j153||0), 0.001); end
  def test_costpercapita_k153; assert_in_delta(0, (worksheet.costpercapita_k153||0), 0.001); end
  def test_costpercapita_l153; assert_in_delta(0, (worksheet.costpercapita_l153||0), 0.001); end
  def test_costpercapita_m153; assert_in_delta(0, (worksheet.costpercapita_m153||0), 0.001); end
  def test_costpercapita_o153; assert_in_delta(0, (worksheet.costpercapita_o153||0), 0.001); end
  def test_costpercapita_p153; assert_in_delta(0, (worksheet.costpercapita_p153||0), 0.001); end
  def test_costpercapita_q153; assert_in_delta(0, (worksheet.costpercapita_q153||0), 0.001); end
  def test_costpercapita_r153; assert_in_delta(0, (worksheet.costpercapita_r153||0), 0.001); end
  def test_costpercapita_s153; assert_in_delta(0, (worksheet.costpercapita_s153||0), 0.001); end
  def test_costpercapita_t153; assert_in_delta(0, (worksheet.costpercapita_t153||0), 0.001); end
  def test_costpercapita_u153; assert_in_delta(0, (worksheet.costpercapita_u153||0), 0.001); end
  def test_costpercapita_v153; assert_in_delta(0, (worksheet.costpercapita_v153||0), 0.001); end
  def test_costpercapita_w153; assert_in_delta(0, (worksheet.costpercapita_w153||0), 0.001); end
  def test_costpercapita_y153; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_y153, 0.001); end
  def test_costpercapita_z153; assert_in_epsilon(18.685654248629497, worksheet.costpercapita_z153, 0.001); end
  def test_costpercapita_aa153; assert_in_epsilon(20.65590912986651, worksheet.costpercapita_aa153, 0.001); end
  def test_costpercapita_ab153; assert_in_epsilon(22.51837171017997, worksheet.costpercapita_ab153, 0.001); end
  def test_costpercapita_ac153; assert_in_epsilon(12.16842574865352, worksheet.costpercapita_ac153, 0.001); end
  def test_costpercapita_ad153; assert_in_epsilon(11.881790013158467, worksheet.costpercapita_ad153, 0.001); end
  def test_costpercapita_ae153; assert_in_epsilon(11.628394369883353, worksheet.costpercapita_ae153, 0.001); end
  def test_costpercapita_af153; assert_in_epsilon(11.39643202687115, worksheet.costpercapita_af153, 0.001); end
  def test_costpercapita_ag153; assert_in_epsilon(11.183754829847869, worksheet.costpercapita_ag153, 0.001); end
  def test_costpercapita_ai153; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_ai153, 0.001); end
  def test_costpercapita_aj153; assert_in_epsilon(18.685654248629497, worksheet.costpercapita_aj153, 0.001); end
  def test_costpercapita_ak153; assert_in_epsilon(20.65590912986651, worksheet.costpercapita_ak153, 0.001); end
  def test_costpercapita_al153; assert_in_epsilon(22.51837171017997, worksheet.costpercapita_al153, 0.001); end
  def test_costpercapita_am153; assert_in_epsilon(12.16842574865352, worksheet.costpercapita_am153, 0.001); end
  def test_costpercapita_an153; assert_in_epsilon(11.881790013158467, worksheet.costpercapita_an153, 0.001); end
  def test_costpercapita_ao153; assert_in_epsilon(11.628394369883353, worksheet.costpercapita_ao153, 0.001); end
  def test_costpercapita_ap153; assert_in_epsilon(11.39643202687115, worksheet.costpercapita_ap153, 0.001); end
  def test_costpercapita_aq153; assert_in_epsilon(11.183754829847869, worksheet.costpercapita_aq153, 0.001); end
  def test_costpercapita_as153; assert_in_epsilon(15.18679490695313, worksheet.costpercapita_as153, 0.001); end
  def test_costpercapita_at153; assert_in_epsilon(344.4155704400995, worksheet.costpercapita_at153, 0.001); end
  def test_costpercapita_av153; assert_in_delta(0, (worksheet.costpercapita_av153||0), 0.001); end
  def test_costpercapita_aw153; assert_in_epsilon(5, worksheet.costpercapita_aw153, 0.001); end
  def test_costpercapita_ay153; assert_in_delta(0, (worksheet.costpercapita_ay153||0), 0.001); end
  def test_costpercapita_az153; assert_in_delta(0, (worksheet.costpercapita_az153||0), 0.001); end
  def test_costpercapita_ba153; assert_in_delta(0, (worksheet.costpercapita_ba153||0), 0.001); end
  def test_costpercapita_bb153; assert_in_delta(0, (worksheet.costpercapita_bb153||0), 0.001); end
  def test_costpercapita_bc153; assert_in_delta(0, (worksheet.costpercapita_bc153||0), 0.001); end
  def test_costpercapita_bd153; assert_in_delta(0, (worksheet.costpercapita_bd153||0), 0.001); end
  def test_costpercapita_be153; assert_in_delta(0, (worksheet.costpercapita_be153||0), 0.001); end
  def test_costpercapita_bf153; assert_in_delta(0, (worksheet.costpercapita_bf153||0), 0.001); end
  def test_costpercapita_bg153; assert_in_delta(0, (worksheet.costpercapita_bg153||0), 0.001); end
  def test_costpercapita_bi153; assert_in_delta(0, (worksheet.costpercapita_bi153||0), 0.001); end
  def test_costpercapita_bj153; assert_in_delta(0, (worksheet.costpercapita_bj153||0), 0.001); end
  def test_costpercapita_bk153; assert_in_delta(0, (worksheet.costpercapita_bk153||0), 0.001); end
  def test_costpercapita_bl153; assert_in_delta(0, (worksheet.costpercapita_bl153||0), 0.001); end
  def test_costpercapita_bm153; assert_in_delta(0, (worksheet.costpercapita_bm153||0), 0.001); end
  def test_costpercapita_bn153; assert_in_delta(0, (worksheet.costpercapita_bn153||0), 0.001); end
  def test_costpercapita_bo153; assert_in_delta(0, (worksheet.costpercapita_bo153||0), 0.001); end
  def test_costpercapita_bp153; assert_in_delta(0, (worksheet.costpercapita_bp153||0), 0.001); end
  def test_costpercapita_bq153; assert_in_delta(0, (worksheet.costpercapita_bq153||0), 0.001); end
  def test_costpercapita_bs153; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_bs153, 0.001); end
  def test_costpercapita_bt153; assert_in_epsilon(18.685654248629497, worksheet.costpercapita_bt153, 0.001); end
  def test_costpercapita_bu153; assert_in_epsilon(20.65590912986651, worksheet.costpercapita_bu153, 0.001); end
  def test_costpercapita_bv153; assert_in_epsilon(22.51837171017997, worksheet.costpercapita_bv153, 0.001); end
  def test_costpercapita_bw153; assert_in_epsilon(12.16842574865352, worksheet.costpercapita_bw153, 0.001); end
  def test_costpercapita_bx153; assert_in_epsilon(11.881790013158467, worksheet.costpercapita_bx153, 0.001); end
  def test_costpercapita_by153; assert_in_epsilon(11.628394369883353, worksheet.costpercapita_by153, 0.001); end
  def test_costpercapita_bz153; assert_in_epsilon(11.39643202687115, worksheet.costpercapita_bz153, 0.001); end
  def test_costpercapita_ca153; assert_in_epsilon(11.183754829847869, worksheet.costpercapita_ca153, 0.001); end
  def test_costpercapita_cc153; assert_in_epsilon(15.18679490695313, worksheet.costpercapita_cc153, 0.001); end
  def test_costpercapita_cd153; assert_in_epsilon(344.4155704400995, worksheet.costpercapita_cd153, 0.001); end
  def test_costpercapita_cf153; assert_in_delta(0, (worksheet.costpercapita_cf153||0), 0.001); end
  def test_costpercapita_cg153; assert_in_delta(0, (worksheet.costpercapita_cg153||0), 0.001); end
  def test_costpercapita_ch153; assert_in_delta(0, (worksheet.costpercapita_ch153||0), 0.001); end
  def test_costpercapita_ci153; assert_in_delta(0, (worksheet.costpercapita_ci153||0), 0.001); end
  def test_costpercapita_cj153; assert_in_delta(0, (worksheet.costpercapita_cj153||0), 0.001); end
  def test_costpercapita_ck153; assert_in_delta(0, (worksheet.costpercapita_ck153||0), 0.001); end
  def test_costpercapita_cl153; assert_in_delta(0, (worksheet.costpercapita_cl153||0), 0.001); end
  def test_costpercapita_cm153; assert_in_delta(0, (worksheet.costpercapita_cm153||0), 0.001); end
  def test_costpercapita_cn153; assert_in_delta(0, (worksheet.costpercapita_cn153||0), 0.001); end
  def test_costpercapita_cp153; assert_in_delta(0, (worksheet.costpercapita_cp153||0), 0.001); end
  def test_costpercapita_cq153; assert_in_delta(0, (worksheet.costpercapita_cq153||0), 0.001); end
  def test_costpercapita_cr153; assert_equal("ok", worksheet.costpercapita_cr153); end
  def test_costpercapita_a154; assert_equal("XV.b.Oil", worksheet.costpercapita_a154); end
  def test_costpercapita_b154; assert_equal("Indigenous fossil-fuel production - Oil", worksheet.costpercapita_b154); end
  def test_costpercapita_c154; assert_equal("Fossil Fuels", worksheet.costpercapita_c154); end
  def test_costpercapita_e154; assert_in_delta(0, (worksheet.costpercapita_e154||0), 0.001); end
  def test_costpercapita_f154; assert_in_delta(0, (worksheet.costpercapita_f154||0), 0.001); end
  def test_costpercapita_g154; assert_in_delta(0, (worksheet.costpercapita_g154||0), 0.001); end
  def test_costpercapita_h154; assert_in_delta(0, (worksheet.costpercapita_h154||0), 0.001); end
  def test_costpercapita_i154; assert_in_delta(0, (worksheet.costpercapita_i154||0), 0.001); end
  def test_costpercapita_j154; assert_in_delta(0, (worksheet.costpercapita_j154||0), 0.001); end
  def test_costpercapita_k154; assert_in_delta(0, (worksheet.costpercapita_k154||0), 0.001); end
  def test_costpercapita_l154; assert_in_delta(0, (worksheet.costpercapita_l154||0), 0.001); end
  def test_costpercapita_m154; assert_in_delta(0, (worksheet.costpercapita_m154||0), 0.001); end
  def test_costpercapita_o154; assert_in_delta(0, (worksheet.costpercapita_o154||0), 0.001); end
  def test_costpercapita_p154; assert_in_delta(0, (worksheet.costpercapita_p154||0), 0.001); end
  def test_costpercapita_q154; assert_in_delta(0, (worksheet.costpercapita_q154||0), 0.001); end
  def test_costpercapita_r154; assert_in_delta(0, (worksheet.costpercapita_r154||0), 0.001); end
  def test_costpercapita_s154; assert_in_delta(0, (worksheet.costpercapita_s154||0), 0.001); end
  def test_costpercapita_t154; assert_in_delta(0, (worksheet.costpercapita_t154||0), 0.001); end
  def test_costpercapita_u154; assert_in_delta(0, (worksheet.costpercapita_u154||0), 0.001); end
  def test_costpercapita_v154; assert_in_delta(0, (worksheet.costpercapita_v154||0), 0.001); end
  def test_costpercapita_w154; assert_in_delta(0, (worksheet.costpercapita_w154||0), 0.001); end
  def test_costpercapita_y154; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_y154, 0.001); end
  def test_costpercapita_z154; assert_in_epsilon(403.23585682698996, worksheet.costpercapita_z154, 0.001); end
  def test_costpercapita_aa154; assert_in_epsilon(366.58283373821035, worksheet.costpercapita_aa154, 0.001); end
  def test_costpercapita_ab154; assert_in_epsilon(322.865371407177, worksheet.costpercapita_ab154, 0.001); end
  def test_costpercapita_ac154; assert_in_epsilon(279.12363862554827, worksheet.costpercapita_ac154, 0.001); end
  def test_costpercapita_ad154; assert_in_epsilon(210.89297861787793, worksheet.costpercapita_ad154, 0.001); end
  def test_costpercapita_ae154; assert_in_epsilon(159.70482107536645, worksheet.costpercapita_ae154, 0.001); end
  def test_costpercapita_af154; assert_in_epsilon(121.11145045492985, worksheet.costpercapita_af154, 0.001); end
  def test_costpercapita_ag154; assert_in_epsilon(91.96487082730376, worksheet.costpercapita_ag154, 0.001); end
  def test_costpercapita_ai154; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_ai154, 0.001); end
  def test_costpercapita_aj154; assert_in_epsilon(403.23585682698996, worksheet.costpercapita_aj154, 0.001); end
  def test_costpercapita_ak154; assert_in_epsilon(366.58283373821035, worksheet.costpercapita_ak154, 0.001); end
  def test_costpercapita_al154; assert_in_epsilon(322.865371407177, worksheet.costpercapita_al154, 0.001); end
  def test_costpercapita_am154; assert_in_epsilon(279.12363862554827, worksheet.costpercapita_am154, 0.001); end
  def test_costpercapita_an154; assert_in_epsilon(210.89297861787793, worksheet.costpercapita_an154, 0.001); end
  def test_costpercapita_ao154; assert_in_epsilon(159.70482107536645, worksheet.costpercapita_ao154, 0.001); end
  def test_costpercapita_ap154; assert_in_epsilon(121.11145045492985, worksheet.costpercapita_ap154, 0.001); end
  def test_costpercapita_aq154; assert_in_epsilon(91.96487082730376, worksheet.costpercapita_aq154, 0.001); end
  def test_costpercapita_as154; assert_in_epsilon(262.60109999945416, worksheet.costpercapita_as154, 0.001); end
  def test_costpercapita_at154; assert_in_epsilon(6108.548251556942, worksheet.costpercapita_at154, 0.001); end
  def test_costpercapita_av154; assert_in_delta(0, (worksheet.costpercapita_av154||0), 0.001); end
  def test_costpercapita_aw154; assert_in_epsilon(5, worksheet.costpercapita_aw154, 0.001); end
  def test_costpercapita_ay154; assert_in_delta(0, (worksheet.costpercapita_ay154||0), 0.001); end
  def test_costpercapita_az154; assert_in_delta(0, (worksheet.costpercapita_az154||0), 0.001); end
  def test_costpercapita_ba154; assert_in_delta(0, (worksheet.costpercapita_ba154||0), 0.001); end
  def test_costpercapita_bb154; assert_in_delta(0, (worksheet.costpercapita_bb154||0), 0.001); end
  def test_costpercapita_bc154; assert_in_delta(0, (worksheet.costpercapita_bc154||0), 0.001); end
  def test_costpercapita_bd154; assert_in_delta(0, (worksheet.costpercapita_bd154||0), 0.001); end
  def test_costpercapita_be154; assert_in_delta(0, (worksheet.costpercapita_be154||0), 0.001); end
  def test_costpercapita_bf154; assert_in_delta(0, (worksheet.costpercapita_bf154||0), 0.001); end
  def test_costpercapita_bg154; assert_in_delta(0, (worksheet.costpercapita_bg154||0), 0.001); end
  def test_costpercapita_bi154; assert_in_delta(0, (worksheet.costpercapita_bi154||0), 0.001); end
  def test_costpercapita_bj154; assert_in_delta(0, (worksheet.costpercapita_bj154||0), 0.001); end
  def test_costpercapita_bk154; assert_in_delta(0, (worksheet.costpercapita_bk154||0), 0.001); end
  def test_costpercapita_bl154; assert_in_delta(0, (worksheet.costpercapita_bl154||0), 0.001); end
  def test_costpercapita_bm154; assert_in_delta(0, (worksheet.costpercapita_bm154||0), 0.001); end
  def test_costpercapita_bn154; assert_in_delta(0, (worksheet.costpercapita_bn154||0), 0.001); end
  def test_costpercapita_bo154; assert_in_delta(0, (worksheet.costpercapita_bo154||0), 0.001); end
  def test_costpercapita_bp154; assert_in_delta(0, (worksheet.costpercapita_bp154||0), 0.001); end
  def test_costpercapita_bq154; assert_in_delta(0, (worksheet.costpercapita_bq154||0), 0.001); end
  def test_costpercapita_bs154; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_bs154, 0.001); end
  def test_costpercapita_bt154; assert_in_epsilon(403.23585682698996, worksheet.costpercapita_bt154, 0.001); end
  def test_costpercapita_bu154; assert_in_epsilon(366.58283373821035, worksheet.costpercapita_bu154, 0.001); end
  def test_costpercapita_bv154; assert_in_epsilon(322.865371407177, worksheet.costpercapita_bv154, 0.001); end
  def test_costpercapita_bw154; assert_in_epsilon(279.12363862554827, worksheet.costpercapita_bw154, 0.001); end
  def test_costpercapita_bx154; assert_in_epsilon(210.89297861787793, worksheet.costpercapita_bx154, 0.001); end
  def test_costpercapita_by154; assert_in_epsilon(159.70482107536645, worksheet.costpercapita_by154, 0.001); end
  def test_costpercapita_bz154; assert_in_epsilon(121.11145045492985, worksheet.costpercapita_bz154, 0.001); end
  def test_costpercapita_ca154; assert_in_epsilon(91.96487082730376, worksheet.costpercapita_ca154, 0.001); end
  def test_costpercapita_cc154; assert_in_epsilon(262.60109999945416, worksheet.costpercapita_cc154, 0.001); end
  def test_costpercapita_cd154; assert_in_epsilon(6108.548251556942, worksheet.costpercapita_cd154, 0.001); end
  def test_costpercapita_cf154; assert_in_delta(0, (worksheet.costpercapita_cf154||0), 0.001); end
  def test_costpercapita_cg154; assert_in_delta(0, (worksheet.costpercapita_cg154||0), 0.001); end
  def test_costpercapita_ch154; assert_in_delta(0, (worksheet.costpercapita_ch154||0), 0.001); end
  def test_costpercapita_ci154; assert_in_delta(0, (worksheet.costpercapita_ci154||0), 0.001); end
  def test_costpercapita_cj154; assert_in_delta(0, (worksheet.costpercapita_cj154||0), 0.001); end
  def test_costpercapita_ck154; assert_in_delta(0, (worksheet.costpercapita_ck154||0), 0.001); end
  def test_costpercapita_cl154; assert_in_delta(0, (worksheet.costpercapita_cl154||0), 0.001); end
  def test_costpercapita_cm154; assert_in_delta(0, (worksheet.costpercapita_cm154||0), 0.001); end
  def test_costpercapita_cn154; assert_in_delta(0, (worksheet.costpercapita_cn154||0), 0.001); end
  def test_costpercapita_cp154; assert_in_delta(0, (worksheet.costpercapita_cp154||0), 0.001); end
  def test_costpercapita_cq154; assert_in_delta(0, (worksheet.costpercapita_cq154||0), 0.001); end
  def test_costpercapita_cr154; assert_equal("ok", worksheet.costpercapita_cr154); end
  def test_costpercapita_a155; assert_equal("XV.b.Gas", worksheet.costpercapita_a155); end
  def test_costpercapita_b155; assert_equal("Indigenous fossil-fuel production - Gas", worksheet.costpercapita_b155); end
  def test_costpercapita_c155; assert_equal("Fossil Fuels", worksheet.costpercapita_c155); end
  def test_costpercapita_e155; assert_in_delta(0, (worksheet.costpercapita_e155||0), 0.001); end
  def test_costpercapita_f155; assert_in_delta(0, (worksheet.costpercapita_f155||0), 0.001); end
  def test_costpercapita_g155; assert_in_delta(0, (worksheet.costpercapita_g155||0), 0.001); end
  def test_costpercapita_h155; assert_in_delta(0, (worksheet.costpercapita_h155||0), 0.001); end
  def test_costpercapita_i155; assert_in_delta(0, (worksheet.costpercapita_i155||0), 0.001); end
  def test_costpercapita_j155; assert_in_delta(0, (worksheet.costpercapita_j155||0), 0.001); end
  def test_costpercapita_k155; assert_in_delta(0, (worksheet.costpercapita_k155||0), 0.001); end
  def test_costpercapita_l155; assert_in_delta(0, (worksheet.costpercapita_l155||0), 0.001); end
  def test_costpercapita_m155; assert_in_delta(0, (worksheet.costpercapita_m155||0), 0.001); end
  def test_costpercapita_o155; assert_in_delta(0, (worksheet.costpercapita_o155||0), 0.001); end
  def test_costpercapita_p155; assert_in_delta(0, (worksheet.costpercapita_p155||0), 0.001); end
  def test_costpercapita_q155; assert_in_delta(0, (worksheet.costpercapita_q155||0), 0.001); end
  def test_costpercapita_r155; assert_in_delta(0, (worksheet.costpercapita_r155||0), 0.001); end
  def test_costpercapita_s155; assert_in_delta(0, (worksheet.costpercapita_s155||0), 0.001); end
  def test_costpercapita_t155; assert_in_delta(0, (worksheet.costpercapita_t155||0), 0.001); end
  def test_costpercapita_u155; assert_in_delta(0, (worksheet.costpercapita_u155||0), 0.001); end
  def test_costpercapita_v155; assert_in_delta(0, (worksheet.costpercapita_v155||0), 0.001); end
  def test_costpercapita_w155; assert_in_delta(0, (worksheet.costpercapita_w155||0), 0.001); end
  def test_costpercapita_y155; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_y155, 0.001); end
  def test_costpercapita_z155; assert_in_epsilon(148.07770551122925, worksheet.costpercapita_z155, 0.001); end
  def test_costpercapita_aa155; assert_in_epsilon(137.36957684061997, worksheet.costpercapita_aa155, 0.001); end
  def test_costpercapita_ab155; assert_in_epsilon(123.03103814107547, worksheet.costpercapita_ab155, 0.001); end
  def test_costpercapita_ac155; assert_in_epsilon(107.67234745556412, worksheet.costpercapita_ac155, 0.001); end
  def test_costpercapita_ad155; assert_in_epsilon(81.35227163667606, worksheet.costpercapita_ad155, 0.001); end
  def test_costpercapita_ae155; assert_in_epsilon(61.60636580201707, worksheet.costpercapita_ae155, 0.001); end
  def test_costpercapita_af155; assert_in_epsilon(46.71891724557419, worksheet.costpercapita_af155, 0.001); end
  def test_costpercapita_ag155; assert_in_epsilon(35.47558198289116, worksheet.costpercapita_ag155, 0.001); end
  def test_costpercapita_ai155; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_ai155, 0.001); end
  def test_costpercapita_aj155; assert_in_epsilon(148.07770551122925, worksheet.costpercapita_aj155, 0.001); end
  def test_costpercapita_ak155; assert_in_epsilon(137.36957684061997, worksheet.costpercapita_ak155, 0.001); end
  def test_costpercapita_al155; assert_in_epsilon(123.03103814107547, worksheet.costpercapita_al155, 0.001); end
  def test_costpercapita_am155; assert_in_epsilon(107.67234745556412, worksheet.costpercapita_am155, 0.001); end
  def test_costpercapita_an155; assert_in_epsilon(81.35227163667606, worksheet.costpercapita_an155, 0.001); end
  def test_costpercapita_ao155; assert_in_epsilon(61.60636580201707, worksheet.costpercapita_ao155, 0.001); end
  def test_costpercapita_ap155; assert_in_epsilon(46.71891724557419, worksheet.costpercapita_ap155, 0.001); end
  def test_costpercapita_aq155; assert_in_epsilon(35.47558198289116, worksheet.costpercapita_aq155, 0.001); end
  def test_costpercapita_as155; assert_in_epsilon(99.17565906037409, worksheet.costpercapita_as155, 0.001); end
  def test_costpercapita_at155; assert_in_epsilon(2300.005390441694, worksheet.costpercapita_at155, 0.001); end
  def test_costpercapita_av155; assert_in_delta(0, (worksheet.costpercapita_av155||0), 0.001); end
  def test_costpercapita_aw155; assert_in_epsilon(5, worksheet.costpercapita_aw155, 0.001); end
  def test_costpercapita_ay155; assert_in_delta(0, (worksheet.costpercapita_ay155||0), 0.001); end
  def test_costpercapita_az155; assert_in_delta(0, (worksheet.costpercapita_az155||0), 0.001); end
  def test_costpercapita_ba155; assert_in_delta(0, (worksheet.costpercapita_ba155||0), 0.001); end
  def test_costpercapita_bb155; assert_in_delta(0, (worksheet.costpercapita_bb155||0), 0.001); end
  def test_costpercapita_bc155; assert_in_delta(0, (worksheet.costpercapita_bc155||0), 0.001); end
  def test_costpercapita_bd155; assert_in_delta(0, (worksheet.costpercapita_bd155||0), 0.001); end
  def test_costpercapita_be155; assert_in_delta(0, (worksheet.costpercapita_be155||0), 0.001); end
  def test_costpercapita_bf155; assert_in_delta(0, (worksheet.costpercapita_bf155||0), 0.001); end
  def test_costpercapita_bg155; assert_in_delta(0, (worksheet.costpercapita_bg155||0), 0.001); end
  def test_costpercapita_bi155; assert_in_delta(0, (worksheet.costpercapita_bi155||0), 0.001); end
  def test_costpercapita_bj155; assert_in_delta(0, (worksheet.costpercapita_bj155||0), 0.001); end
  def test_costpercapita_bk155; assert_in_delta(0, (worksheet.costpercapita_bk155||0), 0.001); end
  def test_costpercapita_bl155; assert_in_delta(0, (worksheet.costpercapita_bl155||0), 0.001); end
  def test_costpercapita_bm155; assert_in_delta(0, (worksheet.costpercapita_bm155||0), 0.001); end
  def test_costpercapita_bn155; assert_in_delta(0, (worksheet.costpercapita_bn155||0), 0.001); end
  def test_costpercapita_bo155; assert_in_delta(0, (worksheet.costpercapita_bo155||0), 0.001); end
  def test_costpercapita_bp155; assert_in_delta(0, (worksheet.costpercapita_bp155||0), 0.001); end
  def test_costpercapita_bq155; assert_in_delta(0, (worksheet.costpercapita_bq155||0), 0.001); end
  def test_costpercapita_bs155; assert_in_epsilon(151.2771269277195, worksheet.costpercapita_bs155, 0.001); end
  def test_costpercapita_bt155; assert_in_epsilon(148.07770551122925, worksheet.costpercapita_bt155, 0.001); end
  def test_costpercapita_bu155; assert_in_epsilon(137.36957684061997, worksheet.costpercapita_bu155, 0.001); end
  def test_costpercapita_bv155; assert_in_epsilon(123.03103814107547, worksheet.costpercapita_bv155, 0.001); end
  def test_costpercapita_bw155; assert_in_epsilon(107.67234745556412, worksheet.costpercapita_bw155, 0.001); end
  def test_costpercapita_bx155; assert_in_epsilon(81.35227163667606, worksheet.costpercapita_bx155, 0.001); end
  def test_costpercapita_by155; assert_in_epsilon(61.60636580201707, worksheet.costpercapita_by155, 0.001); end
  def test_costpercapita_bz155; assert_in_epsilon(46.71891724557419, worksheet.costpercapita_bz155, 0.001); end
  def test_costpercapita_ca155; assert_in_epsilon(35.47558198289116, worksheet.costpercapita_ca155, 0.001); end
  def test_costpercapita_cc155; assert_in_epsilon(99.17565906037409, worksheet.costpercapita_cc155, 0.001); end
  def test_costpercapita_cd155; assert_in_epsilon(2300.005390441694, worksheet.costpercapita_cd155, 0.001); end
  def test_costpercapita_cf155; assert_in_delta(0, (worksheet.costpercapita_cf155||0), 0.001); end
  def test_costpercapita_cg155; assert_in_delta(0, (worksheet.costpercapita_cg155||0), 0.001); end
  def test_costpercapita_ch155; assert_in_delta(0, (worksheet.costpercapita_ch155||0), 0.001); end
  def test_costpercapita_ci155; assert_in_delta(0, (worksheet.costpercapita_ci155||0), 0.001); end
  def test_costpercapita_cj155; assert_in_delta(0, (worksheet.costpercapita_cj155||0), 0.001); end
  def test_costpercapita_ck155; assert_in_delta(0, (worksheet.costpercapita_ck155||0), 0.001); end
  def test_costpercapita_cl155; assert_in_delta(0, (worksheet.costpercapita_cl155||0), 0.001); end
  def test_costpercapita_cm155; assert_in_delta(0, (worksheet.costpercapita_cm155||0), 0.001); end
  def test_costpercapita_cn155; assert_in_delta(0, (worksheet.costpercapita_cn155||0), 0.001); end
  def test_costpercapita_cp155; assert_in_delta(0, (worksheet.costpercapita_cp155||0), 0.001); end
  def test_costpercapita_cq155; assert_in_delta(0, (worksheet.costpercapita_cq155||0), 0.001); end
  def test_costpercapita_cr155; assert_equal("ok", worksheet.costpercapita_cr155); end
  def test_costpercapita_a156; assert_equal("XVI.a", worksheet.costpercapita_a156); end
  def test_costpercapita_b156; assert_equal("Fossil fuel transfers", worksheet.costpercapita_b156); end
  def test_costpercapita_c156; assert_equal("Fossil Fuels", worksheet.costpercapita_c156); end
  def test_costpercapita_e156; assert_in_epsilon(42.94763451206937, worksheet.costpercapita_e156, 0.001); end
  def test_costpercapita_f156; assert_in_epsilon(16.84136020590303, worksheet.costpercapita_f156, 0.001); end
  def test_costpercapita_g156; assert_in_epsilon(25.081417736308573, worksheet.costpercapita_g156, 0.001); end
  def test_costpercapita_h156; assert_in_epsilon(37.29365579192016, worksheet.costpercapita_h156, 0.001); end
  def test_costpercapita_i156; assert_in_epsilon(45.67235064959203, worksheet.costpercapita_i156, 0.001); end
  def test_costpercapita_j156; assert_in_epsilon(50.754077896114104, worksheet.costpercapita_j156, 0.001); end
  def test_costpercapita_k156; assert_in_epsilon(56.548159322667914, worksheet.costpercapita_k156, 0.001); end
  def test_costpercapita_l156; assert_in_epsilon(65.54664845323366, worksheet.costpercapita_l156, 0.001); end
  def test_costpercapita_m156; assert_in_epsilon(71.2321666925737, worksheet.costpercapita_m156, 0.001); end
  def test_costpercapita_o156; assert_in_delta(0.06306043679317243, worksheet.costpercapita_o156, 0.001); end
  def test_costpercapita_p156; assert_in_delta(0.11607507884389356, worksheet.costpercapita_p156, 0.001); end
  def test_costpercapita_q156; assert_in_delta(0.12501254979578916, worksheet.costpercapita_q156, 0.001); end
  def test_costpercapita_r156; assert_in_delta(0.13992077635107555, worksheet.costpercapita_r156, 0.001); end
  def test_costpercapita_s156; assert_in_delta(0.1543218174354864, worksheet.costpercapita_s156, 0.001); end
  def test_costpercapita_t156; assert_in_delta(0.16534813948791138, worksheet.costpercapita_t156, 0.001); end
  def test_costpercapita_u156; assert_in_delta(0.17424420813699407, worksheet.costpercapita_u156, 0.001); end
  def test_costpercapita_v156; assert_in_delta(0.18340207546488746, worksheet.costpercapita_v156, 0.001); end
  def test_costpercapita_w156; assert_in_delta(0.19058259144485315, worksheet.costpercapita_w156, 0.001); end
  def test_costpercapita_y156; assert_in_delta(0, (worksheet.costpercapita_y156||0), 0.001); end
  def test_costpercapita_z156; assert_in_delta(0, (worksheet.costpercapita_z156||0), 0.001); end
  def test_costpercapita_aa156; assert_in_delta(0, (worksheet.costpercapita_aa156||0), 0.001); end
  def test_costpercapita_ab156; assert_in_delta(0, (worksheet.costpercapita_ab156||0), 0.001); end
  def test_costpercapita_ac156; assert_in_delta(0, (worksheet.costpercapita_ac156||0), 0.001); end
  def test_costpercapita_ad156; assert_in_delta(0, (worksheet.costpercapita_ad156||0), 0.001); end
  def test_costpercapita_ae156; assert_in_delta(0, (worksheet.costpercapita_ae156||0), 0.001); end
  def test_costpercapita_af156; assert_in_delta(0, (worksheet.costpercapita_af156||0), 0.001); end
  def test_costpercapita_ag156; assert_in_delta(0, (worksheet.costpercapita_ag156||0), 0.001); end
  def test_costpercapita_ai156; assert_in_epsilon(43.01069494886254, worksheet.costpercapita_ai156, 0.001); end
  def test_costpercapita_aj156; assert_in_epsilon(16.95743528474692, worksheet.costpercapita_aj156, 0.001); end
  def test_costpercapita_ak156; assert_in_epsilon(25.20643028610436, worksheet.costpercapita_ak156, 0.001); end
  def test_costpercapita_al156; assert_in_epsilon(37.433576568271235, worksheet.costpercapita_al156, 0.001); end
  def test_costpercapita_am156; assert_in_epsilon(45.82667246702752, worksheet.costpercapita_am156, 0.001); end
  def test_costpercapita_an156; assert_in_epsilon(50.919426035602015, worksheet.costpercapita_an156, 0.001); end
  def test_costpercapita_ao156; assert_in_epsilon(56.722403530804904, worksheet.costpercapita_ao156, 0.001); end
  def test_costpercapita_ap156; assert_in_epsilon(65.73005052869854, worksheet.costpercapita_ap156, 0.001); end
  def test_costpercapita_aq156; assert_in_epsilon(71.42274928401856, worksheet.costpercapita_aq156, 0.001); end
  def test_costpercapita_as156; assert_in_epsilon(45.91438210379295, worksheet.costpercapita_as156, 0.001); end
  def test_costpercapita_at156; assert_in_epsilon(835.0722101305283, worksheet.costpercapita_at156, 0.001); end
  def test_costpercapita_av156; assert_in_delta(0.1, worksheet.costpercapita_av156, 0.001); end
  def test_costpercapita_aw156; assert_in_epsilon(15, worksheet.costpercapita_aw156, 0.001); end
  def test_costpercapita_ay156; assert_in_epsilon(16.939463153040638, worksheet.costpercapita_ay156, 0.001); end
  def test_costpercapita_az156; assert_in_epsilon(11.070986170953816, worksheet.costpercapita_az156, 0.001); end
  def test_costpercapita_ba156; assert_in_epsilon(16.48774359741206, worksheet.costpercapita_ba156, 0.001); end
  def test_costpercapita_bb156; assert_in_epsilon(24.515688904506828, worksheet.costpercapita_bb156, 0.001); end
  def test_costpercapita_bc156; assert_in_epsilon(30.023582196131454, worksheet.costpercapita_bc156, 0.001); end
  def test_costpercapita_bd156; assert_in_epsilon(33.36415156719007, worksheet.costpercapita_bd156, 0.001); end
  def test_costpercapita_be156; assert_in_epsilon(37.17300041090008, worksheet.costpercapita_be156, 0.001); end
  def test_costpercapita_bf156; assert_in_epsilon(43.0883271722773, worksheet.costpercapita_bf156, 0.001); end
  def test_costpercapita_bg156; assert_in_epsilon(46.82580995471769, worksheet.costpercapita_bg156, 0.001); end
  def test_costpercapita_bi156; assert_in_epsilon(16.939463153040638, worksheet.costpercapita_bi156, 0.001); end
  def test_costpercapita_bj156; assert_in_epsilon(27.451869353447425, worksheet.costpercapita_bj156, 0.001); end
  def test_costpercapita_bk156; assert_in_epsilon(43.040889521909, worksheet.costpercapita_bk156, 0.001); end
  def test_costpercapita_bl156; assert_in_epsilon(50.86988354222901, worksheet.costpercapita_bl156, 0.001); end
  def test_costpercapita_bm156; assert_in_epsilon(69.41022423737284, worksheet.costpercapita_bm156, 0.001); end
  def test_costpercapita_bn156; assert_in_epsilon(85.96471676793088, worksheet.costpercapita_bn156, 0.001); end
  def test_costpercapita_bo156; assert_in_epsilon(98.51675909307953, worksheet.costpercapita_bo156, 0.001); end
  def test_costpercapita_bp156; assert_in_epsilon(111.52106620631645, worksheet.costpercapita_bp156, 0.001); end
  def test_costpercapita_bq156; assert_in_epsilon(124.86163578471165, worksheet.costpercapita_bq156, 0.001); end
  def test_costpercapita_bs156; assert_in_epsilon(17.00252358983381, worksheet.costpercapita_bs156, 0.001); end
  def test_costpercapita_bt156; assert_in_epsilon(27.56794443229132, worksheet.costpercapita_bt156, 0.001); end
  def test_costpercapita_bu156; assert_in_epsilon(43.16590207170479, worksheet.costpercapita_bu156, 0.001); end
  def test_costpercapita_bv156; assert_in_epsilon(51.00980431858009, worksheet.costpercapita_bv156, 0.001); end
  def test_costpercapita_bw156; assert_in_epsilon(69.56454605480833, worksheet.costpercapita_bw156, 0.001); end
  def test_costpercapita_bx156; assert_in_epsilon(86.1300649074188, worksheet.costpercapita_bx156, 0.001); end
  def test_costpercapita_by156; assert_in_epsilon(98.69100330121653, worksheet.costpercapita_by156, 0.001); end
  def test_costpercapita_bz156; assert_in_epsilon(111.70446828178133, worksheet.costpercapita_bz156, 0.001); end
  def test_costpercapita_ca156; assert_in_epsilon(125.0522183761565, worksheet.costpercapita_ca156, 0.001); end
  def test_costpercapita_cc156; assert_in_epsilon(69.98760837042127, worksheet.costpercapita_cc156, 0.001); end
  def test_costpercapita_cd156; assert_in_epsilon(1308.551074369278, worksheet.costpercapita_cd156, 0.001); end
  def test_costpercapita_cf156; assert_in_epsilon(-26.00817135902873, worksheet.costpercapita_cf156, 0.001); end
  def test_costpercapita_cg156; assert_in_epsilon(10.610509147544397, worksheet.costpercapita_cg156, 0.001); end
  def test_costpercapita_ch156; assert_in_epsilon(17.959471785600428, worksheet.costpercapita_ch156, 0.001); end
  def test_costpercapita_ci156; assert_in_epsilon(13.57622775030885, worksheet.costpercapita_ci156, 0.001); end
  def test_costpercapita_cj156; assert_in_epsilon(23.737873587780808, worksheet.costpercapita_cj156, 0.001); end
  def test_costpercapita_ck156; assert_in_epsilon(35.210638871816776, worksheet.costpercapita_ck156, 0.001); end
  def test_costpercapita_cl156; assert_in_epsilon(41.968599770411615, worksheet.costpercapita_cl156, 0.001); end
  def test_costpercapita_cm156; assert_in_epsilon(45.9744177530828, worksheet.costpercapita_cm156, 0.001); end
  def test_costpercapita_cn156; assert_in_epsilon(53.629469092137946, worksheet.costpercapita_cn156, 0.001); end
  def test_costpercapita_cp156; assert_in_epsilon(24.07322626662832, worksheet.costpercapita_cp156, 0.001); end
  def test_costpercapita_cq156; assert_in_epsilon(473.4788642387497, worksheet.costpercapita_cq156, 0.001); end
  def test_costpercapita_cr156; assert_equal("ok", worksheet.costpercapita_cr156); end
  def test_costpercapita_a157; assert_equal("XVI.b.Coal", worksheet.costpercapita_a157); end
  def test_costpercapita_b157; assert_equal("Balancing imports - Coal", worksheet.costpercapita_b157); end
  def test_costpercapita_c157; assert_equal("Fossil Fuels", worksheet.costpercapita_c157); end
  def test_costpercapita_e157; assert_in_delta(0, (worksheet.costpercapita_e157||0), 0.001); end
  def test_costpercapita_f157; assert_in_delta(0, (worksheet.costpercapita_f157||0), 0.001); end
  def test_costpercapita_g157; assert_in_delta(0, (worksheet.costpercapita_g157||0), 0.001); end
  def test_costpercapita_h157; assert_in_delta(0, (worksheet.costpercapita_h157||0), 0.001); end
  def test_costpercapita_i157; assert_in_delta(0, (worksheet.costpercapita_i157||0), 0.001); end
  def test_costpercapita_j157; assert_in_delta(0, (worksheet.costpercapita_j157||0), 0.001); end
  def test_costpercapita_k157; assert_in_delta(0, (worksheet.costpercapita_k157||0), 0.001); end
  def test_costpercapita_l157; assert_in_delta(0, (worksheet.costpercapita_l157||0), 0.001); end
  def test_costpercapita_m157; assert_in_delta(0, (worksheet.costpercapita_m157||0), 0.001); end
  def test_costpercapita_o157; assert_in_delta(0, (worksheet.costpercapita_o157||0), 0.001); end
  def test_costpercapita_p157; assert_in_delta(0, (worksheet.costpercapita_p157||0), 0.001); end
  def test_costpercapita_q157; assert_in_delta(0, (worksheet.costpercapita_q157||0), 0.001); end
  def test_costpercapita_r157; assert_in_delta(0, (worksheet.costpercapita_r157||0), 0.001); end
  def test_costpercapita_s157; assert_in_delta(0, (worksheet.costpercapita_s157||0), 0.001); end
  def test_costpercapita_t157; assert_in_delta(0, (worksheet.costpercapita_t157||0), 0.001); end
  def test_costpercapita_u157; assert_in_delta(0, (worksheet.costpercapita_u157||0), 0.001); end
  def test_costpercapita_v157; assert_in_delta(0, (worksheet.costpercapita_v157||0), 0.001); end
  def test_costpercapita_w157; assert_in_delta(0, (worksheet.costpercapita_w157||0), 0.001); end
  def test_costpercapita_y157; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_y157, 0.001); end
  def test_costpercapita_z157; assert_in_epsilon(43.287271431459665, worksheet.costpercapita_z157, 0.001); end
  def test_costpercapita_aa157; assert_in_epsilon(34.10350156078442, worksheet.costpercapita_aa157, 0.001); end
  def test_costpercapita_ab157; assert_in_epsilon(13.698980309301772, worksheet.costpercapita_ab157, 0.001); end
  def test_costpercapita_ac157; assert_in_epsilon(6.697510809131851, worksheet.costpercapita_ac157, 0.001); end
  def test_costpercapita_ad157; assert_in_epsilon(3.5494775529983467, worksheet.costpercapita_ad157, 0.001); end
  def test_costpercapita_ae157; assert_in_epsilon(4.156879321959699, worksheet.costpercapita_ae157, 0.001); end
  def test_costpercapita_af157; assert_in_epsilon(4.774339620388081, worksheet.costpercapita_af157, 0.001); end
  def test_costpercapita_ag157; assert_in_epsilon(5.485976529095824, worksheet.costpercapita_ag157, 0.001); end
  def test_costpercapita_ai157; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_ai157, 0.001); end
  def test_costpercapita_aj157; assert_in_epsilon(43.287271431459665, worksheet.costpercapita_aj157, 0.001); end
  def test_costpercapita_ak157; assert_in_epsilon(34.10350156078442, worksheet.costpercapita_ak157, 0.001); end
  def test_costpercapita_al157; assert_in_epsilon(13.698980309301772, worksheet.costpercapita_al157, 0.001); end
  def test_costpercapita_am157; assert_in_epsilon(6.697510809131851, worksheet.costpercapita_am157, 0.001); end
  def test_costpercapita_an157; assert_in_epsilon(3.5494775529983467, worksheet.costpercapita_an157, 0.001); end
  def test_costpercapita_ao157; assert_in_epsilon(4.156879321959699, worksheet.costpercapita_ao157, 0.001); end
  def test_costpercapita_ap157; assert_in_epsilon(4.774339620388081, worksheet.costpercapita_ap157, 0.001); end
  def test_costpercapita_aq157; assert_in_epsilon(5.485976529095824, worksheet.costpercapita_aq157, 0.001); end
  def test_costpercapita_as157; assert_in_epsilon(17.893237786537348, worksheet.costpercapita_as157, 0.001); end
  def test_costpercapita_at157; assert_in_epsilon(435.6385796090579, worksheet.costpercapita_at157, 0.001); end
  def test_costpercapita_av157; assert_in_delta(0, (worksheet.costpercapita_av157||0), 0.001); end
  def test_costpercapita_aw157; assert_in_epsilon(5, worksheet.costpercapita_aw157, 0.001); end
  def test_costpercapita_ay157; assert_in_delta(0, (worksheet.costpercapita_ay157||0), 0.001); end
  def test_costpercapita_az157; assert_in_delta(0, (worksheet.costpercapita_az157||0), 0.001); end
  def test_costpercapita_ba157; assert_in_delta(0, (worksheet.costpercapita_ba157||0), 0.001); end
  def test_costpercapita_bb157; assert_in_delta(0, (worksheet.costpercapita_bb157||0), 0.001); end
  def test_costpercapita_bc157; assert_in_delta(0, (worksheet.costpercapita_bc157||0), 0.001); end
  def test_costpercapita_bd157; assert_in_delta(0, (worksheet.costpercapita_bd157||0), 0.001); end
  def test_costpercapita_be157; assert_in_delta(0, (worksheet.costpercapita_be157||0), 0.001); end
  def test_costpercapita_bf157; assert_in_delta(0, (worksheet.costpercapita_bf157||0), 0.001); end
  def test_costpercapita_bg157; assert_in_delta(0, (worksheet.costpercapita_bg157||0), 0.001); end
  def test_costpercapita_bi157; assert_in_delta(0, (worksheet.costpercapita_bi157||0), 0.001); end
  def test_costpercapita_bj157; assert_in_delta(0, (worksheet.costpercapita_bj157||0), 0.001); end
  def test_costpercapita_bk157; assert_in_delta(0, (worksheet.costpercapita_bk157||0), 0.001); end
  def test_costpercapita_bl157; assert_in_delta(0, (worksheet.costpercapita_bl157||0), 0.001); end
  def test_costpercapita_bm157; assert_in_delta(0, (worksheet.costpercapita_bm157||0), 0.001); end
  def test_costpercapita_bn157; assert_in_delta(0, (worksheet.costpercapita_bn157||0), 0.001); end
  def test_costpercapita_bo157; assert_in_delta(0, (worksheet.costpercapita_bo157||0), 0.001); end
  def test_costpercapita_bp157; assert_in_delta(0, (worksheet.costpercapita_bp157||0), 0.001); end
  def test_costpercapita_bq157; assert_in_delta(0, (worksheet.costpercapita_bq157||0), 0.001); end
  def test_costpercapita_bs157; assert_in_epsilon(45.28520294371646, worksheet.costpercapita_bs157, 0.001); end
  def test_costpercapita_bt157; assert_in_epsilon(43.287271431459665, worksheet.costpercapita_bt157, 0.001); end
  def test_costpercapita_bu157; assert_in_epsilon(34.10350156078442, worksheet.costpercapita_bu157, 0.001); end
  def test_costpercapita_bv157; assert_in_epsilon(13.698980309301772, worksheet.costpercapita_bv157, 0.001); end
  def test_costpercapita_bw157; assert_in_epsilon(6.697510809131851, worksheet.costpercapita_bw157, 0.001); end
  def test_costpercapita_bx157; assert_in_epsilon(3.5494775529983467, worksheet.costpercapita_bx157, 0.001); end
  def test_costpercapita_by157; assert_in_epsilon(4.156879321959699, worksheet.costpercapita_by157, 0.001); end
  def test_costpercapita_bz157; assert_in_epsilon(4.774339620388081, worksheet.costpercapita_bz157, 0.001); end
  def test_costpercapita_ca157; assert_in_epsilon(5.485976529095824, worksheet.costpercapita_ca157, 0.001); end
  def test_costpercapita_cc157; assert_in_epsilon(17.893237786537348, worksheet.costpercapita_cc157, 0.001); end
  def test_costpercapita_cd157; assert_in_epsilon(435.6385796090579, worksheet.costpercapita_cd157, 0.001); end
  def test_costpercapita_cf157; assert_in_delta(0, (worksheet.costpercapita_cf157||0), 0.001); end
  def test_costpercapita_cg157; assert_in_delta(0, (worksheet.costpercapita_cg157||0), 0.001); end
  def test_costpercapita_ch157; assert_in_delta(0, (worksheet.costpercapita_ch157||0), 0.001); end
  def test_costpercapita_ci157; assert_in_delta(0, (worksheet.costpercapita_ci157||0), 0.001); end
  def test_costpercapita_cj157; assert_in_delta(0, (worksheet.costpercapita_cj157||0), 0.001); end
  def test_costpercapita_ck157; assert_in_delta(0, (worksheet.costpercapita_ck157||0), 0.001); end
  def test_costpercapita_cl157; assert_in_delta(0, (worksheet.costpercapita_cl157||0), 0.001); end
  def test_costpercapita_cm157; assert_in_delta(0, (worksheet.costpercapita_cm157||0), 0.001); end
  def test_costpercapita_cn157; assert_in_delta(0, (worksheet.costpercapita_cn157||0), 0.001); end
  def test_costpercapita_cp157; assert_in_delta(0, (worksheet.costpercapita_cp157||0), 0.001); end
  def test_costpercapita_cq157; assert_in_delta(0, (worksheet.costpercapita_cq157||0), 0.001); end
  def test_costpercapita_cr157; assert_equal("ok", worksheet.costpercapita_cr157); end
  def test_costpercapita_a158; assert_equal("XVI.b.Oil", worksheet.costpercapita_a158); end
  def test_costpercapita_b158; assert_equal("Balancing imports - Oil", worksheet.costpercapita_b158); end
  def test_costpercapita_c158; assert_equal("Fossil Fuels", worksheet.costpercapita_c158); end
  def test_costpercapita_e158; assert_in_delta(0, (worksheet.costpercapita_e158||0), 0.001); end
  def test_costpercapita_f158; assert_in_delta(0, (worksheet.costpercapita_f158||0), 0.001); end
  def test_costpercapita_g158; assert_in_delta(0, (worksheet.costpercapita_g158||0), 0.001); end
  def test_costpercapita_h158; assert_in_delta(0, (worksheet.costpercapita_h158||0), 0.001); end
  def test_costpercapita_i158; assert_in_delta(0, (worksheet.costpercapita_i158||0), 0.001); end
  def test_costpercapita_j158; assert_in_delta(0, (worksheet.costpercapita_j158||0), 0.001); end
  def test_costpercapita_k158; assert_in_delta(0, (worksheet.costpercapita_k158||0), 0.001); end
  def test_costpercapita_l158; assert_in_delta(0, (worksheet.costpercapita_l158||0), 0.001); end
  def test_costpercapita_m158; assert_in_delta(0, (worksheet.costpercapita_m158||0), 0.001); end
  def test_costpercapita_o158; assert_in_delta(0, (worksheet.costpercapita_o158||0), 0.001); end
  def test_costpercapita_p158; assert_in_delta(0, (worksheet.costpercapita_p158||0), 0.001); end
  def test_costpercapita_q158; assert_in_delta(0, (worksheet.costpercapita_q158||0), 0.001); end
  def test_costpercapita_r158; assert_in_delta(0, (worksheet.costpercapita_r158||0), 0.001); end
  def test_costpercapita_s158; assert_in_delta(0, (worksheet.costpercapita_s158||0), 0.001); end
  def test_costpercapita_t158; assert_in_delta(0, (worksheet.costpercapita_t158||0), 0.001); end
  def test_costpercapita_u158; assert_in_delta(0, (worksheet.costpercapita_u158||0), 0.001); end
  def test_costpercapita_v158; assert_in_delta(0, (worksheet.costpercapita_v158||0), 0.001); end
  def test_costpercapita_w158; assert_in_delta(0, (worksheet.costpercapita_w158||0), 0.001); end
  def test_costpercapita_y158; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_y158, 0.001); end
  def test_costpercapita_z158; assert_in_epsilon(129.89137713622105, worksheet.costpercapita_z158, 0.001); end
  def test_costpercapita_aa158; assert_in_epsilon(261.39510652525456, worksheet.costpercapita_aa158, 0.001); end
  def test_costpercapita_ab158; assert_in_epsilon(380.44850232492524, worksheet.costpercapita_ab158, 0.001); end
  def test_costpercapita_ac158; assert_in_epsilon(490.58543413560005, worksheet.costpercapita_ac158, 0.001); end
  def test_costpercapita_ad158; assert_in_epsilon(557.8600611121882, worksheet.costpercapita_ad158, 0.001); end
  def test_costpercapita_ae158; assert_in_epsilon(602.3170189290973, worksheet.costpercapita_ae158, 0.001); end
  def test_costpercapita_af158; assert_in_epsilon(638.3869550524987, worksheet.costpercapita_af158, 0.001); end
  def test_costpercapita_ag158; assert_in_epsilon(659.5122410383503, worksheet.costpercapita_ag158, 0.001); end
  def test_costpercapita_ai158; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_ai158, 0.001); end
  def test_costpercapita_aj158; assert_in_epsilon(129.89137713622105, worksheet.costpercapita_aj158, 0.001); end
  def test_costpercapita_ak158; assert_in_epsilon(261.39510652525456, worksheet.costpercapita_ak158, 0.001); end
  def test_costpercapita_al158; assert_in_epsilon(380.44850232492524, worksheet.costpercapita_al158, 0.001); end
  def test_costpercapita_am158; assert_in_epsilon(490.58543413560005, worksheet.costpercapita_am158, 0.001); end
  def test_costpercapita_an158; assert_in_epsilon(557.8600611121882, worksheet.costpercapita_an158, 0.001); end
  def test_costpercapita_ao158; assert_in_epsilon(602.3170189290973, worksheet.costpercapita_ao158, 0.001); end
  def test_costpercapita_ap158; assert_in_epsilon(638.3869550524987, worksheet.costpercapita_ap158, 0.001); end
  def test_costpercapita_aq158; assert_in_epsilon(659.5122410383503, worksheet.costpercapita_aq158, 0.001); end
  def test_costpercapita_as158; assert_in_epsilon(417.0847261960025, worksheet.costpercapita_as158, 0.001); end
  def test_costpercapita_at158; assert_in_epsilon(7983.338050631713, worksheet.costpercapita_at158, 0.001); end
  def test_costpercapita_av158; assert_in_delta(0, (worksheet.costpercapita_av158||0), 0.001); end
  def test_costpercapita_aw158; assert_in_epsilon(5, worksheet.costpercapita_aw158, 0.001); end
  def test_costpercapita_ay158; assert_in_delta(0, (worksheet.costpercapita_ay158||0), 0.001); end
  def test_costpercapita_az158; assert_in_delta(0, (worksheet.costpercapita_az158||0), 0.001); end
  def test_costpercapita_ba158; assert_in_delta(0, (worksheet.costpercapita_ba158||0), 0.001); end
  def test_costpercapita_bb158; assert_in_delta(0, (worksheet.costpercapita_bb158||0), 0.001); end
  def test_costpercapita_bc158; assert_in_delta(0, (worksheet.costpercapita_bc158||0), 0.001); end
  def test_costpercapita_bd158; assert_in_delta(0, (worksheet.costpercapita_bd158||0), 0.001); end
  def test_costpercapita_be158; assert_in_delta(0, (worksheet.costpercapita_be158||0), 0.001); end
  def test_costpercapita_bf158; assert_in_delta(0, (worksheet.costpercapita_bf158||0), 0.001); end
  def test_costpercapita_bg158; assert_in_delta(0, (worksheet.costpercapita_bg158||0), 0.001); end
  def test_costpercapita_bi158; assert_in_delta(0, (worksheet.costpercapita_bi158||0), 0.001); end
  def test_costpercapita_bj158; assert_in_delta(0, (worksheet.costpercapita_bj158||0), 0.001); end
  def test_costpercapita_bk158; assert_in_delta(0, (worksheet.costpercapita_bk158||0), 0.001); end
  def test_costpercapita_bl158; assert_in_delta(0, (worksheet.costpercapita_bl158||0), 0.001); end
  def test_costpercapita_bm158; assert_in_delta(0, (worksheet.costpercapita_bm158||0), 0.001); end
  def test_costpercapita_bn158; assert_in_delta(0, (worksheet.costpercapita_bn158||0), 0.001); end
  def test_costpercapita_bo158; assert_in_delta(0, (worksheet.costpercapita_bo158||0), 0.001); end
  def test_costpercapita_bp158; assert_in_delta(0, (worksheet.costpercapita_bp158||0), 0.001); end
  def test_costpercapita_bq158; assert_in_delta(0, (worksheet.costpercapita_bq158||0), 0.001); end
  def test_costpercapita_bs158; assert_in_epsilon(33.365839509887266, worksheet.costpercapita_bs158, 0.001); end
  def test_costpercapita_bt158; assert_in_epsilon(129.89137713622105, worksheet.costpercapita_bt158, 0.001); end
  def test_costpercapita_bu158; assert_in_epsilon(261.39510652525456, worksheet.costpercapita_bu158, 0.001); end
  def test_costpercapita_bv158; assert_in_epsilon(380.44850232492524, worksheet.costpercapita_bv158, 0.001); end
  def test_costpercapita_bw158; assert_in_epsilon(490.58543413560005, worksheet.costpercapita_bw158, 0.001); end
  def test_costpercapita_bx158; assert_in_epsilon(557.8600611121882, worksheet.costpercapita_bx158, 0.001); end
  def test_costpercapita_by158; assert_in_epsilon(602.3170189290973, worksheet.costpercapita_by158, 0.001); end
  def test_costpercapita_bz158; assert_in_epsilon(638.3869550524987, worksheet.costpercapita_bz158, 0.001); end
  def test_costpercapita_ca158; assert_in_epsilon(659.5122410383503, worksheet.costpercapita_ca158, 0.001); end
  def test_costpercapita_cc158; assert_in_epsilon(417.0847261960025, worksheet.costpercapita_cc158, 0.001); end
  def test_costpercapita_cd158; assert_in_epsilon(7983.338050631713, worksheet.costpercapita_cd158, 0.001); end
  def test_costpercapita_cf158; assert_in_delta(0, (worksheet.costpercapita_cf158||0), 0.001); end
  def test_costpercapita_cg158; assert_in_delta(0, (worksheet.costpercapita_cg158||0), 0.001); end
  def test_costpercapita_ch158; assert_in_delta(0, (worksheet.costpercapita_ch158||0), 0.001); end
  def test_costpercapita_ci158; assert_in_delta(0, (worksheet.costpercapita_ci158||0), 0.001); end
  def test_costpercapita_cj158; assert_in_delta(0, (worksheet.costpercapita_cj158||0), 0.001); end
  def test_costpercapita_ck158; assert_in_delta(0, (worksheet.costpercapita_ck158||0), 0.001); end
  def test_costpercapita_cl158; assert_in_delta(0, (worksheet.costpercapita_cl158||0), 0.001); end
  def test_costpercapita_cm158; assert_in_delta(0, (worksheet.costpercapita_cm158||0), 0.001); end
  def test_costpercapita_cn158; assert_in_delta(0, (worksheet.costpercapita_cn158||0), 0.001); end
  def test_costpercapita_cp158; assert_in_delta(0, (worksheet.costpercapita_cp158||0), 0.001); end
  def test_costpercapita_cq158; assert_in_delta(0, (worksheet.costpercapita_cq158||0), 0.001); end
  def test_costpercapita_cr158; assert_equal("ok", worksheet.costpercapita_cr158); end
  def test_costpercapita_a159; assert_equal("XVI.b.Gas", worksheet.costpercapita_a159); end
  def test_costpercapita_b159; assert_equal("Balancing imports - Gas", worksheet.costpercapita_b159); end
  def test_costpercapita_c159; assert_equal("Fossil Fuels", worksheet.costpercapita_c159); end
  def test_costpercapita_e159; assert_in_delta(0, (worksheet.costpercapita_e159||0), 0.001); end
  def test_costpercapita_f159; assert_in_delta(0, (worksheet.costpercapita_f159||0), 0.001); end
  def test_costpercapita_g159; assert_in_delta(0, (worksheet.costpercapita_g159||0), 0.001); end
  def test_costpercapita_h159; assert_in_delta(0, (worksheet.costpercapita_h159||0), 0.001); end
  def test_costpercapita_i159; assert_in_delta(0, (worksheet.costpercapita_i159||0), 0.001); end
  def test_costpercapita_j159; assert_in_delta(0, (worksheet.costpercapita_j159||0), 0.001); end
  def test_costpercapita_k159; assert_in_delta(0, (worksheet.costpercapita_k159||0), 0.001); end
  def test_costpercapita_l159; assert_in_delta(0, (worksheet.costpercapita_l159||0), 0.001); end
  def test_costpercapita_m159; assert_in_delta(0, (worksheet.costpercapita_m159||0), 0.001); end
  def test_costpercapita_o159; assert_in_delta(0, (worksheet.costpercapita_o159||0), 0.001); end
  def test_costpercapita_p159; assert_in_delta(0, (worksheet.costpercapita_p159||0), 0.001); end
  def test_costpercapita_q159; assert_in_delta(0, (worksheet.costpercapita_q159||0), 0.001); end
  def test_costpercapita_r159; assert_in_delta(0, (worksheet.costpercapita_r159||0), 0.001); end
  def test_costpercapita_s159; assert_in_delta(0, (worksheet.costpercapita_s159||0), 0.001); end
  def test_costpercapita_t159; assert_in_delta(0, (worksheet.costpercapita_t159||0), 0.001); end
  def test_costpercapita_u159; assert_in_delta(0, (worksheet.costpercapita_u159||0), 0.001); end
  def test_costpercapita_v159; assert_in_delta(0, (worksheet.costpercapita_v159||0), 0.001); end
  def test_costpercapita_w159; assert_in_delta(0, (worksheet.costpercapita_w159||0), 0.001); end
  def test_costpercapita_y159; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_y159, 0.001); end
  def test_costpercapita_z159; assert_in_epsilon(174.47438193395197, worksheet.costpercapita_z159, 0.001); end
  def test_costpercapita_aa159; assert_in_epsilon(293.87037180931367, worksheet.costpercapita_aa159, 0.001); end
  def test_costpercapita_ab159; assert_in_epsilon(453.4878406551128, worksheet.costpercapita_ab159, 0.001); end
  def test_costpercapita_ac159; assert_in_epsilon(631.694894908348, worksheet.costpercapita_ac159, 0.001); end
  def test_costpercapita_ad159; assert_in_epsilon(710.8428952864191, worksheet.costpercapita_ad159, 0.001); end
  def test_costpercapita_ae159; assert_in_epsilon(773.2105240521341, worksheet.costpercapita_ae159, 0.001); end
  def test_costpercapita_af159; assert_in_epsilon(831.9739923748017, worksheet.costpercapita_af159, 0.001); end
  def test_costpercapita_ag159; assert_in_epsilon(877.619710833086, worksheet.costpercapita_ag159, 0.001); end
  def test_costpercapita_ai159; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_ai159, 0.001); end
  def test_costpercapita_aj159; assert_in_epsilon(174.47438193395197, worksheet.costpercapita_aj159, 0.001); end
  def test_costpercapita_ak159; assert_in_epsilon(293.87037180931367, worksheet.costpercapita_ak159, 0.001); end
  def test_costpercapita_al159; assert_in_epsilon(453.4878406551128, worksheet.costpercapita_al159, 0.001); end
  def test_costpercapita_am159; assert_in_epsilon(631.694894908348, worksheet.costpercapita_am159, 0.001); end
  def test_costpercapita_an159; assert_in_epsilon(710.8428952864191, worksheet.costpercapita_an159, 0.001); end
  def test_costpercapita_ao159; assert_in_epsilon(773.2105240521341, worksheet.costpercapita_ao159, 0.001); end
  def test_costpercapita_ap159; assert_in_epsilon(831.9739923748017, worksheet.costpercapita_ap159, 0.001); end
  def test_costpercapita_aq159; assert_in_epsilon(877.619710833086, worksheet.costpercapita_aq159, 0.001); end
  def test_costpercapita_as159; assert_in_epsilon(536.7211536646223, worksheet.costpercapita_as159, 0.001); end
  def test_costpercapita_at159; assert_in_epsilon(10123.334936058154, worksheet.costpercapita_at159, 0.001); end
  def test_costpercapita_av159; assert_in_delta(0, (worksheet.costpercapita_av159||0), 0.001); end
  def test_costpercapita_aw159; assert_in_epsilon(5, worksheet.costpercapita_aw159, 0.001); end
  def test_costpercapita_ay159; assert_in_delta(0, (worksheet.costpercapita_ay159||0), 0.001); end
  def test_costpercapita_az159; assert_in_delta(0, (worksheet.costpercapita_az159||0), 0.001); end
  def test_costpercapita_ba159; assert_in_delta(0, (worksheet.costpercapita_ba159||0), 0.001); end
  def test_costpercapita_bb159; assert_in_delta(0, (worksheet.costpercapita_bb159||0), 0.001); end
  def test_costpercapita_bc159; assert_in_delta(0, (worksheet.costpercapita_bc159||0), 0.001); end
  def test_costpercapita_bd159; assert_in_delta(0, (worksheet.costpercapita_bd159||0), 0.001); end
  def test_costpercapita_be159; assert_in_delta(0, (worksheet.costpercapita_be159||0), 0.001); end
  def test_costpercapita_bf159; assert_in_delta(0, (worksheet.costpercapita_bf159||0), 0.001); end
  def test_costpercapita_bg159; assert_in_delta(0, (worksheet.costpercapita_bg159||0), 0.001); end
  def test_costpercapita_bi159; assert_in_delta(0, (worksheet.costpercapita_bi159||0), 0.001); end
  def test_costpercapita_bj159; assert_in_delta(0, (worksheet.costpercapita_bj159||0), 0.001); end
  def test_costpercapita_bk159; assert_in_delta(0, (worksheet.costpercapita_bk159||0), 0.001); end
  def test_costpercapita_bl159; assert_in_delta(0, (worksheet.costpercapita_bl159||0), 0.001); end
  def test_costpercapita_bm159; assert_in_delta(0, (worksheet.costpercapita_bm159||0), 0.001); end
  def test_costpercapita_bn159; assert_in_delta(0, (worksheet.costpercapita_bn159||0), 0.001); end
  def test_costpercapita_bo159; assert_in_delta(0, (worksheet.costpercapita_bo159||0), 0.001); end
  def test_costpercapita_bp159; assert_in_delta(0, (worksheet.costpercapita_bp159||0), 0.001); end
  def test_costpercapita_bq159; assert_in_delta(0, (worksheet.costpercapita_bq159||0), 0.001); end
  def test_costpercapita_bs159; assert_in_epsilon(83.31577112843433, worksheet.costpercapita_bs159, 0.001); end
  def test_costpercapita_bt159; assert_in_epsilon(174.47438193395197, worksheet.costpercapita_bt159, 0.001); end
  def test_costpercapita_bu159; assert_in_epsilon(293.87037180931367, worksheet.costpercapita_bu159, 0.001); end
  def test_costpercapita_bv159; assert_in_epsilon(453.4878406551128, worksheet.costpercapita_bv159, 0.001); end
  def test_costpercapita_bw159; assert_in_epsilon(631.694894908348, worksheet.costpercapita_bw159, 0.001); end
  def test_costpercapita_bx159; assert_in_epsilon(710.8428952864191, worksheet.costpercapita_bx159, 0.001); end
  def test_costpercapita_by159; assert_in_epsilon(773.2105240521341, worksheet.costpercapita_by159, 0.001); end
  def test_costpercapita_bz159; assert_in_epsilon(831.9739923748017, worksheet.costpercapita_bz159, 0.001); end
  def test_costpercapita_ca159; assert_in_epsilon(877.619710833086, worksheet.costpercapita_ca159, 0.001); end
  def test_costpercapita_cc159; assert_in_epsilon(536.7211536646223, worksheet.costpercapita_cc159, 0.001); end
  def test_costpercapita_cd159; assert_in_epsilon(10123.334936058154, worksheet.costpercapita_cd159, 0.001); end
  def test_costpercapita_cf159; assert_in_delta(0, (worksheet.costpercapita_cf159||0), 0.001); end
  def test_costpercapita_cg159; assert_in_delta(0, (worksheet.costpercapita_cg159||0), 0.001); end
  def test_costpercapita_ch159; assert_in_delta(0, (worksheet.costpercapita_ch159||0), 0.001); end
  def test_costpercapita_ci159; assert_in_delta(0, (worksheet.costpercapita_ci159||0), 0.001); end
  def test_costpercapita_cj159; assert_in_delta(0, (worksheet.costpercapita_cj159||0), 0.001); end
  def test_costpercapita_ck159; assert_in_delta(0, (worksheet.costpercapita_ck159||0), 0.001); end
  def test_costpercapita_cl159; assert_in_delta(0, (worksheet.costpercapita_cl159||0), 0.001); end
  def test_costpercapita_cm159; assert_in_delta(0, (worksheet.costpercapita_cm159||0), 0.001); end
  def test_costpercapita_cn159; assert_in_delta(0, (worksheet.costpercapita_cn159||0), 0.001); end
  def test_costpercapita_cp159; assert_in_delta(0, (worksheet.costpercapita_cp159||0), 0.001); end
  def test_costpercapita_cq159; assert_in_delta(0, (worksheet.costpercapita_cq159||0), 0.001); end
  def test_costpercapita_cr159; assert_equal("ok", worksheet.costpercapita_cr159); end
  def test_costpercapita_a160; assert_equal("XVII.a", worksheet.costpercapita_a160); end
  def test_costpercapita_b160; assert_equal("District heating effective demand", worksheet.costpercapita_b160); end
  def test_costpercapita_c160; assert_equal("Buildings", worksheet.costpercapita_c160); end
  def test_costpercapita_e160; assert_in_epsilon(1.0507430093666497, worksheet.costpercapita_e160, 0.001); end
  def test_costpercapita_f160; assert_in_delta(0.7009898215621236, worksheet.costpercapita_f160, 0.001); end
  def test_costpercapita_g160; assert_in_delta(0.716427145257424, worksheet.costpercapita_g160, 0.001); end
  def test_costpercapita_h160; assert_in_delta(0.8179704200542951, worksheet.costpercapita_h160, 0.001); end
  def test_costpercapita_i160; assert_in_delta(0.8676643802193498, worksheet.costpercapita_i160, 0.001); end
  def test_costpercapita_j160; assert_in_delta(0.9250657874506701, worksheet.costpercapita_j160, 0.001); end
  def test_costpercapita_k160; assert_in_delta(0.9897284368102698, worksheet.costpercapita_k160, 0.001); end
  def test_costpercapita_l160; assert_in_epsilon(1.0616880295536881, worksheet.costpercapita_l160, 0.001); end
  def test_costpercapita_m160; assert_in_epsilon(1.141724279922934, worksheet.costpercapita_m160, 0.001); end
  def test_costpercapita_o160; assert_in_delta(0.1678801261862668, worksheet.costpercapita_o160, 0.001); end
  def test_costpercapita_p160; assert_in_delta(0.1703363805776067, worksheet.costpercapita_p160, 0.001); end
  def test_costpercapita_q160; assert_in_delta(0.17312125936589012, worksheet.costpercapita_q160, 0.001); end
  def test_costpercapita_r160; assert_in_delta(0.18069920735481337, worksheet.costpercapita_r160, 0.001); end
  def test_costpercapita_s160; assert_in_delta(0.18985195013220307, worksheet.costpercapita_s160, 0.001); end
  def test_costpercapita_t160; assert_in_delta(0.20073650215987648, worksheet.costpercapita_t160, 0.001); end
  def test_costpercapita_u160; assert_in_delta(0.2131993534892053, worksheet.costpercapita_u160, 0.001); end
  def test_costpercapita_v160; assert_in_delta(0.22720645872585804, worksheet.costpercapita_v160, 0.001); end
  def test_costpercapita_w160; assert_in_delta(0.24289154062210164, worksheet.costpercapita_w160, 0.001); end
  def test_costpercapita_y160; assert_in_delta(0, (worksheet.costpercapita_y160||0), 0.001); end
  def test_costpercapita_z160; assert_in_delta(0, (worksheet.costpercapita_z160||0), 0.001); end
  def test_costpercapita_aa160; assert_in_delta(0, (worksheet.costpercapita_aa160||0), 0.001); end
  def test_costpercapita_ab160; assert_in_delta(0, (worksheet.costpercapita_ab160||0), 0.001); end
  def test_costpercapita_ac160; assert_in_delta(0, (worksheet.costpercapita_ac160||0), 0.001); end
  def test_costpercapita_ad160; assert_in_delta(0, (worksheet.costpercapita_ad160||0), 0.001); end
  def test_costpercapita_ae160; assert_in_delta(0, (worksheet.costpercapita_ae160||0), 0.001); end
  def test_costpercapita_af160; assert_in_delta(0, (worksheet.costpercapita_af160||0), 0.001); end
  def test_costpercapita_ag160; assert_in_delta(0, (worksheet.costpercapita_ag160||0), 0.001); end
  def test_costpercapita_ai160; assert_in_epsilon(1.2186231355529165, worksheet.costpercapita_ai160, 0.001); end
  def test_costpercapita_aj160; assert_in_delta(0.8713262021397302, worksheet.costpercapita_aj160, 0.001); end
  def test_costpercapita_ak160; assert_in_delta(0.8895484046233141, worksheet.costpercapita_ak160, 0.001); end
  def test_costpercapita_al160; assert_in_delta(0.9986696274091086, worksheet.costpercapita_al160, 0.001); end
  def test_costpercapita_am160; assert_in_epsilon(1.0575163303515527, worksheet.costpercapita_am160, 0.001); end
  def test_costpercapita_an160; assert_in_epsilon(1.1258022896105466, worksheet.costpercapita_an160, 0.001); end
  def test_costpercapita_ao160; assert_in_epsilon(1.202927790299475, worksheet.costpercapita_ao160, 0.001); end
  def test_costpercapita_ap160; assert_in_epsilon(1.2888944882795463, worksheet.costpercapita_ap160, 0.001); end
  def test_costpercapita_aq160; assert_in_epsilon(1.3846158205450356, worksheet.costpercapita_aq160, 0.001); end
  def test_costpercapita_as160; assert_in_epsilon(1.1153248987568025, worksheet.costpercapita_as160, 0.001); end
  def test_costpercapita_at160; assert_in_epsilon(22.018416242298056, worksheet.costpercapita_at160, 0.001); end
  def test_costpercapita_av160; assert_in_delta(0.1, worksheet.costpercapita_av160, 0.001); end
  def test_costpercapita_aw160; assert_in_epsilon(15, worksheet.costpercapita_aw160, 0.001); end
  def test_costpercapita_ay160; assert_in_delta(0.4144354559383107, worksheet.costpercapita_ay160, 0.001); end
  def test_costpercapita_az160; assert_in_delta(0.4608088970018873, worksheet.costpercapita_az160, 0.001); end
  def test_costpercapita_ba160; assert_in_delta(0.4709569132581577, worksheet.costpercapita_ba160, 0.001); end
  def test_costpercapita_bb160; assert_in_delta(0.5377083025334425, worksheet.costpercapita_bb160, 0.001); end
  def test_costpercapita_bc160; assert_in_delta(0.5703755656903943, worksheet.costpercapita_bc160, 0.001); end
  def test_costpercapita_bd160; assert_in_delta(0.6081094647271532, worksheet.costpercapita_bd160, 0.001); end
  def test_costpercapita_be160; assert_in_delta(0.6506166784014052, worksheet.costpercapita_be160, 0.001); end
  def test_costpercapita_bf160; assert_in_delta(0.697920675607677, worksheet.costpercapita_bf160, 0.001); end
  def test_costpercapita_bg160; assert_in_delta(0.7505340162274172, worksheet.costpercapita_bg160, 0.001); end
  def test_costpercapita_bi160; assert_in_delta(0.4144354559383107, worksheet.costpercapita_bi160, 0.001); end
  def test_costpercapita_bj160; assert_in_delta(0.861578315080544, worksheet.costpercapita_bj160, 0.001); end
  def test_costpercapita_bk160; assert_in_epsilon(1.3043287478375358, worksheet.costpercapita_bk160, 0.001); end
  def test_costpercapita_bl160; assert_in_epsilon(1.4260044905953613, worksheet.costpercapita_bl160, 0.001); end
  def test_costpercapita_bm160; assert_in_epsilon(1.5372998259785426, worksheet.costpercapita_bm160, 0.001); end
  def test_costpercapita_bn160; assert_in_epsilon(1.6757474128717504, worksheet.costpercapita_bn160, 0.001); end
  def test_costpercapita_bo160; assert_in_epsilon(1.7908198211858186, worksheet.costpercapita_bo160, 0.001); end
  def test_costpercapita_bp160; assert_in_epsilon(1.918827766446855, worksheet.costpercapita_bp160, 0.001); end
  def test_costpercapita_bq160; assert_in_epsilon(2.061169070701741, worksheet.costpercapita_bq160, 0.001); end
  def test_costpercapita_bs160; assert_in_delta(0.5823155821245776, worksheet.costpercapita_bs160, 0.001); end
  def test_costpercapita_bt160; assert_in_epsilon(1.0319146956581506, worksheet.costpercapita_bt160, 0.001); end
  def test_costpercapita_bu160; assert_in_epsilon(1.477450007203426, worksheet.costpercapita_bu160, 0.001); end
  def test_costpercapita_bv160; assert_in_epsilon(1.6067036979501748, worksheet.costpercapita_bv160, 0.001); end
  def test_costpercapita_bw160; assert_in_epsilon(1.7271517761107456, worksheet.costpercapita_bw160, 0.001); end
  def test_costpercapita_bx160; assert_in_epsilon(1.8764839150316268, worksheet.costpercapita_bx160, 0.001); end
  def test_costpercapita_by160; assert_in_epsilon(2.0040191746750238, worksheet.costpercapita_by160, 0.001); end
  def test_costpercapita_bz160; assert_in_epsilon(2.1460342251727127, worksheet.costpercapita_bz160, 0.001); end
  def test_costpercapita_ca160; assert_in_epsilon(2.3040606113238424, worksheet.costpercapita_ca160, 0.001); end
  def test_costpercapita_cc160; assert_in_epsilon(1.6395704094722534, worksheet.costpercapita_cc160, 0.001); end
  def test_costpercapita_cd160; assert_in_epsilon(33.190531432112195, worksheet.costpercapita_cd160, 0.001); end
  def test_costpercapita_cf160; assert_in_delta(-0.636307553428339, worksheet.costpercapita_cf160, 0.001); end
  def test_costpercapita_cg160; assert_in_delta(0.16058849351842047, worksheet.costpercapita_cg160, 0.001); end
  def test_costpercapita_ch160; assert_in_delta(0.5879016025801118, worksheet.costpercapita_ch160, 0.001); end
  def test_costpercapita_ci160; assert_in_delta(0.6080340705410661, worksheet.costpercapita_ci160, 0.001); end
  def test_costpercapita_cj160; assert_in_delta(0.6696354457591929, worksheet.costpercapita_cj160, 0.001); end
  def test_costpercapita_ck160; assert_in_delta(0.7506816254210803, worksheet.costpercapita_ck160, 0.001); end
  def test_costpercapita_cl160; assert_in_delta(0.8010913843755488, worksheet.costpercapita_cl160, 0.001); end
  def test_costpercapita_cm160; assert_in_delta(0.8571397368931667, worksheet.costpercapita_cm160, 0.001); end
  def test_costpercapita_cn160; assert_in_delta(0.9194447907788069, worksheet.costpercapita_cn160, 0.001); end
  def test_costpercapita_cp160; assert_in_delta(0.5242455107154504, worksheet.costpercapita_cp160, 0.001); end
  def test_costpercapita_cq160; assert_in_epsilon(11.172115189814132, worksheet.costpercapita_cq160, 0.001); end
  def test_costpercapita_cr160; assert_equal("ok", worksheet.costpercapita_cr160); end
  def test_costpercapita_a161; assert_equal("XVIII.a", worksheet.costpercapita_a161); end
  def test_costpercapita_b161; assert_equal("Storage of captured CO2", worksheet.costpercapita_b161); end
  def test_costpercapita_c161; assert_equal("Other", worksheet.costpercapita_c161); end
  def test_costpercapita_e161; assert_in_delta(0, (worksheet.costpercapita_e161||0), 0.001); end
  def test_costpercapita_f161; assert_in_epsilon(2.510941756577549, worksheet.costpercapita_f161, 0.001); end
  def test_costpercapita_g161; assert_in_epsilon(5.721390312179909, worksheet.costpercapita_g161, 0.001); end
  def test_costpercapita_h161; assert_in_epsilon(5.427672328465383, worksheet.costpercapita_h161, 0.001); end
  def test_costpercapita_i161; assert_in_epsilon(5.170709128499708, worksheet.costpercapita_i161, 0.001); end
  def test_costpercapita_j161; assert_in_epsilon(4.947100165718051, worksheet.costpercapita_j161, 0.001); end
  def test_costpercapita_k161; assert_in_epsilon(4.830627025249025, worksheet.costpercapita_k161, 0.001); end
  def test_costpercapita_l161; assert_in_epsilon(4.640836506622003, worksheet.costpercapita_l161, 0.001); end
  def test_costpercapita_m161; assert_in_epsilon(4.466117568649894, worksheet.costpercapita_m161, 0.001); end
  def test_costpercapita_o161; assert_in_delta(0, (worksheet.costpercapita_o161||0), 0.001); end
  def test_costpercapita_p161; assert_in_delta(0.09799487630794962, worksheet.costpercapita_p161, 0.001); end
  def test_costpercapita_q161; assert_in_delta(0.2749372958886066, worksheet.costpercapita_q161, 0.001); end
  def test_costpercapita_r161; assert_in_delta(0.3098192492647166, worksheet.costpercapita_r161, 0.001); end
  def test_costpercapita_s161; assert_in_delta(0.3418281416008444, worksheet.costpercapita_s161, 0.001); end
  def test_costpercapita_t161; assert_in_delta(0.3717038422174498, worksheet.costpercapita_t161, 0.001); end
  def test_costpercapita_u161; assert_in_delta(0.4065592991466538, worksheet.costpercapita_u161, 0.001); end
  def test_costpercapita_v161; assert_in_delta(0.4324794721308952, worksheet.costpercapita_v161, 0.001); end
  def test_costpercapita_w161; assert_in_delta(0.45651368743202253, worksheet.costpercapita_w161, 0.001); end
  def test_costpercapita_y161; assert_in_delta(0, (worksheet.costpercapita_y161||0), 0.001); end
  def test_costpercapita_z161; assert_in_delta(0, (worksheet.costpercapita_z161||0), 0.001); end
  def test_costpercapita_aa161; assert_in_delta(0, (worksheet.costpercapita_aa161||0), 0.001); end
  def test_costpercapita_ab161; assert_in_delta(0, (worksheet.costpercapita_ab161||0), 0.001); end
  def test_costpercapita_ac161; assert_in_delta(0, (worksheet.costpercapita_ac161||0), 0.001); end
  def test_costpercapita_ad161; assert_in_delta(0, (worksheet.costpercapita_ad161||0), 0.001); end
  def test_costpercapita_ae161; assert_in_delta(0, (worksheet.costpercapita_ae161||0), 0.001); end
  def test_costpercapita_af161; assert_in_delta(0, (worksheet.costpercapita_af161||0), 0.001); end
  def test_costpercapita_ag161; assert_in_delta(0, (worksheet.costpercapita_ag161||0), 0.001); end
  def test_costpercapita_ai161; assert_in_delta(0, (worksheet.costpercapita_ai161||0), 0.001); end
  def test_costpercapita_aj161; assert_in_epsilon(2.6089366328854986, worksheet.costpercapita_aj161, 0.001); end
  def test_costpercapita_ak161; assert_in_epsilon(5.996327608068515, worksheet.costpercapita_ak161, 0.001); end
  def test_costpercapita_al161; assert_in_epsilon(5.7374915777301, worksheet.costpercapita_al161, 0.001); end
  def test_costpercapita_am161; assert_in_epsilon(5.512537270100553, worksheet.costpercapita_am161, 0.001); end
  def test_costpercapita_an161; assert_in_epsilon(5.3188040079355, worksheet.costpercapita_an161, 0.001); end
  def test_costpercapita_ao161; assert_in_epsilon(5.2371863243956795, worksheet.costpercapita_ao161, 0.001); end
  def test_costpercapita_ap161; assert_in_epsilon(5.073315978752898, worksheet.costpercapita_ap161, 0.001); end
  def test_costpercapita_aq161; assert_in_epsilon(4.9226312560819165, worksheet.costpercapita_aq161, 0.001); end
  def test_costpercapita_as161; assert_in_epsilon(4.489692295105629, worksheet.costpercapita_as161, 0.001); end
  def test_costpercapita_at161; assert_in_epsilon(98.11676604939936, worksheet.costpercapita_at161, 0.001); end
  def test_costpercapita_av161; assert_in_delta(0.1, worksheet.costpercapita_av161, 0.001); end
  def test_costpercapita_aw161; assert_in_epsilon(15, worksheet.costpercapita_aw161, 0.001); end
  def test_costpercapita_ay161; assert_in_delta(0, (worksheet.costpercapita_ay161||0), 0.001); end
  def test_costpercapita_az161; assert_in_epsilon(1.6506149814073152, worksheet.costpercapita_az161, 0.001); end
  def test_costpercapita_ba161; assert_in_epsilon(3.76106396694557, worksheet.costpercapita_ba161, 0.001); end
  def test_costpercapita_bb161; assert_in_epsilon(3.567982903652108, worksheet.costpercapita_bb161, 0.001); end
  def test_costpercapita_bc161; assert_in_epsilon(3.399063291549347, worksheet.costpercapita_bc161, 0.001); end
  def test_costpercapita_bd161; assert_in_epsilon(3.2520697171354844, worksheet.costpercapita_bd161, 0.001); end
  def test_costpercapita_be161; assert_in_epsilon(3.1755038987185036, worksheet.costpercapita_be161, 0.001); end
  def test_costpercapita_bf161; assert_in_epsilon(3.0507415172119647, worksheet.costpercapita_bf161, 0.001); end
  def test_costpercapita_bg161; assert_in_epsilon(2.9358867238672466, worksheet.costpercapita_bg161, 0.001); end
  def test_costpercapita_bi161; assert_in_delta(0, (worksheet.costpercapita_bi161||0), 0.001); end
  def test_costpercapita_bj161; assert_in_epsilon(1.6506149814073152, worksheet.costpercapita_bj161, 0.001); end
  def test_costpercapita_bk161; assert_in_epsilon(5.357640866761144, worksheet.costpercapita_bk161, 0.001); end
  def test_costpercapita_bl161; assert_in_epsilon(8.759732592706198, worksheet.costpercapita_bl161, 0.001); end
  def test_costpercapita_bm161; assert_in_epsilon(10.414605455483043, worksheet.costpercapita_bm161, 0.001); end
  def test_costpercapita_bn161; assert_in_epsilon(9.959820610581916, worksheet.costpercapita_bn161, 0.001); end
  def test_costpercapita_bo161; assert_in_epsilon(9.60643252102849, worksheet.costpercapita_bo161, 0.001); end
  def test_costpercapita_bp161; assert_in_epsilon(9.28212696563229, worksheet.costpercapita_bp161, 0.001); end
  def test_costpercapita_bq161; assert_in_epsilon(8.983777003909681, worksheet.costpercapita_bq161, 0.001); end
  def test_costpercapita_bs161; assert_in_delta(0, (worksheet.costpercapita_bs161||0), 0.001); end
  def test_costpercapita_bt161; assert_in_epsilon(1.7486098577152647, worksheet.costpercapita_bt161, 0.001); end
  def test_costpercapita_bu161; assert_in_epsilon(5.63257816264975, worksheet.costpercapita_bu161, 0.001); end
  def test_costpercapita_bv161; assert_in_epsilon(9.069551841970915, worksheet.costpercapita_bv161, 0.001); end
  def test_costpercapita_bw161; assert_in_epsilon(10.75643359708389, worksheet.costpercapita_bw161, 0.001); end
  def test_costpercapita_bx161; assert_in_epsilon(10.331524452799366, worksheet.costpercapita_bx161, 0.001); end
  def test_costpercapita_by161; assert_in_epsilon(10.012991820175143, worksheet.costpercapita_by161, 0.001); end
  def test_costpercapita_bz161; assert_in_epsilon(9.714606437763186, worksheet.costpercapita_bz161, 0.001); end
  def test_costpercapita_ca161; assert_in_epsilon(9.440290691341705, worksheet.costpercapita_ca161, 0.001); end
  def test_costpercapita_cc161; assert_in_epsilon(7.411842984611024, worksheet.costpercapita_cc161, 0.001); end
  def test_costpercapita_cd161; assert_in_epsilon(148.56040051821023, worksheet.costpercapita_cd161, 0.001); end
  def test_costpercapita_cf161; assert_in_delta(0, (worksheet.costpercapita_cf161||0), 0.001); end
  def test_costpercapita_cg161; assert_in_delta(-0.8603267751702336, worksheet.costpercapita_cg161, 0.001); end
  def test_costpercapita_ch161; assert_in_delta(-0.3637494454187651, worksheet.costpercapita_ch161, 0.001); end
  def test_costpercapita_ci161; assert_in_epsilon(3.332060264240815, worksheet.costpercapita_ci161, 0.001); end
  def test_costpercapita_cj161; assert_in_epsilon(5.243896326983336, worksheet.costpercapita_cj161, 0.001); end
  def test_costpercapita_ck161; assert_in_epsilon(5.012720444863866, worksheet.costpercapita_ck161, 0.001); end
  def test_costpercapita_cl161; assert_in_epsilon(4.775805495779464, worksheet.costpercapita_cl161, 0.001); end
  def test_costpercapita_cm161; assert_in_epsilon(4.641290459010288, worksheet.costpercapita_cm161, 0.001); end
  def test_costpercapita_cn161; assert_in_epsilon(4.517659435259787, worksheet.costpercapita_cn161, 0.001); end
  def test_costpercapita_cp161; assert_in_epsilon(2.9221506895053952, worksheet.costpercapita_cp161, 0.001); end
  def test_costpercapita_cq161; assert_in_epsilon(50.443634468810856, worksheet.costpercapita_cq161, 0.001); end
  def test_costpercapita_cr161; assert_equal("ok", worksheet.costpercapita_cr161); end
  def test_costpercapita_a162; assert_equal("Total", worksheet.costpercapita_a162); end
  def test_costpercapita_b162; assert_equal("Total", worksheet.costpercapita_b162); end
  def test_costpercapita_c162; assert_equal("Total", worksheet.costpercapita_c162); end
  def test_costpercapita_e162; assert_in_epsilon(1883.7330265281137, worksheet.costpercapita_e162, 0.001); end
  def test_costpercapita_f162; assert_in_epsilon(1900.2898702324255, worksheet.costpercapita_f162, 0.001); end
  def test_costpercapita_g162; assert_in_epsilon(2024.6040001097692, worksheet.costpercapita_g162, 0.001); end
  def test_costpercapita_h162; assert_in_epsilon(2193.4552828425835, worksheet.costpercapita_h162, 0.001); end
  def test_costpercapita_i162; assert_in_epsilon(2249.293019499348, worksheet.costpercapita_i162, 0.001); end
  def test_costpercapita_j162; assert_in_epsilon(2398.3071236743585, worksheet.costpercapita_j162, 0.001); end
  def test_costpercapita_k162; assert_in_epsilon(2595.13738786056, worksheet.costpercapita_k162, 0.001); end
  def test_costpercapita_l162; assert_in_epsilon(2715.0817054328995, worksheet.costpercapita_l162, 0.001); end
  def test_costpercapita_m162; assert_in_epsilon(2857.956661246942, worksheet.costpercapita_m162, 0.001); end
  def test_costpercapita_o162; assert_in_epsilon(1598.3090215807965, worksheet.costpercapita_o162, 0.001); end
  def test_costpercapita_p162; assert_in_epsilon(1593.3297719137815, worksheet.costpercapita_p162, 0.001); end
  def test_costpercapita_q162; assert_in_epsilon(1633.4218638518146, worksheet.costpercapita_q162, 0.001); end
  def test_costpercapita_r162; assert_in_epsilon(1691.0899689690025, worksheet.costpercapita_r162, 0.001); end
  def test_costpercapita_s162; assert_in_epsilon(1732.0670103406671, worksheet.costpercapita_s162, 0.001); end
  def test_costpercapita_t162; assert_in_epsilon(1775.2603832551515, worksheet.costpercapita_t162, 0.001); end
  def test_costpercapita_u162; assert_in_epsilon(1817.8969584881513, worksheet.costpercapita_u162, 0.001); end
  def test_costpercapita_v162; assert_in_epsilon(1859.5838983342164, worksheet.costpercapita_v162, 0.001); end
  def test_costpercapita_w162; assert_in_epsilon(1910.8565056362436, worksheet.costpercapita_w162, 0.001); end
  def test_costpercapita_y162; assert_in_epsilon(752.0153604039895, worksheet.costpercapita_y162, 0.001); end
  def test_costpercapita_z162; assert_in_epsilon(933.144204895521, worksheet.costpercapita_z162, 0.001); end
  def test_costpercapita_aa162; assert_in_epsilon(1133.774379146809, worksheet.costpercapita_aa162, 0.001); end
  def test_costpercapita_ab162; assert_in_epsilon(1335.0830595008663, worksheet.costpercapita_ab162, 0.001); end
  def test_costpercapita_ac162; assert_in_epsilon(1547.1016554321413, worksheet.costpercapita_ac162, 0.001); end
  def test_costpercapita_ad162; assert_in_epsilon(1595.3900522389088, worksheet.costpercapita_ad162, 0.001); end
  def test_costpercapita_ae162; assert_in_epsilon(1631.9256136738982, worksheet.costpercapita_ae162, 0.001); end
  def test_costpercapita_af162; assert_in_epsilon(1674.0018203383718, worksheet.costpercapita_af162, 0.001); end
  def test_costpercapita_ag162; assert_in_epsilon(1701.2662397759377, worksheet.costpercapita_ag162, 0.001); end
  def test_costpercapita_ai162; assert_in_epsilon(4234.057408512899, worksheet.costpercapita_ai162, 0.001); end
  def test_costpercapita_aj162; assert_in_epsilon(4426.763847041729, worksheet.costpercapita_aj162, 0.001); end
  def test_costpercapita_ak162; assert_in_epsilon(4791.800243108391, worksheet.costpercapita_ak162, 0.001); end
  def test_costpercapita_al162; assert_in_epsilon(5219.62831131245, worksheet.costpercapita_al162, 0.001); end
  def test_costpercapita_am162; assert_in_epsilon(5528.461685272155, worksheet.costpercapita_am162, 0.001); end
  def test_costpercapita_an162; assert_in_epsilon(5768.957559168418, worksheet.costpercapita_an162, 0.001); end
  def test_costpercapita_ao162; assert_in_epsilon(6044.959960022609, worksheet.costpercapita_ao162, 0.001); end
  def test_costpercapita_ap162; assert_in_epsilon(6248.667424105488, worksheet.costpercapita_ap162, 0.001); end
  def test_costpercapita_aq162; assert_in_epsilon(6470.079406659123, worksheet.costpercapita_aq162, 0.001); end
  def test_costpercapita_as162; assert_in_epsilon(5414.819538355918, worksheet.costpercapita_as162, 0.001); end
  def test_costpercapita_at162; assert_in_epsilon(110477.19078264243, worksheet.costpercapita_at162, 0.001); end
  def test_costpercapita_ay162; assert_in_epsilon(756.7609553823909, worksheet.costpercapita_ay162, 0.001); end
  def test_costpercapita_az162; assert_in_epsilon(1272.3569130610333, worksheet.costpercapita_az162, 0.001); end
  def test_costpercapita_ba162; assert_in_epsilon(1357.7168122475828, worksheet.costpercapita_ba162, 0.001); end
  def test_costpercapita_bb162; assert_in_epsilon(1474.3978635003582, worksheet.costpercapita_bb162, 0.001); end
  def test_costpercapita_bc162; assert_in_epsilon(1519.901975436995, worksheet.costpercapita_bc162, 0.001); end
  def test_costpercapita_bd162; assert_in_epsilon(1622.3226641081988, worksheet.costpercapita_bd162, 0.001); end
  def test_costpercapita_be162; assert_in_epsilon(1750.524196621344, worksheet.costpercapita_be162, 0.001); end
  def test_costpercapita_bf162; assert_in_epsilon(1834.1937753866534, worksheet.costpercapita_bf162, 0.001); end
  def test_costpercapita_bg162; assert_in_epsilon(1933.5739213583079, worksheet.costpercapita_bg162, 0.001); end
  def test_costpercapita_bi162; assert_in_epsilon(756.7609553823909, worksheet.costpercapita_bi162, 0.001); end
  def test_costpercapita_bj162; assert_in_epsilon(1963.446173154227, worksheet.costpercapita_bj162, 0.001); end
  def test_costpercapita_bk162; assert_in_epsilon(3156.976151678406, worksheet.costpercapita_bk162, 0.001); end
  def test_costpercapita_bl162; assert_in_epsilon(3860.539760298534, worksheet.costpercapita_bl162, 0.001); end
  def test_costpercapita_bm162; assert_in_epsilon(4184.198465302866, worksheet.costpercapita_bm162, 0.001); end
  def test_costpercapita_bn162; assert_in_epsilon(4494.890286393293, worksheet.costpercapita_bn162, 0.001); end
  def test_costpercapita_bo162; assert_in_epsilon(4766.232532438681, worksheet.costpercapita_bo162, 0.001); end
  def test_costpercapita_bp162; assert_in_epsilon(5136.159472032096, worksheet.costpercapita_bp162, 0.001); end
  def test_costpercapita_bq162; assert_in_epsilon(5315.977539666274, worksheet.costpercapita_bq162, 0.001); end
  def test_costpercapita_bs162; assert_in_epsilon(3107.0853373671757, worksheet.costpercapita_bs162, 0.001); end
  def test_costpercapita_bt162; assert_in_epsilon(4489.920149963528, worksheet.costpercapita_bt162, 0.001); end
  def test_costpercapita_bu162; assert_in_epsilon(5924.172394677031, worksheet.costpercapita_bu162, 0.001); end
  def test_costpercapita_bv162; assert_in_epsilon(6886.7127887684, worksheet.costpercapita_bv162, 0.001); end
  def test_costpercapita_bw162; assert_in_epsilon(7463.367131075673, worksheet.costpercapita_bw162, 0.001); end
  def test_costpercapita_bx162; assert_in_epsilon(7865.540721887353, worksheet.costpercapita_bx162, 0.001); end
  def test_costpercapita_by162; assert_in_epsilon(8216.05510460073, worksheet.costpercapita_by162, 0.001); end
  def test_costpercapita_bz162; assert_in_epsilon(8669.745190704683, worksheet.costpercapita_bz162, 0.001); end
  def test_costpercapita_ca162; assert_in_epsilon(8928.100285078457, worksheet.costpercapita_ca162, 0.001); end
  def test_costpercapita_cc162; assert_in_epsilon(6838.966567124782, worksheet.costpercapita_cc162, 0.001); end
  def test_costpercapita_cd162; assert_in_epsilon(138749.205394844, worksheet.costpercapita_cd162, 0.001); end
  def test_costpercapita_cf162; assert_in_epsilon(-1126.9720711457226, worksheet.costpercapita_cf162, 0.001); end
  def test_costpercapita_cg162; assert_in_epsilon(63.156302921801625, worksheet.costpercapita_cg162, 0.001); end
  def test_costpercapita_ch162; assert_in_epsilon(1132.3721515686368, worksheet.costpercapita_ch162, 0.001); end
  def test_costpercapita_ci162; assert_in_epsilon(1667.0844774559503, worksheet.costpercapita_ci162, 0.001); end
  def test_costpercapita_cj162; assert_in_epsilon(1934.9054458035178, worksheet.costpercapita_cj162, 0.001); end
  def test_costpercapita_ck162; assert_in_epsilon(2096.583162718934, worksheet.costpercapita_ck162, 0.001); end
  def test_costpercapita_cl162; assert_in_epsilon(2171.0951445781216, worksheet.costpercapita_cl162, 0.001); end
  def test_costpercapita_cm162; assert_in_epsilon(2421.077766599197, worksheet.costpercapita_cm162, 0.001); end
  def test_costpercapita_cn162; assert_in_epsilon(2458.0208784193323, worksheet.costpercapita_cn162, 0.001); end
  def test_costpercapita_cp162; assert_in_epsilon(1424.1470287688633, worksheet.costpercapita_cp162, 0.001); end
  def test_costpercapita_cq162; assert_in_epsilon(28272.0146122016, worksheet.costpercapita_cq162, 0.001); end
  def test_costpercapita_cr162; assert_equal("ok", worksheet.costpercapita_cr162); end
  def test_costpercapita_c164; assert_equal("£m", worksheet.costpercapita_c164); end
  def test_costpercapita_e164; assert_equal("C1.Low", worksheet.costpercapita_e164); end
  def test_costpercapita_f164; assert_equal("Low estimate of capital costs", worksheet.costpercapita_f164); end
  def test_costpercapita_o164; assert_equal("C2.Low", worksheet.costpercapita_o164); end
  def test_costpercapita_p164; assert_equal("Low estimate of operating costs", worksheet.costpercapita_p164); end
  def test_costpercapita_y164; assert_equal("C3.Low", worksheet.costpercapita_y164); end
  def test_costpercapita_z164; assert_equal("Low estimate of fuel costs", worksheet.costpercapita_z164); end
  def test_costpercapita_ai164; assert_equal("Low estimate of total cost", worksheet.costpercapita_ai164); end
  def test_costpercapita_as164; assert_equal("Cashflow capital basis", worksheet.costpercapita_as164); end
  def test_costpercapita_av164; assert_equal("Loan", worksheet.costpercapita_av164); end
  def test_costpercapita_ay164; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay164); end
  def test_costpercapita_bi164; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi164); end
  def test_costpercapita_bs164; assert_equal("Total cost (ammortised capital)", worksheet.costpercapita_bs164); end
  def test_costpercapita_cc164; assert_equal("Amortised Capital", worksheet.costpercapita_cc164); end
  def test_costpercapita_cf164; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf164); end
  def test_costpercapita_cp164; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp164); end
  def test_costpercapita_c165; assert_equal("Category", worksheet.costpercapita_c165); end
  def test_costpercapita_e165; assert_equal("2010", worksheet.costpercapita_e165); end
  def test_costpercapita_f165; assert_equal("2015", worksheet.costpercapita_f165); end
  def test_costpercapita_g165; assert_equal("2020", worksheet.costpercapita_g165); end
  def test_costpercapita_h165; assert_equal("2025", worksheet.costpercapita_h165); end
  def test_costpercapita_i165; assert_equal("2030", worksheet.costpercapita_i165); end
  def test_costpercapita_j165; assert_equal("2035", worksheet.costpercapita_j165); end
  def test_costpercapita_k165; assert_equal("2040", worksheet.costpercapita_k165); end
  def test_costpercapita_l165; assert_equal("2045", worksheet.costpercapita_l165); end
  def test_costpercapita_m165; assert_equal("2050", worksheet.costpercapita_m165); end
  def test_costpercapita_o165; assert_equal("2010", worksheet.costpercapita_o165); end
  def test_costpercapita_p165; assert_equal("2015", worksheet.costpercapita_p165); end
  def test_costpercapita_q165; assert_equal("2020", worksheet.costpercapita_q165); end
  def test_costpercapita_r165; assert_equal("2025", worksheet.costpercapita_r165); end
  def test_costpercapita_s165; assert_equal("2030", worksheet.costpercapita_s165); end
  def test_costpercapita_t165; assert_equal("2035", worksheet.costpercapita_t165); end
  def test_costpercapita_u165; assert_equal("2040", worksheet.costpercapita_u165); end
  def test_costpercapita_v165; assert_equal("2045", worksheet.costpercapita_v165); end
  def test_costpercapita_w165; assert_equal("2050", worksheet.costpercapita_w165); end
  def test_costpercapita_y165; assert_equal("2010", worksheet.costpercapita_y165); end
  def test_costpercapita_z165; assert_equal("2015", worksheet.costpercapita_z165); end
  def test_costpercapita_aa165; assert_equal("2020", worksheet.costpercapita_aa165); end
  def test_costpercapita_ab165; assert_equal("2025", worksheet.costpercapita_ab165); end
  def test_costpercapita_ac165; assert_equal("2030", worksheet.costpercapita_ac165); end
  def test_costpercapita_ad165; assert_equal("2035", worksheet.costpercapita_ad165); end
  def test_costpercapita_ae165; assert_equal("2040", worksheet.costpercapita_ae165); end
  def test_costpercapita_af165; assert_equal("2045", worksheet.costpercapita_af165); end
  def test_costpercapita_ag165; assert_equal("2050", worksheet.costpercapita_ag165); end
  def test_costpercapita_ai165; assert_equal("2010", worksheet.costpercapita_ai165); end
  def test_costpercapita_aj165; assert_equal("2015", worksheet.costpercapita_aj165); end
  def test_costpercapita_ak165; assert_equal("2020", worksheet.costpercapita_ak165); end
  def test_costpercapita_al165; assert_equal("2025", worksheet.costpercapita_al165); end
  def test_costpercapita_am165; assert_equal("2030", worksheet.costpercapita_am165); end
  def test_costpercapita_an165; assert_equal("2035", worksheet.costpercapita_an165); end
  def test_costpercapita_ao165; assert_equal("2040", worksheet.costpercapita_ao165); end
  def test_costpercapita_ap165; assert_equal("2045", worksheet.costpercapita_ap165); end
  def test_costpercapita_aq165; assert_equal("2050", worksheet.costpercapita_aq165); end
  def test_costpercapita_as165; assert_equal("Mean", worksheet.costpercapita_as165); end
  def test_costpercapita_at165; assert_equal("NPV", worksheet.costpercapita_at165); end
  def test_costpercapita_av165; assert_equal("Rate", worksheet.costpercapita_av165); end
  def test_costpercapita_aw165; assert_equal("Years", worksheet.costpercapita_aw165); end
  def test_costpercapita_ay165; assert_in_epsilon(2010, worksheet.costpercapita_ay165, 0.001); end
  def test_costpercapita_az165; assert_in_epsilon(2015, worksheet.costpercapita_az165, 0.001); end
  def test_costpercapita_ba165; assert_in_epsilon(2020, worksheet.costpercapita_ba165, 0.001); end
  def test_costpercapita_bb165; assert_in_epsilon(2025, worksheet.costpercapita_bb165, 0.001); end
  def test_costpercapita_bc165; assert_in_epsilon(2030, worksheet.costpercapita_bc165, 0.001); end
  def test_costpercapita_bd165; assert_in_epsilon(2035, worksheet.costpercapita_bd165, 0.001); end
  def test_costpercapita_be165; assert_in_epsilon(2040, worksheet.costpercapita_be165, 0.001); end
  def test_costpercapita_bf165; assert_in_epsilon(2045, worksheet.costpercapita_bf165, 0.001); end
  def test_costpercapita_bg165; assert_in_epsilon(2050, worksheet.costpercapita_bg165, 0.001); end
  def test_costpercapita_bi165; assert_in_epsilon(2010, worksheet.costpercapita_bi165, 0.001); end
  def test_costpercapita_bj165; assert_in_epsilon(2015, worksheet.costpercapita_bj165, 0.001); end
  def test_costpercapita_bk165; assert_in_epsilon(2020, worksheet.costpercapita_bk165, 0.001); end
  def test_costpercapita_bl165; assert_in_epsilon(2025, worksheet.costpercapita_bl165, 0.001); end
  def test_costpercapita_bm165; assert_in_epsilon(2030, worksheet.costpercapita_bm165, 0.001); end
  def test_costpercapita_bn165; assert_in_epsilon(2035, worksheet.costpercapita_bn165, 0.001); end
  def test_costpercapita_bo165; assert_in_epsilon(2040, worksheet.costpercapita_bo165, 0.001); end
  def test_costpercapita_bp165; assert_in_epsilon(2045, worksheet.costpercapita_bp165, 0.001); end
  def test_costpercapita_bq165; assert_in_epsilon(2050, worksheet.costpercapita_bq165, 0.001); end
  def test_costpercapita_bs165; assert_equal("2010", worksheet.costpercapita_bs165); end
  def test_costpercapita_bt165; assert_equal("2015", worksheet.costpercapita_bt165); end
  def test_costpercapita_bu165; assert_equal("2020", worksheet.costpercapita_bu165); end
  def test_costpercapita_bv165; assert_equal("2025", worksheet.costpercapita_bv165); end
  def test_costpercapita_bw165; assert_equal("2030", worksheet.costpercapita_bw165); end
  def test_costpercapita_bx165; assert_equal("2035", worksheet.costpercapita_bx165); end
  def test_costpercapita_by165; assert_equal("2040", worksheet.costpercapita_by165); end
  def test_costpercapita_bz165; assert_equal("2045", worksheet.costpercapita_bz165); end
  def test_costpercapita_ca165; assert_equal("2050", worksheet.costpercapita_ca165); end
  def test_costpercapita_cc165; assert_equal("Mean", worksheet.costpercapita_cc165); end
  def test_costpercapita_cd165; assert_equal("NPV", worksheet.costpercapita_cd165); end
  def test_costpercapita_cf165; assert_equal("2010", worksheet.costpercapita_cf165); end
  def test_costpercapita_cg165; assert_equal("2015", worksheet.costpercapita_cg165); end
  def test_costpercapita_ch165; assert_equal("2020", worksheet.costpercapita_ch165); end
  def test_costpercapita_ci165; assert_equal("2025", worksheet.costpercapita_ci165); end
  def test_costpercapita_cj165; assert_equal("2030", worksheet.costpercapita_cj165); end
  def test_costpercapita_ck165; assert_equal("2035", worksheet.costpercapita_ck165); end
  def test_costpercapita_cl165; assert_equal("2040", worksheet.costpercapita_cl165); end
  def test_costpercapita_cm165; assert_equal("2045", worksheet.costpercapita_cm165); end
  def test_costpercapita_cn165; assert_equal("2050", worksheet.costpercapita_cn165); end
  def test_costpercapita_cp165; assert_equal("Mean", worksheet.costpercapita_cp165); end
  def test_costpercapita_cq165; assert_equal("NPV", worksheet.costpercapita_cq165); end
  def test_costpercapita_c166; assert_equal("Fossil Fuels", worksheet.costpercapita_c166); end
  def test_costpercapita_e166; assert_in_epsilon(14.315878170689789, worksheet.costpercapita_e166, 0.001); end
  def test_costpercapita_f166; assert_in_epsilon(16.84136020590303, worksheet.costpercapita_f166, 0.001); end
  def test_costpercapita_g166; assert_in_epsilon(20.06513418904686, worksheet.costpercapita_g166, 0.001); end
  def test_costpercapita_h166; assert_in_epsilon(24.86243719461344, worksheet.costpercapita_h166, 0.001); end
  def test_costpercapita_i166; assert_in_epsilon(26.09848608548116, worksheet.costpercapita_i166, 0.001); end
  def test_costpercapita_j166; assert_in_epsilon(25.377038948057052, worksheet.costpercapita_j166, 0.001); end
  def test_costpercapita_k166; assert_in_epsilon(25.13251525451907, worksheet.costpercapita_k166, 0.001); end
  def test_costpercapita_l166; assert_in_epsilon(26.21865938129346, worksheet.costpercapita_l166, 0.001); end
  def test_costpercapita_m166; assert_in_epsilon(25.902606070026803, worksheet.costpercapita_m166, 0.001); end
  def test_costpercapita_o166; assert_in_delta(0.03709437458421908, worksheet.costpercapita_o166, 0.001); end
  def test_costpercapita_p166; assert_in_delta(0.03869169294796451, worksheet.costpercapita_p166, 0.001); end
  def test_costpercapita_q166; assert_in_delta(0.04167084993192971, worksheet.costpercapita_q166, 0.001); end
  def test_costpercapita_r166; assert_in_delta(0.04664025878369184, worksheet.costpercapita_r166, 0.001); end
  def test_costpercapita_s166; assert_in_delta(0.051440605811828785, worksheet.costpercapita_s166, 0.001); end
  def test_costpercapita_t166; assert_in_delta(0.05511604649597045, worksheet.costpercapita_t166, 0.001); end
  def test_costpercapita_u166; assert_in_delta(0.05808140271233135, worksheet.costpercapita_u166, 0.001); end
  def test_costpercapita_v166; assert_in_delta(0.061134025154962475, worksheet.costpercapita_v166, 0.001); end
  def test_costpercapita_w166; assert_in_delta(0.0635275304816177, worksheet.costpercapita_w166, 0.001); end
  def test_costpercapita_y166; assert_in_epsilon(762.222636406657, worksheet.costpercapita_y166, 0.001); end
  def test_costpercapita_z166; assert_in_epsilon(727.4063319396947, worksheet.costpercapita_z166, 0.001); end
  def test_costpercapita_aa166; assert_in_epsilon(709.6797955823874, worksheet.costpercapita_aa166, 0.001); end
  def test_costpercapita_ab166; assert_in_epsilon(696.3808255776407, worksheet.costpercapita_ab166, 0.001); end
  def test_costpercapita_ac166; assert_in_epsilon(689.4223922945873, worksheet.costpercapita_ac166, 0.001); end
  def test_costpercapita_ad166; assert_in_epsilon(709.1934177925691, worksheet.costpercapita_ad166, 0.001); end
  def test_costpercapita_ae166; assert_in_epsilon(724.2305857770785, worksheet.costpercapita_ae166, 0.001); end
  def test_costpercapita_af166; assert_in_epsilon(742.0383700283267, worksheet.costpercapita_af166, 0.001); end
  def test_costpercapita_ag166; assert_in_epsilon(753.466242569122, worksheet.costpercapita_ag166, 0.001); end
  def test_costpercapita_ai166; assert_in_epsilon(776.575608951931, worksheet.costpercapita_ai166, 0.001); end
  def test_costpercapita_aj166; assert_in_epsilon(744.2863838385457, worksheet.costpercapita_aj166, 0.001); end
  def test_costpercapita_ak166; assert_in_epsilon(729.7866006213662, worksheet.costpercapita_ak166, 0.001); end
  def test_costpercapita_al166; assert_in_epsilon(721.2899030310379, worksheet.costpercapita_al166, 0.001); end
  def test_costpercapita_am166; assert_in_epsilon(715.5723189858802, worksheet.costpercapita_am166, 0.001); end
  def test_costpercapita_an166; assert_in_epsilon(734.6255727871221, worksheet.costpercapita_an166, 0.001); end
  def test_costpercapita_ao166; assert_in_epsilon(749.4211824343099, worksheet.costpercapita_ao166, 0.001); end
  def test_costpercapita_ap166; assert_in_epsilon(768.318163434775, worksheet.costpercapita_ap166, 0.001); end
  def test_costpercapita_aq166; assert_in_epsilon(779.4323761696303, worksheet.costpercapita_aq166, 0.001); end
  def test_costpercapita_as166; assert_in_epsilon(746.5897900282888, worksheet.costpercapita_as166, 0.001); end
  def test_costpercapita_at166; assert_in_epsilon(15550.559037692452, worksheet.costpercapita_at166, 0.001); end
  def test_costpercapita_ay166; assert_in_epsilon(2.863175634137958, worksheet.costpercapita_ay166, 0.001); end
  def test_costpercapita_az166; assert_in_epsilon(5.61378673530101, worksheet.costpercapita_az166, 0.001); end
  def test_costpercapita_ba166; assert_in_epsilon(6.6883780630156195, worksheet.costpercapita_ba166, 0.001); end
  def test_costpercapita_bb166; assert_in_epsilon(8.287479064871146, worksheet.costpercapita_bb166, 0.001); end
  def test_costpercapita_bc166; assert_in_epsilon(8.699495361827053, worksheet.costpercapita_bc166, 0.001); end
  def test_costpercapita_bd166; assert_in_epsilon(8.459012982685683, worksheet.costpercapita_bd166, 0.001); end
  def test_costpercapita_be166; assert_in_epsilon(8.37750508483969, worksheet.costpercapita_be166, 0.001); end
  def test_costpercapita_bf166; assert_in_epsilon(8.73955312709782, worksheet.costpercapita_bf166, 0.001); end
  def test_costpercapita_bg166; assert_in_epsilon(8.634202023342267, worksheet.costpercapita_bg166, 0.001); end
  def test_costpercapita_bi166; assert_in_epsilon(2.863175634137958, worksheet.costpercapita_bi166, 0.001); end
  def test_costpercapita_bj166; assert_in_epsilon(8.382548954625365, worksheet.costpercapita_bj166, 0.001); end
  def test_costpercapita_bk166; assert_in_epsilon(14.796497868833304, worksheet.costpercapita_bk166, 0.001); end
  def test_costpercapita_bl166; assert_in_epsilon(20.030631721387742, worksheet.costpercapita_bl166, 0.001); end
  def test_costpercapita_bm166; assert_in_epsilon(23.064772233670027, worksheet.costpercapita_bm166, 0.001); end
  def test_costpercapita_bn166; assert_in_epsilon(24.824765577623477, worksheet.costpercapita_bn166, 0.001); end
  def test_costpercapita_bo166; assert_in_epsilon(24.969532046203152, worksheet.costpercapita_bo166, 0.001); end
  def test_costpercapita_bp166; assert_in_epsilon(25.063416019844105, worksheet.costpercapita_bp166, 0.001); end
  def test_costpercapita_bq166; assert_in_epsilon(25.267831015223457, worksheet.costpercapita_bq166, 0.001); end
  def test_costpercapita_bs166; assert_in_epsilon(765.1229064153791, worksheet.costpercapita_bs166, 0.001); end
  def test_costpercapita_bt166; assert_in_epsilon(735.827572587268, worksheet.costpercapita_bt166, 0.001); end
  def test_costpercapita_bu166; assert_in_epsilon(724.5179643011527, worksheet.costpercapita_bu166, 0.001); end
  def test_costpercapita_bv166; assert_in_epsilon(716.4580975578122, worksheet.costpercapita_bv166, 0.001); end
  def test_costpercapita_bw166; assert_in_epsilon(712.538605134069, worksheet.costpercapita_bw166, 0.001); end
  def test_costpercapita_bx166; assert_in_epsilon(734.0732994166885, worksheet.costpercapita_bx166, 0.001); end
  def test_costpercapita_by166; assert_in_epsilon(749.2581992259941, worksheet.costpercapita_by166, 0.001); end
  def test_costpercapita_bz166; assert_in_epsilon(767.1629200733257, worksheet.costpercapita_bz166, 0.001); end
  def test_costpercapita_ca166; assert_in_epsilon(778.797601114827, worksheet.costpercapita_ca166, 0.001); end
  def test_costpercapita_cc166; assert_in_epsilon(742.6396850918353, worksheet.costpercapita_cc166, 0.001); end
  def test_costpercapita_cd166; assert_in_epsilon(15458.701787136364, worksheet.costpercapita_cd166, 0.001); end
  def test_costpercapita_cf166; assert_in_epsilon(-11.452702536551833, worksheet.costpercapita_cf166, 0.001); end
  def test_costpercapita_cg166; assert_in_epsilon(-8.458811251277663, worksheet.costpercapita_cg166, 0.001); end
  def test_costpercapita_ch166; assert_in_epsilon(-5.268636320213556, worksheet.costpercapita_ch166, 0.001); end
  def test_costpercapita_ci166; assert_in_epsilon(-4.831805473225697, worksheet.costpercapita_ci166, 0.001); end
  def test_costpercapita_cj166; assert_in_epsilon(-3.0337138518111315, worksheet.costpercapita_cj166, 0.001); end
  def test_costpercapita_ck166; assert_in_delta(-0.5522733704335736, worksheet.costpercapita_ck166, 0.001); end
  def test_costpercapita_cl166; assert_in_delta(-0.1629832083159173, worksheet.costpercapita_cl166, 0.001); end
  def test_costpercapita_cm166; assert_in_epsilon(-1.1552433614493554, worksheet.costpercapita_cm166, 0.001); end
  def test_costpercapita_cn166; assert_in_delta(-0.6347750548033452, worksheet.costpercapita_cn166, 0.001); end
  def test_costpercapita_cp166; assert_in_epsilon(-3.950104936453563, worksheet.costpercapita_cp166, 0.001); end
  def test_costpercapita_cq166; assert_in_epsilon(-91.85725055608833, worksheet.costpercapita_cq166, 0.001); end
  def test_costpercapita_cr166; assert_equal("ok", worksheet.costpercapita_cr166); end
  def test_costpercapita_c167; assert_equal("Bioenergy", worksheet.costpercapita_c167); end
  def test_costpercapita_e167; assert_in_epsilon(44.78340939465559, worksheet.costpercapita_e167, 0.001); end
  def test_costpercapita_f167; assert_in_epsilon(44.731435804956504, worksheet.costpercapita_f167, 0.001); end
  def test_costpercapita_g167; assert_in_epsilon(46.29855738858758, worksheet.costpercapita_g167, 0.001); end
  def test_costpercapita_h167; assert_in_epsilon(46.63920606135844, worksheet.costpercapita_h167, 0.001); end
  def test_costpercapita_i167; assert_in_epsilon(49.52412734765954, worksheet.costpercapita_i167, 0.001); end
  def test_costpercapita_j167; assert_in_epsilon(54.02990175831709, worksheet.costpercapita_j167, 0.001); end
  def test_costpercapita_k167; assert_in_epsilon(54.34846076721517, worksheet.costpercapita_k167, 0.001); end
  def test_costpercapita_l167; assert_in_epsilon(56.89492721735331, worksheet.costpercapita_l167, 0.001); end
  def test_costpercapita_m167; assert_in_epsilon(61.22935643621432, worksheet.costpercapita_m167, 0.001); end
  def test_costpercapita_o167; assert_in_epsilon(59.06218940300316, worksheet.costpercapita_o167, 0.001); end
  def test_costpercapita_p167; assert_in_epsilon(58.3458974949342, worksheet.costpercapita_p167, 0.001); end
  def test_costpercapita_q167; assert_in_epsilon(57.7022020680012, worksheet.costpercapita_q167, 0.001); end
  def test_costpercapita_r167; assert_in_epsilon(61.412011972489594, worksheet.costpercapita_r167, 0.001); end
  def test_costpercapita_s167; assert_in_epsilon(65.15713734419319, worksheet.costpercapita_s167, 0.001); end
  def test_costpercapita_t167; assert_in_epsilon(67.7183655950774, worksheet.costpercapita_t167, 0.001); end
  def test_costpercapita_u167; assert_in_epsilon(70.40550805943857, worksheet.costpercapita_u167, 0.001); end
  def test_costpercapita_v167; assert_in_epsilon(73.1711459257524, worksheet.costpercapita_v167, 0.001); end
  def test_costpercapita_w167; assert_in_epsilon(76.017612427671, worksheet.costpercapita_w167, 0.001); end
  def test_costpercapita_y167; assert_in_epsilon(2.215097598216888, worksheet.costpercapita_y167, 0.001); end
  def test_costpercapita_z167; assert_in_epsilon(2.177004497673868, worksheet.costpercapita_z167, 0.001); end
  def test_costpercapita_aa167; assert_in_epsilon(2.145214771151555, worksheet.costpercapita_aa167, 0.001); end
  def test_costpercapita_ab167; assert_in_epsilon(2.122735739604062, worksheet.costpercapita_ab167, 0.001); end
  def test_costpercapita_ac167; assert_in_epsilon(2.1132057158017337, worksheet.costpercapita_ac167, 0.001); end
  def test_costpercapita_ad167; assert_in_epsilon(2.1165294529736283, worksheet.costpercapita_ad167, 0.001); end
  def test_costpercapita_ae167; assert_in_epsilon(2.1292183816735117, worksheet.costpercapita_ae167, 0.001); end
  def test_costpercapita_af167; assert_in_epsilon(2.1493664466008724, worksheet.costpercapita_af167, 0.001); end
  def test_costpercapita_ag167; assert_in_epsilon(2.17676048128013, worksheet.costpercapita_ag167, 0.001); end
  def test_costpercapita_ai167; assert_in_epsilon(106.06069639587564, worksheet.costpercapita_ai167, 0.001); end
  def test_costpercapita_aj167; assert_in_epsilon(105.25433779756456, worksheet.costpercapita_aj167, 0.001); end
  def test_costpercapita_ak167; assert_in_epsilon(106.14597422774033, worksheet.costpercapita_ak167, 0.001); end
  def test_costpercapita_al167; assert_in_epsilon(110.1739537734521, worksheet.costpercapita_al167, 0.001); end
  def test_costpercapita_am167; assert_in_epsilon(116.79447040765446, worksheet.costpercapita_am167, 0.001); end
  def test_costpercapita_an167; assert_in_epsilon(123.8647968063681, worksheet.costpercapita_an167, 0.001); end
  def test_costpercapita_ao167; assert_in_epsilon(126.88318720832726, worksheet.costpercapita_ao167, 0.001); end
  def test_costpercapita_ap167; assert_in_epsilon(132.2154395897066, worksheet.costpercapita_ap167, 0.001); end
  def test_costpercapita_aq167; assert_in_epsilon(139.42372934516544, worksheet.costpercapita_aq167, 0.001); end
  def test_costpercapita_as167; assert_in_epsilon(118.53517617242828, worksheet.costpercapita_as167, 0.001); end
  def test_costpercapita_at167; assert_in_epsilon(2423.776564322007, worksheet.costpercapita_at167, 0.001); end
  def test_costpercapita_ay167; assert_in_epsilon(8.864158923705093, worksheet.costpercapita_ay167, 0.001); end
  def test_costpercapita_az167; assert_in_epsilon(14.689358583140937, worksheet.costpercapita_az167, 0.001); end
  def test_costpercapita_ba167; assert_in_epsilon(15.277242658260345, worksheet.costpercapita_ba167, 0.001); end
  def test_costpercapita_bb167; assert_in_epsilon(15.425552069688447, worksheet.costpercapita_bb167, 0.001); end
  def test_costpercapita_bc167; assert_in_epsilon(16.395532154652017, worksheet.costpercapita_bc167, 0.001); end
  def test_costpercapita_bd167; assert_in_epsilon(17.900376945293374, worksheet.costpercapita_bd167, 0.001); end
  def test_costpercapita_be167; assert_in_epsilon(18.008571916542653, worksheet.costpercapita_be167, 0.001); end
  def test_costpercapita_bf167; assert_in_epsilon(18.85866199134915, worksheet.costpercapita_bf167, 0.001); end
  def test_costpercapita_bg167; assert_in_epsilon(20.327735635472415, worksheet.costpercapita_bg167, 0.001); end
  def test_costpercapita_bi167; assert_in_epsilon(8.864158923705093, worksheet.costpercapita_bi167, 0.001); end
  def test_costpercapita_bj167; assert_in_epsilon(23.261221252484596, worksheet.costpercapita_bj167, 0.001); end
  def test_costpercapita_bk167; assert_in_epsilon(37.776934549795115, worksheet.costpercapita_bk167, 0.001); end
  def test_costpercapita_bl167; assert_in_epsilon(44.082134378055876, worksheet.costpercapita_bl167, 0.001); end
  def test_costpercapita_bm167; assert_in_epsilon(46.08257690417805, worksheet.costpercapita_bm167, 0.001); end
  def test_costpercapita_bn167; assert_in_epsilon(48.98010689910636, worksheet.costpercapita_bn167, 0.001); end
  def test_costpercapita_bo167; assert_in_epsilon(51.64024504041807, worksheet.costpercapita_bo167, 0.001); end
  def test_costpercapita_bp167; assert_in_epsilon(54.135368835627354, worksheet.costpercapita_bp167, 0.001); end
  def test_costpercapita_bq167; assert_in_epsilon(56.572433493107596, worksheet.costpercapita_bq167, 0.001); end
  def test_costpercapita_bs167; assert_in_epsilon(70.14144592492514, worksheet.costpercapita_bs167, 0.001); end
  def test_costpercapita_bt167; assert_in_epsilon(83.78412324509267, worksheet.costpercapita_bt167, 0.001); end
  def test_costpercapita_bu167; assert_in_epsilon(97.62435138894786, worksheet.costpercapita_bu167, 0.001); end
  def test_costpercapita_bv167; assert_in_epsilon(107.61688209014953, worksheet.costpercapita_bv167, 0.001); end
  def test_costpercapita_bw167; assert_in_epsilon(113.35291996417298, worksheet.costpercapita_bw167, 0.001); end
  def test_costpercapita_bx167; assert_in_epsilon(118.81500194715738, worksheet.costpercapita_bx167, 0.001); end
  def test_costpercapita_by167; assert_in_epsilon(124.17497148153016, worksheet.costpercapita_by167, 0.001); end
  def test_costpercapita_bz167; assert_in_epsilon(129.4558812079806, worksheet.costpercapita_bz167, 0.001); end
  def test_costpercapita_ca167; assert_in_epsilon(134.7668064020587, worksheet.costpercapita_ca167, 0.001); end
  def test_costpercapita_cc167; assert_in_epsilon(108.8591537391128, worksheet.costpercapita_cc167, 0.001); end
  def test_costpercapita_cd167; assert_in_epsilon(2225.0636678128476, worksheet.costpercapita_cd167, 0.001); end
  def test_costpercapita_cf167; assert_in_epsilon(-35.919250470950495, worksheet.costpercapita_cf167, 0.001); end
  def test_costpercapita_cg167; assert_in_epsilon(-21.470214552471905, worksheet.costpercapita_cg167, 0.001); end
  def test_costpercapita_ch167; assert_in_epsilon(-8.521622838792464, worksheet.costpercapita_ch167, 0.001); end
  def test_costpercapita_ci167; assert_in_epsilon(-2.557071683302565, worksheet.costpercapita_ci167, 0.001); end
  def test_costpercapita_cj167; assert_in_epsilon(-3.441550443481489, worksheet.costpercapita_cj167, 0.001); end
  def test_costpercapita_ck167; assert_in_epsilon(-5.0497948592107305, worksheet.costpercapita_ck167, 0.001); end
  def test_costpercapita_cl167; assert_in_epsilon(-2.7082157267971, worksheet.costpercapita_cl167, 0.001); end
  def test_costpercapita_cm167; assert_in_epsilon(-2.7595583817259626, worksheet.costpercapita_cm167, 0.001); end
  def test_costpercapita_cn167; assert_in_epsilon(-4.656922943106731, worksheet.costpercapita_cn167, 0.001); end
  def test_costpercapita_cp167; assert_in_epsilon(-9.676022433315493, worksheet.costpercapita_cp167, 0.001); end
  def test_costpercapita_cq167; assert_in_epsilon(-198.7128965091593, worksheet.costpercapita_cq167, 0.001); end
  def test_costpercapita_cr167; assert_equal("ok", worksheet.costpercapita_cr167); end
  def test_costpercapita_c168; assert_equal("Electricity", worksheet.costpercapita_c168); end
  def test_costpercapita_e168; assert_in_epsilon(37.92217160314277, worksheet.costpercapita_e168, 0.001); end
  def test_costpercapita_f168; assert_in_epsilon(53.71196942349296, worksheet.costpercapita_f168, 0.001); end
  def test_costpercapita_g168; assert_in_epsilon(61.13525714346414, worksheet.costpercapita_g168, 0.001); end
  def test_costpercapita_h168; assert_in_epsilon(62.76917067029783, worksheet.costpercapita_h168, 0.001); end
  def test_costpercapita_i168; assert_in_epsilon(44.33563561208287, worksheet.costpercapita_i168, 0.001); end
  def test_costpercapita_j168; assert_in_epsilon(44.33206942436598, worksheet.costpercapita_j168, 0.001); end
  def test_costpercapita_k168; assert_in_epsilon(45.50791465478395, worksheet.costpercapita_k168, 0.001); end
  def test_costpercapita_l168; assert_in_epsilon(46.89604170282273, worksheet.costpercapita_l168, 0.001); end
  def test_costpercapita_m168; assert_in_epsilon(47.04634213101348, worksheet.costpercapita_m168, 0.001); end
  def test_costpercapita_o168; assert_in_epsilon(33.88725716388708, worksheet.costpercapita_o168, 0.001); end
  def test_costpercapita_p168; assert_in_epsilon(31.334481561341256, worksheet.costpercapita_p168, 0.001); end
  def test_costpercapita_q168; assert_in_epsilon(30.77098446871252, worksheet.costpercapita_q168, 0.001); end
  def test_costpercapita_r168; assert_in_epsilon(30.096973306067124, worksheet.costpercapita_r168, 0.001); end
  def test_costpercapita_s168; assert_in_epsilon(28.84513293678564, worksheet.costpercapita_s168, 0.001); end
  def test_costpercapita_t168; assert_in_epsilon(28.04760449741416, worksheet.costpercapita_t168, 0.001); end
  def test_costpercapita_u168; assert_in_epsilon(27.820829200405242, worksheet.costpercapita_u168, 0.001); end
  def test_costpercapita_v168; assert_in_epsilon(27.853974052636023, worksheet.costpercapita_v168, 0.001); end
  def test_costpercapita_w168; assert_in_epsilon(28.724677436147203, worksheet.costpercapita_w168, 0.001); end
  def test_costpercapita_y168; assert_in_delta(0.27699004186337794, worksheet.costpercapita_y168, 0.001); end
  def test_costpercapita_z168; assert_in_delta(0.22499927188293975, worksheet.costpercapita_z168, 0.001); end
  def test_costpercapita_aa168; assert_in_delta(0.12436183535401259, worksheet.costpercapita_aa168, 0.001); end
  def test_costpercapita_ab168; assert_in_delta(0.04017038693498128, worksheet.costpercapita_ab168, 0.001); end
  def test_costpercapita_ac168; assert_in_delta(0.039072925813976186, worksheet.costpercapita_ac168, 0.001); end
  def test_costpercapita_ad168; assert_in_delta(0, (worksheet.costpercapita_ad168||0), 0.001); end
  def test_costpercapita_ae168; assert_in_delta(0, (worksheet.costpercapita_ae168||0), 0.001); end
  def test_costpercapita_af168; assert_in_delta(0, (worksheet.costpercapita_af168||0), 0.001); end
  def test_costpercapita_ag168; assert_in_delta(0, (worksheet.costpercapita_ag168||0), 0.001); end
  def test_costpercapita_ai168; assert_in_epsilon(72.08641880889323, worksheet.costpercapita_ai168, 0.001); end
  def test_costpercapita_aj168; assert_in_epsilon(85.27145025671715, worksheet.costpercapita_aj168, 0.001); end
  def test_costpercapita_ak168; assert_in_epsilon(92.03060344753068, worksheet.costpercapita_ak168, 0.001); end
  def test_costpercapita_al168; assert_in_epsilon(92.90631436329996, worksheet.costpercapita_al168, 0.001); end
  def test_costpercapita_am168; assert_in_epsilon(73.21984147468247, worksheet.costpercapita_am168, 0.001); end
  def test_costpercapita_an168; assert_in_epsilon(72.37967392178014, worksheet.costpercapita_an168, 0.001); end
  def test_costpercapita_ao168; assert_in_epsilon(73.32874385518919, worksheet.costpercapita_ao168, 0.001); end
  def test_costpercapita_ap168; assert_in_epsilon(74.75001575545875, worksheet.costpercapita_ap168, 0.001); end
  def test_costpercapita_aq168; assert_in_epsilon(75.77101956716069, worksheet.costpercapita_aq168, 0.001); end
  def test_costpercapita_as168; assert_in_epsilon(79.0826757167458, worksheet.costpercapita_as168, 0.001); end
  def test_costpercapita_at168; assert_in_epsilon(1717.6062950541423, worksheet.costpercapita_at168, 0.001); end
  def test_costpercapita_ay168; assert_in_epsilon(5.5969274676109535, worksheet.costpercapita_ay168, 0.001); end
  def test_costpercapita_az168; assert_in_epsilon(13.355011775964543, worksheet.costpercapita_az168, 0.001); end
  def test_costpercapita_ba168; assert_in_epsilon(15.082535869154126, worksheet.costpercapita_ba168, 0.001); end
  def test_costpercapita_bb168; assert_in_epsilon(15.622842107359814, worksheet.costpercapita_bb168, 0.001); end
  def test_costpercapita_bc168; assert_in_epsilon(11.083908903020717, worksheet.costpercapita_bc168, 0.001); end
  def test_costpercapita_bd168; assert_in_epsilon(11.083017356091496, worksheet.costpercapita_bd168, 0.001); end
  def test_costpercapita_be168; assert_in_epsilon(11.374645435048821, worksheet.costpercapita_be168, 0.001); end
  def test_costpercapita_bf168; assert_in_epsilon(11.701031221249881, worksheet.costpercapita_bf168, 0.001); end
  def test_costpercapita_bg168; assert_in_epsilon(11.716985096611934, worksheet.costpercapita_bg168, 0.001); end
  def test_costpercapita_bi168; assert_in_epsilon(5.5969274676109535, worksheet.costpercapita_bi168, 0.001); end
  def test_costpercapita_bj168; assert_in_epsilon(18.767380172737955, worksheet.costpercapita_bj168, 0.001); end
  def test_costpercapita_bk168; assert_in_epsilon(33.23550672629688, worksheet.costpercapita_bk168, 0.001); end
  def test_costpercapita_bl168; assert_in_epsilon(47.82926206027445, worksheet.costpercapita_bl168, 0.001); end
  def test_costpercapita_bm168; assert_in_epsilon(52.4721186917236, worksheet.costpercapita_bm168, 0.001); end
  def test_costpercapita_bn168; assert_in_epsilon(51.08454076974138, worksheet.costpercapita_bn168, 0.001); end
  def test_costpercapita_bo168; assert_in_epsilon(48.001403626583624, worksheet.costpercapita_bo168, 0.001); end
  def test_costpercapita_bp168; assert_in_epsilon(54.7224009227733, worksheet.costpercapita_bp168, 0.001); end
  def test_costpercapita_bq168; assert_in_epsilon(44.695445584387784, worksheet.costpercapita_bq168, 0.001); end
  def test_costpercapita_bs168; assert_in_epsilon(39.76117467336141, worksheet.costpercapita_bs168, 0.001); end
  def test_costpercapita_bt168; assert_in_epsilon(50.32686100596215, worksheet.costpercapita_bt168, 0.001); end
  def test_costpercapita_bu168; assert_in_epsilon(64.13085303036341, worksheet.costpercapita_bu168, 0.001); end
  def test_costpercapita_bv168; assert_in_epsilon(77.96640575327655, worksheet.costpercapita_bv168, 0.001); end
  def test_costpercapita_bw168; assert_in_epsilon(81.3563245543232, worksheet.costpercapita_bw168, 0.001); end
  def test_costpercapita_bx168; assert_in_epsilon(79.13214526715554, worksheet.costpercapita_bx168, 0.001); end
  def test_costpercapita_by168; assert_in_epsilon(75.82223282698887, worksheet.costpercapita_by168, 0.001); end
  def test_costpercapita_bz168; assert_in_epsilon(82.57637497540932, worksheet.costpercapita_bz168, 0.001); end
  def test_costpercapita_ca168; assert_in_epsilon(73.42012302053499, worksheet.costpercapita_ca168, 0.001); end
  def test_costpercapita_cc168; assert_in_epsilon(69.38805501193059, worksheet.costpercapita_cc168, 0.001); end
  def test_costpercapita_cd168; assert_in_epsilon(1442.7723512642228, worksheet.costpercapita_cd168, 0.001); end
  def test_costpercapita_cf168; assert_in_epsilon(-32.32524413553182, worksheet.costpercapita_cf168, 0.001); end
  def test_costpercapita_cg168; assert_in_epsilon(-34.94458925075501, worksheet.costpercapita_cg168, 0.001); end
  def test_costpercapita_ch168; assert_in_epsilon(-27.899750417167258, worksheet.costpercapita_ch168, 0.001); end
  def test_costpercapita_ci168; assert_in_epsilon(-14.939908610023393, worksheet.costpercapita_ci168, 0.001); end
  def test_costpercapita_cj168; assert_in_epsilon(8.136483079640728, worksheet.costpercapita_cj168, 0.001); end
  def test_costpercapita_ck168; assert_in_epsilon(6.752471345375409, worksheet.costpercapita_ck168, 0.001); end
  def test_costpercapita_cl168; assert_in_epsilon(2.4934889717996684, worksheet.costpercapita_cl168, 0.001); end
  def test_costpercapita_cm168; assert_in_epsilon(7.82635921995057, worksheet.costpercapita_cm168, 0.001); end
  def test_costpercapita_cn168; assert_in_epsilon(-2.350896546625699, worksheet.costpercapita_cn168, 0.001); end
  def test_costpercapita_cp168; assert_in_epsilon(-9.6946207048152, worksheet.costpercapita_cp168, 0.001); end
  def test_costpercapita_cq168; assert_in_epsilon(-274.8339437899194, worksheet.costpercapita_cq168, 0.001); end
  def test_costpercapita_cr168; assert_equal("ok", worksheet.costpercapita_cr168); end
  def test_costpercapita_c169; assert_equal("Buildings", worksheet.costpercapita_c169); end
  def test_costpercapita_e169; assert_in_epsilon(263.59236623333607, worksheet.costpercapita_e169, 0.001); end
  def test_costpercapita_f169; assert_in_epsilon(282.557657578333, worksheet.costpercapita_f169, 0.001); end
  def test_costpercapita_g169; assert_in_epsilon(292.9666960746077, worksheet.costpercapita_g169, 0.001); end
  def test_costpercapita_h169; assert_in_epsilon(317.29769003529583, worksheet.costpercapita_h169, 0.001); end
  def test_costpercapita_i169; assert_in_epsilon(340.32369194159526, worksheet.costpercapita_i169, 0.001); end
  def test_costpercapita_j169; assert_in_epsilon(367.78716017893765, worksheet.costpercapita_j169, 0.001); end
  def test_costpercapita_k169; assert_in_epsilon(393.13056056607854, worksheet.costpercapita_k169, 0.001); end
  def test_costpercapita_l169; assert_in_epsilon(424.0922000009433, worksheet.costpercapita_l169, 0.001); end
  def test_costpercapita_m169; assert_in_epsilon(457.04814425556015, worksheet.costpercapita_m169, 0.001); end
  def test_costpercapita_o169; assert_in_epsilon(83.92050561313425, worksheet.costpercapita_o169, 0.001); end
  def test_costpercapita_p169; assert_in_epsilon(86.06716709773691, worksheet.costpercapita_p169, 0.001); end
  def test_costpercapita_q169; assert_in_epsilon(88.11481051391148, worksheet.costpercapita_q169, 0.001); end
  def test_costpercapita_r169; assert_in_epsilon(89.89708034984041, worksheet.costpercapita_r169, 0.001); end
  def test_costpercapita_s169; assert_in_epsilon(91.59470609421348, worksheet.costpercapita_s169, 0.001); end
  def test_costpercapita_t169; assert_in_epsilon(94.46504964163336, worksheet.costpercapita_t169, 0.001); end
  def test_costpercapita_u169; assert_in_epsilon(97.66133724877675, worksheet.costpercapita_u169, 0.001); end
  def test_costpercapita_v169; assert_in_epsilon(101.12211827535049, worksheet.costpercapita_v169, 0.001); end
  def test_costpercapita_w169; assert_in_epsilon(104.85770286474992, worksheet.costpercapita_w169, 0.001); end
  def test_costpercapita_y169; assert_in_delta(0, (worksheet.costpercapita_y169||0), 0.001); end
  def test_costpercapita_z169; assert_in_delta(0, (worksheet.costpercapita_z169||0), 0.001); end
  def test_costpercapita_aa169; assert_in_delta(0, (worksheet.costpercapita_aa169||0), 0.001); end
  def test_costpercapita_ab169; assert_in_delta(0, (worksheet.costpercapita_ab169||0), 0.001); end
  def test_costpercapita_ac169; assert_in_delta(0, (worksheet.costpercapita_ac169||0), 0.001); end
  def test_costpercapita_ad169; assert_in_delta(0, (worksheet.costpercapita_ad169||0), 0.001); end
  def test_costpercapita_ae169; assert_in_delta(0, (worksheet.costpercapita_ae169||0), 0.001); end
  def test_costpercapita_af169; assert_in_delta(0, (worksheet.costpercapita_af169||0), 0.001); end
  def test_costpercapita_ag169; assert_in_delta(0, (worksheet.costpercapita_ag169||0), 0.001); end
  def test_costpercapita_ai169; assert_in_epsilon(347.5128718464704, worksheet.costpercapita_ai169, 0.001); end
  def test_costpercapita_aj169; assert_in_epsilon(368.6248246760699, worksheet.costpercapita_aj169, 0.001); end
  def test_costpercapita_ak169; assert_in_epsilon(381.0815065885192, worksheet.costpercapita_ak169, 0.001); end
  def test_costpercapita_al169; assert_in_epsilon(407.1947703851362, worksheet.costpercapita_al169, 0.001); end
  def test_costpercapita_am169; assert_in_epsilon(431.91839803580865, worksheet.costpercapita_am169, 0.001); end
  def test_costpercapita_an169; assert_in_epsilon(462.252209820571, worksheet.costpercapita_an169, 0.001); end
  def test_costpercapita_ao169; assert_in_epsilon(490.79189781485525, worksheet.costpercapita_ao169, 0.001); end
  def test_costpercapita_ap169; assert_in_epsilon(525.2143182762939, worksheet.costpercapita_ap169, 0.001); end
  def test_costpercapita_aq169; assert_in_epsilon(561.90584712031, worksheet.costpercapita_aq169, 0.001); end
  def test_costpercapita_as169; assert_in_epsilon(441.83296050711493, worksheet.costpercapita_as169, 0.001); end
  def test_costpercapita_at169; assert_in_epsilon(8954.926841354472, worksheet.costpercapita_at169, 0.001); end
  def test_costpercapita_ay169; assert_in_epsilon(52.01779108256646, worksheet.costpercapita_ay169, 0.001); end
  def test_costpercapita_az169; assert_in_epsilon(93.66383470490545, worksheet.costpercapita_az169, 0.001); end
  def test_costpercapita_ba169; assert_in_epsilon(97.542181193238, worksheet.costpercapita_ba169, 0.001); end
  def test_costpercapita_bb169; assert_in_epsilon(105.65602328119651, worksheet.costpercapita_bb169, 0.001); end
  def test_costpercapita_bc169; assert_in_epsilon(113.33435900799664, worksheet.costpercapita_bc169, 0.001); end
  def test_costpercapita_bd169; assert_in_epsilon(122.49136585626854, worksheet.costpercapita_bd169, 0.001); end
  def test_costpercapita_be169; assert_in_epsilon(130.9413914833645, worksheet.costpercapita_be169, 0.001); end
  def test_costpercapita_bf169; assert_in_epsilon(141.26397521744437, worksheet.costpercapita_bf169, 0.001); end
  def test_costpercapita_bg169; assert_in_epsilon(152.25115784911307, worksheet.costpercapita_bg169, 0.001); end
  def test_costpercapita_bi169; assert_in_epsilon(52.01779108256646, worksheet.costpercapita_bi169, 0.001); end
  def test_costpercapita_bj169; assert_in_epsilon(143.9663355242379, worksheet.costpercapita_bj169, 0.001); end
  def test_costpercapita_bk169; assert_in_epsilon(236.79532516574903, worksheet.costpercapita_bk169, 0.001); end
  def test_costpercapita_bl169; assert_in_epsilon(288.60530283185903, worksheet.costpercapita_bl169, 0.001); end
  def test_costpercapita_bm169; assert_in_epsilon(309.13713267527595, worksheet.costpercapita_bm169, 0.001); end
  def test_costpercapita_bn169; assert_in_epsilon(334.67703075519375, worksheet.costpercapita_bn169, 0.001); end
  def test_costpercapita_bo169; assert_in_epsilon(359.7841615804375, worksheet.costpercapita_bo169, 0.001); end
  def test_costpercapita_bp169; assert_in_epsilon(387.4814523740696, worksheet.costpercapita_bp169, 0.001); end
  def test_costpercapita_bq169; assert_in_epsilon(417.20632986442735, worksheet.costpercapita_bq169, 0.001); end
  def test_costpercapita_bs169; assert_in_epsilon(135.9382966957007, worksheet.costpercapita_bs169, 0.001); end
  def test_costpercapita_bt169; assert_in_epsilon(230.03350262197483, worksheet.costpercapita_bt169, 0.001); end
  def test_costpercapita_bu169; assert_in_epsilon(324.91013567966047, worksheet.costpercapita_bu169, 0.001); end
  def test_costpercapita_bv169; assert_in_epsilon(378.50238318169943, worksheet.costpercapita_bv169, 0.001); end
  def test_costpercapita_bw169; assert_in_epsilon(400.73183876948946, worksheet.costpercapita_bw169, 0.001); end
  def test_costpercapita_bx169; assert_in_epsilon(429.14208039682705, worksheet.costpercapita_bx169, 0.001); end
  def test_costpercapita_by169; assert_in_epsilon(457.4454988292143, worksheet.costpercapita_by169, 0.001); end
  def test_costpercapita_bz169; assert_in_epsilon(488.6035706494201, worksheet.costpercapita_bz169, 0.001); end
  def test_costpercapita_ca169; assert_in_epsilon(522.0640327291773, worksheet.costpercapita_ca169, 0.001); end
  def test_costpercapita_cc169; assert_in_epsilon(374.15237106146265, worksheet.costpercapita_cc169, 0.001); end
  def test_costpercapita_cd169; assert_in_epsilon(7558.274888575751, worksheet.costpercapita_cd169, 0.001); end
  def test_costpercapita_cf169; assert_in_epsilon(-211.5745751507696, worksheet.costpercapita_cf169, 0.001); end
  def test_costpercapita_cg169; assert_in_epsilon(-138.59132205409514, worksheet.costpercapita_cg169, 0.001); end
  def test_costpercapita_ch169; assert_in_epsilon(-56.171370908858684, worksheet.costpercapita_ch169, 0.001); end
  def test_costpercapita_ci169; assert_in_epsilon(-28.692387203436848, worksheet.costpercapita_ci169, 0.001); end
  def test_costpercapita_cj169; assert_in_epsilon(-31.186559266319225, worksheet.costpercapita_cj169, 0.001); end
  def test_costpercapita_ck169; assert_in_epsilon(-33.11012942374387, worksheet.costpercapita_ck169, 0.001); end
  def test_costpercapita_cl169; assert_in_epsilon(-33.346398985641, worksheet.costpercapita_cl169, 0.001); end
  def test_costpercapita_cm169; assert_in_epsilon(-36.61074762687375, worksheet.costpercapita_cm169, 0.001); end
  def test_costpercapita_cn169; assert_in_epsilon(-39.84181439113273, worksheet.costpercapita_cn169, 0.001); end
  def test_costpercapita_cp169; assert_in_epsilon(-67.68058944565232, worksheet.costpercapita_cp169, 0.001); end
  def test_costpercapita_cq169; assert_in_epsilon(-1396.6519527787177, worksheet.costpercapita_cq169, 0.001); end
  def test_costpercapita_cr169; assert_equal("ok", worksheet.costpercapita_cr169); end
  def test_costpercapita_c170; assert_equal("Transport", worksheet.costpercapita_c170); end
  def test_costpercapita_e170; assert_in_epsilon(934.5805896155501, worksheet.costpercapita_e170, 0.001); end
  def test_costpercapita_f170; assert_in_epsilon(877.7445494390162, worksheet.costpercapita_f170, 0.001); end
  def test_costpercapita_g170; assert_in_epsilon(909.8424367393459, worksheet.costpercapita_g170, 0.001); end
  def test_costpercapita_h170; assert_in_epsilon(920.6833688058689, worksheet.costpercapita_h170, 0.001); end
  def test_costpercapita_i170; assert_in_epsilon(905.7184123911696, worksheet.costpercapita_i170, 0.001); end
  def test_costpercapita_j170; assert_in_epsilon(894.5869726163592, worksheet.costpercapita_j170, 0.001); end
  def test_costpercapita_k170; assert_in_epsilon(865.0452422145074, worksheet.costpercapita_k170, 0.001); end
  def test_costpercapita_l170; assert_in_epsilon(836.4002971844914, worksheet.costpercapita_l170, 0.001); end
  def test_costpercapita_m170; assert_in_epsilon(804.5642857044303, worksheet.costpercapita_m170, 0.001); end
  def test_costpercapita_o170; assert_in_epsilon(1174.401543588274, worksheet.costpercapita_o170, 0.001); end
  def test_costpercapita_p170; assert_in_epsilon(1065.8320275727528, worksheet.costpercapita_p170, 0.001); end
  def test_costpercapita_q170; assert_in_epsilon(981.7216282920957, worksheet.costpercapita_q170, 0.001); end
  def test_costpercapita_r170; assert_in_epsilon(903.5549338676719, worksheet.costpercapita_r170, 0.001); end
  def test_costpercapita_s170; assert_in_epsilon(813.1039075984077, worksheet.costpercapita_s170, 0.001); end
  def test_costpercapita_t170; assert_in_epsilon(716.5842305056723, worksheet.costpercapita_t170, 0.001); end
  def test_costpercapita_u170; assert_in_epsilon(607.9275668126005, worksheet.costpercapita_u170, 0.001); end
  def test_costpercapita_v170; assert_in_epsilon(491.1713297910349, worksheet.costpercapita_v170, 0.001); end
  def test_costpercapita_w170; assert_in_epsilon(367.9145486633362, worksheet.costpercapita_w170, 0.001); end
  def test_costpercapita_y170; assert_in_delta(0, (worksheet.costpercapita_y170||0), 0.001); end
  def test_costpercapita_z170; assert_in_delta(0, (worksheet.costpercapita_z170||0), 0.001); end
  def test_costpercapita_aa170; assert_in_delta(0, (worksheet.costpercapita_aa170||0), 0.001); end
  def test_costpercapita_ab170; assert_in_delta(0, (worksheet.costpercapita_ab170||0), 0.001); end
  def test_costpercapita_ac170; assert_in_delta(0, (worksheet.costpercapita_ac170||0), 0.001); end
  def test_costpercapita_ad170; assert_in_delta(0, (worksheet.costpercapita_ad170||0), 0.001); end
  def test_costpercapita_ae170; assert_in_delta(0, (worksheet.costpercapita_ae170||0), 0.001); end
  def test_costpercapita_af170; assert_in_delta(0, (worksheet.costpercapita_af170||0), 0.001); end
  def test_costpercapita_ag170; assert_in_delta(0, (worksheet.costpercapita_ag170||0), 0.001); end
  def test_costpercapita_ai170; assert_in_epsilon(2108.9821332038246, worksheet.costpercapita_ai170, 0.001); end
  def test_costpercapita_aj170; assert_in_epsilon(1943.5765770117687, worksheet.costpercapita_aj170, 0.001); end
  def test_costpercapita_ak170; assert_in_epsilon(1891.5640650314415, worksheet.costpercapita_ak170, 0.001); end
  def test_costpercapita_al170; assert_in_epsilon(1824.238302673541, worksheet.costpercapita_al170, 0.001); end
  def test_costpercapita_am170; assert_in_epsilon(1718.8223199895772, worksheet.costpercapita_am170, 0.001); end
  def test_costpercapita_an170; assert_in_epsilon(1611.1712031220313, worksheet.costpercapita_an170, 0.001); end
  def test_costpercapita_ao170; assert_in_epsilon(1472.9728090271078, worksheet.costpercapita_ao170, 0.001); end
  def test_costpercapita_ap170; assert_in_epsilon(1327.5716269755264, worksheet.costpercapita_ap170, 0.001); end
  def test_costpercapita_aq170; assert_in_epsilon(1172.4788343677662, worksheet.costpercapita_aq170, 0.001); end
  def test_costpercapita_as170; assert_in_epsilon(1674.5975412669538, worksheet.costpercapita_as170, 0.001); end
  def test_costpercapita_at170; assert_in_epsilon(36386.37294057214, worksheet.costpercapita_at170, 0.001); end
  def test_costpercapita_ay170; assert_in_epsilon(213.94117318240126, worksheet.costpercapita_ay170, 0.001); end
  def test_costpercapita_az170; assert_in_epsilon(335.8264844970335, worksheet.costpercapita_az170, 0.001); end
  def test_costpercapita_ba170; assert_in_epsilon(345.19828867474695, worksheet.costpercapita_ba170, 0.001); end
  def test_costpercapita_bb170; assert_in_epsilon(347.2511986467705, worksheet.costpercapita_bb170, 0.001); end
  def test_costpercapita_bc170; assert_in_epsilon(340.0380108095159, worksheet.costpercapita_bc170, 0.001); end
  def test_costpercapita_bd170; assert_in_epsilon(333.4920590555793, worksheet.costpercapita_bd170, 0.001); end
  def test_costpercapita_be170; assert_in_epsilon(319.96022577887715, worksheet.costpercapita_be170, 0.001); end
  def test_costpercapita_bf170; assert_in_epsilon(305.88215027273935, worksheet.costpercapita_bf170, 0.001); end
  def test_costpercapita_bg170; assert_in_epsilon(289.7887386188634, worksheet.costpercapita_bg170, 0.001); end
  def test_costpercapita_bi170; assert_in_epsilon(213.94117318240126, worksheet.costpercapita_bi170, 0.001); end
  def test_costpercapita_bj170; assert_in_epsilon(511.8426982419614, worksheet.costpercapita_bj170, 0.001); end
  def test_costpercapita_bk170; assert_in_epsilon(774.2080959920816, worksheet.costpercapita_bk170, 0.001); end
  def test_costpercapita_bl170; assert_in_epsilon(870.9219152439033, worksheet.costpercapita_bl170, 0.001); end
  def test_costpercapita_bm170; assert_in_epsilon(882.5256552076578, worksheet.costpercapita_bm170, 0.001); end
  def test_costpercapita_bn170; assert_in_epsilon(881.0701242830354, worksheet.costpercapita_bn170, 0.001); end
  def test_costpercapita_bo170; assert_in_epsilon(864.6024461375413, worksheet.costpercapita_bo170, 0.001); end
  def test_costpercapita_bp170; assert_in_epsilon(843.4976443282757, worksheet.costpercapita_bp170, 0.001); end
  def test_costpercapita_bq170; assert_in_epsilon(813.711901002252, worksheet.costpercapita_bq170, 0.001); end
  def test_costpercapita_bs170; assert_in_epsilon(1388.3427167706755, worksheet.costpercapita_bs170, 0.001); end
  def test_costpercapita_bt170; assert_in_epsilon(1577.6747258147143, worksheet.costpercapita_bt170, 0.001); end
  def test_costpercapita_bu170; assert_in_epsilon(1755.9297242841774, worksheet.costpercapita_bu170, 0.001); end
  def test_costpercapita_bv170; assert_in_epsilon(1774.4768491115751, worksheet.costpercapita_bv170, 0.001); end
  def test_costpercapita_bw170; assert_in_epsilon(1695.6295628060652, worksheet.costpercapita_bw170, 0.001); end
  def test_costpercapita_bx170; assert_in_epsilon(1597.654354788708, worksheet.costpercapita_bx170, 0.001); end
  def test_costpercapita_by170; assert_in_epsilon(1472.5300129501418, worksheet.costpercapita_by170, 0.001); end
  def test_costpercapita_bz170; assert_in_epsilon(1334.6689741193106, worksheet.costpercapita_bz170, 0.001); end
  def test_costpercapita_ca170; assert_in_epsilon(1181.626449665588, worksheet.costpercapita_ca170, 0.001); end
  def test_costpercapita_cc170; assert_in_epsilon(1530.948152256773, worksheet.costpercapita_cc170, 0.001); end
  def test_costpercapita_cd170; assert_in_epsilon(33431.42158727758, worksheet.costpercapita_cd170, 0.001); end
  def test_costpercapita_cf170; assert_in_epsilon(-720.639416433149, worksheet.costpercapita_cf170, 0.001); end
  def test_costpercapita_cg170; assert_in_epsilon(-365.9018511970547, worksheet.costpercapita_cg170, 0.001); end
  def test_costpercapita_ch170; assert_in_epsilon(-135.6343407472644, worksheet.costpercapita_ch170, 0.001); end
  def test_costpercapita_ci170; assert_in_epsilon(-49.76145356196579, worksheet.costpercapita_ci170, 0.001); end
  def test_costpercapita_cj170; assert_in_epsilon(-23.192757183511738, worksheet.costpercapita_cj170, 0.001); end
  def test_costpercapita_ck170; assert_in_epsilon(-13.516848333323585, worksheet.costpercapita_ck170, 0.001); end
  def test_costpercapita_cl170; assert_in_delta(-0.4427960769663264, worksheet.costpercapita_cl170, 0.001); end
  def test_costpercapita_cm170; assert_in_epsilon(7.097347143784194, worksheet.costpercapita_cm170, 0.001); end
  def test_costpercapita_cn170; assert_in_epsilon(9.147615297821853, worksheet.costpercapita_cn170, 0.001); end
  def test_costpercapita_cp170; assert_in_epsilon(-143.64938901018107, worksheet.costpercapita_cp170, 0.001); end
  def test_costpercapita_cq170; assert_in_epsilon(-2954.9513532945475, worksheet.costpercapita_cq170, 0.001); end
  def test_costpercapita_cr170; assert_equal("ok", worksheet.costpercapita_cr170); end
  def test_costpercapita_c171; assert_equal("Industry", worksheet.costpercapita_c171); end
  def test_costpercapita_e171; assert_in_epsilon(4.552297448817079, worksheet.costpercapita_e171, 0.001); end
  def test_costpercapita_f171; assert_in_epsilon(4.146562356901544, worksheet.costpercapita_f171, 0.001); end
  def test_costpercapita_g171; assert_in_epsilon(3.800700172811871, worksheet.costpercapita_g171, 0.001); end
  def test_costpercapita_h171; assert_in_epsilon(3.493374938973205, worksheet.costpercapita_h171, 0.001); end
  def test_costpercapita_i171; assert_in_epsilon(3.25356835628611, worksheet.costpercapita_i171, 0.001); end
  def test_costpercapita_j171; assert_in_epsilon(3.0678511933775083, worksheet.costpercapita_j171, 0.001); end
  def test_costpercapita_k171; assert_in_epsilon(2.919823220851967, worksheet.costpercapita_k171, 0.001); end
  def test_costpercapita_l171; assert_in_epsilon(2.798938097813601, worksheet.costpercapita_l171, 0.001); end
  def test_costpercapita_m171; assert_in_epsilon(2.6991394086203893, worksheet.costpercapita_m171, 0.001); end
  def test_costpercapita_o171; assert_in_epsilon(12.161930899585185, worksheet.costpercapita_o171, 0.001); end
  def test_costpercapita_p171; assert_in_epsilon(11.144781371707587, worksheet.costpercapita_p171, 0.001); end
  def test_costpercapita_q171; assert_in_epsilon(10.224852574354598, worksheet.costpercapita_q171, 0.001); end
  def test_costpercapita_r171; assert_in_epsilon(9.48728657713034, worksheet.costpercapita_r171, 0.001); end
  def test_costpercapita_s171; assert_in_epsilon(8.911253849508986, worksheet.costpercapita_s171, 0.001); end
  def test_costpercapita_t171; assert_in_epsilon(8.461954391926094, worksheet.costpercapita_t171, 0.001); end
  def test_costpercapita_u171; assert_in_epsilon(8.100207472750888, worksheet.costpercapita_u171, 0.001); end
  def test_costpercapita_v171; assert_in_epsilon(7.801149203940404, worksheet.costpercapita_v171, 0.001); end
  def test_costpercapita_w171; assert_in_epsilon(7.551175130946535, worksheet.costpercapita_w171, 0.001); end
  def test_costpercapita_y171; assert_in_delta(0, (worksheet.costpercapita_y171||0), 0.001); end
  def test_costpercapita_z171; assert_in_delta(0, (worksheet.costpercapita_z171||0), 0.001); end
  def test_costpercapita_aa171; assert_in_delta(0, (worksheet.costpercapita_aa171||0), 0.001); end
  def test_costpercapita_ab171; assert_in_delta(0, (worksheet.costpercapita_ab171||0), 0.001); end
  def test_costpercapita_ac171; assert_in_delta(0, (worksheet.costpercapita_ac171||0), 0.001); end
  def test_costpercapita_ad171; assert_in_delta(0, (worksheet.costpercapita_ad171||0), 0.001); end
  def test_costpercapita_ae171; assert_in_delta(0, (worksheet.costpercapita_ae171||0), 0.001); end
  def test_costpercapita_af171; assert_in_delta(0, (worksheet.costpercapita_af171||0), 0.001); end
  def test_costpercapita_ag171; assert_in_delta(0, (worksheet.costpercapita_ag171||0), 0.001); end
  def test_costpercapita_ai171; assert_in_epsilon(16.714228348402266, worksheet.costpercapita_ai171, 0.001); end
  def test_costpercapita_aj171; assert_in_epsilon(15.291343728609132, worksheet.costpercapita_aj171, 0.001); end
  def test_costpercapita_ak171; assert_in_epsilon(14.025552747166468, worksheet.costpercapita_ak171, 0.001); end
  def test_costpercapita_al171; assert_in_epsilon(12.980661516103545, worksheet.costpercapita_al171, 0.001); end
  def test_costpercapita_am171; assert_in_epsilon(12.164822205795096, worksheet.costpercapita_am171, 0.001); end
  def test_costpercapita_an171; assert_in_epsilon(11.5298055853036, worksheet.costpercapita_an171, 0.001); end
  def test_costpercapita_ao171; assert_in_epsilon(11.020030693602857, worksheet.costpercapita_ao171, 0.001); end
  def test_costpercapita_ap171; assert_in_epsilon(10.600087301754005, worksheet.costpercapita_ap171, 0.001); end
  def test_costpercapita_aq171; assert_in_epsilon(10.250314539566924, worksheet.costpercapita_aq171, 0.001); end
  def test_costpercapita_as171; assert_in_epsilon(12.730760740700434, worksheet.costpercapita_as171, 0.001); end
  def test_costpercapita_at171; assert_in_epsilon(274.01252390555754, worksheet.costpercapita_at171, 0.001); end
  def test_costpercapita_ay171; assert_in_delta(0.9104594897634157, worksheet.costpercapita_ay171, 0.001); end
  def test_costpercapita_az171; assert_in_epsilon(1.3821874523005149, worksheet.costpercapita_az171, 0.001); end
  def test_costpercapita_ba171; assert_in_epsilon(1.2669000576039569, worksheet.costpercapita_ba171, 0.001); end
  def test_costpercapita_bb171; assert_in_epsilon(1.1644583129910682, worksheet.costpercapita_bb171, 0.001); end
  def test_costpercapita_bc171; assert_in_epsilon(1.0845227854287034, worksheet.costpercapita_bc171, 0.001); end
  def test_costpercapita_bd171; assert_in_epsilon(1.0226170644591697, worksheet.costpercapita_bd171, 0.001); end
  def test_costpercapita_be171; assert_in_delta(0.9732744069506558, worksheet.costpercapita_be171, 0.001); end
  def test_costpercapita_bf171; assert_in_delta(0.9329793659378669, worksheet.costpercapita_bf171, 0.001); end
  def test_costpercapita_bg171; assert_in_delta(0.8997131362067964, worksheet.costpercapita_bg171, 0.001); end
  def test_costpercapita_bi171; assert_in_delta(0.9104594897634157, worksheet.costpercapita_bi171, 0.001); end
  def test_costpercapita_bj171; assert_in_epsilon(2.2626244773387114, worksheet.costpercapita_bj171, 0.001); end
  def test_costpercapita_bk171; assert_in_epsilon(3.4554503943979995, worksheet.costpercapita_bk171, 0.001); end
  def test_costpercapita_bl171; assert_in_epsilon(3.687671713214236, worksheet.costpercapita_bl171, 0.001); end
  def test_costpercapita_bm171; assert_in_epsilon(3.411300149961336, worksheet.costpercapita_bm171, 0.001); end
  def test_costpercapita_bn171; assert_in_epsilon(3.187558050419851, worksheet.costpercapita_bn171, 0.001); end
  def test_costpercapita_bo171; assert_in_epsilon(3.0104747082117327, worksheet.costpercapita_bo171, 0.001); end
  def test_costpercapita_bp171; assert_in_epsilon(2.867683255574724, worksheet.costpercapita_bp171, 0.001); end
  def test_costpercapita_bq171; assert_in_epsilon(2.751340414633912, worksheet.costpercapita_bq171, 0.001); end
  def test_costpercapita_bs171; assert_in_epsilon(13.072390389348602, worksheet.costpercapita_bs171, 0.001); end
  def test_costpercapita_bt171; assert_in_epsilon(13.407405849046299, worksheet.costpercapita_bt171, 0.001); end
  def test_costpercapita_bu171; assert_in_epsilon(13.680302968752597, worksheet.costpercapita_bu171, 0.001); end
  def test_costpercapita_bv171; assert_in_epsilon(13.174958290344577, worksheet.costpercapita_bv171, 0.001); end
  def test_costpercapita_bw171; assert_in_epsilon(12.322553999470323, worksheet.costpercapita_bw171, 0.001); end
  def test_costpercapita_bx171; assert_in_epsilon(11.649512442345943, worksheet.costpercapita_bx171, 0.001); end
  def test_costpercapita_by171; assert_in_epsilon(11.110682180962622, worksheet.costpercapita_by171, 0.001); end
  def test_costpercapita_bz171; assert_in_epsilon(10.668832459515128, worksheet.costpercapita_bz171, 0.001); end
  def test_costpercapita_ca171; assert_in_epsilon(10.302515545580448, worksheet.costpercapita_ca171, 0.001); end
  def test_costpercapita_cc171; assert_in_epsilon(12.154350458374061, worksheet.costpercapita_cc171, 0.001); end
  def test_costpercapita_cd171; assert_in_epsilon(262.7815969348256, worksheet.costpercapita_cd171, 0.001); end
  def test_costpercapita_cf171; assert_in_epsilon(-3.641837959053663, worksheet.costpercapita_cf171, 0.001); end
  def test_costpercapita_cg171; assert_in_epsilon(-1.883937879562833, worksheet.costpercapita_cg171, 0.001); end
  def test_costpercapita_ch171; assert_in_delta(-0.34524977841387133, worksheet.costpercapita_ch171, 0.001); end
  def test_costpercapita_ci171; assert_in_delta(0.19429677424103128, worksheet.costpercapita_ci171, 0.001); end
  def test_costpercapita_cj171; assert_in_delta(0.15773179367522586, worksheet.costpercapita_cj171, 0.001); end
  def test_costpercapita_ck171; assert_in_delta(0.11970685704234267, worksheet.costpercapita_ck171, 0.001); end
  def test_costpercapita_cl171; assert_in_delta(0.09065148735976566, worksheet.costpercapita_cl171, 0.001); end
  def test_costpercapita_cm171; assert_in_delta(0.06874515776112294, worksheet.costpercapita_cm171, 0.001); end
  def test_costpercapita_cn171; assert_in_delta(0.052201006013522865, worksheet.costpercapita_cn171, 0.001); end
  def test_costpercapita_cp171; assert_in_delta(-0.5764102823263728, worksheet.costpercapita_cp171, 0.001); end
  def test_costpercapita_cq171; assert_in_epsilon(-11.230926970731982, worksheet.costpercapita_cq171, 0.001); end
  def test_costpercapita_cr171; assert_equal("ok", worksheet.costpercapita_cr171); end
  def test_costpercapita_c172; assert_equal("Other", worksheet.costpercapita_c172); end
  def test_costpercapita_e172; assert_in_delta(0, (worksheet.costpercapita_e172||0), 0.001); end
  def test_costpercapita_f172; assert_in_epsilon(1.4837383107049151, worksheet.costpercapita_f172, 0.001); end
  def test_costpercapita_g172; assert_in_epsilon(3.3808215481063097, worksheet.costpercapita_g172, 0.001); end
  def test_costpercapita_h172; assert_in_epsilon(3.2072609213659082, worksheet.costpercapita_h172, 0.001); end
  def test_costpercapita_i172; assert_in_epsilon(3.055419030477101, worksheet.costpercapita_i172, 0.001); end
  def test_costpercapita_j172; assert_in_epsilon(2.9232864615606666, worksheet.costpercapita_j172, 0.001); end
  def test_costpercapita_k172; assert_in_epsilon(2.854461424010788, worksheet.costpercapita_k172, 0.001); end
  def test_costpercapita_l172; assert_in_epsilon(2.742312481185729, worksheet.costpercapita_l172, 0.001); end
  def test_costpercapita_m172; assert_in_epsilon(2.6390694723840284, worksheet.costpercapita_m172, 0.001); end
  def test_costpercapita_o172; assert_in_delta(0, (worksheet.costpercapita_o172||0), 0.001); end
  def test_costpercapita_p172; assert_in_delta(0.04679482364530887, worksheet.costpercapita_p172, 0.001); end
  def test_costpercapita_q172; assert_in_delta(0.10662591036335284, worksheet.costpercapita_q172, 0.001); end
  def test_costpercapita_r172; assert_in_delta(0.10115207521230941, worksheet.costpercapita_r172, 0.001); end
  def test_costpercapita_s172; assert_in_delta(0.09636321557658548, worksheet.costpercapita_s172, 0.001); end
  def test_costpercapita_t172; assert_in_delta(0.09219595763383641, worksheet.costpercapita_t172, 0.001); end
  def test_costpercapita_u172; assert_in_delta(0.09002532183418638, worksheet.costpercapita_u172, 0.001); end
  def test_costpercapita_v172; assert_in_delta(0.08648831671431914, worksheet.costpercapita_v172, 0.001); end
  def test_costpercapita_w172; assert_in_delta(0.08323219105211166, worksheet.costpercapita_w172, 0.001); end
  def test_costpercapita_y172; assert_in_delta(0, (worksheet.costpercapita_y172||0), 0.001); end
  def test_costpercapita_z172; assert_in_delta(0, (worksheet.costpercapita_z172||0), 0.001); end
  def test_costpercapita_aa172; assert_in_delta(0, (worksheet.costpercapita_aa172||0), 0.001); end
  def test_costpercapita_ab172; assert_in_delta(0, (worksheet.costpercapita_ab172||0), 0.001); end
  def test_costpercapita_ac172; assert_in_delta(0, (worksheet.costpercapita_ac172||0), 0.001); end
  def test_costpercapita_ad172; assert_in_delta(0, (worksheet.costpercapita_ad172||0), 0.001); end
  def test_costpercapita_ae172; assert_in_delta(0, (worksheet.costpercapita_ae172||0), 0.001); end
  def test_costpercapita_af172; assert_in_delta(0, (worksheet.costpercapita_af172||0), 0.001); end
  def test_costpercapita_ag172; assert_in_delta(0, (worksheet.costpercapita_ag172||0), 0.001); end
  def test_costpercapita_ai172; assert_in_delta(0, (worksheet.costpercapita_ai172||0), 0.001); end
  def test_costpercapita_aj172; assert_in_epsilon(1.5305331343502242, worksheet.costpercapita_aj172, 0.001); end
  def test_costpercapita_ak172; assert_in_epsilon(3.487447458469662, worksheet.costpercapita_ak172, 0.001); end
  def test_costpercapita_al172; assert_in_epsilon(3.308412996578218, worksheet.costpercapita_al172, 0.001); end
  def test_costpercapita_am172; assert_in_epsilon(3.1517822460536866, worksheet.costpercapita_am172, 0.001); end
  def test_costpercapita_an172; assert_in_epsilon(3.015482419194503, worksheet.costpercapita_an172, 0.001); end
  def test_costpercapita_ao172; assert_in_epsilon(2.944486745844974, worksheet.costpercapita_ao172, 0.001); end
  def test_costpercapita_ap172; assert_in_epsilon(2.828800797900048, worksheet.costpercapita_ap172, 0.001); end
  def test_costpercapita_aq172; assert_in_epsilon(2.72230166343614, worksheet.costpercapita_aq172, 0.001); end
  def test_costpercapita_as172; assert_in_epsilon(2.5543608290919395, worksheet.costpercapita_as172, 0.001); end
  def test_costpercapita_at172; assert_in_epsilon(56.17920054171995, worksheet.costpercapita_at172, 0.001); end
  def test_costpercapita_ay172; assert_in_delta(0, (worksheet.costpercapita_ay172||0), 0.001); end
  def test_costpercapita_az172; assert_in_delta(0.49457943690163836, worksheet.costpercapita_az172, 0.001); end
  def test_costpercapita_ba172; assert_in_epsilon(1.1269405160354367, worksheet.costpercapita_ba172, 0.001); end
  def test_costpercapita_bb172; assert_in_epsilon(1.0690869737886362, worksheet.costpercapita_bb172, 0.001); end
  def test_costpercapita_bc172; assert_in_epsilon(1.0184730101590336, worksheet.costpercapita_bc172, 0.001); end
  def test_costpercapita_bd172; assert_in_delta(0.9744288205202221, worksheet.costpercapita_bd172, 0.001); end
  def test_costpercapita_be172; assert_in_delta(0.9514871413369294, worksheet.costpercapita_be172, 0.001); end
  def test_costpercapita_bf172; assert_in_delta(0.9141041603952431, worksheet.costpercapita_bf172, 0.001); end
  def test_costpercapita_bg172; assert_in_delta(0.8796898241280096, worksheet.costpercapita_bg172, 0.001); end
  def test_costpercapita_bi172; assert_in_delta(0, (worksheet.costpercapita_bi172||0), 0.001); end
  def test_costpercapita_bj172; assert_in_delta(0.49457943690163836, worksheet.costpercapita_bj172, 0.001); end
  def test_costpercapita_bk172; assert_in_epsilon(1.6053283369236895, worksheet.costpercapita_bk172, 0.001); end
  def test_costpercapita_bl172; assert_in_epsilon(2.6247087672836753, worksheet.costpercapita_bl172, 0.001); end
  def test_costpercapita_bm172; assert_in_epsilon(3.1205640078063017, worksheet.costpercapita_bm172, 0.001); end
  def test_costpercapita_bn172; assert_in_epsilon(2.984295262498522, worksheet.costpercapita_bn172, 0.001); end
  def test_costpercapita_bo172; assert_in_epsilon(2.878408375303264, worksheet.costpercapita_bo172, 0.001); end
  def test_costpercapita_bp172; assert_in_epsilon(2.781235587718862, worksheet.costpercapita_bp172, 0.001); end
  def test_costpercapita_bq172; assert_in_epsilon(2.691839963826859, worksheet.costpercapita_bq172, 0.001); end
  def test_costpercapita_bs172; assert_in_delta(0, (worksheet.costpercapita_bs172||0), 0.001); end
  def test_costpercapita_bt172; assert_in_delta(0.5413742605469473, worksheet.costpercapita_bt172, 0.001); end
  def test_costpercapita_bu172; assert_in_epsilon(1.7119542472870424, worksheet.costpercapita_bu172, 0.001); end
  def test_costpercapita_bv172; assert_in_epsilon(2.7258608424959845, worksheet.costpercapita_bv172, 0.001); end
  def test_costpercapita_bw172; assert_in_epsilon(3.2169272233828874, worksheet.costpercapita_bw172, 0.001); end
  def test_costpercapita_bx172; assert_in_epsilon(3.0764912201323584, worksheet.costpercapita_bx172, 0.001); end
  def test_costpercapita_by172; assert_in_epsilon(2.96843369713745, worksheet.costpercapita_by172, 0.001); end
  def test_costpercapita_bz172; assert_in_epsilon(2.867723904433181, worksheet.costpercapita_bz172, 0.001); end
  def test_costpercapita_ca172; assert_in_epsilon(2.7750721548789707, worksheet.costpercapita_ca172, 0.001); end
  def test_costpercapita_cc172; assert_in_epsilon(2.209315283366091, worksheet.costpercapita_cc172, 0.001); end
  def test_costpercapita_cd172; assert_in_epsilon(44.44816716199842, worksheet.costpercapita_cd172, 0.001); end
  def test_costpercapita_cf172; assert_in_delta(0, (worksheet.costpercapita_cf172||0), 0.001); end
  def test_costpercapita_cg172; assert_in_delta(-0.9891588738032768, worksheet.costpercapita_cg172, 0.001); end
  def test_costpercapita_ch172; assert_in_epsilon(-1.77549321118262, worksheet.costpercapita_ch172, 0.001); end
  def test_costpercapita_ci172; assert_in_delta(-0.5825521540822332, worksheet.costpercapita_ci172, 0.001); end
  def test_costpercapita_cj172; assert_in_delta(0.06514497732920085, worksheet.costpercapita_cj172, 0.001); end
  def test_costpercapita_ck172; assert_in_delta(0.06100880093785542, worksheet.costpercapita_ck172, 0.001); end
  def test_costpercapita_cl172; assert_in_delta(0.023946951292475753, worksheet.costpercapita_cl172, 0.001); end
  def test_costpercapita_cm172; assert_in_delta(0.03892310653313308, worksheet.costpercapita_cm172, 0.001); end
  def test_costpercapita_cn172; assert_in_delta(0.05277049144283056, worksheet.costpercapita_cn172, 0.001); end
  def test_costpercapita_cp172; assert_in_delta(-0.3450455457258483, worksheet.costpercapita_cp172, 0.001); end
  def test_costpercapita_cq172; assert_in_epsilon(-11.731033379721524, worksheet.costpercapita_cq172, 0.001); end
  def test_costpercapita_cr172; assert_equal("ok", worksheet.costpercapita_cr172); end
  def test_costpercapita_c173; assert_equal("Total", worksheet.costpercapita_c173); end
  def test_costpercapita_e173; assert_in_epsilon(1299.7467124661916, worksheet.costpercapita_e173, 0.001); end
  def test_costpercapita_f173; assert_in_epsilon(1281.2172731193082, worksheet.costpercapita_f173, 0.001); end
  def test_costpercapita_g173; assert_in_epsilon(1337.4896032559705, worksheet.costpercapita_g173, 0.001); end
  def test_costpercapita_h173; assert_in_epsilon(1378.9525086277736, worksheet.costpercapita_h173, 0.001); end
  def test_costpercapita_i173; assert_in_epsilon(1372.3093407647518, worksheet.costpercapita_i173, 0.001); end
  def test_costpercapita_j173; assert_in_epsilon(1392.104280580975, worksheet.costpercapita_j173, 0.001); end
  def test_costpercapita_k173; assert_in_epsilon(1388.9389781019668, worksheet.costpercapita_k173, 0.001); end
  def test_costpercapita_l173; assert_in_epsilon(1396.0433760659034, worksheet.costpercapita_l173, 0.001); end
  def test_costpercapita_m173; assert_in_epsilon(1401.1289434782493, worksheet.costpercapita_m173, 0.001); end
  def test_costpercapita_o173; assert_in_epsilon(1363.4705210424681, worksheet.costpercapita_o173, 0.001); end
  def test_costpercapita_p173; assert_in_epsilon(1252.809841615066, worksheet.costpercapita_p173, 0.001); end
  def test_costpercapita_q173; assert_in_epsilon(1168.6827746773708, worksheet.costpercapita_q173, 0.001); end
  def test_costpercapita_r173; assert_in_epsilon(1094.5960784071954, worksheet.costpercapita_r173, 0.001); end
  def test_costpercapita_s173; assert_in_epsilon(1007.7599416444974, worksheet.costpercapita_s173, 0.001); end
  def test_costpercapita_t173; assert_in_epsilon(915.424516635853, worksheet.costpercapita_t173, 0.001); end
  def test_costpercapita_u173; assert_in_epsilon(812.0635555185185, worksheet.costpercapita_u173, 0.001); end
  def test_costpercapita_v173; assert_in_epsilon(701.2673395905834, worksheet.costpercapita_v173, 0.001); end
  def test_costpercapita_w173; assert_in_epsilon(585.2124762443846, worksheet.costpercapita_w173, 0.001); end
  def test_costpercapita_y173; assert_in_epsilon(764.7147240467373, worksheet.costpercapita_y173, 0.001); end
  def test_costpercapita_z173; assert_in_epsilon(729.8083357092515, worksheet.costpercapita_z173, 0.001); end
  def test_costpercapita_aa173; assert_in_epsilon(711.949372188893, worksheet.costpercapita_aa173, 0.001); end
  def test_costpercapita_ab173; assert_in_epsilon(698.5437317041798, worksheet.costpercapita_ab173, 0.001); end
  def test_costpercapita_ac173; assert_in_epsilon(691.5746709362031, worksheet.costpercapita_ac173, 0.001); end
  def test_costpercapita_ad173; assert_in_epsilon(711.3099472455427, worksheet.costpercapita_ad173, 0.001); end
  def test_costpercapita_ae173; assert_in_epsilon(726.359804158752, worksheet.costpercapita_ae173, 0.001); end
  def test_costpercapita_af173; assert_in_epsilon(744.1877364749275, worksheet.costpercapita_af173, 0.001); end
  def test_costpercapita_ag173; assert_in_epsilon(755.6430030504021, worksheet.costpercapita_ag173, 0.001); end
  def test_costpercapita_ai173; assert_in_epsilon(3427.931957555397, worksheet.costpercapita_ai173, 0.001); end
  def test_costpercapita_aj173; assert_in_epsilon(3263.8354504436256, worksheet.costpercapita_aj173, 0.001); end
  def test_costpercapita_ak173; assert_in_epsilon(3218.121750122234, worksheet.costpercapita_ak173, 0.001); end
  def test_costpercapita_al173; assert_in_epsilon(3172.0923187391495, worksheet.costpercapita_al173, 0.001); end
  def test_costpercapita_am173; assert_in_epsilon(3071.643953345452, worksheet.costpercapita_am173, 0.001); end
  def test_costpercapita_an173; assert_in_epsilon(3018.838744462371, worksheet.costpercapita_an173, 0.001); end
  def test_costpercapita_ao173; assert_in_epsilon(2927.3623377792374, worksheet.costpercapita_ao173, 0.001); end
  def test_costpercapita_ap173; assert_in_epsilon(2841.498452131415, worksheet.costpercapita_ap173, 0.001); end
  def test_costpercapita_aq173; assert_in_epsilon(2741.9844227730355, worksheet.costpercapita_aq173, 0.001); end
  def test_costpercapita_as173; assert_in_epsilon(3075.923265261324, worksheet.costpercapita_as173, 0.001); end
  def test_costpercapita_at173; assert_in_epsilon(65363.43340344249, worksheet.costpercapita_at173, 0.001); end
  def test_costpercapita_ay173; assert_in_epsilon(284.19368578018515, worksheet.costpercapita_ay173, 0.001); end
  def test_costpercapita_az173; assert_in_epsilon(465.0252431855476, worksheet.costpercapita_az173, 0.001); end
  def test_costpercapita_ba173; assert_in_epsilon(482.18246703205443, worksheet.costpercapita_ba173, 0.001); end
  def test_costpercapita_bb173; assert_in_epsilon(494.4766404566661, worksheet.costpercapita_bb173, 0.001); end
  def test_costpercapita_bc173; assert_in_epsilon(491.65430203260007, worksheet.costpercapita_bc173, 0.001); end
  def test_costpercapita_bd173; assert_in_epsilon(495.4228780808978, worksheet.costpercapita_bd173, 0.001); end
  def test_costpercapita_be173; assert_in_epsilon(490.5871012469604, worksheet.costpercapita_be173, 0.001); end
  def test_costpercapita_bf173; assert_in_epsilon(488.2924553562137, worksheet.costpercapita_bf173, 0.001); end
  def test_costpercapita_bg173; assert_in_epsilon(484.49822218373794, worksheet.costpercapita_bg173, 0.001); end
  def test_costpercapita_bi173; assert_in_epsilon(284.19368578018515, worksheet.costpercapita_bi173, 0.001); end
  def test_costpercapita_bj173; assert_in_epsilon(708.9773880602875, worksheet.costpercapita_bj173, 0.001); end
  def test_costpercapita_bk173; assert_in_epsilon(1101.8731390340777, worksheet.costpercapita_bk173, 0.001); end
  def test_costpercapita_bl173; assert_in_epsilon(1277.7816267159783, worksheet.costpercapita_bl173, 0.001); end
  def test_costpercapita_bm173; assert_in_epsilon(1319.814119870273, worksheet.costpercapita_bm173, 0.001); end
  def test_costpercapita_bn173; assert_in_epsilon(1346.8084215976187, worksheet.costpercapita_bn173, 0.001); end
  def test_costpercapita_bo173; assert_in_epsilon(1354.8866715146985, worksheet.costpercapita_bo173, 0.001); end
  def test_costpercapita_bp173; assert_in_epsilon(1370.5492013238836, worksheet.costpercapita_bp173, 0.001); end
  def test_costpercapita_bq173; assert_in_epsilon(1362.8971213378588, worksheet.costpercapita_bq173, 0.001); end
  def test_costpercapita_bs173; assert_in_epsilon(2412.3789308693904, worksheet.costpercapita_bs173, 0.001); end
  def test_costpercapita_bt173; assert_in_epsilon(2691.5955653846054, worksheet.costpercapita_bt173, 0.001); end
  def test_costpercapita_bu173; assert_in_epsilon(2982.5052859003413, worksheet.costpercapita_bu173, 0.001); end
  def test_costpercapita_bv173; assert_in_epsilon(3070.921436827353, worksheet.costpercapita_bv173, 0.001); end
  def test_costpercapita_bw173; assert_in_epsilon(3019.1487324509735, worksheet.costpercapita_bw173, 0.001); end
  def test_costpercapita_bx173; assert_in_epsilon(2973.5428854790152, worksheet.costpercapita_bx173, 0.001); end
  def test_costpercapita_by173; assert_in_epsilon(2893.3100311919693, worksheet.costpercapita_by173, 0.001); end
  def test_costpercapita_bz173; assert_in_epsilon(2816.0042773893947, worksheet.costpercapita_bz173, 0.001); end
  def test_costpercapita_ca173; assert_in_epsilon(2703.7526006326457, worksheet.costpercapita_ca173, 0.001); end
  def test_costpercapita_cc173; assert_in_epsilon(2840.3510829028546, worksheet.costpercapita_cc173, 0.001); end
  def test_costpercapita_cd173; assert_in_epsilon(60423.46404616359, worksheet.costpercapita_cd173, 0.001); end
  def test_costpercapita_cf173; assert_in_epsilon(-1015.5530266860064, worksheet.costpercapita_cf173, 0.001); end
  def test_costpercapita_cg173; assert_in_epsilon(-572.2398850590205, worksheet.costpercapita_cg173, 0.001); end
  def test_costpercapita_ch173; assert_in_epsilon(-235.6164642218928, worksheet.costpercapita_ch173, 0.001); end
  def test_costpercapita_ci173; assert_in_epsilon(-101.1708819117955, worksheet.costpercapita_ci173, 0.001); end
  def test_costpercapita_cj173; assert_in_epsilon(-52.49522089447843, worksheet.costpercapita_cj173, 0.001); end
  def test_costpercapita_ck173; assert_in_epsilon(-45.29585898335615, worksheet.costpercapita_ck173, 0.001); end
  def test_costpercapita_cl173; assert_in_epsilon(-34.05230658726844, worksheet.costpercapita_cl173, 0.001); end
  def test_costpercapita_cm173; assert_in_epsilon(-25.494174742020054, worksheet.costpercapita_cm173, 0.001); end
  def test_costpercapita_cn173; assert_in_epsilon(-38.2318221403903, worksheet.costpercapita_cn173, 0.001); end
  def test_costpercapita_cp173; assert_in_epsilon(-235.57218235846986, worksheet.costpercapita_cp173, 0.001); end
  def test_costpercapita_cq173; assert_in_epsilon(-4939.969357278886, worksheet.costpercapita_cq173, 0.001); end
  def test_costpercapita_cr173; assert_equal("ok", worksheet.costpercapita_cr173); end
  def test_costpercapita_e174; assert_equal("ok", worksheet.costpercapita_e174); end
  def test_costpercapita_f174; assert_equal("ok", worksheet.costpercapita_f174); end
  def test_costpercapita_g174; assert_equal("ok", worksheet.costpercapita_g174); end
  def test_costpercapita_h174; assert_equal("ok", worksheet.costpercapita_h174); end
  def test_costpercapita_i174; assert_equal("ok", worksheet.costpercapita_i174); end
  def test_costpercapita_j174; assert_in_delta(2.2737367544323206e-13, worksheet.costpercapita_j174, 0.001); end
  def test_costpercapita_k174; assert_equal("ok", worksheet.costpercapita_k174); end
  def test_costpercapita_l174; assert_equal("ok", worksheet.costpercapita_l174); end
  def test_costpercapita_m174; assert_equal("ok", worksheet.costpercapita_m174); end
  def test_costpercapita_o174; assert_equal("ok", worksheet.costpercapita_o174); end
  def test_costpercapita_p174; assert_equal("ok", worksheet.costpercapita_p174); end
  def test_costpercapita_q174; assert_equal("ok", worksheet.costpercapita_q174); end
  def test_costpercapita_r174; assert_equal("ok", worksheet.costpercapita_r174); end
  def test_costpercapita_s174; assert_equal("ok", worksheet.costpercapita_s174); end
  def test_costpercapita_t174; assert_equal("ok", worksheet.costpercapita_t174); end
  def test_costpercapita_u174; assert_equal("ok", worksheet.costpercapita_u174); end
  def test_costpercapita_v174; assert_in_delta(-1.1368683772161603e-13, worksheet.costpercapita_v174, 0.001); end
  def test_costpercapita_w174; assert_equal("ok", worksheet.costpercapita_w174); end
  def test_costpercapita_y174; assert_equal("ok", worksheet.costpercapita_y174); end
  def test_costpercapita_z174; assert_equal("ok", worksheet.costpercapita_z174); end
  def test_costpercapita_aa174; assert_equal("ok", worksheet.costpercapita_aa174); end
  def test_costpercapita_ab174; assert_equal("ok", worksheet.costpercapita_ab174); end
  def test_costpercapita_ac174; assert_equal("ok", worksheet.costpercapita_ac174); end
  def test_costpercapita_ad174; assert_equal("ok", worksheet.costpercapita_ad174); end
  def test_costpercapita_ae174; assert_equal("ok", worksheet.costpercapita_ae174); end
  def test_costpercapita_af174; assert_equal("ok", worksheet.costpercapita_af174); end
  def test_costpercapita_ag174; assert_equal("ok", worksheet.costpercapita_ag174); end
  def test_costpercapita_ai174; assert_equal("ok", worksheet.costpercapita_ai174); end
  def test_costpercapita_aj174; assert_equal("ok", worksheet.costpercapita_aj174); end
  def test_costpercapita_ak174; assert_equal("ok", worksheet.costpercapita_ak174); end
  def test_costpercapita_al174; assert_equal("ok", worksheet.costpercapita_al174); end
  def test_costpercapita_am174; assert_equal("ok", worksheet.costpercapita_am174); end
  def test_costpercapita_an174; assert_equal("ok", worksheet.costpercapita_an174); end
  def test_costpercapita_ao174; assert_equal("ok", worksheet.costpercapita_ao174); end
  def test_costpercapita_ap174; assert_equal("ok", worksheet.costpercapita_ap174); end
  def test_costpercapita_aq174; assert_equal("ok", worksheet.costpercapita_aq174); end
  def test_costpercapita_as174; assert_equal("ok", worksheet.costpercapita_as174); end
  def test_costpercapita_at174; assert_equal("ok", worksheet.costpercapita_at174); end
  def test_costpercapita_ay174; assert_equal("ok", worksheet.costpercapita_ay174); end
  def test_costpercapita_az174; assert_equal("ok", worksheet.costpercapita_az174); end
  def test_costpercapita_ba174; assert_equal("ok", worksheet.costpercapita_ba174); end
  def test_costpercapita_bb174; assert_equal("ok", worksheet.costpercapita_bb174); end
  def test_costpercapita_bc174; assert_equal("ok", worksheet.costpercapita_bc174); end
  def test_costpercapita_bd174; assert_equal("ok", worksheet.costpercapita_bd174); end
  def test_costpercapita_be174; assert_equal("ok", worksheet.costpercapita_be174); end
  def test_costpercapita_bf174; assert_equal("ok", worksheet.costpercapita_bf174); end
  def test_costpercapita_bg174; assert_equal("ok", worksheet.costpercapita_bg174); end
  def test_costpercapita_bi174; assert_equal("ok", worksheet.costpercapita_bi174); end
  def test_costpercapita_bj174; assert_in_delta(-1.1368683772161603e-13, worksheet.costpercapita_bj174, 0.001); end
  def test_costpercapita_bk174; assert_equal("ok", worksheet.costpercapita_bk174); end
  def test_costpercapita_bl174; assert_equal("ok", worksheet.costpercapita_bl174); end
  def test_costpercapita_bm174; assert_equal("ok", worksheet.costpercapita_bm174); end
  def test_costpercapita_bn174; assert_equal("ok", worksheet.costpercapita_bn174); end
  def test_costpercapita_bo174; assert_equal("ok", worksheet.costpercapita_bo174); end
  def test_costpercapita_bp174; assert_equal("ok", worksheet.costpercapita_bp174); end
  def test_costpercapita_bq174; assert_equal("ok", worksheet.costpercapita_bq174); end
  def test_costpercapita_bs174; assert_equal("ok", worksheet.costpercapita_bs174); end
  def test_costpercapita_bt174; assert_equal("ok", worksheet.costpercapita_bt174); end
  def test_costpercapita_bu174; assert_equal("ok", worksheet.costpercapita_bu174); end
  def test_costpercapita_bv174; assert_equal("ok", worksheet.costpercapita_bv174); end
  def test_costpercapita_bw174; assert_equal("ok", worksheet.costpercapita_bw174); end
  def test_costpercapita_bx174; assert_in_delta(4.547473508864641e-13, worksheet.costpercapita_bx174, 0.001); end
  def test_costpercapita_by174; assert_equal("ok", worksheet.costpercapita_by174); end
  def test_costpercapita_bz174; assert_equal("ok", worksheet.costpercapita_bz174); end
  def test_costpercapita_ca174; assert_equal("ok", worksheet.costpercapita_ca174); end
  def test_costpercapita_cc174; assert_equal("ok", worksheet.costpercapita_cc174); end
  def test_costpercapita_cd174; assert_equal("ok", worksheet.costpercapita_cd174); end
  def test_costpercapita_cf174; assert_equal("ok", worksheet.costpercapita_cf174); end
  def test_costpercapita_cg174; assert_equal("ok", worksheet.costpercapita_cg174); end
  def test_costpercapita_ch174; assert_equal("ok", worksheet.costpercapita_ch174); end
  def test_costpercapita_ci174; assert_in_delta(-1.4210854715202004e-14, worksheet.costpercapita_ci174, 0.001); end
  def test_costpercapita_cj174; assert_equal("ok", worksheet.costpercapita_cj174); end
  def test_costpercapita_ck174; assert_in_delta(7.105427357601002e-15, worksheet.costpercapita_ck174, 0.001); end
  def test_costpercapita_cl174; assert_equal("ok", worksheet.costpercapita_cl174); end
  def test_costpercapita_cm174; assert_in_delta(-7.105427357601002e-15, worksheet.costpercapita_cm174, 0.001); end
  def test_costpercapita_cn174; assert_equal("ok", worksheet.costpercapita_cn174); end
  def test_costpercapita_cp174; assert_equal("ok", worksheet.costpercapita_cp174); end
  def test_costpercapita_cq174; assert_equal("ok", worksheet.costpercapita_cq174); end
  def test_costpercapita_c176; assert_equal("£m", worksheet.costpercapita_c176); end
  def test_costpercapita_e176; assert_equal("C1.Point", worksheet.costpercapita_e176); end
  def test_costpercapita_f176; assert_equal("Point estimate of capital costs", worksheet.costpercapita_f176); end
  def test_costpercapita_o176; assert_equal("C2.Point", worksheet.costpercapita_o176); end
  def test_costpercapita_p176; assert_equal("Point estimate of operating costs", worksheet.costpercapita_p176); end
  def test_costpercapita_y176; assert_equal("C3.Point", worksheet.costpercapita_y176); end
  def test_costpercapita_z176; assert_equal("Point estimate of fuel costs", worksheet.costpercapita_z176); end
  def test_costpercapita_ai176; assert_equal("Point estimate of total cost", worksheet.costpercapita_ai176); end
  def test_costpercapita_as176; assert_equal("Cashflow capital basis", worksheet.costpercapita_as176); end
  def test_costpercapita_av176; assert_equal("Loan", worksheet.costpercapita_av176); end
  def test_costpercapita_ay176; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay176); end
  def test_costpercapita_bi176; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi176); end
  def test_costpercapita_br176; assert_equal("Total cost (ammortised capital)", worksheet.costpercapita_br176); end
  def test_costpercapita_cc176; assert_equal("Amortised Capital", worksheet.costpercapita_cc176); end
  def test_costpercapita_cf176; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf176); end
  def test_costpercapita_cp176; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp176); end
  def test_costpercapita_c177; assert_equal("Category", worksheet.costpercapita_c177); end
  def test_costpercapita_e177; assert_equal("2010", worksheet.costpercapita_e177); end
  def test_costpercapita_f177; assert_equal("2015", worksheet.costpercapita_f177); end
  def test_costpercapita_g177; assert_equal("2020", worksheet.costpercapita_g177); end
  def test_costpercapita_h177; assert_equal("2025", worksheet.costpercapita_h177); end
  def test_costpercapita_i177; assert_equal("2030", worksheet.costpercapita_i177); end
  def test_costpercapita_j177; assert_equal("2035", worksheet.costpercapita_j177); end
  def test_costpercapita_k177; assert_equal("2040", worksheet.costpercapita_k177); end
  def test_costpercapita_l177; assert_equal("2045", worksheet.costpercapita_l177); end
  def test_costpercapita_m177; assert_equal("2050", worksheet.costpercapita_m177); end
  def test_costpercapita_o177; assert_equal("2010", worksheet.costpercapita_o177); end
  def test_costpercapita_p177; assert_equal("2015", worksheet.costpercapita_p177); end
  def test_costpercapita_q177; assert_equal("2020", worksheet.costpercapita_q177); end
  def test_costpercapita_r177; assert_equal("2025", worksheet.costpercapita_r177); end
  def test_costpercapita_s177; assert_equal("2030", worksheet.costpercapita_s177); end
  def test_costpercapita_t177; assert_equal("2035", worksheet.costpercapita_t177); end
  def test_costpercapita_u177; assert_equal("2040", worksheet.costpercapita_u177); end
  def test_costpercapita_v177; assert_equal("2045", worksheet.costpercapita_v177); end
  def test_costpercapita_w177; assert_equal("2050", worksheet.costpercapita_w177); end
  def test_costpercapita_y177; assert_equal("2010", worksheet.costpercapita_y177); end
  def test_costpercapita_z177; assert_equal("2015", worksheet.costpercapita_z177); end
  def test_costpercapita_aa177; assert_equal("2020", worksheet.costpercapita_aa177); end
  def test_costpercapita_ab177; assert_equal("2025", worksheet.costpercapita_ab177); end
  def test_costpercapita_ac177; assert_equal("2030", worksheet.costpercapita_ac177); end
  def test_costpercapita_ad177; assert_equal("2035", worksheet.costpercapita_ad177); end
  def test_costpercapita_ae177; assert_equal("2040", worksheet.costpercapita_ae177); end
  def test_costpercapita_af177; assert_equal("2045", worksheet.costpercapita_af177); end
  def test_costpercapita_ag177; assert_equal("2050", worksheet.costpercapita_ag177); end
  def test_costpercapita_ai177; assert_equal("2010", worksheet.costpercapita_ai177); end
  def test_costpercapita_aj177; assert_equal("2015", worksheet.costpercapita_aj177); end
  def test_costpercapita_ak177; assert_equal("2020", worksheet.costpercapita_ak177); end
  def test_costpercapita_al177; assert_equal("2025", worksheet.costpercapita_al177); end
  def test_costpercapita_am177; assert_equal("2030", worksheet.costpercapita_am177); end
  def test_costpercapita_an177; assert_equal("2035", worksheet.costpercapita_an177); end
  def test_costpercapita_ao177; assert_equal("2040", worksheet.costpercapita_ao177); end
  def test_costpercapita_ap177; assert_equal("2045", worksheet.costpercapita_ap177); end
  def test_costpercapita_aq177; assert_equal("2050", worksheet.costpercapita_aq177); end
  def test_costpercapita_as177; assert_equal("Mean", worksheet.costpercapita_as177); end
  def test_costpercapita_at177; assert_equal("NPV", worksheet.costpercapita_at177); end
  def test_costpercapita_av177; assert_equal("Rate", worksheet.costpercapita_av177); end
  def test_costpercapita_aw177; assert_equal("Years", worksheet.costpercapita_aw177); end
  def test_costpercapita_ay177; assert_in_epsilon(2010, worksheet.costpercapita_ay177, 0.001); end
  def test_costpercapita_az177; assert_in_epsilon(2015, worksheet.costpercapita_az177, 0.001); end
  def test_costpercapita_ba177; assert_in_epsilon(2020, worksheet.costpercapita_ba177, 0.001); end
  def test_costpercapita_bb177; assert_in_epsilon(2025, worksheet.costpercapita_bb177, 0.001); end
  def test_costpercapita_bc177; assert_in_epsilon(2030, worksheet.costpercapita_bc177, 0.001); end
  def test_costpercapita_bd177; assert_in_epsilon(2035, worksheet.costpercapita_bd177, 0.001); end
  def test_costpercapita_be177; assert_in_epsilon(2040, worksheet.costpercapita_be177, 0.001); end
  def test_costpercapita_bf177; assert_in_epsilon(2045, worksheet.costpercapita_bf177, 0.001); end
  def test_costpercapita_bg177; assert_in_epsilon(2050, worksheet.costpercapita_bg177, 0.001); end
  def test_costpercapita_bi177; assert_in_epsilon(2010, worksheet.costpercapita_bi177, 0.001); end
  def test_costpercapita_bj177; assert_in_epsilon(2015, worksheet.costpercapita_bj177, 0.001); end
  def test_costpercapita_bk177; assert_in_epsilon(2020, worksheet.costpercapita_bk177, 0.001); end
  def test_costpercapita_bl177; assert_in_epsilon(2025, worksheet.costpercapita_bl177, 0.001); end
  def test_costpercapita_bm177; assert_in_epsilon(2030, worksheet.costpercapita_bm177, 0.001); end
  def test_costpercapita_bn177; assert_in_epsilon(2035, worksheet.costpercapita_bn177, 0.001); end
  def test_costpercapita_bo177; assert_in_epsilon(2040, worksheet.costpercapita_bo177, 0.001); end
  def test_costpercapita_bp177; assert_in_epsilon(2045, worksheet.costpercapita_bp177, 0.001); end
  def test_costpercapita_bq177; assert_in_epsilon(2050, worksheet.costpercapita_bq177, 0.001); end
  def test_costpercapita_bs177; assert_equal("2010", worksheet.costpercapita_bs177); end
  def test_costpercapita_bt177; assert_equal("2015", worksheet.costpercapita_bt177); end
  def test_costpercapita_bu177; assert_equal("2020", worksheet.costpercapita_bu177); end
  def test_costpercapita_bv177; assert_equal("2025", worksheet.costpercapita_bv177); end
  def test_costpercapita_bw177; assert_equal("2030", worksheet.costpercapita_bw177); end
  def test_costpercapita_bx177; assert_equal("2035", worksheet.costpercapita_bx177); end
  def test_costpercapita_by177; assert_equal("2040", worksheet.costpercapita_by177); end
  def test_costpercapita_bz177; assert_equal("2045", worksheet.costpercapita_bz177); end
  def test_costpercapita_ca177; assert_equal("2050", worksheet.costpercapita_ca177); end
  def test_costpercapita_cc177; assert_equal("Mean", worksheet.costpercapita_cc177); end
  def test_costpercapita_cd177; assert_equal("NPV", worksheet.costpercapita_cd177); end
  def test_costpercapita_cf177; assert_equal("2010", worksheet.costpercapita_cf177); end
  def test_costpercapita_cg177; assert_equal("2015", worksheet.costpercapita_cg177); end
  def test_costpercapita_ch177; assert_equal("2020", worksheet.costpercapita_ch177); end
  def test_costpercapita_ci177; assert_equal("2025", worksheet.costpercapita_ci177); end
  def test_costpercapita_cj177; assert_equal("2030", worksheet.costpercapita_cj177); end
  def test_costpercapita_ck177; assert_equal("2035", worksheet.costpercapita_ck177); end
  def test_costpercapita_cl177; assert_equal("2040", worksheet.costpercapita_cl177); end
  def test_costpercapita_cm177; assert_equal("2045", worksheet.costpercapita_cm177); end
  def test_costpercapita_cn177; assert_equal("2050", worksheet.costpercapita_cn177); end
  def test_costpercapita_cp177; assert_equal("Mean", worksheet.costpercapita_cp177); end
  def test_costpercapita_cq177; assert_equal("NPV", worksheet.costpercapita_cq177); end
  def test_costpercapita_c178; assert_equal("Fossil Fuels", worksheet.costpercapita_c178); end
  def test_costpercapita_e178; assert_in_epsilon(24.33699289017264, worksheet.costpercapita_e178, 0.001); end
  def test_costpercapita_f178; assert_in_epsilon(16.84136020590303, worksheet.costpercapita_f178, 0.001); end
  def test_costpercapita_g178; assert_in_epsilon(21.820833430588458, worksheet.costpercapita_g178, 0.001); end
  def test_costpercapita_h178; assert_in_epsilon(29.21336370367079, worksheet.costpercapita_h178, 0.001); end
  def test_costpercapita_i178; assert_in_epsilon(32.949338682919965, worksheet.costpercapita_i178, 0.001); end
  def test_costpercapita_j178; assert_in_epsilon(34.25900257987702, worksheet.costpercapita_j178, 0.001); end
  def test_costpercapita_k178; assert_in_epsilon(36.12799067837116, worksheet.costpercapita_k178, 0.001); end
  def test_costpercapita_l178; assert_in_epsilon(39.98345555647253, worksheet.costpercapita_l178, 0.001); end
  def test_costpercapita_m178; assert_in_epsilon(41.76795228791822, worksheet.costpercapita_m178, 0.001); end
  def test_costpercapita_o178; assert_in_delta(0.06306043679317243, worksheet.costpercapita_o178, 0.001); end
  def test_costpercapita_p178; assert_in_delta(0.06577587801153967, worksheet.costpercapita_p178, 0.001); end
  def test_costpercapita_q178; assert_in_delta(0.07084044488428051, worksheet.costpercapita_q178, 0.001); end
  def test_costpercapita_r178; assert_in_delta(0.0792884399322761, worksheet.costpercapita_r178, 0.001); end
  def test_costpercapita_s178; assert_in_delta(0.08744902988010893, worksheet.costpercapita_s178, 0.001); end
  def test_costpercapita_t178; assert_in_delta(0.09369727904314976, worksheet.costpercapita_t178, 0.001); end
  def test_costpercapita_u178; assert_in_delta(0.09873838461096329, worksheet.costpercapita_u178, 0.001); end
  def test_costpercapita_v178; assert_in_delta(0.10392784276343621, worksheet.costpercapita_v178, 0.001); end
  def test_costpercapita_w178; assert_in_delta(0.1079968018187501, worksheet.costpercapita_w178, 0.001); end
  def test_costpercapita_y178; assert_in_epsilon(737.7344410169293, worksheet.costpercapita_y178, 0.001); end
  def test_costpercapita_z178; assert_in_epsilon(818.2549272177437, worksheet.costpercapita_z178, 0.001); end
  def test_costpercapita_aa178; assert_in_epsilon(914.5204221068066, worksheet.costpercapita_aa178, 0.001); end
  def test_costpercapita_ab178; assert_in_epsilon(1013.8907913165831, worksheet.costpercapita_ab178, 0.001); end
  def test_costpercapita_ac178; assert_in_epsilon(1119.546854465658, worksheet.costpercapita_ac178, 0.001); end
  def test_costpercapita_ad178; assert_in_epsilon(1153.3578105481765, worksheet.costpercapita_ad178, 0.001); end
  def test_costpercapita_ae178; assert_in_epsilon(1178.296858728168, worksheet.costpercapita_ae178, 0.001); end
  def test_costpercapita_af178; assert_in_epsilon(1207.3539665550763, worksheet.costpercapita_af178, 0.001); end
  def test_costpercapita_ag178; assert_in_epsilon(1225.6558048006023, worksheet.costpercapita_ag178, 0.001); end
  def test_costpercapita_ai178; assert_in_epsilon(762.1344943438951, worksheet.costpercapita_ai178, 0.001); end
  def test_costpercapita_aj178; assert_in_epsilon(835.1620633016582, worksheet.costpercapita_aj178, 0.001); end
  def test_costpercapita_ak178; assert_in_epsilon(936.4120959822792, worksheet.costpercapita_ak178, 0.001); end
  def test_costpercapita_al178; assert_in_epsilon(1043.1834434601863, worksheet.costpercapita_al178, 0.001); end
  def test_costpercapita_am178; assert_in_epsilon(1152.583642178458, worksheet.costpercapita_am178, 0.001); end
  def test_costpercapita_an178; assert_in_epsilon(1187.7105104070968, worksheet.costpercapita_an178, 0.001); end
  def test_costpercapita_ao178; assert_in_epsilon(1214.52358779115, worksheet.costpercapita_ao178, 0.001); end
  def test_costpercapita_ap178; assert_in_epsilon(1247.4413499543125, worksheet.costpercapita_ap178, 0.001); end
  def test_costpercapita_aq178; assert_in_epsilon(1267.5317538903394, worksheet.costpercapita_aq178, 0.001); end
  def test_costpercapita_as178; assert_in_epsilon(1071.8536601454862, worksheet.costpercapita_as178, 0.001); end
  def test_costpercapita_at178; assert_in_epsilon(21880.273216960606, worksheet.costpercapita_at178, 0.001); end
  def test_costpercapita_ay178; assert_in_epsilon(8.016213002182706, worksheet.costpercapita_ay178, 0.001); end
  def test_costpercapita_az178; assert_in_epsilon(9.245454116307945, worksheet.costpercapita_az178, 0.001); end
  def test_costpercapita_ba178; assert_in_epsilon(11.979051085873182, worksheet.costpercapita_ba178, 0.001); end
  def test_costpercapita_bb178; assert_in_epsilon(16.037351520492702, worksheet.costpercapita_bb178, 0.001); end
  def test_costpercapita_bc178; assert_in_epsilon(18.08830137418777, worksheet.costpercapita_bc178, 0.001); end
  def test_costpercapita_bd178; assert_in_epsilon(18.807271654442054, worksheet.costpercapita_bd178, 0.001); end
  def test_costpercapita_be178; assert_in_epsilon(19.83329588866612, worksheet.costpercapita_be178, 0.001); end
  def test_costpercapita_bf178; assert_in_epsilon(21.949842485361376, worksheet.costpercapita_bf178, 0.001); end
  def test_costpercapita_bg178; assert_in_epsilon(22.92948322990764, worksheet.costpercapita_bg178, 0.001); end
  def test_costpercapita_bi178; assert_in_epsilon(8.016213002182706, worksheet.costpercapita_bi178, 0.001); end
  def test_costpercapita_bj178; assert_in_epsilon(16.997331939612554, worksheet.costpercapita_bj178, 0.001); end
  def test_costpercapita_bk178; assert_in_epsilon(28.419921815245424, worksheet.costpercapita_bk178, 0.001); end
  def test_costpercapita_bl178; assert_in_epsilon(36.31136521958869, worksheet.costpercapita_bl178, 0.001); end
  def test_costpercapita_bm178; assert_in_epsilon(44.97851192748783, worksheet.costpercapita_bm178, 0.001); end
  def test_costpercapita_bn178; assert_in_epsilon(51.701248912060045, worksheet.costpercapita_bn178, 0.001); end
  def test_costpercapita_bo178; assert_in_epsilon(55.52502395112886, worksheet.costpercapita_bo178, 0.001); end
  def test_costpercapita_bp178; assert_in_epsilon(59.426520667366184, worksheet.costpercapita_bp178, 0.001); end
  def test_costpercapita_bq178; assert_in_epsilon(63.544625832759515, worksheet.costpercapita_bq178, 0.001); end
  def test_costpercapita_bs178; assert_in_epsilon(745.8137144559051, worksheet.costpercapita_bs178, 0.001); end
  def test_costpercapita_bt178; assert_in_epsilon(835.3180350353678, worksheet.costpercapita_bt178, 0.001); end
  def test_costpercapita_bu178; assert_in_epsilon(943.0111843669363, worksheet.costpercapita_bu178, 0.001); end
  def test_costpercapita_bv178; assert_in_epsilon(1050.2814449761042, worksheet.costpercapita_bv178, 0.001); end
  def test_costpercapita_bw178; assert_in_epsilon(1164.612815423026, worksheet.costpercapita_bw178, 0.001); end
  def test_costpercapita_bx178; assert_in_epsilon(1205.1527567392798, worksheet.costpercapita_bx178, 0.001); end
  def test_costpercapita_by178; assert_in_epsilon(1233.920621063908, worksheet.costpercapita_by178, 0.001); end
  def test_costpercapita_bz178; assert_in_epsilon(1266.884415065206, worksheet.costpercapita_bz178, 0.001); end
  def test_costpercapita_ca178; assert_in_epsilon(1289.3084274351806, worksheet.costpercapita_ca178, 0.001); end
  def test_costpercapita_cc178; assert_in_epsilon(1081.589268284546, worksheet.costpercapita_cc178, 0.001); end
  def test_costpercapita_cd178; assert_in_epsilon(22069.61050988333, worksheet.costpercapita_cd178, 0.001); end
  def test_costpercapita_cf178; assert_in_epsilon(-16.320779887989932, worksheet.costpercapita_cf178, 0.001); end
  def test_costpercapita_cg178; assert_in_delta(0.15597173370952752, worksheet.costpercapita_cg178, 0.001); end
  def test_costpercapita_ch178; assert_in_epsilon(6.599088384656968, worksheet.costpercapita_ch178, 0.001); end
  def test_costpercapita_ci178; assert_in_epsilon(7.098001515917896, worksheet.costpercapita_ci178, 0.001); end
  def test_costpercapita_cj178; assert_in_epsilon(12.029173244567865, worksheet.costpercapita_cj178, 0.001); end
  def test_costpercapita_ck178; assert_in_epsilon(17.442246332183025, worksheet.costpercapita_ck178, 0.001); end
  def test_costpercapita_cl178; assert_in_epsilon(19.397033272757692, worksheet.costpercapita_cl178, 0.001); end
  def test_costpercapita_cm178; assert_in_epsilon(19.443065110893652, worksheet.costpercapita_cm178, 0.001); end
  def test_costpercapita_cn178; assert_in_epsilon(21.776673544841294, worksheet.costpercapita_cn178, 0.001); end
  def test_costpercapita_cp178; assert_in_epsilon(9.735608139059776, worksheet.costpercapita_cp178, 0.001); end
  def test_costpercapita_cq178; assert_in_epsilon(189.3372929227252, worksheet.costpercapita_cq178, 0.001); end
  def test_costpercapita_cr178; assert_equal("ok", worksheet.costpercapita_cr178); end
  def test_costpercapita_c179; assert_equal("Bioenergy", worksheet.costpercapita_c179); end
  def test_costpercapita_e179; assert_in_epsilon(51.096223247683085, worksheet.costpercapita_e179, 0.001); end
  def test_costpercapita_f179; assert_in_epsilon(62.14813430318401, worksheet.costpercapita_f179, 0.001); end
  def test_costpercapita_g179; assert_in_epsilon(57.57721970761935, worksheet.costpercapita_g179, 0.001); end
  def test_costpercapita_h179; assert_in_epsilon(54.724720351270626, worksheet.costpercapita_h179, 0.001); end
  def test_costpercapita_i179; assert_in_epsilon(58.18069235147549, worksheet.costpercapita_i179, 0.001); end
  def test_costpercapita_j179; assert_in_epsilon(64.06585532758965, worksheet.costpercapita_j179, 0.001); end
  def test_costpercapita_k179; assert_in_epsilon(64.26191234386243, worksheet.costpercapita_k179, 0.001); end
  def test_costpercapita_l179; assert_in_epsilon(67.53189768814917, worksheet.costpercapita_l179, 0.001); end
  def test_costpercapita_m179; assert_in_epsilon(71.16288573665807, worksheet.costpercapita_m179, 0.001); end
  def test_costpercapita_o179; assert_in_epsilon(88.19401807498917, worksheet.costpercapita_o179, 0.001); end
  def test_costpercapita_p179; assert_in_epsilon(88.86699799141536, worksheet.costpercapita_p179, 0.001); end
  def test_costpercapita_q179; assert_in_epsilon(92.7359452860496, worksheet.costpercapita_q179, 0.001); end
  def test_costpercapita_r179; assert_in_epsilon(100.04773492159386, worksheet.costpercapita_r179, 0.001); end
  def test_costpercapita_s179; assert_in_epsilon(106.09229814746404, worksheet.costpercapita_s179, 0.001); end
  def test_costpercapita_t179; assert_in_epsilon(110.4636490433713, worksheet.costpercapita_t179, 0.001); end
  def test_costpercapita_u179; assert_in_epsilon(115.06160608701408, worksheet.costpercapita_u179, 0.001); end
  def test_costpercapita_v179; assert_in_epsilon(119.81080094340376, worksheet.costpercapita_v179, 0.001); end
  def test_costpercapita_w179; assert_in_epsilon(124.72923555782008, worksheet.costpercapita_w179, 0.001); end
  def test_costpercapita_y179; assert_in_epsilon(8.56522232141024, worksheet.costpercapita_y179, 0.001); end
  def test_costpercapita_z179; assert_in_epsilon(10.391324497266295, worksheet.costpercapita_z179, 0.001); end
  def test_costpercapita_aa179; assert_in_epsilon(15.805116065817476, worksheet.costpercapita_aa179, 0.001); end
  def test_costpercapita_ab179; assert_in_epsilon(15.905865963018904, worksheet.costpercapita_ab179, 0.001); end
  def test_costpercapita_ac179; assert_in_epsilon(16.07004848003023, worksheet.costpercapita_ac179, 0.001); end
  def test_costpercapita_ad179; assert_in_epsilon(16.301431228929047, worksheet.costpercapita_ad179, 0.001); end
  def test_costpercapita_ae179; assert_in_epsilon(16.576635797514122, worksheet.costpercapita_ae179, 0.001); end
  def test_costpercapita_af179; assert_in_epsilon(16.8830369203169, worksheet.costpercapita_af179, 0.001); end
  def test_costpercapita_ag179; assert_in_epsilon(17.220551901899274, worksheet.costpercapita_ag179, 0.001); end
  def test_costpercapita_ai179; assert_in_epsilon(147.85546364408253, worksheet.costpercapita_ai179, 0.001); end
  def test_costpercapita_aj179; assert_in_epsilon(161.40645679186568, worksheet.costpercapita_aj179, 0.001); end
  def test_costpercapita_ak179; assert_in_epsilon(166.11828105948643, worksheet.costpercapita_ak179, 0.001); end
  def test_costpercapita_al179; assert_in_epsilon(170.67832123588337, worksheet.costpercapita_al179, 0.001); end
  def test_costpercapita_am179; assert_in_epsilon(180.34303897896976, worksheet.costpercapita_am179, 0.001); end
  def test_costpercapita_an179; assert_in_epsilon(190.83093559988998, worksheet.costpercapita_an179, 0.001); end
  def test_costpercapita_ao179; assert_in_epsilon(195.90015422839068, worksheet.costpercapita_ao179, 0.001); end
  def test_costpercapita_ap179; assert_in_epsilon(204.22573555186983, worksheet.costpercapita_ap179, 0.001); end
  def test_costpercapita_aq179; assert_in_epsilon(213.11267319637741, worksheet.costpercapita_aq179, 0.001); end
  def test_costpercapita_as179; assert_in_epsilon(181.1634511429795, worksheet.costpercapita_as179, 0.001); end
  def test_costpercapita_at179; assert_in_epsilon(3727.76034739798, worksheet.costpercapita_at179, 0.001); end
  def test_costpercapita_ay179; assert_in_epsilon(16.14353074080237, worksheet.costpercapita_ay179, 0.001); end
  def test_costpercapita_az179; assert_in_epsilon(31.323615408744693, worksheet.costpercapita_az179, 0.001); end
  def test_costpercapita_ba179; assert_in_epsilon(29.927486998220424, worksheet.costpercapita_ba179, 0.001); end
  def test_costpercapita_bb179; assert_in_epsilon(28.817716993122062, worksheet.costpercapita_bb179, 0.001); end
  def test_costpercapita_bc179; assert_in_epsilon(30.73301140795008, worksheet.costpercapita_bc179, 0.001); end
  def test_costpercapita_bd179; assert_in_epsilon(33.9323923039473, worksheet.costpercapita_bd179, 0.001); end
  def test_costpercapita_be179; assert_in_epsilon(34.00335880993248, worksheet.costpercapita_be179, 0.001); end
  def test_costpercapita_bf179; assert_in_epsilon(35.75796046407589, worksheet.costpercapita_bf179, 0.001); end
  def test_costpercapita_bg179; assert_in_epsilon(38.04379585231295, worksheet.costpercapita_bg179, 0.001); end
  def test_costpercapita_bi179; assert_in_epsilon(16.14353074080237, worksheet.costpercapita_bi179, 0.001); end
  def test_costpercapita_bj179; assert_in_epsilon(46.93481210541274, worksheet.costpercapita_bj179, 0.001); end
  def test_costpercapita_bk179; assert_in_epsilon(75.32574016371433, worksheet.costpercapita_bk179, 0.001); end
  def test_costpercapita_bl179; assert_in_epsilon(88.89594833948141, worksheet.costpercapita_bl179, 0.001); end
  def test_costpercapita_bm179; assert_in_epsilon(95.6706146678194, worksheet.costpercapita_bm179, 0.001); end
  def test_costpercapita_bn179; assert_in_epsilon(104.07357700092078, worksheet.costpercapita_bn179, 0.001); end
  def test_costpercapita_bo179; assert_in_epsilon(110.61541434462896, worksheet.costpercapita_bo179, 0.001); end
  def test_costpercapita_bp179; assert_in_epsilon(115.03710545395245, worksheet.costpercapita_bp179, 0.001); end
  def test_costpercapita_bq179; assert_in_epsilon(118.19285092578812, worksheet.costpercapita_bq179, 0.001); end
  def test_costpercapita_bs179; assert_in_epsilon(112.9027711372018, worksheet.costpercapita_bs179, 0.001); end
  def test_costpercapita_bt179; assert_in_epsilon(146.1931345940944, worksheet.costpercapita_bt179, 0.001); end
  def test_costpercapita_bu179; assert_in_epsilon(183.86680151558141, worksheet.costpercapita_bu179, 0.001); end
  def test_costpercapita_bv179; assert_in_epsilon(204.84954922409418, worksheet.costpercapita_bv179, 0.001); end
  def test_costpercapita_bw179; assert_in_epsilon(217.83296129531365, worksheet.costpercapita_bw179, 0.001); end
  def test_costpercapita_bx179; assert_in_epsilon(230.83865727322114, worksheet.costpercapita_bx179, 0.001); end
  def test_costpercapita_by179; assert_in_epsilon(242.25365622915717, worksheet.costpercapita_by179, 0.001); end
  def test_costpercapita_bz179; assert_in_epsilon(251.7309433176731, worksheet.costpercapita_bz179, 0.001); end
  def test_costpercapita_ca179; assert_in_epsilon(260.14263838550744, worksheet.costpercapita_ca179, 0.001); end
  def test_costpercapita_cc179; assert_in_epsilon(205.6234569968716, worksheet.costpercapita_cc179, 0.001); end
  def test_costpercapita_cd179; assert_in_epsilon(4190.418524726945, worksheet.costpercapita_cd179, 0.001); end
  def test_costpercapita_cf179; assert_in_epsilon(-34.95269250688072, worksheet.costpercapita_cf179, 0.001); end
  def test_costpercapita_cg179; assert_in_epsilon(-15.21332219777127, worksheet.costpercapita_cg179, 0.001); end
  def test_costpercapita_ch179; assert_in_epsilon(17.74852045609498, worksheet.costpercapita_ch179, 0.001); end
  def test_costpercapita_ci179; assert_in_epsilon(34.17122798821078, worksheet.costpercapita_ci179, 0.001); end
  def test_costpercapita_cj179; assert_in_epsilon(37.489922316343886, worksheet.costpercapita_cj179, 0.001); end
  def test_costpercapita_ck179; assert_in_epsilon(40.007721673331126, worksheet.costpercapita_ck179, 0.001); end
  def test_costpercapita_cl179; assert_in_epsilon(46.353502000766525, worksheet.costpercapita_cl179, 0.001); end
  def test_costpercapita_cm179; assert_in_epsilon(47.50520776580326, worksheet.costpercapita_cm179, 0.001); end
  def test_costpercapita_cn179; assert_in_epsilon(47.02996518913005, worksheet.costpercapita_cn179, 0.001); end
  def test_costpercapita_cp179; assert_in_epsilon(24.46000585389207, worksheet.costpercapita_cp179, 0.001); end
  def test_costpercapita_cq179; assert_in_epsilon(462.65817732896505, worksheet.costpercapita_cq179, 0.001); end
  def test_costpercapita_cr179; assert_equal("ok", worksheet.costpercapita_cr179); end
  def test_costpercapita_c180; assert_equal("Electricity", worksheet.costpercapita_c180); end
  def test_costpercapita_e180; assert_in_epsilon(53.32496897506196, worksheet.costpercapita_e180, 0.001); end
  def test_costpercapita_f180; assert_in_epsilon(74.64744315361149, worksheet.costpercapita_f180, 0.001); end
  def test_costpercapita_g180; assert_in_epsilon(81.97743269216278, worksheet.costpercapita_g180, 0.001); end
  def test_costpercapita_h180; assert_in_epsilon(81.29941217956313, worksheet.costpercapita_h180, 0.001); end
  def test_costpercapita_i180; assert_in_epsilon(49.884464171892255, worksheet.costpercapita_i180, 0.001); end
  def test_costpercapita_j180; assert_in_epsilon(50.65182491231297, worksheet.costpercapita_j180, 0.001); end
  def test_costpercapita_k180; assert_in_epsilon(81.84015591370868, worksheet.costpercapita_k180, 0.001); end
  def test_costpercapita_l180; assert_in_epsilon(83.22056504146686, worksheet.costpercapita_l180, 0.001); end
  def test_costpercapita_m180; assert_in_epsilon(84.17320931512339, worksheet.costpercapita_m180, 0.001); end
  def test_costpercapita_o180; assert_in_epsilon(91.41427573154687, worksheet.costpercapita_o180, 0.001); end
  def test_costpercapita_p180; assert_in_epsilon(84.12032573226725, worksheet.costpercapita_p180, 0.001); end
  def test_costpercapita_q180; assert_in_epsilon(82.23462383780911, worksheet.costpercapita_q180, 0.001); end
  def test_costpercapita_r180; assert_in_epsilon(80.18747794465898, worksheet.costpercapita_r180, 0.001); end
  def test_costpercapita_s180; assert_in_epsilon(77.63470566782561, worksheet.costpercapita_s180, 0.001); end
  def test_costpercapita_t180; assert_in_epsilon(75.04665035292916, worksheet.costpercapita_t180, 0.001); end
  def test_costpercapita_u180; assert_in_epsilon(75.30757279177999, worksheet.costpercapita_u180, 0.001); end
  def test_costpercapita_v180; assert_in_epsilon(75.90718085877084, worksheet.costpercapita_v180, 0.001); end
  def test_costpercapita_w180; assert_in_epsilon(78.49041234845808, worksheet.costpercapita_w180, 0.001); end
  def test_costpercapita_y180; assert_in_epsilon(1.0513578545510005, worksheet.costpercapita_y180, 0.001); end
  def test_costpercapita_z180; assert_in_delta(0.8540189754513322, worksheet.costpercapita_z180, 0.001); end
  def test_costpercapita_aa180; assert_in_delta(0.4720342707132738, worksheet.costpercapita_aa180, 0.001); end
  def test_costpercapita_ab180; assert_in_delta(0.1524728164966898, worksheet.costpercapita_ab180, 0.001); end
  def test_costpercapita_ac180; assert_in_delta(0.14830723580696178, worksheet.costpercapita_ac180, 0.001); end
  def test_costpercapita_ad180; assert_in_delta(0, (worksheet.costpercapita_ad180||0), 0.001); end
  def test_costpercapita_ae180; assert_in_delta(0, (worksheet.costpercapita_ae180||0), 0.001); end
  def test_costpercapita_af180; assert_in_delta(0, (worksheet.costpercapita_af180||0), 0.001); end
  def test_costpercapita_ag180; assert_in_delta(0, (worksheet.costpercapita_ag180||0), 0.001); end
  def test_costpercapita_ai180; assert_in_epsilon(145.7906025611599, worksheet.costpercapita_ai180, 0.001); end
  def test_costpercapita_aj180; assert_in_epsilon(159.62178786133006, worksheet.costpercapita_aj180, 0.001); end
  def test_costpercapita_ak180; assert_in_epsilon(164.68409080068514, worksheet.costpercapita_ak180, 0.001); end
  def test_costpercapita_al180; assert_in_epsilon(161.63936294071883, worksheet.costpercapita_al180, 0.001); end
  def test_costpercapita_am180; assert_in_epsilon(127.66747707552483, worksheet.costpercapita_am180, 0.001); end
  def test_costpercapita_an180; assert_in_epsilon(125.69847526524214, worksheet.costpercapita_an180, 0.001); end
  def test_costpercapita_ao180; assert_in_epsilon(157.14772870548865, worksheet.costpercapita_ao180, 0.001); end
  def test_costpercapita_ap180; assert_in_epsilon(159.12774590023767, worksheet.costpercapita_ap180, 0.001); end
  def test_costpercapita_aq180; assert_in_epsilon(162.66362166358147, worksheet.costpercapita_aq180, 0.001); end
  def test_costpercapita_as180; assert_in_epsilon(151.56009919710766, worksheet.costpercapita_as180, 0.001); end
  def test_costpercapita_at180; assert_in_epsilon(3210.750360901453, worksheet.costpercapita_at180, 0.001); end
  def test_costpercapita_ay180; assert_in_epsilon(15.022417327743309, worksheet.costpercapita_ay180, 0.001); end
  def test_costpercapita_az180; assert_in_epsilon(35.06109682879123, worksheet.costpercapita_az180, 0.001); end
  def test_costpercapita_ba180; assert_in_epsilon(38.41140711712629, worksheet.costpercapita_ba180, 0.001); end
  def test_costpercapita_bb180; assert_in_epsilon(38.22922623831043, worksheet.costpercapita_bb180, 0.001); end
  def test_costpercapita_bc180; assert_in_epsilon(23.543702611597624, worksheet.costpercapita_bc180, 0.001); end
  def test_costpercapita_bd180; assert_in_epsilon(23.905869738541735, worksheet.costpercapita_bd180, 0.001); end
  def test_costpercapita_be180; assert_in_epsilon(38.62038349774362, worksheet.costpercapita_be180, 0.001); end
  def test_costpercapita_bf180; assert_in_epsilon(39.20173565981611, worksheet.costpercapita_bf180, 0.001); end
  def test_costpercapita_bg180; assert_in_epsilon(39.57640854360843, worksheet.costpercapita_bg180, 0.001); end
  def test_costpercapita_bi180; assert_in_epsilon(15.022417327743309, worksheet.costpercapita_bi180, 0.001); end
  def test_costpercapita_bj180; assert_in_epsilon(49.58814890483412, worksheet.costpercapita_bj180, 0.001); end
  def test_costpercapita_bk180; assert_in_epsilon(86.37613174271499, worksheet.costpercapita_bk180, 0.001); end
  def test_costpercapita_bl180; assert_in_epsilon(121.93085280665358, worksheet.costpercapita_bl180, 0.001); end
  def test_costpercapita_bm180; assert_in_epsilon(128.2873164331702, worksheet.costpercapita_bm180, 0.001); end
  def test_costpercapita_bn180; assert_in_epsilon(120.6289132501337, worksheet.costpercapita_bn180, 0.001); end
  def test_costpercapita_bo180; assert_in_epsilon(123.19075666061019, worksheet.costpercapita_bo180, 0.001); end
  def test_costpercapita_bp180; assert_in_epsilon(146.26980393143555, worksheet.costpercapita_bp180, 0.001); end
  def test_costpercapita_bq180; assert_in_epsilon(138.4285359143965, worksheet.costpercapita_bq180, 0.001); end
  def test_costpercapita_bs180; assert_in_epsilon(107.48805091384122, worksheet.costpercapita_bs180, 0.001); end
  def test_costpercapita_bt180; assert_in_epsilon(134.56249361255271, worksheet.costpercapita_bt180, 0.001); end
  def test_costpercapita_bu180; assert_in_epsilon(169.08278985123735, worksheet.costpercapita_bu180, 0.001); end
  def test_costpercapita_bv180; assert_in_epsilon(202.27080356780925, worksheet.costpercapita_bv180, 0.001); end
  def test_costpercapita_bw180; assert_in_epsilon(206.07032933680279, worksheet.costpercapita_bw180, 0.001); end
  def test_costpercapita_bx180; assert_in_epsilon(195.67556360306287, worksheet.costpercapita_bx180, 0.001); end
  def test_costpercapita_by180; assert_in_epsilon(198.49832945239018, worksheet.costpercapita_by180, 0.001); end
  def test_costpercapita_bz180; assert_in_epsilon(222.17698479020632, worksheet.costpercapita_bz180, 0.001); end
  def test_costpercapita_ca180; assert_in_epsilon(216.91894826285454, worksheet.costpercapita_ca180, 0.001); end
  def test_costpercapita_cc180; assert_in_epsilon(183.63825482119523, worksheet.costpercapita_cc180, 0.001); end
  def test_costpercapita_cd180; assert_in_epsilon(3791.3343150530704, worksheet.costpercapita_cd180, 0.001); end
  def test_costpercapita_cf180; assert_in_epsilon(-38.30255164731865, worksheet.costpercapita_cf180, 0.001); end
  def test_costpercapita_cg180; assert_in_epsilon(-25.059294248777366, worksheet.costpercapita_cg180, 0.001); end
  def test_costpercapita_ch180; assert_in_epsilon(4.398699050552199, worksheet.costpercapita_ch180, 0.001); end
  def test_costpercapita_ci180; assert_in_epsilon(40.631440627090456, worksheet.costpercapita_ci180, 0.001); end
  def test_costpercapita_cj180; assert_in_epsilon(78.40285226127796, worksheet.costpercapita_cj180, 0.001); end
  def test_costpercapita_ck180; assert_in_epsilon(69.97708833782075, worksheet.costpercapita_ck180, 0.001); end
  def test_costpercapita_cl180; assert_in_epsilon(41.35060074690151, worksheet.costpercapita_cl180, 0.001); end
  def test_costpercapita_cm180; assert_in_epsilon(63.04923888996868, worksheet.costpercapita_cm180, 0.001); end
  def test_costpercapita_cn180; assert_in_epsilon(54.25532659927309, worksheet.costpercapita_cn180, 0.001); end
  def test_costpercapita_cp180; assert_in_epsilon(32.07815562408762, worksheet.costpercapita_cp180, 0.001); end
  def test_costpercapita_cq180; assert_in_epsilon(580.5839541516173, worksheet.costpercapita_cq180, 0.001); end
  def test_costpercapita_cr180; assert_equal("ok", worksheet.costpercapita_cr180); end
  def test_costpercapita_c181; assert_equal("Buildings", worksheet.costpercapita_c181); end
  def test_costpercapita_e181; assert_in_epsilon(305.70454343668825, worksheet.costpercapita_e181, 0.001); end
  def test_costpercapita_f181; assert_in_epsilon(334.00200261326313, worksheet.costpercapita_f181, 0.001); end
  def test_costpercapita_g181; assert_in_epsilon(344.47169556419277, worksheet.costpercapita_g181, 0.001); end
  def test_costpercapita_h181; assert_in_epsilon(379.49377099087184, worksheet.costpercapita_h181, 0.001); end
  def test_costpercapita_i181; assert_in_epsilon(412.64486144906147, worksheet.costpercapita_i181, 0.001); end
  def test_costpercapita_j181; assert_in_epsilon(450.44198480735486, worksheet.costpercapita_j181, 0.001); end
  def test_costpercapita_k181; assert_in_epsilon(485.6054679001463, worksheet.costpercapita_k181, 0.001); end
  def test_costpercapita_l181; assert_in_epsilon(526.7955734540591, worksheet.costpercapita_l181, 0.001); end
  def test_costpercapita_m181; assert_in_epsilon(570.4190941080954, worksheet.costpercapita_m181, 0.001); end
  def test_costpercapita_o181; assert_in_epsilon(94.519051975028, worksheet.costpercapita_o181, 0.001); end
  def test_costpercapita_p181; assert_in_epsilon(96.07231807786862, worksheet.costpercapita_p181, 0.001); end
  def test_costpercapita_q181; assert_in_epsilon(98.1086295603686, worksheet.costpercapita_q181, 0.001); end
  def test_costpercapita_r181; assert_in_epsilon(99.89483715759334, worksheet.costpercapita_r181, 0.001); end
  def test_costpercapita_s181; assert_in_epsilon(101.638820656951, worksheet.costpercapita_s181, 0.001); end
  def test_costpercapita_t181; assert_in_epsilon(104.62710686035715, worksheet.costpercapita_t181, 0.001); end
  def test_costpercapita_u181; assert_in_epsilon(107.98092471304797, worksheet.costpercapita_u181, 0.001); end
  def test_costpercapita_v181; assert_in_epsilon(111.63252435894259, worksheet.costpercapita_v181, 0.001); end
  def test_costpercapita_w181; assert_in_epsilon(115.59400956769834, worksheet.costpercapita_w181, 0.001); end
  def test_costpercapita_y181; assert_in_delta(0, (worksheet.costpercapita_y181||0), 0.001); end
  def test_costpercapita_z181; assert_in_delta(0, (worksheet.costpercapita_z181||0), 0.001); end
  def test_costpercapita_aa181; assert_in_delta(0, (worksheet.costpercapita_aa181||0), 0.001); end
  def test_costpercapita_ab181; assert_in_delta(0, (worksheet.costpercapita_ab181||0), 0.001); end
  def test_costpercapita_ac181; assert_in_delta(0, (worksheet.costpercapita_ac181||0), 0.001); end
  def test_costpercapita_ad181; assert_in_delta(0, (worksheet.costpercapita_ad181||0), 0.001); end
  def test_costpercapita_ae181; assert_in_delta(0, (worksheet.costpercapita_ae181||0), 0.001); end
  def test_costpercapita_af181; assert_in_delta(0, (worksheet.costpercapita_af181||0), 0.001); end
  def test_costpercapita_ag181; assert_in_delta(0, (worksheet.costpercapita_ag181||0), 0.001); end
  def test_costpercapita_ai181; assert_in_epsilon(400.2235954117163, worksheet.costpercapita_ai181, 0.001); end
  def test_costpercapita_aj181; assert_in_epsilon(430.07432069113173, worksheet.costpercapita_aj181, 0.001); end
  def test_costpercapita_ak181; assert_in_epsilon(442.5803251245614, worksheet.costpercapita_ak181, 0.001); end
  def test_costpercapita_al181; assert_in_epsilon(479.3886081484652, worksheet.costpercapita_al181, 0.001); end
  def test_costpercapita_am181; assert_in_epsilon(514.2836821060125, worksheet.costpercapita_am181, 0.001); end
  def test_costpercapita_an181; assert_in_epsilon(555.069091667712, worksheet.costpercapita_an181, 0.001); end
  def test_costpercapita_ao181; assert_in_epsilon(593.5863926131942, worksheet.costpercapita_ao181, 0.001); end
  def test_costpercapita_ap181; assert_in_epsilon(638.4280978130017, worksheet.costpercapita_ap181, 0.001); end
  def test_costpercapita_aq181; assert_in_epsilon(686.0131036757937, worksheet.costpercapita_aq181, 0.001); end
  def test_costpercapita_as181; assert_in_epsilon(526.6274685835098, worksheet.costpercapita_as181, 0.001); end
  def test_costpercapita_at181; assert_in_epsilon(10624.718639873461, worksheet.costpercapita_at181, 0.001); end
  def test_costpercapita_ay181; assert_in_epsilon(99.30544124715671, worksheet.costpercapita_ay181, 0.001); end
  def test_costpercapita_az181; assert_in_epsilon(182.03840748867685, worksheet.costpercapita_az181, 0.001); end
  def test_costpercapita_ba181; assert_in_epsilon(188.4214618805231, worksheet.costpercapita_ba181, 0.001); end
  def test_costpercapita_bb181; assert_in_epsilon(207.66882649163637, worksheet.costpercapita_bb181, 0.001); end
  def test_costpercapita_bc181; assert_in_epsilon(225.88599891359817, worksheet.costpercapita_bc181, 0.001); end
  def test_costpercapita_bd181; assert_in_epsilon(246.6507957835397, worksheet.costpercapita_bd181, 0.001); end
  def test_costpercapita_be181; assert_in_epsilon(265.96803317031413, worksheet.costpercapita_be181, 0.001); end
  def test_costpercapita_bf181; assert_in_epsilon(288.5925883259268, worksheet.costpercapita_bf181, 0.001); end
  def test_costpercapita_bg181; assert_in_epsilon(312.55200083648276, worksheet.costpercapita_bg181, 0.001); end
  def test_costpercapita_bi181; assert_in_epsilon(99.30544124715671, worksheet.costpercapita_bi181, 0.001); end
  def test_costpercapita_bj181; assert_in_epsilon(278.06924493370303, worksheet.costpercapita_bj181, 0.001); end
  def test_costpercapita_bk181; assert_in_epsilon(457.38723403884273, worksheet.costpercapita_bk181, 0.001); end
  def test_costpercapita_bl181; assert_in_epsilon(564.3557718421933, worksheet.costpercapita_bl181, 0.001); end
  def test_costpercapita_bm181; assert_in_epsilon(612.1778797979468, worksheet.costpercapita_bm181, 0.001); end
  def test_costpercapita_bn181; assert_in_epsilon(672.7303940109333, worksheet.costpercapita_bn181, 0.001); end
  def test_costpercapita_bo181; assert_in_epsilon(729.7930926086249, worksheet.costpercapita_bo181, 0.001); end
  def test_costpercapita_bp181; assert_in_epsilon(792.4965694138406, worksheet.costpercapita_bp181, 0.001); end
  def test_costpercapita_bq181; assert_in_epsilon(858.0987328134704, worksheet.costpercapita_bq181, 0.001); end
  def test_costpercapita_bs181; assert_in_epsilon(193.82449322218474, worksheet.costpercapita_bs181, 0.001); end
  def test_costpercapita_bt181; assert_in_epsilon(374.14156301157163, worksheet.costpercapita_bt181, 0.001); end
  def test_costpercapita_bu181; assert_in_epsilon(555.4958635992114, worksheet.costpercapita_bu181, 0.001); end
  def test_costpercapita_bv181; assert_in_epsilon(664.2506089997867, worksheet.costpercapita_bv181, 0.001); end
  def test_costpercapita_bw181; assert_in_epsilon(713.8167004548978, worksheet.costpercapita_bw181, 0.001); end
  def test_costpercapita_bx181; assert_in_epsilon(777.3575008712905, worksheet.costpercapita_bx181, 0.001); end
  def test_costpercapita_by181; assert_in_epsilon(837.7740173216728, worksheet.costpercapita_by181, 0.001); end
  def test_costpercapita_bz181; assert_in_epsilon(904.1290937727831, worksheet.costpercapita_bz181, 0.001); end
  def test_costpercapita_ca181; assert_in_epsilon(973.6927423811687, worksheet.costpercapita_ca181, 0.001); end
  def test_costpercapita_cc181; assert_in_epsilon(666.0536204038409, worksheet.costpercapita_cc181, 0.001); end
  def test_costpercapita_cd181; assert_in_epsilon(13331.105469382963, worksheet.costpercapita_cd181, 0.001); end
  def test_costpercapita_cf181; assert_in_epsilon(-206.39910218953153, worksheet.costpercapita_cf181, 0.001); end
  def test_costpercapita_cg181; assert_in_epsilon(-55.93275767956008, worksheet.costpercapita_cg181, 0.001); end
  def test_costpercapita_ch181; assert_in_epsilon(112.91553847464998, worksheet.costpercapita_ch181, 0.001); end
  def test_costpercapita_ci181; assert_in_epsilon(184.8620008513215, worksheet.costpercapita_ci181, 0.001); end
  def test_costpercapita_cj181; assert_in_epsilon(199.53301834888538, worksheet.costpercapita_cj181, 0.001); end
  def test_costpercapita_ck181; assert_in_epsilon(222.2884092035785, worksheet.costpercapita_ck181, 0.001); end
  def test_costpercapita_cl181; assert_in_epsilon(244.18762470847847, worksheet.costpercapita_cl181, 0.001); end
  def test_costpercapita_cm181; assert_in_epsilon(265.7009959597815, worksheet.costpercapita_cm181, 0.001); end
  def test_costpercapita_cn181; assert_in_epsilon(287.679638705375, worksheet.costpercapita_cn181, 0.001); end
  def test_costpercapita_cp181; assert_in_epsilon(139.42615182033094, worksheet.costpercapita_cp181, 0.001); end
  def test_costpercapita_cq181; assert_in_epsilon(2706.386829509499, worksheet.costpercapita_cq181, 0.001); end
  def test_costpercapita_cr181; assert_equal("ok", worksheet.costpercapita_cr181); end
  def test_costpercapita_c182; assert_equal("Transport", worksheet.costpercapita_c182); end
  def test_costpercapita_e182; assert_in_epsilon(990.9765502765794, worksheet.costpercapita_e182, 0.001); end
  def test_costpercapita_f182; assert_in_epsilon(936.1395991935894, worksheet.costpercapita_f182, 0.001); end
  def test_costpercapita_g182; assert_in_epsilon(976.0518128318218, worksheet.costpercapita_g182, 0.001); end
  def test_costpercapita_h182; assert_in_epsilon(1011.6095007567807, worksheet.costpercapita_h182, 0.001); end
  def test_costpercapita_i182; assert_in_epsilon(1007.8105923469925, worksheet.costpercapita_i182, 0.001); end
  def test_costpercapita_j182; assert_in_epsilon(1009.1675110835072, worksheet.costpercapita_j182, 0.001); end
  def test_costpercapita_k182; assert_in_epsilon(988.2251395864231, worksheet.costpercapita_k182, 0.001); end
  def test_costpercapita_l182; assert_in_epsilon(963.7862012190681, worksheet.costpercapita_l182, 0.001); end
  def test_costpercapita_m182; assert_in_epsilon(937.8222578452617, worksheet.costpercapita_m182, 0.001); end
  def test_costpercapita_o182; assert_in_epsilon(1174.401543588274, worksheet.costpercapita_o182, 0.001); end
  def test_costpercapita_p182; assert_in_epsilon(1165.7447881590565, worksheet.costpercapita_p182, 0.001); end
  def test_costpercapita_q182; assert_in_epsilon(1185.6969278812494, worksheet.costpercapita_q182, 0.001); end
  def test_costpercapita_r182; assert_in_epsilon(1213.624834020653, worksheet.costpercapita_r182, 0.001); end
  def test_costpercapita_s182; assert_in_epsilon(1229.7828725336726, worksheet.costpercapita_s182, 0.001); end
  def test_costpercapita_t182; assert_in_epsilon(1241.8068080580576, worksheet.costpercapita_t182, 0.001); end
  def test_costpercapita_u182; assert_in_epsilon(1239.281750148546, worksheet.costpercapita_u182, 0.001); end
  def test_costpercapita_v182; assert_in_epsilon(1229.9585826618304, worksheet.costpercapita_v182, 0.001); end
  def test_costpercapita_w182; assert_in_epsilon(1215.1014991042418, worksheet.costpercapita_w182, 0.001); end
  def test_costpercapita_y182; assert_in_delta(0, (worksheet.costpercapita_y182||0), 0.001); end
  def test_costpercapita_z182; assert_in_delta(0, (worksheet.costpercapita_z182||0), 0.001); end
  def test_costpercapita_aa182; assert_in_delta(0, (worksheet.costpercapita_aa182||0), 0.001); end
  def test_costpercapita_ab182; assert_in_delta(0, (worksheet.costpercapita_ab182||0), 0.001); end
  def test_costpercapita_ac182; assert_in_delta(0, (worksheet.costpercapita_ac182||0), 0.001); end
  def test_costpercapita_ad182; assert_in_delta(0, (worksheet.costpercapita_ad182||0), 0.001); end
  def test_costpercapita_ae182; assert_in_delta(0, (worksheet.costpercapita_ae182||0), 0.001); end
  def test_costpercapita_af182; assert_in_delta(0, (worksheet.costpercapita_af182||0), 0.001); end
  def test_costpercapita_ag182; assert_in_delta(0, (worksheet.costpercapita_ag182||0), 0.001); end
  def test_costpercapita_ai182; assert_in_epsilon(2165.3780938648533, worksheet.costpercapita_ai182, 0.001); end
  def test_costpercapita_aj182; assert_in_epsilon(2101.884387352646, worksheet.costpercapita_aj182, 0.001); end
  def test_costpercapita_ak182; assert_in_epsilon(2161.7487407130707, worksheet.costpercapita_ak182, 0.001); end
  def test_costpercapita_al182; assert_in_epsilon(2225.234334777434, worksheet.costpercapita_al182, 0.001); end
  def test_costpercapita_am182; assert_in_epsilon(2237.5934648806647, worksheet.costpercapita_am182, 0.001); end
  def test_costpercapita_an182; assert_in_epsilon(2250.9743191415646, worksheet.costpercapita_an182, 0.001); end
  def test_costpercapita_ao182; assert_in_epsilon(2227.5068897349684, worksheet.costpercapita_ao182, 0.001); end
  def test_costpercapita_ap182; assert_in_epsilon(2193.7447838808985, worksheet.costpercapita_ap182, 0.001); end
  def test_costpercapita_aq182; assert_in_epsilon(2152.9237569495035, worksheet.costpercapita_aq182, 0.001); end
  def test_costpercapita_as182; assert_in_epsilon(2190.776530143956, worksheet.costpercapita_as182, 0.001); end
  def test_costpercapita_at182; assert_in_epsilon(45895.63305511146, worksheet.costpercapita_at182, 0.001); end
  def test_costpercapita_ay182; assert_in_epsilon(353.48204866895543, worksheet.costpercapita_ay182, 0.001); end
  def test_costpercapita_az182; assert_in_epsilon(558.8938164827566, worksheet.costpercapita_az182, 0.001); end
  def test_costpercapita_ba182; assert_in_epsilon(581.4003614805808, worksheet.costpercapita_ba182, 0.001); end
  def test_costpercapita_bb182; assert_in_epsilon(601.5577758844141, worksheet.costpercapita_bb182, 0.001); end
  def test_costpercapita_bc182; assert_in_epsilon(599.7556293536204, worksheet.costpercapita_bc182, 0.001); end
  def test_costpercapita_bd182; assert_in_epsilon(600.5619500225553, worksheet.costpercapita_bd182, 0.001); end
  def test_costpercapita_be182; assert_in_epsilon(588.6421416296711, worksheet.costpercapita_be182, 0.001); end
  def test_costpercapita_bf182; assert_in_epsilon(574.4316229224833, worksheet.costpercapita_bf182, 0.001); end
  def test_costpercapita_bg182; assert_in_epsilon(558.9596209585603, worksheet.costpercapita_bg182, 0.001); end
  def test_costpercapita_bi182; assert_in_epsilon(353.48204866895543, worksheet.costpercapita_bi182, 0.001); end
  def test_costpercapita_bj182; assert_in_epsilon(863.0749555468684, worksheet.costpercapita_bj182, 0.001); end
  def test_costpercapita_bk182; assert_in_epsilon(1329.5346738060844, worksheet.costpercapita_bk182, 0.001); end
  def test_costpercapita_bl182; assert_in_epsilon(1521.044984027141, worksheet.costpercapita_bl182, 0.001); end
  def test_costpercapita_bm182; assert_in_epsilon(1565.601061832415, worksheet.costpercapita_bm182, 0.001); end
  def test_costpercapita_bn182; assert_in_epsilon(1591.4045819102291, worksheet.costpercapita_bn182, 0.001); end
  def test_costpercapita_bo182; assert_in_epsilon(1583.594602625244, worksheet.costpercapita_bo182, 0.001); end
  def test_costpercapita_bp182; assert_in_epsilon(1565.8974173011195, worksheet.costpercapita_bp182, 0.001); end
  def test_costpercapita_bq182; assert_in_epsilon(1529.1339042884078, worksheet.costpercapita_bq182, 0.001); end
  def test_costpercapita_bs182; assert_in_epsilon(1527.8835922572296, worksheet.costpercapita_bs182, 0.001); end
  def test_costpercapita_bt182; assert_in_epsilon(2028.819743705925, worksheet.costpercapita_bt182, 0.001); end
  def test_costpercapita_bu182; assert_in_epsilon(2515.2316016873338, worksheet.costpercapita_bu182, 0.001); end
  def test_costpercapita_bv182; assert_in_epsilon(2734.6698180477947, worksheet.costpercapita_bv182, 0.001); end
  def test_costpercapita_bw182; assert_in_epsilon(2795.383934366088, worksheet.costpercapita_bw182, 0.001); end
  def test_costpercapita_bx182; assert_in_epsilon(2833.2113899682863, worksheet.costpercapita_bx182, 0.001); end
  def test_costpercapita_by182; assert_in_epsilon(2822.8763527737897, worksheet.costpercapita_by182, 0.001); end
  def test_costpercapita_bz182; assert_in_epsilon(2795.8559999629497, worksheet.costpercapita_bz182, 0.001); end
  def test_costpercapita_ca182; assert_in_epsilon(2744.2354033926485, worksheet.costpercapita_ca182, 0.001); end
  def test_costpercapita_cc182; assert_in_epsilon(2533.129759573561, worksheet.costpercapita_cc182, 0.001); end
  def test_costpercapita_cd182; assert_in_epsilon(53126.991841765936, worksheet.costpercapita_cd182, 0.001); end
  def test_costpercapita_cf182; assert_in_epsilon(-637.494501607624, worksheet.costpercapita_cf182, 0.001); end
  def test_costpercapita_cg182; assert_in_epsilon(-73.06464364672122, worksheet.costpercapita_cg182, 0.001); end
  def test_costpercapita_ch182; assert_in_epsilon(353.4828609742628, worksheet.costpercapita_ch182, 0.001); end
  def test_costpercapita_ci182; assert_in_epsilon(509.4354832703605, worksheet.costpercapita_ci182, 0.001); end
  def test_costpercapita_cj182; assert_in_epsilon(557.7904694854226, worksheet.costpercapita_cj182, 0.001); end
  def test_costpercapita_ck182; assert_in_epsilon(582.2370708267218, worksheet.costpercapita_ck182, 0.001); end
  def test_costpercapita_cl182; assert_in_epsilon(595.3694630388208, worksheet.costpercapita_cl182, 0.001); end
  def test_costpercapita_cm182; assert_in_epsilon(602.1112160820517, worksheet.costpercapita_cm182, 0.001); end
  def test_costpercapita_cn182; assert_in_epsilon(591.3116464431463, worksheet.costpercapita_cn182, 0.001); end
  def test_costpercapita_cp182; assert_in_epsilon(342.3532294296045, worksheet.costpercapita_cp182, 0.001); end
  def test_costpercapita_cq182; assert_in_epsilon(7231.35878665446, worksheet.costpercapita_cq182, 0.001); end
  def test_costpercapita_cr182; assert_equal("ok", worksheet.costpercapita_cr182); end
  def test_costpercapita_c183; assert_equal("Industry", worksheet.costpercapita_c183); end
  def test_costpercapita_e183; assert_in_epsilon(6.2845195296525445, worksheet.costpercapita_e183, 0.001); end
  def test_costpercapita_f183; assert_in_epsilon(5.724395737726091, worksheet.costpercapita_f183, 0.001); end
  def test_costpercapita_g183; assert_in_epsilon(5.246927453872046, worksheet.costpercapita_g183, 0.001); end
  def test_costpercapita_h183; assert_in_epsilon(4.82266004697929, worksheet.costpercapita_h183, 0.001); end
  def test_costpercapita_i183; assert_in_epsilon(4.491603219260816, worksheet.costpercapita_i183, 0.001); end
  def test_costpercapita_j183; assert_in_epsilon(4.235217701747224, worksheet.costpercapita_j183, 0.001); end
  def test_costpercapita_k183; assert_in_epsilon(4.030862715120994, worksheet.costpercapita_k183, 0.001); end
  def test_costpercapita_l183; assert_in_epsilon(3.8639788668837762, worksheet.costpercapita_l183, 0.001); end
  def test_costpercapita_m183; assert_in_epsilon(3.7262051782528984, worksheet.costpercapita_m183, 0.001); end
  def test_costpercapita_o183; assert_in_epsilon(12.93368705422323, worksheet.costpercapita_o183, 0.001); end
  def test_costpercapita_p183; assert_in_epsilon(11.85199256101011, worksheet.costpercapita_p183, 0.001); end
  def test_costpercapita_q183; assert_in_epsilon(10.873688106284314, worksheet.costpercapita_q183, 0.001); end
  def test_costpercapita_r183; assert_in_epsilon(10.089318595497176, worksheet.costpercapita_r183, 0.001); end
  def test_costpercapita_s183; assert_in_epsilon(9.476732724589183, worksheet.costpercapita_s183, 0.001); end
  def test_costpercapita_t183; assert_in_epsilon(8.998922200422534, worksheet.costpercapita_t183, 0.001); end
  def test_costpercapita_u183; assert_in_epsilon(8.614220010937059, worksheet.costpercapita_u183, 0.001); end
  def test_costpercapita_v183; assert_in_epsilon(8.296184487490324, worksheet.costpercapita_v183, 0.001); end
  def test_costpercapita_w183; assert_in_epsilon(8.030347881570902, worksheet.costpercapita_w183, 0.001); end
  def test_costpercapita_y183; assert_in_delta(0, (worksheet.costpercapita_y183||0), 0.001); end
  def test_costpercapita_z183; assert_in_delta(0, (worksheet.costpercapita_z183||0), 0.001); end
  def test_costpercapita_aa183; assert_in_delta(0, (worksheet.costpercapita_aa183||0), 0.001); end
  def test_costpercapita_ab183; assert_in_delta(0, (worksheet.costpercapita_ab183||0), 0.001); end
  def test_costpercapita_ac183; assert_in_delta(0, (worksheet.costpercapita_ac183||0), 0.001); end
  def test_costpercapita_ad183; assert_in_delta(0, (worksheet.costpercapita_ad183||0), 0.001); end
  def test_costpercapita_ae183; assert_in_delta(0, (worksheet.costpercapita_ae183||0), 0.001); end
  def test_costpercapita_af183; assert_in_delta(0, (worksheet.costpercapita_af183||0), 0.001); end
  def test_costpercapita_ag183; assert_in_delta(0, (worksheet.costpercapita_ag183||0), 0.001); end
  def test_costpercapita_ai183; assert_in_epsilon(19.218206583875773, worksheet.costpercapita_ai183, 0.001); end
  def test_costpercapita_aj183; assert_in_epsilon(17.5763882987362, worksheet.costpercapita_aj183, 0.001); end
  def test_costpercapita_ak183; assert_in_epsilon(16.12061556015636, worksheet.costpercapita_ak183, 0.001); end
  def test_costpercapita_al183; assert_in_epsilon(14.911978642476464, worksheet.costpercapita_al183, 0.001); end
  def test_costpercapita_am183; assert_in_epsilon(13.968335943849999, worksheet.costpercapita_am183, 0.001); end
  def test_costpercapita_an183; assert_in_epsilon(13.234139902169758, worksheet.costpercapita_an183, 0.001); end
  def test_costpercapita_ao183; assert_in_epsilon(12.645082726058053, worksheet.costpercapita_ao183, 0.001); end
  def test_costpercapita_ap183; assert_in_epsilon(12.160163354374099, worksheet.costpercapita_ap183, 0.001); end
  def test_costpercapita_aq183; assert_in_epsilon(11.756553059823801, worksheet.costpercapita_aq183, 0.001); end
  def test_costpercapita_as183; assert_in_epsilon(14.621273785724501, worksheet.costpercapita_as183, 0.001); end
  def test_costpercapita_at183; assert_in_epsilon(314.7528385973844, worksheet.costpercapita_at183, 0.001); end
  def test_costpercapita_ay183; assert_in_epsilon(2.0700193895530417, worksheet.costpercapita_ay183, 0.001); end
  def test_costpercapita_az183; assert_in_epsilon(3.1425394083183877, worksheet.costpercapita_az183, 0.001); end
  def test_costpercapita_ba183; assert_in_epsilon(2.880422153156445, worksheet.costpercapita_ba183, 0.001); end
  def test_costpercapita_bb183; assert_in_epsilon(2.647510749593148, worksheet.costpercapita_bb183, 0.001); end
  def test_costpercapita_bc183; assert_in_epsilon(2.4657694488228703, worksheet.costpercapita_bc183, 0.001); end
  def test_costpercapita_bd183; assert_in_epsilon(2.3250206904519795, worksheet.costpercapita_bd183, 0.001); end
  def test_costpercapita_be183; assert_in_epsilon(2.2128352951399486, worksheet.costpercapita_be183, 0.001); end
  def test_costpercapita_bf183; assert_in_epsilon(2.1212205477106227, worksheet.costpercapita_bf183, 0.001); end
  def test_costpercapita_bg183; assert_in_epsilon(2.0455864955261207, worksheet.costpercapita_bg183, 0.001); end
  def test_costpercapita_bi183; assert_in_epsilon(2.0700193895530417, worksheet.costpercapita_bi183, 0.001); end
  def test_costpercapita_bj183; assert_in_epsilon(5.144299765149913, worksheet.costpercapita_bj183, 0.001); end
  def test_costpercapita_bk183; assert_in_epsilon(7.856307058649302, worksheet.costpercapita_bk183, 0.001); end
  def test_costpercapita_bl183; assert_in_epsilon(8.38428511590707, worksheet.costpercapita_bl183, 0.001); end
  def test_costpercapita_bm183; assert_in_epsilon(7.755927126247094, worksheet.costpercapita_bm183, 0.001); end
  def test_costpercapita_bn183; assert_in_epsilon(7.247227409765991, worksheet.costpercapita_bn183, 0.001); end
  def test_costpercapita_bo183; assert_in_epsilon(6.844610977009696, worksheet.costpercapita_bo183, 0.001); end
  def test_costpercapita_bp183; assert_in_epsilon(6.519960535178548, worksheet.costpercapita_bp183, 0.001); end
  def test_costpercapita_bq183; assert_in_epsilon(6.255443618950079, worksheet.costpercapita_bq183, 0.001); end
  def test_costpercapita_bs183; assert_in_epsilon(15.00370644377627, worksheet.costpercapita_bs183, 0.001); end
  def test_costpercapita_bt183; assert_in_epsilon(16.996292326160027, worksheet.costpercapita_bt183, 0.001); end
  def test_costpercapita_bu183; assert_in_epsilon(18.729995164933616, worksheet.costpercapita_bu183, 0.001); end
  def test_costpercapita_bv183; assert_in_epsilon(18.473603711404248, worksheet.costpercapita_bv183, 0.001); end
  def test_costpercapita_bw183; assert_in_epsilon(17.232659850836278, worksheet.costpercapita_bw183, 0.001); end
  def test_costpercapita_bx183; assert_in_epsilon(16.246149610188525, worksheet.costpercapita_bx183, 0.001); end
  def test_costpercapita_by183; assert_in_epsilon(15.458830987946754, worksheet.costpercapita_by183, 0.001); end
  def test_costpercapita_bz183; assert_in_epsilon(14.816145022668872, worksheet.costpercapita_bz183, 0.001); end
  def test_costpercapita_ca183; assert_in_epsilon(14.285791500520983, worksheet.costpercapita_ca183, 0.001); end
  def test_costpercapita_cc183; assert_in_epsilon(16.36035273538173, worksheet.costpercapita_cc183, 0.001); end
  def test_costpercapita_cd183; assert_in_epsilon(354.9964619504135, worksheet.costpercapita_cd183, 0.001); end
  def test_costpercapita_cf183; assert_in_epsilon(-4.214500140099503, worksheet.costpercapita_cf183, 0.001); end
  def test_costpercapita_cg183; assert_in_delta(-0.5800959725761775, worksheet.costpercapita_cg183, 0.001); end
  def test_costpercapita_ch183; assert_in_epsilon(2.6093796047772555, worksheet.costpercapita_ch183, 0.001); end
  def test_costpercapita_ci183; assert_in_epsilon(3.561625068927781, worksheet.costpercapita_ci183, 0.001); end
  def test_costpercapita_cj183; assert_in_epsilon(3.2643239069862786, worksheet.costpercapita_cj183, 0.001); end
  def test_costpercapita_ck183; assert_in_epsilon(3.012009708018766, worksheet.costpercapita_ck183, 0.001); end
  def test_costpercapita_cl183; assert_in_epsilon(2.8137482618887013, worksheet.costpercapita_cl183, 0.001); end
  def test_costpercapita_cm183; assert_in_epsilon(2.655981668294772, worksheet.costpercapita_cm183, 0.001); end
  def test_costpercapita_cn183; assert_in_epsilon(2.5292384406971804, worksheet.costpercapita_cn183, 0.001); end
  def test_costpercapita_cp183; assert_in_epsilon(1.7390789496572283, worksheet.costpercapita_cp183, 0.001); end
  def test_costpercapita_cq183; assert_in_epsilon(40.2436233530291, worksheet.costpercapita_cq183, 0.001); end
  def test_costpercapita_cr183; assert_equal("ok", worksheet.costpercapita_cr183); end
  def test_costpercapita_c184; assert_equal("Other", worksheet.costpercapita_c184); end
  def test_costpercapita_e184; assert_in_delta(0, (worksheet.costpercapita_e184||0), 0.001); end
  def test_costpercapita_f184; assert_in_epsilon(1.7135096450549578, worksheet.costpercapita_f184, 0.001); end
  def test_costpercapita_g184; assert_in_epsilon(3.647738276206623, worksheet.costpercapita_g184, 0.001); end
  def test_costpercapita_h184; assert_in_epsilon(3.2170134616906463, worksheet.costpercapita_h184, 0.001); end
  def test_costpercapita_i184; assert_in_epsilon(2.8327745629301195, worksheet.costpercapita_i184, 0.001); end
  def test_costpercapita_j184; assert_in_epsilon(2.4883651487340885, worksheet.costpercapita_j184, 0.001); end
  def test_costpercapita_k184; assert_in_epsilon(2.2130990738684746, worksheet.costpercapita_k184, 0.001); end
  def test_costpercapita_l184; assert_in_epsilon(1.9179810840688096, worksheet.costpercapita_l184, 0.001); end
  def test_costpercapita_m184; assert_in_epsilon(1.6454422222349594, worksheet.costpercapita_m184, 0.001); end
  def test_costpercapita_o184; assert_in_delta(0, (worksheet.costpercapita_o184||0), 0.001); end
  def test_costpercapita_p184; assert_in_delta(0.06031841317572214, worksheet.costpercapita_p184, 0.001); end
  def test_costpercapita_q184; assert_in_delta(0.1465832317430404, worksheet.costpercapita_q184, 0.001); end
  def test_costpercapita_r184; assert_in_delta(0.14773145212787878, worksheet.costpercapita_r184, 0.001); end
  def test_costpercapita_s184; assert_in_delta(0.1490000913332916, worksheet.costpercapita_s184, 0.001); end
  def test_costpercapita_t184; assert_in_delta(0.15046192531819924, worksheet.costpercapita_t184, 0.001); end
  def test_costpercapita_u184; assert_in_delta(0.1546387599818855, worksheet.costpercapita_u184, 0.001); end
  def test_costpercapita_v184; assert_in_delta(0.15597914305017013, worksheet.costpercapita_v184, 0.001); end
  def test_costpercapita_w184; assert_in_delta(0.15724360344880778, worksheet.costpercapita_w184, 0.001); end
  def test_costpercapita_y184; assert_in_delta(0, (worksheet.costpercapita_y184||0), 0.001); end
  def test_costpercapita_z184; assert_in_delta(0, (worksheet.costpercapita_z184||0), 0.001); end
  def test_costpercapita_aa184; assert_in_delta(0, (worksheet.costpercapita_aa184||0), 0.001); end
  def test_costpercapita_ab184; assert_in_delta(0, (worksheet.costpercapita_ab184||0), 0.001); end
  def test_costpercapita_ac184; assert_in_delta(0, (worksheet.costpercapita_ac184||0), 0.001); end
  def test_costpercapita_ad184; assert_in_delta(0, (worksheet.costpercapita_ad184||0), 0.001); end
  def test_costpercapita_ae184; assert_in_delta(0, (worksheet.costpercapita_ae184||0), 0.001); end
  def test_costpercapita_af184; assert_in_delta(0, (worksheet.costpercapita_af184||0), 0.001); end
  def test_costpercapita_ag184; assert_in_delta(0, (worksheet.costpercapita_ag184||0), 0.001); end
  def test_costpercapita_ai184; assert_in_delta(0, (worksheet.costpercapita_ai184||0), 0.001); end
  def test_costpercapita_aj184; assert_in_epsilon(1.77382805823068, worksheet.costpercapita_aj184, 0.001); end
  def test_costpercapita_ak184; assert_in_epsilon(3.7943215079496633, worksheet.costpercapita_ak184, 0.001); end
  def test_costpercapita_al184; assert_in_epsilon(3.364744913818525, worksheet.costpercapita_al184, 0.001); end
  def test_costpercapita_am184; assert_in_epsilon(2.981774654263411, worksheet.costpercapita_am184, 0.001); end
  def test_costpercapita_an184; assert_in_epsilon(2.638827074052288, worksheet.costpercapita_an184, 0.001); end
  def test_costpercapita_ao184; assert_in_epsilon(2.3677378338503603, worksheet.costpercapita_ao184, 0.001); end
  def test_costpercapita_ap184; assert_in_epsilon(2.0739602271189796, worksheet.costpercapita_ap184, 0.001); end
  def test_costpercapita_aq184; assert_in_epsilon(1.8026858256837672, worksheet.costpercapita_aq184, 0.001); end
  def test_costpercapita_as184; assert_in_epsilon(2.3108755661075193, worksheet.costpercapita_as184, 0.001); end
  def test_costpercapita_at184; assert_in_epsilon(53.8288910531199, worksheet.costpercapita_at184, 0.001); end
  def test_costpercapita_ay184; assert_in_delta(0, (worksheet.costpercapita_ay184||0), 0.001); end
  def test_costpercapita_az184; assert_in_delta(0.94067074200182, worksheet.costpercapita_az184, 0.001); end
  def test_costpercapita_ba184; assert_in_epsilon(2.002510275218013, worksheet.costpercapita_ba184, 0.001); end
  def test_costpercapita_bb184; assert_in_epsilon(1.7660539284220513, worksheet.costpercapita_bb184, 0.001); end
  def test_costpercapita_bc184; assert_in_epsilon(1.5551170999973514, worksheet.costpercapita_bc184, 0.001); end
  def test_costpercapita_bd184; assert_in_epsilon(1.3660455881216176, worksheet.costpercapita_bd184, 0.001); end
  def test_costpercapita_be184; assert_in_epsilon(1.214931911207671, worksheet.costpercapita_be184, 0.001); end
  def test_costpercapita_bf184; assert_in_epsilon(1.052920066544823, worksheet.costpercapita_bf184, 0.001); end
  def test_costpercapita_bg184; assert_in_delta(0.9033035562873877, worksheet.costpercapita_bg184, 0.001); end
  def test_costpercapita_bi184; assert_in_delta(0, (worksheet.costpercapita_bi184||0), 0.001); end
  def test_costpercapita_bj184; assert_in_delta(0.94067074200182, worksheet.costpercapita_bj184, 0.001); end
  def test_costpercapita_bk184; assert_in_epsilon(2.9123851969468824, worksheet.costpercapita_bk184, 0.001); end
  def test_costpercapita_bl184; assert_in_epsilon(4.588261559855816, worksheet.costpercapita_bl184, 0.001); end
  def test_costpercapita_bm184; assert_in_epsilon(5.160412853543977, worksheet.costpercapita_bm184, 0.001); end
  def test_costpercapita_bn184; assert_in_epsilon(4.5618717938984386, worksheet.costpercapita_bn184, 0.001); end
  def test_costpercapita_bo184; assert_in_epsilon(4.037946115457296, worksheet.costpercapita_bo184, 0.001); end
  def test_costpercapita_bp184; assert_in_epsilon(3.553860742723276, worksheet.costpercapita_bp184, 0.001); end
  def test_costpercapita_bq184; assert_in_epsilon(3.1050503838853265, worksheet.costpercapita_bq184, 0.001); end
  def test_costpercapita_bs184; assert_in_delta(0, (worksheet.costpercapita_bs184||0), 0.001); end
  def test_costpercapita_bt184; assert_in_epsilon(1.0009891551775423, worksheet.costpercapita_bt184, 0.001); end
  def test_costpercapita_bu184; assert_in_epsilon(3.0589684286899232, worksheet.costpercapita_bu184, 0.001); end
  def test_costpercapita_bv184; assert_in_epsilon(4.735993011983695, worksheet.costpercapita_bv184, 0.001); end
  def test_costpercapita_bw184; assert_in_epsilon(5.309412944877268, worksheet.costpercapita_bw184, 0.001); end
  def test_costpercapita_bx184; assert_in_epsilon(4.7123337192166375, worksheet.costpercapita_bx184, 0.001); end
  def test_costpercapita_by184; assert_in_epsilon(4.192584875439182, worksheet.costpercapita_by184, 0.001); end
  def test_costpercapita_bz184; assert_in_epsilon(3.7098398857734463, worksheet.costpercapita_bz184, 0.001); end
  def test_costpercapita_ca184; assert_in_epsilon(3.262293987334134, worksheet.costpercapita_ca184, 0.001); end
  def test_costpercapita_cc184; assert_in_epsilon(3.331379556499092, worksheet.costpercapita_cc184, 0.001); end
  def test_costpercapita_cd184; assert_in_epsilon(69.99646643497614, worksheet.costpercapita_cd184, 0.001); end
  def test_costpercapita_cf184; assert_in_delta(0, (worksheet.costpercapita_cf184||0), 0.001); end
  def test_costpercapita_cg184; assert_in_delta(-0.7728389030531378, worksheet.costpercapita_cg184, 0.001); end
  def test_costpercapita_ch184; assert_in_delta(-0.7353530792597401, worksheet.costpercapita_ch184, 0.001); end
  def test_costpercapita_ci184; assert_in_epsilon(1.3712480981651702, worksheet.costpercapita_ci184, 0.001); end
  def test_costpercapita_cj184; assert_in_epsilon(2.327638290613857, worksheet.costpercapita_cj184, 0.001); end
  def test_costpercapita_ck184; assert_in_epsilon(2.07350664516435, worksheet.costpercapita_ck184, 0.001); end
  def test_costpercapita_cl184; assert_in_epsilon(1.8248470415888218, worksheet.costpercapita_cl184, 0.001); end
  def test_costpercapita_cm184; assert_in_epsilon(1.6358796586544666, worksheet.costpercapita_cm184, 0.001); end
  def test_costpercapita_cn184; assert_in_epsilon(1.459608161650367, worksheet.costpercapita_cn184, 0.001); end
  def test_costpercapita_cp184; assert_in_epsilon(1.0205039903915727, worksheet.costpercapita_cp184, 0.001); end
  def test_costpercapita_cq184; assert_in_epsilon(16.167575381856242, worksheet.costpercapita_cq184, 0.001); end
  def test_costpercapita_cr184; assert_equal("ok", worksheet.costpercapita_cr184); end
  def test_costpercapita_c185; assert_equal("Total", worksheet.costpercapita_c185); end
  def test_costpercapita_e185; assert_in_epsilon(1431.7237983558377, worksheet.costpercapita_e185, 0.001); end
  def test_costpercapita_f185; assert_in_epsilon(1431.2164448523322, worksheet.costpercapita_f185, 0.001); end
  def test_costpercapita_g185; assert_in_epsilon(1490.793659956464, worksheet.costpercapita_g185, 0.001); end
  def test_costpercapita_h185; assert_in_epsilon(1564.380441490827, worksheet.costpercapita_h185, 0.001); end
  def test_costpercapita_i185; assert_in_epsilon(1568.7943267845328, worksheet.costpercapita_i185, 0.001); end
  def test_costpercapita_j185; assert_in_epsilon(1615.309761561123, worksheet.costpercapita_j185, 0.001); end
  def test_costpercapita_k185; assert_in_epsilon(1662.304628211501, worksheet.costpercapita_k185, 0.001); end
  def test_costpercapita_l185; assert_in_epsilon(1687.0996529101683, worksheet.costpercapita_l185, 0.001); end
  def test_costpercapita_m185; assert_in_epsilon(1710.7170466935447, worksheet.costpercapita_m185, 0.001); end
  def test_costpercapita_o185; assert_in_epsilon(1461.5256368608545, worksheet.costpercapita_o185, 0.001); end
  def test_costpercapita_p185; assert_in_epsilon(1446.7825168128052, worksheet.costpercapita_p185, 0.001); end
  def test_costpercapita_q185; assert_in_epsilon(1469.8672383483884, worksheet.costpercapita_q185, 0.001); end
  def test_costpercapita_r185; assert_in_epsilon(1504.0712225320563, worksheet.costpercapita_r185, 0.001); end
  def test_costpercapita_s185; assert_in_epsilon(1524.861878851716, worksheet.costpercapita_s185, 0.001); end
  def test_costpercapita_t185; assert_in_epsilon(1541.1872957194994, worksheet.costpercapita_t185, 0.001); end
  def test_costpercapita_u185; assert_in_epsilon(1546.499450895918, worksheet.costpercapita_u185, 0.001); end
  def test_costpercapita_v185; assert_in_epsilon(1545.8651802962515, worksheet.costpercapita_v185, 0.001); end
  def test_costpercapita_w185; assert_in_epsilon(1542.2107448650565, worksheet.costpercapita_w185, 0.001); end
  def test_costpercapita_y185; assert_in_epsilon(747.3510211928906, worksheet.costpercapita_y185, 0.001); end
  def test_costpercapita_z185; assert_in_epsilon(829.5002706904613, worksheet.costpercapita_z185, 0.001); end
  def test_costpercapita_aa185; assert_in_epsilon(930.7975724433373, worksheet.costpercapita_aa185, 0.001); end
  def test_costpercapita_ab185; assert_in_epsilon(1029.9491300960985, worksheet.costpercapita_ab185, 0.001); end
  def test_costpercapita_ac185; assert_in_epsilon(1135.7652101814951, worksheet.costpercapita_ac185, 0.001); end
  def test_costpercapita_ad185; assert_in_epsilon(1169.6592417771055, worksheet.costpercapita_ad185, 0.001); end
  def test_costpercapita_ae185; assert_in_epsilon(1194.8734945256822, worksheet.costpercapita_ae185, 0.001); end
  def test_costpercapita_af185; assert_in_epsilon(1224.2370034753933, worksheet.costpercapita_af185, 0.001); end
  def test_costpercapita_ag185; assert_in_epsilon(1242.8763567025014, worksheet.costpercapita_ag185, 0.001); end
  def test_costpercapita_ai185; assert_in_epsilon(3640.600456409583, worksheet.costpercapita_ai185, 0.001); end
  def test_costpercapita_aj185; assert_in_epsilon(3707.499232355599, worksheet.costpercapita_aj185, 0.001); end
  def test_costpercapita_ak185; assert_in_epsilon(3891.4584707481886, worksheet.costpercapita_ak185, 0.001); end
  def test_costpercapita_al185; assert_in_epsilon(4098.400794118983, worksheet.costpercapita_al185, 0.001); end
  def test_costpercapita_am185; assert_in_epsilon(4229.421415817743, worksheet.costpercapita_am185, 0.001); end
  def test_costpercapita_an185; assert_in_epsilon(4326.156299057728, worksheet.costpercapita_an185, 0.001); end
  def test_costpercapita_ao185; assert_in_epsilon(4403.6775736331, worksheet.costpercapita_ao185, 0.001); end
  def test_costpercapita_ap185; assert_in_epsilon(4457.201836681813, worksheet.costpercapita_ap185, 0.001); end
  def test_costpercapita_aq185; assert_in_epsilon(4495.804148261103, worksheet.costpercapita_aq185, 0.001); end
  def test_costpercapita_as185; assert_in_epsilon(4138.9133585648715, worksheet.costpercapita_as185, 0.001); end
  def test_costpercapita_at185; assert_in_epsilon(85707.71734989547, worksheet.costpercapita_at185, 0.001); end
  def test_costpercapita_ay185; assert_in_epsilon(494.0396703763936, worksheet.costpercapita_ay185, 0.001); end
  def test_costpercapita_az185; assert_in_epsilon(820.6456004755975, worksheet.costpercapita_az185, 0.001); end
  def test_costpercapita_ba185; assert_in_epsilon(855.0227009906984, worksheet.costpercapita_ba185, 0.001); end
  def test_costpercapita_bb185; assert_in_epsilon(896.7244618059909, worksheet.costpercapita_bb185, 0.001); end
  def test_costpercapita_bc185; assert_in_epsilon(902.0275302097743, worksheet.costpercapita_bc185, 0.001); end
  def test_costpercapita_bd185; assert_in_epsilon(927.5493457815998, worksheet.costpercapita_bd185, 0.001); end
  def test_costpercapita_be185; assert_in_epsilon(950.494980202675, worksheet.costpercapita_be185, 0.001); end
  def test_costpercapita_bf185; assert_in_epsilon(963.107890471919, worksheet.costpercapita_bf185, 0.001); end
  def test_costpercapita_bg185; assert_in_epsilon(975.0101994726856, worksheet.costpercapita_bg185, 0.001); end
  def test_costpercapita_bi185; assert_in_epsilon(494.0396703763936, worksheet.costpercapita_bi185, 0.001); end
  def test_costpercapita_bj185; assert_in_epsilon(1260.7494639375827, worksheet.costpercapita_bj185, 0.001); end
  def test_costpercapita_bk185; assert_in_epsilon(1987.812393822198, worksheet.costpercapita_bk185, 0.001); end
  def test_costpercapita_bl185; assert_in_epsilon(2345.511468910821, worksheet.costpercapita_bl185, 0.001); end
  def test_costpercapita_bm185; assert_in_epsilon(2459.6317246386307, worksheet.costpercapita_bm185, 0.001); end
  def test_costpercapita_bn185; assert_in_epsilon(2552.347814287941, worksheet.costpercapita_bn185, 0.001); end
  def test_costpercapita_bo185; assert_in_epsilon(2613.6014472827037, worksheet.costpercapita_bo185, 0.001); end
  def test_costpercapita_bp185; assert_in_epsilon(2689.2012380456163, worksheet.costpercapita_bp185, 0.001); end
  def test_costpercapita_bq185; assert_in_epsilon(2716.7591437776578, worksheet.costpercapita_bq185, 0.001); end
  def test_costpercapita_bs185; assert_in_epsilon(2702.9163284301385, worksheet.costpercapita_bs185, 0.001); end
  def test_costpercapita_bt185; assert_in_epsilon(3537.0322514408494, worksheet.costpercapita_bt185, 0.001); end
  def test_costpercapita_bu185; assert_in_epsilon(4388.477204613923, worksheet.costpercapita_bu185, 0.001); end
  def test_costpercapita_bv185; assert_in_epsilon(4879.531821538977, worksheet.costpercapita_bv185, 0.001); end
  def test_costpercapita_bw185; assert_in_epsilon(5120.258813671842, worksheet.costpercapita_bw185, 0.001); end
  def test_costpercapita_bx185; assert_in_epsilon(5263.194351784546, worksheet.costpercapita_bx185, 0.001); end
  def test_costpercapita_by185; assert_in_epsilon(5354.974392704304, worksheet.costpercapita_by185, 0.001); end
  def test_costpercapita_bz185; assert_in_epsilon(5459.303421817261, worksheet.costpercapita_bz185, 0.001); end
  def test_costpercapita_ca185; assert_in_epsilon(5501.846245345215, worksheet.costpercapita_ca185, 0.001); end
  def test_costpercapita_cc185; assert_in_epsilon(4689.726092371896, worksheet.costpercapita_cc185, 0.001); end
  def test_costpercapita_cd185; assert_in_epsilon(96934.45358919764, worksheet.costpercapita_cd185, 0.001); end
  def test_costpercapita_cf185; assert_in_epsilon(-937.6841279794444, worksheet.costpercapita_cf185, 0.001); end
  def test_costpercapita_cg185; assert_in_epsilon(-170.4669809147497, worksheet.costpercapita_cg185, 0.001); end
  def test_costpercapita_ch185; assert_in_epsilon(497.01873386573436, worksheet.costpercapita_ch185, 0.001); end
  def test_costpercapita_ci185; assert_in_epsilon(781.1310274199941, worksheet.costpercapita_ci185, 0.001); end
  def test_costpercapita_cj185; assert_in_epsilon(890.8373978540978, worksheet.costpercapita_cj185, 0.001); end
  def test_costpercapita_ck185; assert_in_epsilon(937.0380527268184, worksheet.costpercapita_ck185, 0.001); end
  def test_costpercapita_cl185; assert_in_epsilon(951.2968190712024, worksheet.costpercapita_cl185, 0.001); end
  def test_costpercapita_cm185; assert_in_epsilon(1002.1015851354481, worksheet.costpercapita_cm185, 0.001); end
  def test_costpercapita_cn185; assert_in_epsilon(1006.0420970841133, worksheet.costpercapita_cn185, 0.001); end
  def test_costpercapita_cp185; assert_in_epsilon(550.8127338070237, worksheet.costpercapita_cp185, 0.001); end
  def test_costpercapita_cq185; assert_in_epsilon(11226.736239302152, worksheet.costpercapita_cq185, 0.001); end
  def test_costpercapita_cr185; assert_equal("ok", worksheet.costpercapita_cr185); end
  def test_costpercapita_e186; assert_equal("ok", worksheet.costpercapita_e186); end
  def test_costpercapita_f186; assert_equal("ok", worksheet.costpercapita_f186); end
  def test_costpercapita_g186; assert_equal("ok", worksheet.costpercapita_g186); end
  def test_costpercapita_h186; assert_equal("ok", worksheet.costpercapita_h186); end
  def test_costpercapita_i186; assert_equal("ok", worksheet.costpercapita_i186); end
  def test_costpercapita_j186; assert_equal("ok", worksheet.costpercapita_j186); end
  def test_costpercapita_k186; assert_equal("ok", worksheet.costpercapita_k186); end
  def test_costpercapita_l186; assert_equal("ok", worksheet.costpercapita_l186); end
  def test_costpercapita_m186; assert_equal("ok", worksheet.costpercapita_m186); end
  def test_costpercapita_o186; assert_equal("ok", worksheet.costpercapita_o186); end
  def test_costpercapita_p186; assert_equal("ok", worksheet.costpercapita_p186); end
  def test_costpercapita_q186; assert_equal("ok", worksheet.costpercapita_q186); end
  def test_costpercapita_r186; assert_equal("ok", worksheet.costpercapita_r186); end
  def test_costpercapita_s186; assert_equal("ok", worksheet.costpercapita_s186); end
  def test_costpercapita_t186; assert_equal("ok", worksheet.costpercapita_t186); end
  def test_costpercapita_u186; assert_equal("ok", worksheet.costpercapita_u186); end
  def test_costpercapita_v186; assert_equal("ok", worksheet.costpercapita_v186); end
  def test_costpercapita_w186; assert_equal("ok", worksheet.costpercapita_w186); end
  def test_costpercapita_y186; assert_in_delta(1.1368683772161603e-13, worksheet.costpercapita_y186, 0.001); end
  def test_costpercapita_z186; assert_equal("ok", worksheet.costpercapita_z186); end
  def test_costpercapita_aa186; assert_equal("ok", worksheet.costpercapita_aa186); end
  def test_costpercapita_ab186; assert_equal("ok", worksheet.costpercapita_ab186); end
  def test_costpercapita_ac186; assert_equal("ok", worksheet.costpercapita_ac186); end
  def test_costpercapita_ad186; assert_equal("ok", worksheet.costpercapita_ad186); end
  def test_costpercapita_ae186; assert_equal("ok", worksheet.costpercapita_ae186); end
  def test_costpercapita_af186; assert_equal("ok", worksheet.costpercapita_af186); end
  def test_costpercapita_ag186; assert_equal("ok", worksheet.costpercapita_ag186); end
  def test_costpercapita_ai186; assert_equal("ok", worksheet.costpercapita_ai186); end
  def test_costpercapita_aj186; assert_equal("ok", worksheet.costpercapita_aj186); end
  def test_costpercapita_ak186; assert_equal("ok", worksheet.costpercapita_ak186); end
  def test_costpercapita_al186; assert_equal("ok", worksheet.costpercapita_al186); end
  def test_costpercapita_am186; assert_equal("ok", worksheet.costpercapita_am186); end
  def test_costpercapita_an186; assert_equal("ok", worksheet.costpercapita_an186); end
  def test_costpercapita_ao186; assert_equal("ok", worksheet.costpercapita_ao186); end
  def test_costpercapita_ap186; assert_equal("ok", worksheet.costpercapita_ap186); end
  def test_costpercapita_aq186; assert_equal("ok", worksheet.costpercapita_aq186); end
  def test_costpercapita_as186; assert_equal("ok", worksheet.costpercapita_as186); end
  def test_costpercapita_at186; assert_equal("ok", worksheet.costpercapita_at186); end
  def test_costpercapita_ay186; assert_in_delta(1.1368683772161603e-13, worksheet.costpercapita_ay186, 0.001); end
  def test_costpercapita_az186; assert_equal("ok", worksheet.costpercapita_az186); end
  def test_costpercapita_ba186; assert_equal("ok", worksheet.costpercapita_ba186); end
  def test_costpercapita_bb186; assert_equal("ok", worksheet.costpercapita_bb186); end
  def test_costpercapita_bc186; assert_equal("ok", worksheet.costpercapita_bc186); end
  def test_costpercapita_bd186; assert_equal("ok", worksheet.costpercapita_bd186); end
  def test_costpercapita_be186; assert_equal("ok", worksheet.costpercapita_be186); end
  def test_costpercapita_bf186; assert_in_delta(4.547473508864641e-13, worksheet.costpercapita_bf186, 0.001); end
  def test_costpercapita_bg186; assert_equal("ok", worksheet.costpercapita_bg186); end
  def test_costpercapita_bi186; assert_in_delta(1.1368683772161603e-13, worksheet.costpercapita_bi186, 0.001); end
  def test_costpercapita_bj186; assert_equal("ok", worksheet.costpercapita_bj186); end
  def test_costpercapita_bk186; assert_equal("ok", worksheet.costpercapita_bk186); end
  def test_costpercapita_bl186; assert_equal("ok", worksheet.costpercapita_bl186); end
  def test_costpercapita_bm186; assert_equal("ok", worksheet.costpercapita_bm186); end
  def test_costpercapita_bn186; assert_equal("ok", worksheet.costpercapita_bn186); end
  def test_costpercapita_bo186; assert_equal("ok", worksheet.costpercapita_bo186); end
  def test_costpercapita_bp186; assert_equal("ok", worksheet.costpercapita_bp186); end
  def test_costpercapita_bq186; assert_equal("ok", worksheet.costpercapita_bq186); end
  def test_costpercapita_bs186; assert_equal("ok", worksheet.costpercapita_bs186); end
  def test_costpercapita_bt186; assert_equal("ok", worksheet.costpercapita_bt186); end
  def test_costpercapita_bu186; assert_equal("ok", worksheet.costpercapita_bu186); end
  def test_costpercapita_bv186; assert_equal("ok", worksheet.costpercapita_bv186); end
  def test_costpercapita_bw186; assert_equal("ok", worksheet.costpercapita_bw186); end
  def test_costpercapita_bx186; assert_equal("ok", worksheet.costpercapita_bx186); end
  def test_costpercapita_by186; assert_in_delta(-1.8189894035458565e-12, worksheet.costpercapita_by186, 0.001); end
  def test_costpercapita_bz186; assert_equal("ok", worksheet.costpercapita_bz186); end
  def test_costpercapita_ca186; assert_in_delta(-1.8189894035458565e-12, worksheet.costpercapita_ca186, 0.001); end
  def test_costpercapita_cc186; assert_in_epsilon(4689.694994993587, worksheet.costpercapita_cc186, 0.001); end
  def test_costpercapita_cd186; assert_equal("ok", worksheet.costpercapita_cd186); end
  def test_costpercapita_cf186; assert_equal("ok", worksheet.costpercapita_cf186); end
  def test_costpercapita_cg186; assert_equal("ok", worksheet.costpercapita_cg186); end
  def test_costpercapita_ch186; assert_equal("ok", worksheet.costpercapita_ch186); end
  def test_costpercapita_ci186; assert_in_delta(6.821210263296962e-13, worksheet.costpercapita_ci186, 0.001); end
  def test_costpercapita_cj186; assert_equal("ok", worksheet.costpercapita_cj186); end
  def test_costpercapita_ck186; assert_equal("ok", worksheet.costpercapita_ck186); end
  def test_costpercapita_cl186; assert_equal("ok", worksheet.costpercapita_cl186); end
  def test_costpercapita_cm186; assert_equal("ok", worksheet.costpercapita_cm186); end
  def test_costpercapita_cn186; assert_equal("ok", worksheet.costpercapita_cn186); end
  def test_costpercapita_cp186; assert_equal("ok", worksheet.costpercapita_cp186); end
  def test_costpercapita_cq186; assert_equal("ok", worksheet.costpercapita_cq186); end
  def test_costpercapita_c188; assert_equal("£m", worksheet.costpercapita_c188); end
  def test_costpercapita_e188; assert_equal("C1.High", worksheet.costpercapita_e188); end
  def test_costpercapita_f188; assert_equal("High estimate of capital costs", worksheet.costpercapita_f188); end
  def test_costpercapita_o188; assert_equal("C2.High", worksheet.costpercapita_o188); end
  def test_costpercapita_p188; assert_equal("High estimate of operating costs", worksheet.costpercapita_p188); end
  def test_costpercapita_y188; assert_equal("C3.High", worksheet.costpercapita_y188); end
  def test_costpercapita_z188; assert_equal("High estimate of fuel costs", worksheet.costpercapita_z188); end
  def test_costpercapita_ai188; assert_equal("High estimate of total cost", worksheet.costpercapita_ai188); end
  def test_costpercapita_as188; assert_equal("Cashflow capital basis", worksheet.costpercapita_as188); end
  def test_costpercapita_av188; assert_equal("Loan", worksheet.costpercapita_av188); end
  def test_costpercapita_ay188; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay188); end
  def test_costpercapita_bi188; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi188); end
  def test_costpercapita_br188; assert_equal("Total cost (ammortised capital)", worksheet.costpercapita_br188); end
  def test_costpercapita_ca188; assert_in_epsilon(858689.0709097924, worksheet.costpercapita_ca188, 0.001); end
  def test_costpercapita_cc188; assert_equal("Amortised Capital", worksheet.costpercapita_cc188); end
  def test_costpercapita_cf188; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf188); end
  def test_costpercapita_cp188; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp188); end
  def test_costpercapita_c189; assert_equal("Category", worksheet.costpercapita_c189); end
  def test_costpercapita_e189; assert_equal("2010", worksheet.costpercapita_e189); end
  def test_costpercapita_f189; assert_equal("2015", worksheet.costpercapita_f189); end
  def test_costpercapita_g189; assert_equal("2020", worksheet.costpercapita_g189); end
  def test_costpercapita_h189; assert_equal("2025", worksheet.costpercapita_h189); end
  def test_costpercapita_i189; assert_equal("2030", worksheet.costpercapita_i189); end
  def test_costpercapita_j189; assert_equal("2035", worksheet.costpercapita_j189); end
  def test_costpercapita_k189; assert_equal("2040", worksheet.costpercapita_k189); end
  def test_costpercapita_l189; assert_equal("2045", worksheet.costpercapita_l189); end
  def test_costpercapita_m189; assert_equal("2050", worksheet.costpercapita_m189); end
  def test_costpercapita_o189; assert_equal("2010", worksheet.costpercapita_o189); end
  def test_costpercapita_p189; assert_equal("2015", worksheet.costpercapita_p189); end
  def test_costpercapita_q189; assert_equal("2020", worksheet.costpercapita_q189); end
  def test_costpercapita_r189; assert_equal("2025", worksheet.costpercapita_r189); end
  def test_costpercapita_s189; assert_equal("2030", worksheet.costpercapita_s189); end
  def test_costpercapita_t189; assert_equal("2035", worksheet.costpercapita_t189); end
  def test_costpercapita_u189; assert_equal("2040", worksheet.costpercapita_u189); end
  def test_costpercapita_v189; assert_equal("2045", worksheet.costpercapita_v189); end
  def test_costpercapita_w189; assert_equal("2050", worksheet.costpercapita_w189); end
  def test_costpercapita_y189; assert_equal("2010", worksheet.costpercapita_y189); end
  def test_costpercapita_z189; assert_equal("2015", worksheet.costpercapita_z189); end
  def test_costpercapita_aa189; assert_equal("2020", worksheet.costpercapita_aa189); end
  def test_costpercapita_ab189; assert_equal("2025", worksheet.costpercapita_ab189); end
  def test_costpercapita_ac189; assert_equal("2030", worksheet.costpercapita_ac189); end
  def test_costpercapita_ad189; assert_equal("2035", worksheet.costpercapita_ad189); end
  def test_costpercapita_ae189; assert_equal("2040", worksheet.costpercapita_ae189); end
  def test_costpercapita_af189; assert_equal("2045", worksheet.costpercapita_af189); end
  def test_costpercapita_ag189; assert_equal("2050", worksheet.costpercapita_ag189); end
  def test_costpercapita_ai189; assert_equal("2010", worksheet.costpercapita_ai189); end
  def test_costpercapita_aj189; assert_equal("2015", worksheet.costpercapita_aj189); end
  def test_costpercapita_ak189; assert_equal("2020", worksheet.costpercapita_ak189); end
  def test_costpercapita_al189; assert_equal("2025", worksheet.costpercapita_al189); end
  def test_costpercapita_am189; assert_equal("2030", worksheet.costpercapita_am189); end
  def test_costpercapita_an189; assert_equal("2035", worksheet.costpercapita_an189); end
  def test_costpercapita_ao189; assert_equal("2040", worksheet.costpercapita_ao189); end
  def test_costpercapita_ap189; assert_equal("2045", worksheet.costpercapita_ap189); end
  def test_costpercapita_aq189; assert_equal("2050", worksheet.costpercapita_aq189); end
  def test_costpercapita_as189; assert_equal("Mean", worksheet.costpercapita_as189); end
  def test_costpercapita_at189; assert_equal("NPV", worksheet.costpercapita_at189); end
  def test_costpercapita_av189; assert_equal("Rate", worksheet.costpercapita_av189); end
  def test_costpercapita_aw189; assert_equal("Years", worksheet.costpercapita_aw189); end
  def test_costpercapita_ay189; assert_in_epsilon(2010, worksheet.costpercapita_ay189, 0.001); end
  def test_costpercapita_az189; assert_in_epsilon(2015, worksheet.costpercapita_az189, 0.001); end
  def test_costpercapita_ba189; assert_in_epsilon(2020, worksheet.costpercapita_ba189, 0.001); end
  def test_costpercapita_bb189; assert_in_epsilon(2025, worksheet.costpercapita_bb189, 0.001); end
  def test_costpercapita_bc189; assert_in_epsilon(2030, worksheet.costpercapita_bc189, 0.001); end
  def test_costpercapita_bd189; assert_in_epsilon(2035, worksheet.costpercapita_bd189, 0.001); end
  def test_costpercapita_be189; assert_in_epsilon(2040, worksheet.costpercapita_be189, 0.001); end
  def test_costpercapita_bf189; assert_in_epsilon(2045, worksheet.costpercapita_bf189, 0.001); end
  def test_costpercapita_bg189; assert_in_epsilon(2050, worksheet.costpercapita_bg189, 0.001); end
  def test_costpercapita_bi189; assert_in_epsilon(2010, worksheet.costpercapita_bi189, 0.001); end
  def test_costpercapita_bj189; assert_in_epsilon(2015, worksheet.costpercapita_bj189, 0.001); end
  def test_costpercapita_bk189; assert_in_epsilon(2020, worksheet.costpercapita_bk189, 0.001); end
  def test_costpercapita_bl189; assert_in_epsilon(2025, worksheet.costpercapita_bl189, 0.001); end
  def test_costpercapita_bm189; assert_in_epsilon(2030, worksheet.costpercapita_bm189, 0.001); end
  def test_costpercapita_bn189; assert_in_epsilon(2035, worksheet.costpercapita_bn189, 0.001); end
  def test_costpercapita_bo189; assert_in_epsilon(2040, worksheet.costpercapita_bo189, 0.001); end
  def test_costpercapita_bp189; assert_in_epsilon(2045, worksheet.costpercapita_bp189, 0.001); end
  def test_costpercapita_bq189; assert_in_epsilon(2050, worksheet.costpercapita_bq189, 0.001); end
  def test_costpercapita_bs189; assert_equal("2010", worksheet.costpercapita_bs189); end
  def test_costpercapita_bt189; assert_equal("2015", worksheet.costpercapita_bt189); end
  def test_costpercapita_bu189; assert_equal("2020", worksheet.costpercapita_bu189); end
  def test_costpercapita_bv189; assert_equal("2025", worksheet.costpercapita_bv189); end
  def test_costpercapita_bw189; assert_equal("2030", worksheet.costpercapita_bw189); end
  def test_costpercapita_bx189; assert_equal("2035", worksheet.costpercapita_bx189); end
  def test_costpercapita_by189; assert_equal("2040", worksheet.costpercapita_by189); end
  def test_costpercapita_bz189; assert_equal("2045", worksheet.costpercapita_bz189); end
  def test_costpercapita_ca189; assert_equal("2050", worksheet.costpercapita_ca189); end
  def test_costpercapita_cc189; assert_equal("Mean", worksheet.costpercapita_cc189); end
  def test_costpercapita_cd189; assert_equal("NPV", worksheet.costpercapita_cd189); end
  def test_costpercapita_cf189; assert_equal("2010", worksheet.costpercapita_cf189); end
  def test_costpercapita_cg189; assert_equal("2015", worksheet.costpercapita_cg189); end
  def test_costpercapita_ch189; assert_equal("2020", worksheet.costpercapita_ch189); end
  def test_costpercapita_ci189; assert_equal("2025", worksheet.costpercapita_ci189); end
  def test_costpercapita_cj189; assert_equal("2030", worksheet.costpercapita_cj189); end
  def test_costpercapita_ck189; assert_equal("2035", worksheet.costpercapita_ck189); end
  def test_costpercapita_cl189; assert_equal("2040", worksheet.costpercapita_cl189); end
  def test_costpercapita_cm189; assert_equal("2045", worksheet.costpercapita_cm189); end
  def test_costpercapita_cn189; assert_equal("2050", worksheet.costpercapita_cn189); end
  def test_costpercapita_cp189; assert_equal("Mean", worksheet.costpercapita_cp189); end
  def test_costpercapita_cq189; assert_equal("NPV", worksheet.costpercapita_cq189); end
  def test_costpercapita_c190; assert_equal("Fossil Fuels", worksheet.costpercapita_c190); end
  def test_costpercapita_e190; assert_in_epsilon(42.94763451206937, worksheet.costpercapita_e190, 0.001); end
  def test_costpercapita_f190; assert_in_epsilon(16.84136020590303, worksheet.costpercapita_f190, 0.001); end
  def test_costpercapita_g190; assert_in_epsilon(25.081417736308573, worksheet.costpercapita_g190, 0.001); end
  def test_costpercapita_h190; assert_in_epsilon(37.29365579192016, worksheet.costpercapita_h190, 0.001); end
  def test_costpercapita_i190; assert_in_epsilon(45.67235064959203, worksheet.costpercapita_i190, 0.001); end
  def test_costpercapita_j190; assert_in_epsilon(50.754077896114104, worksheet.costpercapita_j190, 0.001); end
  def test_costpercapita_k190; assert_in_epsilon(56.548159322667914, worksheet.costpercapita_k190, 0.001); end
  def test_costpercapita_l190; assert_in_epsilon(65.54664845323366, worksheet.costpercapita_l190, 0.001); end
  def test_costpercapita_m190; assert_in_epsilon(71.2321666925737, worksheet.costpercapita_m190, 0.001); end
  def test_costpercapita_o190; assert_in_delta(0.06306043679317243, worksheet.costpercapita_o190, 0.001); end
  def test_costpercapita_p190; assert_in_delta(0.11607507884389356, worksheet.costpercapita_p190, 0.001); end
  def test_costpercapita_q190; assert_in_delta(0.12501254979578916, worksheet.costpercapita_q190, 0.001); end
  def test_costpercapita_r190; assert_in_delta(0.13992077635107555, worksheet.costpercapita_r190, 0.001); end
  def test_costpercapita_s190; assert_in_delta(0.1543218174354864, worksheet.costpercapita_s190, 0.001); end
  def test_costpercapita_t190; assert_in_delta(0.16534813948791138, worksheet.costpercapita_t190, 0.001); end
  def test_costpercapita_u190; assert_in_delta(0.17424420813699407, worksheet.costpercapita_u190, 0.001); end
  def test_costpercapita_v190; assert_in_delta(0.18340207546488746, worksheet.costpercapita_v190, 0.001); end
  def test_costpercapita_w190; assert_in_delta(0.19058259144485315, worksheet.costpercapita_w190, 0.001); end
  def test_costpercapita_y190; assert_in_epsilon(737.7344410169293, worksheet.costpercapita_y190, 0.001); end
  def test_costpercapita_z190; assert_in_epsilon(917.6522470884813, worksheet.costpercapita_z190, 0.001); end
  def test_costpercapita_aa190; assert_in_epsilon(1113.9772996040494, worksheet.costpercapita_aa190, 0.001); end
  def test_costpercapita_ab190; assert_in_epsilon(1316.0501045477722, worksheet.costpercapita_ab190, 0.001); end
  def test_costpercapita_ac190; assert_in_epsilon(1527.9422516828458, worksheet.costpercapita_ac190, 0.001); end
  def test_costpercapita_ad190; assert_in_epsilon(1576.3794742193181, worksheet.costpercapita_ad190, 0.001); end
  def test_costpercapita_ae190; assert_in_epsilon(1612.624003550458, worksheet.costpercapita_ae190, 0.001); end
  def test_costpercapita_af190; assert_in_epsilon(1654.3620867750637, worksheet.costpercapita_af190, 0.001); end
  def test_costpercapita_ag190; assert_in_epsilon(1681.242136040575, worksheet.costpercapita_ag190, 0.001); end
  def test_costpercapita_ai190; assert_in_epsilon(780.7451359657919, worksheet.costpercapita_ai190, 0.001); end
  def test_costpercapita_aj190; assert_in_epsilon(934.6096823732282, worksheet.costpercapita_aj190, 0.001); end
  def test_costpercapita_ak190; assert_in_epsilon(1139.1837298901537, worksheet.costpercapita_ak190, 0.001); end
  def test_costpercapita_al190; assert_in_epsilon(1353.4836811160435, worksheet.costpercapita_al190, 0.001); end
  def test_costpercapita_am190; assert_in_epsilon(1573.7689241498733, worksheet.costpercapita_am190, 0.001); end
  def test_costpercapita_an190; assert_in_epsilon(1627.2989002549202, worksheet.costpercapita_an190, 0.001); end
  def test_costpercapita_ao190; assert_in_epsilon(1669.346407081263, worksheet.costpercapita_ao190, 0.001); end
  def test_costpercapita_ap190; assert_in_epsilon(1720.0921373037622, worksheet.costpercapita_ap190, 0.001); end
  def test_costpercapita_aq190; assert_in_epsilon(1752.6648853245933, worksheet.costpercapita_aq190, 0.001); end
  def test_costpercapita_as190; assert_in_epsilon(1394.5770537177364, worksheet.costpercapita_as190, 0.001); end
  def test_costpercapita_at190; assert_in_epsilon(28130.352988868188, worksheet.costpercapita_at190, 0.001); end
  def test_costpercapita_ay190; assert_in_epsilon(16.939463153040638, worksheet.costpercapita_ay190, 0.001); end
  def test_costpercapita_az190; assert_in_epsilon(11.070986170953816, worksheet.costpercapita_az190, 0.001); end
  def test_costpercapita_ba190; assert_in_epsilon(16.48774359741206, worksheet.costpercapita_ba190, 0.001); end
  def test_costpercapita_bb190; assert_in_epsilon(24.515688904506828, worksheet.costpercapita_bb190, 0.001); end
  def test_costpercapita_bc190; assert_in_epsilon(30.023582196131454, worksheet.costpercapita_bc190, 0.001); end
  def test_costpercapita_bd190; assert_in_epsilon(33.36415156719007, worksheet.costpercapita_bd190, 0.001); end
  def test_costpercapita_be190; assert_in_epsilon(37.17300041090008, worksheet.costpercapita_be190, 0.001); end
  def test_costpercapita_bf190; assert_in_epsilon(43.0883271722773, worksheet.costpercapita_bf190, 0.001); end
  def test_costpercapita_bg190; assert_in_epsilon(46.82580995471769, worksheet.costpercapita_bg190, 0.001); end
  def test_costpercapita_bi190; assert_in_epsilon(16.939463153040638, worksheet.costpercapita_bi190, 0.001); end
  def test_costpercapita_bj190; assert_in_epsilon(27.451869353447425, worksheet.costpercapita_bj190, 0.001); end
  def test_costpercapita_bk190; assert_in_epsilon(43.040889521909, worksheet.costpercapita_bk190, 0.001); end
  def test_costpercapita_bl190; assert_in_epsilon(50.86988354222901, worksheet.costpercapita_bl190, 0.001); end
  def test_costpercapita_bm190; assert_in_epsilon(69.41022423737284, worksheet.costpercapita_bm190, 0.001); end
  def test_costpercapita_bn190; assert_in_epsilon(85.96471676793088, worksheet.costpercapita_bn190, 0.001); end
  def test_costpercapita_bo190; assert_in_epsilon(98.51675909307953, worksheet.costpercapita_bo190, 0.001); end
  def test_costpercapita_bp190; assert_in_epsilon(111.52106620631645, worksheet.costpercapita_bp190, 0.001); end
  def test_costpercapita_bq190; assert_in_epsilon(124.86163578471165, worksheet.costpercapita_bq190, 0.001); end
  def test_costpercapita_bs190; assert_in_epsilon(754.7369646067631, worksheet.costpercapita_bs190, 0.001); end
  def test_costpercapita_bt190; assert_in_epsilon(945.2201915207727, worksheet.costpercapita_bt190, 0.001); end
  def test_costpercapita_bu190; assert_in_epsilon(1157.1432016757542, worksheet.costpercapita_bu190, 0.001); end
  def test_costpercapita_bv190; assert_in_epsilon(1367.0599088663523, worksheet.costpercapita_bv190, 0.001); end
  def test_costpercapita_bw190; assert_in_epsilon(1597.5067977376543, worksheet.costpercapita_bw190, 0.001); end
  def test_costpercapita_bx190; assert_in_epsilon(1662.5095391267369, worksheet.costpercapita_bx190, 0.001); end
  def test_costpercapita_by190; assert_in_epsilon(1711.3150068516745, worksheet.costpercapita_by190, 0.001); end
  def test_costpercapita_bz190; assert_in_epsilon(1766.0665550568451, worksheet.costpercapita_bz190, 0.001); end
  def test_costpercapita_ca190; assert_in_epsilon(1806.2943544167315, worksheet.costpercapita_ca190, 0.001); end
  def test_costpercapita_cc190; assert_in_epsilon(1418.6502799843647, worksheet.costpercapita_cc190, 0.001); end
  def test_costpercapita_cd190; assert_in_epsilon(28603.831853106938, worksheet.costpercapita_cd190, 0.001); end
  def test_costpercapita_cf190; assert_in_epsilon(-26.00817135902873, worksheet.costpercapita_cf190, 0.001); end
  def test_costpercapita_cg190; assert_in_epsilon(10.610509147544397, worksheet.costpercapita_cg190, 0.001); end
  def test_costpercapita_ch190; assert_in_epsilon(17.959471785600428, worksheet.costpercapita_ch190, 0.001); end
  def test_costpercapita_ci190; assert_in_epsilon(13.57622775030885, worksheet.costpercapita_ci190, 0.001); end
  def test_costpercapita_cj190; assert_in_epsilon(23.737873587780808, worksheet.costpercapita_cj190, 0.001); end
  def test_costpercapita_ck190; assert_in_epsilon(35.210638871816776, worksheet.costpercapita_ck190, 0.001); end
  def test_costpercapita_cl190; assert_in_epsilon(41.968599770411615, worksheet.costpercapita_cl190, 0.001); end
  def test_costpercapita_cm190; assert_in_epsilon(45.9744177530828, worksheet.costpercapita_cm190, 0.001); end
  def test_costpercapita_cn190; assert_in_epsilon(53.629469092137946, worksheet.costpercapita_cn190, 0.001); end
  def test_costpercapita_cp190; assert_in_epsilon(24.07322626662832, worksheet.costpercapita_cp190, 0.001); end
  def test_costpercapita_cq190; assert_in_epsilon(473.4788642387497, worksheet.costpercapita_cq190, 0.001); end
  def test_costpercapita_cr190; assert_equal("ok", worksheet.costpercapita_cr190); end
  def test_costpercapita_c191; assert_equal("Bioenergy", worksheet.costpercapita_c191); end
  def test_costpercapita_e191; assert_in_epsilon(73.32954072902777, worksheet.costpercapita_e191, 0.001); end
  def test_costpercapita_f191; assert_in_epsilon(104.52805003043112, worksheet.costpercapita_f191, 0.001); end
  def test_costpercapita_g191; assert_in_epsilon(88.14183202446539, worksheet.costpercapita_g191, 0.001); end
  def test_costpercapita_h191; assert_in_epsilon(78.49427564694672, worksheet.costpercapita_h191, 0.001); end
  def test_costpercapita_i191; assert_in_epsilon(82.01988613572559, worksheet.costpercapita_i191, 0.001); end
  def test_costpercapita_j191; assert_in_epsilon(89.84583796399887, worksheet.costpercapita_j191, 0.001); end
  def test_costpercapita_k191; assert_in_epsilon(89.11497439430835, worksheet.costpercapita_k191, 0.001); end
  def test_costpercapita_l191; assert_in_epsilon(92.95092590704948, worksheet.costpercapita_l191, 0.001); end
  def test_costpercapita_m191; assert_in_epsilon(94.35018568150184, worksheet.costpercapita_m191, 0.001); end
  def test_costpercapita_o191; assert_in_epsilon(141.95112370383563, worksheet.costpercapita_o191, 0.001); end
  def test_costpercapita_p191; assert_in_epsilon(145.44886955085178, worksheet.costpercapita_p191, 0.001); end
  def test_costpercapita_q191; assert_in_epsilon(157.77702251644146, worksheet.costpercapita_q191, 0.001); end
  def test_costpercapita_r191; assert_in_epsilon(171.93066471367385, worksheet.costpercapita_r191, 0.001); end
  def test_costpercapita_s191; assert_in_epsilon(182.32396388414918, worksheet.costpercapita_s191, 0.001); end
  def test_costpercapita_t191; assert_in_epsilon(190.16508418510463, worksheet.costpercapita_t191, 0.001); end
  def test_costpercapita_u191; assert_in_epsilon(198.4182576766662, worksheet.costpercapita_u191, 0.001); end
  def test_costpercapita_v191; assert_in_epsilon(206.95646373863397, worksheet.costpercapita_v191, 0.001); end
  def test_costpercapita_w191; assert_in_epsilon(215.78932257778592, worksheet.costpercapita_w191, 0.001); end
  def test_costpercapita_y191; assert_in_epsilon(11.607363330813763, worksheet.costpercapita_y191, 0.001); end
  def test_costpercapita_z191; assert_in_epsilon(13.320225704517336, worksheet.costpercapita_z191, 0.001); end
  def test_costpercapita_aa191; assert_in_epsilon(18.59671747977734, worksheet.costpercapita_aa191, 0.001); end
  def test_costpercapita_ab191; assert_in_epsilon(18.645223392243146, worksheet.costpercapita_ab191, 0.001); end
  def test_costpercapita_ac191; assert_in_epsilon(18.782265074047643, worksheet.costpercapita_ac191, 0.001); end
  def test_costpercapita_ad191; assert_in_epsilon(19.010578019590756, worksheet.costpercapita_ad191, 0.001); end
  def test_costpercapita_ae191; assert_in_epsilon(19.30161012344001, worksheet.costpercapita_ae191, 0.001); end
  def test_costpercapita_af191; assert_in_epsilon(19.639733563308106, worksheet.costpercapita_af191, 0.001); end
  def test_costpercapita_ag191; assert_in_epsilon(20.024103735362935, worksheet.costpercapita_ag191, 0.001); end
  def test_costpercapita_ai191; assert_in_epsilon(226.88802776367717, worksheet.costpercapita_ai191, 0.001); end
  def test_costpercapita_aj191; assert_in_epsilon(263.29714528580024, worksheet.costpercapita_aj191, 0.001); end
  def test_costpercapita_ak191; assert_in_epsilon(264.5155720206842, worksheet.costpercapita_ak191, 0.001); end
  def test_costpercapita_al191; assert_in_epsilon(269.0701637528637, worksheet.costpercapita_al191, 0.001); end
  def test_costpercapita_am191; assert_in_epsilon(283.1261150939224, worksheet.costpercapita_am191, 0.001); end
  def test_costpercapita_an191; assert_in_epsilon(299.0215001686943, worksheet.costpercapita_an191, 0.001); end
  def test_costpercapita_ao191; assert_in_epsilon(306.8348421944146, worksheet.costpercapita_ao191, 0.001); end
  def test_costpercapita_ap191; assert_in_epsilon(319.5471232089916, worksheet.costpercapita_ap191, 0.001); end
  def test_costpercapita_aq191; assert_in_epsilon(330.16361199465075, worksheet.costpercapita_aq191, 0.001); end
  def test_costpercapita_as191; assert_in_epsilon(284.71823349818874, worksheet.costpercapita_as191, 0.001); end
  def test_costpercapita_at191; assert_in_epsilon(5895.32207849374, worksheet.costpercapita_at191, 0.001); end
  def test_costpercapita_ay191; assert_in_epsilon(27.3424563466243, worksheet.costpercapita_ay191, 0.001); end
  def test_costpercapita_az191; assert_in_epsilon(62.07627362972222, worksheet.costpercapita_az191, 0.001); end
  def test_costpercapita_ba191; assert_in_epsilon(53.96927743853412, worksheet.costpercapita_ba191, 0.001); end
  def test_costpercapita_bb191; assert_in_epsilon(48.71485054307736, worksheet.costpercapita_bb191, 0.001); end
  def test_costpercapita_bc191; assert_in_epsilon(51.06456957208964, worksheet.costpercapita_bc191, 0.001); end
  def test_costpercapita_bd191; assert_in_epsilon(56.12589136779511, worksheet.costpercapita_bd191, 0.001); end
  def test_costpercapita_be191; assert_in_epsilon(55.55047532731894, worksheet.costpercapita_be191, 0.001); end
  def test_costpercapita_bf191; assert_in_epsilon(57.968582130366194, worksheet.costpercapita_bf191, 0.001); end
  def test_costpercapita_bg191; assert_in_epsilon(59.58774456900846, worksheet.costpercapita_bg191, 0.001); end
  def test_costpercapita_bi191; assert_in_epsilon(27.3424563466243, worksheet.costpercapita_bi191, 0.001); end
  def test_costpercapita_bj191; assert_in_epsilon(88.51711058482293, worksheet.costpercapita_bj191, 0.001); end
  def test_costpercapita_bk191; assert_in_epsilon(139.58850153987822, worksheet.costpercapita_bk191, 0.001); end
  def test_costpercapita_bl191; assert_in_epsilon(165.18126131577765, worksheet.costpercapita_bl191, 0.001); end
  def test_costpercapita_bm191; assert_in_epsilon(180.4151054472868, worksheet.costpercapita_bm191, 0.001); end
  def test_costpercapita_bn191; assert_in_epsilon(197.89230123112839, worksheet.costpercapita_bn191, 0.001); end
  def test_costpercapita_bo191; assert_in_epsilon(209.58105037484523, worksheet.costpercapita_bo191, 0.001); end
  def test_costpercapita_bp191; assert_in_epsilon(214.19165045989791, worksheet.costpercapita_bp191, 0.001); end
  def test_costpercapita_bq191; assert_in_epsilon(214.12234439167975, worksheet.costpercapita_bq191, 0.001); end
  def test_costpercapita_bs191; assert_in_epsilon(180.9009433812737, worksheet.costpercapita_bs191, 0.001); end
  def test_costpercapita_bt191; assert_in_epsilon(247.28620584019205, worksheet.costpercapita_bt191, 0.001); end
  def test_costpercapita_bu191; assert_in_epsilon(315.96224153609705, worksheet.costpercapita_bu191, 0.001); end
  def test_costpercapita_bv191; assert_in_epsilon(355.75714942169463, worksheet.costpercapita_bv191, 0.001); end
  def test_costpercapita_bw191; assert_in_epsilon(381.52133440548357, worksheet.costpercapita_bw191, 0.001); end
  def test_costpercapita_bx191; assert_in_epsilon(407.0679634358238, worksheet.costpercapita_bx191, 0.001); end
  def test_costpercapita_by191; assert_in_epsilon(427.30091817495145, worksheet.costpercapita_by191, 0.001); end
  def test_costpercapita_bz191; assert_in_epsilon(440.78784776184, worksheet.costpercapita_bz191, 0.001); end
  def test_costpercapita_ca191; assert_in_epsilon(449.93577070482866, worksheet.costpercapita_ca191, 0.001); end
  def test_costpercapita_cc191; assert_in_epsilon(356.2800416291317, worksheet.costpercapita_cc191, 0.001); end
  def test_costpercapita_cd191; assert_in_epsilon(7258.511913963638, worksheet.costpercapita_cd191, 0.001); end
  def test_costpercapita_cf191; assert_in_epsilon(-45.987084382403474, worksheet.costpercapita_cf191, 0.001); end
  def test_costpercapita_cg191; assert_in_epsilon(-16.010939445608184, worksheet.costpercapita_cg191, 0.001); end
  def test_costpercapita_ch191; assert_in_epsilon(51.44666951541285, worksheet.costpercapita_ch191, 0.001); end
  def test_costpercapita_ci191; assert_in_epsilon(86.68698566883093, worksheet.costpercapita_ci191, 0.001); end
  def test_costpercapita_cj191; assert_in_epsilon(98.39521931156122, worksheet.costpercapita_cj191, 0.001); end
  def test_costpercapita_ck191; assert_in_epsilon(108.0464632671295, worksheet.costpercapita_ck191, 0.001); end
  def test_costpercapita_cl191; assert_in_epsilon(120.46607598053686, worksheet.costpercapita_cl191, 0.001); end
  def test_costpercapita_cm191; assert_in_epsilon(121.2407245528484, worksheet.costpercapita_cm191, 0.001); end
  def test_costpercapita_cn191; assert_in_epsilon(119.7721587101779, worksheet.costpercapita_cn191, 0.001); end
  def test_costpercapita_cp191; assert_in_epsilon(71.5618081309429, worksheet.costpercapita_cp191, 0.001); end
  def test_costpercapita_cq191; assert_in_epsilon(1363.1898354699, worksheet.costpercapita_cq191, 0.001); end
  def test_costpercapita_cr191; assert_equal("ok", worksheet.costpercapita_cr191); end
  def test_costpercapita_c192; assert_equal("Electricity", worksheet.costpercapita_c192); end
  def test_costpercapita_e192; assert_in_epsilon(192.2208995144459, worksheet.costpercapita_e192, 0.001); end
  def test_costpercapita_f192; assert_in_epsilon(201.5602748120675, worksheet.costpercapita_f192, 0.001); end
  def test_costpercapita_g192; assert_in_epsilon(247.8295537777053, worksheet.costpercapita_g192, 0.001); end
  def test_costpercapita_h192; assert_in_epsilon(248.5853704727113, worksheet.costpercapita_h192, 0.001); end
  def test_costpercapita_i192; assert_in_epsilon(188.08783703528044, worksheet.costpercapita_i192, 0.001); end
  def test_costpercapita_j192; assert_in_epsilon(191.70833600672813, worksheet.costpercapita_j192, 0.001); end
  def test_costpercapita_k192; assert_in_epsilon(278.27062098638237, worksheet.costpercapita_k192, 0.001); end
  def test_costpercapita_l192; assert_in_epsilon(284.4423079251185, worksheet.costpercapita_l192, 0.001); end
  def test_costpercapita_m192; assert_in_epsilon(300.95267344002167, worksheet.costpercapita_m192, 0.001); end
  def test_costpercapita_o192; assert_in_epsilon(153.32427818795077, worksheet.costpercapita_o192, 0.001); end
  def test_costpercapita_p192; assert_in_epsilon(148.28495608448696, worksheet.costpercapita_p192, 0.001); end
  def test_costpercapita_q192; assert_in_epsilon(148.39309062397518, worksheet.costpercapita_q192, 0.001); end
  def test_costpercapita_r192; assert_in_epsilon(146.59254846678917, worksheet.costpercapita_r192, 0.001); end
  def test_costpercapita_s192; assert_in_epsilon(136.44610900205376, worksheet.costpercapita_s192, 0.001); end
  def test_costpercapita_t192; assert_in_epsilon(124.41370257961478, worksheet.costpercapita_t192, 0.001); end
  def test_costpercapita_u192; assert_in_epsilon(117.86808245074921, worksheet.costpercapita_u192, 0.001); end
  def test_costpercapita_v192; assert_in_epsilon(113.19250742204079, worksheet.costpercapita_v192, 0.001); end
  def test_costpercapita_w192; assert_in_epsilon(116.08596355912876, worksheet.costpercapita_w192, 0.001); end
  def test_costpercapita_y192; assert_in_epsilon(2.6735560562465563, worksheet.costpercapita_y192, 0.001); end
  def test_costpercapita_z192; assert_in_epsilon(2.1717321025222884, worksheet.costpercapita_z192, 0.001); end
  def test_costpercapita_aa192; assert_in_epsilon(1.2003620629822087, worksheet.costpercapita_aa192, 0.001); end
  def test_costpercapita_ab192; assert_in_delta(0.38773156085068894, worksheet.costpercapita_ab192, 0.001); end
  def test_costpercapita_ac192; assert_in_delta(0.37713867524794414, worksheet.costpercapita_ac192, 0.001); end
  def test_costpercapita_ad192; assert_in_delta(0, (worksheet.costpercapita_ad192||0), 0.001); end
  def test_costpercapita_ae192; assert_in_delta(0, (worksheet.costpercapita_ae192||0), 0.001); end
  def test_costpercapita_af192; assert_in_delta(0, (worksheet.costpercapita_af192||0), 0.001); end
  def test_costpercapita_ag192; assert_in_delta(0, (worksheet.costpercapita_ag192||0), 0.001); end
  def test_costpercapita_ai192; assert_in_epsilon(348.2187337586433, worksheet.costpercapita_ai192, 0.001); end
  def test_costpercapita_aj192; assert_in_epsilon(352.0169629990767, worksheet.costpercapita_aj192, 0.001); end
  def test_costpercapita_ak192; assert_in_epsilon(397.4230064646627, worksheet.costpercapita_ak192, 0.001); end
  def test_costpercapita_al192; assert_in_epsilon(395.56565050035107, worksheet.costpercapita_al192, 0.001); end
  def test_costpercapita_am192; assert_in_epsilon(324.91108471258207, worksheet.costpercapita_am192, 0.001); end
  def test_costpercapita_an192; assert_in_epsilon(316.12203858634285, worksheet.costpercapita_an192, 0.001); end
  def test_costpercapita_ao192; assert_in_epsilon(396.13870343713165, worksheet.costpercapita_ao192, 0.001); end
  def test_costpercapita_ap192; assert_in_epsilon(397.63481534715925, worksheet.costpercapita_ap192, 0.001); end
  def test_costpercapita_aq192; assert_in_epsilon(417.0386369991504, worksheet.costpercapita_aq192, 0.001); end
  def test_costpercapita_as192; assert_in_epsilon(371.6744036450112, worksheet.costpercapita_as192, 0.001); end
  def test_costpercapita_at192; assert_in_epsilon(7774.185820955713, worksheet.costpercapita_at192, 0.001); end
  def test_costpercapita_ay192; assert_in_epsilon(67.19097515429641, worksheet.costpercapita_ay192, 0.001); end
  def test_costpercapita_az192; assert_in_epsilon(118.2046639908095, worksheet.costpercapita_az192, 0.001); end
  def test_costpercapita_ba192; assert_in_epsilon(144.81829978014576, worksheet.costpercapita_ba192, 0.001); end
  def test_costpercapita_bb192; assert_in_epsilon(145.7940023522408, worksheet.costpercapita_bb192, 0.001); end
  def test_costpercapita_bc192; assert_in_epsilon(110.46363381221889, worksheet.costpercapita_bc192, 0.001); end
  def test_costpercapita_bd192; assert_in_epsilon(112.58994606559706, worksheet.costpercapita_bd192, 0.001); end
  def test_costpercapita_be192; assert_in_epsilon(163.41887462869948, worksheet.costpercapita_be192, 0.001); end
  def test_costpercapita_bf192; assert_in_epsilon(166.93114147180918, worksheet.costpercapita_bf192, 0.001); end
  def test_costpercapita_bg192; assert_in_epsilon(176.4513684961965, worksheet.costpercapita_bg192, 0.001); end
  def test_costpercapita_bi192; assert_in_epsilon(67.19097515429641, worksheet.costpercapita_bi192, 0.001); end
  def test_costpercapita_bj192; assert_in_epsilon(183.18001208634774, worksheet.costpercapita_bj192, 0.001); end
  def test_costpercapita_bk192; assert_in_epsilon(322.0013370718878, worksheet.costpercapita_bk192, 0.001); end
  def test_costpercapita_bl192; assert_in_epsilon(457.8250591536643, worksheet.costpercapita_bl192, 0.001); end
  def test_costpercapita_bm192; assert_in_epsilon(498.8614357697024, worksheet.costpercapita_bm192, 0.001); end
  def test_costpercapita_bn192; assert_in_epsilon(500.05111970216427, worksheet.costpercapita_bn192, 0.001); end
  def test_costpercapita_bo192; assert_in_epsilon(524.2968478383622, worksheet.costpercapita_bo192, 0.001); end
  def test_costpercapita_bp192; assert_in_epsilon(649.707312301879, worksheet.costpercapita_bp192, 0.001); end
  def test_costpercapita_bq192; assert_in_epsilon(605.0771677678505, worksheet.costpercapita_bq192, 0.001); end
  def test_costpercapita_bs192; assert_in_epsilon(223.18880939849376, worksheet.costpercapita_bs192, 0.001); end
  def test_costpercapita_bt192; assert_in_epsilon(333.63670027335706, worksheet.costpercapita_bt192, 0.001); end
  def test_costpercapita_bu192; assert_in_epsilon(471.5947897588452, worksheet.costpercapita_bu192, 0.001); end
  def test_costpercapita_bv192; assert_in_epsilon(604.8053391813041, worksheet.costpercapita_bv192, 0.001); end
  def test_costpercapita_bw192; assert_in_epsilon(635.6846834470041, worksheet.costpercapita_bw192, 0.001); end
  def test_costpercapita_bx192; assert_in_epsilon(624.4648222817791, worksheet.costpercapita_bx192, 0.001); end
  def test_costpercapita_by192; assert_in_epsilon(642.1649302891115, worksheet.costpercapita_by192, 0.001); end
  def test_costpercapita_bz192; assert_in_epsilon(762.8998197239198, worksheet.costpercapita_bz192, 0.001); end
  def test_costpercapita_ca192; assert_in_epsilon(721.1631313269792, worksheet.costpercapita_ca192, 0.001); end
  def test_costpercapita_cc192; assert_in_epsilon(557.7336695200883, worksheet.costpercapita_cc192, 0.001); end
  def test_costpercapita_cd192; assert_in_epsilon(11295.120610247439, worksheet.costpercapita_cd192, 0.001); end
  def test_costpercapita_cf192; assert_in_epsilon(-125.02992436014952, worksheet.costpercapita_cf192, 0.001); end
  def test_costpercapita_cg192; assert_in_epsilon(-18.380262725719717, worksheet.costpercapita_cg192, 0.001); end
  def test_costpercapita_ch192; assert_in_epsilon(74.17178329418248, worksheet.costpercapita_ch192, 0.001); end
  def test_costpercapita_ci192; assert_in_epsilon(209.23968868095304, worksheet.costpercapita_ci192, 0.001); end
  def test_costpercapita_cj192; assert_in_epsilon(310.7735987344219, worksheet.costpercapita_cj192, 0.001); end
  def test_costpercapita_ck192; assert_in_epsilon(308.3427836954362, worksheet.costpercapita_ck192, 0.001); end
  def test_costpercapita_cl192; assert_in_epsilon(246.02622685197986, worksheet.costpercapita_cl192, 0.001); end
  def test_costpercapita_cm192; assert_in_epsilon(365.26500437676066, worksheet.costpercapita_cm192, 0.001); end
  def test_costpercapita_cn192; assert_in_epsilon(304.12449432782887, worksheet.costpercapita_cn192, 0.001); end
  def test_costpercapita_cp192; assert_in_epsilon(186.0592658750771, worksheet.costpercapita_cp192, 0.001); end
  def test_costpercapita_cq192; assert_in_epsilon(3520.934789291728, worksheet.costpercapita_cq192, 0.001); end
  def test_costpercapita_cr192; assert_equal("ok", worksheet.costpercapita_cr192); end
  def test_costpercapita_c193; assert_equal("Buildings", worksheet.costpercapita_c193); end
  def test_costpercapita_e193; assert_in_epsilon(387.15921784879095, worksheet.costpercapita_e193, 0.001); end
  def test_costpercapita_f193; assert_in_epsilon(430.62339781768566, worksheet.costpercapita_f193, 0.001); end
  def test_costpercapita_g193; assert_in_epsilon(439.18589312726294, worksheet.costpercapita_g193, 0.001); end
  def test_costpercapita_h193; assert_in_epsilon(494.1314412551693, worksheet.costpercapita_h193, 0.001); end
  def test_costpercapita_i193; assert_in_epsilon(546.1437888703884, worksheet.costpercapita_i193, 0.001); end
  def test_costpercapita_j193; assert_in_epsilon(603.2253820680229, worksheet.costpercapita_j193, 0.001); end
  def test_costpercapita_k193; assert_in_epsilon(656.6998465841576, worksheet.costpercapita_k193, 0.001); end
  def test_costpercapita_l193; assert_in_epsilon(716.9586532364948, worksheet.costpercapita_l193, 0.001); end
  def test_costpercapita_m193; assert_in_epsilon(779.1885193894295, worksheet.costpercapita_m193, 0.001); end
  def test_costpercapita_o193; assert_in_epsilon(114.20206717967781, worksheet.costpercapita_o193, 0.001); end
  def test_costpercapita_p193; assert_in_epsilon(114.65331341691385, worksheet.costpercapita_p193, 0.001); end
  def test_costpercapita_q193; assert_in_epsilon(116.66857999595548, worksheet.costpercapita_q193, 0.001); end
  def test_costpercapita_r193; assert_in_epsilon(118.4621006844819, worksheet.costpercapita_r193, 0.001); end
  def test_costpercapita_s193; assert_in_epsilon(120.29217725675836, worksheet.costpercapita_s193, 0.001); end
  def test_costpercapita_t193; assert_in_epsilon(123.49949991611089, worksheet.costpercapita_t193, 0.001); end
  def test_costpercapita_u193; assert_in_epsilon(127.14587402936533, worksheet.costpercapita_u193, 0.001); end
  def test_costpercapita_v193; assert_in_epsilon(131.15185119699927, worksheet.costpercapita_v193, 0.001); end
  def test_costpercapita_w193; assert_in_epsilon(135.53286620968998, worksheet.costpercapita_w193, 0.001); end
  def test_costpercapita_y193; assert_in_delta(0, (worksheet.costpercapita_y193||0), 0.001); end
  def test_costpercapita_z193; assert_in_delta(0, (worksheet.costpercapita_z193||0), 0.001); end
  def test_costpercapita_aa193; assert_in_delta(0, (worksheet.costpercapita_aa193||0), 0.001); end
  def test_costpercapita_ab193; assert_in_delta(0, (worksheet.costpercapita_ab193||0), 0.001); end
  def test_costpercapita_ac193; assert_in_delta(0, (worksheet.costpercapita_ac193||0), 0.001); end
  def test_costpercapita_ad193; assert_in_delta(0, (worksheet.costpercapita_ad193||0), 0.001); end
  def test_costpercapita_ae193; assert_in_delta(0, (worksheet.costpercapita_ae193||0), 0.001); end
  def test_costpercapita_af193; assert_in_delta(0, (worksheet.costpercapita_af193||0), 0.001); end
  def test_costpercapita_ag193; assert_in_delta(0, (worksheet.costpercapita_ag193||0), 0.001); end
  def test_costpercapita_ai193; assert_in_epsilon(501.3612850284687, worksheet.costpercapita_ai193, 0.001); end
  def test_costpercapita_aj193; assert_in_epsilon(545.2767112345995, worksheet.costpercapita_aj193, 0.001); end
  def test_costpercapita_ak193; assert_in_epsilon(555.8544731232184, worksheet.costpercapita_ak193, 0.001); end
  def test_costpercapita_al193; assert_in_epsilon(612.5935419396511, worksheet.costpercapita_al193, 0.001); end
  def test_costpercapita_am193; assert_in_epsilon(666.4359661271468, worksheet.costpercapita_am193, 0.001); end
  def test_costpercapita_an193; assert_in_epsilon(726.7248819841338, worksheet.costpercapita_an193, 0.001); end
  def test_costpercapita_ao193; assert_in_epsilon(783.8457206135229, worksheet.costpercapita_ao193, 0.001); end
  def test_costpercapita_ap193; assert_in_epsilon(848.110504433494, worksheet.costpercapita_ap193, 0.001); end
  def test_costpercapita_aq193; assert_in_epsilon(914.7213855991196, worksheet.costpercapita_aq193, 0.001); end
  def test_costpercapita_as193; assert_in_epsilon(683.8804966759283, worksheet.costpercapita_as193, 0.001); end
  def test_costpercapita_at193; assert_in_epsilon(13719.700420263127, worksheet.costpercapita_at193, 0.001); end
  def test_costpercapita_ay193; assert_in_epsilon(149.99822029780012, worksheet.costpercapita_ay193, 0.001); end
  def test_costpercapita_az193; assert_in_epsilon(280.5408384788864, worksheet.costpercapita_az193, 0.001); end
  def test_costpercapita_ba193; assert_in_epsilon(287.42824731406034, worksheet.costpercapita_ba193, 0.001); end
  def test_costpercapita_bb193; assert_in_epsilon(323.5873399724322, worksheet.costpercapita_bb193, 0.001); end
  def test_costpercapita_bc193; assert_in_epsilon(357.81249661203606, worksheet.costpercapita_bc193, 0.001); end
  def test_costpercapita_bd193; assert_in_epsilon(395.3645547525855, worksheet.costpercapita_bd193, 0.001); end
  def test_costpercapita_be193; assert_in_epsilon(430.5421058838111, worksheet.costpercapita_be193, 0.001); end
  def test_costpercapita_bf193; assert_in_epsilon(470.1773491970185, worksheet.costpercapita_bf193, 0.001); end
  def test_costpercapita_bg193; assert_in_epsilon(511.1063952574369, worksheet.costpercapita_bg193, 0.001); end
  def test_costpercapita_bi193; assert_in_epsilon(149.99822029780012, worksheet.costpercapita_bi193, 0.001); end
  def test_costpercapita_bj193; assert_in_epsilon(425.59285707483326, worksheet.costpercapita_bj193, 0.001); end
  def test_costpercapita_bk193; assert_in_epsilon(699.087981404717, worksheet.costpercapita_bk193, 0.001); end
  def test_costpercapita_bl193; assert_in_epsilon(875.3143945094943, worksheet.costpercapita_bl193, 0.001); end
  def test_costpercapita_bm193; assert_in_epsilon(963.1069847500484, worksheet.costpercapita_bm193, 0.001); end
  def test_costpercapita_bn193; assert_in_epsilon(1076.1643363674332, worksheet.costpercapita_bn193, 0.001); end
  def test_costpercapita_bo193; assert_in_epsilon(1178.2669989762212, worksheet.costpercapita_bo193, 0.001); end
  def test_costpercapita_bp193; assert_in_epsilon(1290.2091819503557, worksheet.costpercapita_bp193, 0.001); end
  def test_costpercapita_bq193; assert_in_epsilon(1405.100483075444, worksheet.costpercapita_bq193, 0.001); end
  def test_costpercapita_bs193; assert_in_epsilon(264.20028747747796, worksheet.costpercapita_bs193, 0.001); end
  def test_costpercapita_bt193; assert_in_epsilon(540.2461704917471, worksheet.costpercapita_bt193, 0.001); end
  def test_costpercapita_bu193; assert_in_epsilon(815.7565614006725, worksheet.costpercapita_bu193, 0.001); end
  def test_costpercapita_bv193; assert_in_epsilon(993.7764951939761, worksheet.costpercapita_bv193, 0.001); end
  def test_costpercapita_bw193; assert_in_epsilon(1083.3991620068066, worksheet.costpercapita_bw193, 0.001); end
  def test_costpercapita_bx193; assert_in_epsilon(1199.6638362835442, worksheet.costpercapita_bx193, 0.001); end
  def test_costpercapita_by193; assert_in_epsilon(1305.4128730055866, worksheet.costpercapita_by193, 0.001); end
  def test_costpercapita_bz193; assert_in_epsilon(1421.361033147355, worksheet.costpercapita_bz193, 0.001); end
  def test_costpercapita_ca193; assert_in_epsilon(1540.633349285134, worksheet.costpercapita_ca193, 0.001); end
  def test_costpercapita_cc193; assert_in_epsilon(1018.2721964769223, worksheet.costpercapita_cc193, 0.001); end
  def test_costpercapita_cd193; assert_in_epsilon(20208.26093493628, worksheet.costpercapita_cd193, 0.001); end
  def test_costpercapita_cf193; assert_in_epsilon(-237.16099755099086, worksheet.costpercapita_cf193, 0.001); end
  def test_costpercapita_cg193; assert_in_epsilon(-5.030540742852394, worksheet.costpercapita_cg193, 0.001); end
  def test_costpercapita_ch193; assert_in_epsilon(259.902088277454, worksheet.costpercapita_ch193, 0.001); end
  def test_costpercapita_ci193; assert_in_epsilon(381.182953254325, worksheet.costpercapita_ci193, 0.001); end
  def test_costpercapita_cj193; assert_in_epsilon(416.96319587966, worksheet.costpercapita_cj193, 0.001); end
  def test_costpercapita_ck193; assert_in_epsilon(472.9389542994102, worksheet.costpercapita_ck193, 0.001); end
  def test_costpercapita_cl193; assert_in_epsilon(521.5671523920637, worksheet.costpercapita_cl193, 0.001); end
  def test_costpercapita_cm193; assert_in_epsilon(573.2505287138607, worksheet.costpercapita_cm193, 0.001); end
  def test_costpercapita_cn193; assert_in_epsilon(625.9119636860145, worksheet.costpercapita_cn193, 0.001); end
  def test_costpercapita_cp193; assert_in_epsilon(334.3916998009939, worksheet.costpercapita_cp193, 0.001); end
  def test_costpercapita_cq193; assert_in_epsilon(6488.560514673148, worksheet.costpercapita_cq193, 0.001); end
  def test_costpercapita_cr193; assert_equal("ok", worksheet.costpercapita_cr193); end
  def test_costpercapita_c194; assert_equal("Transport", worksheet.costpercapita_c194); end
  def test_costpercapita_e194; assert_in_epsilon(1178.5742305297188, worksheet.costpercapita_e194, 0.001); end
  def test_costpercapita_f194; assert_in_epsilon(1135.5711878790742, worksheet.costpercapita_f194, 0.001); end
  def test_costpercapita_g194; assert_in_epsilon(1210.7111350131481, worksheet.costpercapita_g194, 0.001); end
  def test_costpercapita_h194; assert_in_epsilon(1322.2315349569508, worksheet.costpercapita_h194, 0.001); end
  def test_costpercapita_i194; assert_in_epsilon(1375.4076368579333, worksheet.costpercapita_i194, 0.001); end
  def test_costpercapita_j194; assert_in_epsilon(1451.4232054993427, worksheet.costpercapita_j194, 0.001); end
  def test_costpercapita_k194; assert_in_epsilon(1503.5789377718881, worksheet.costpercapita_k194, 0.001); end
  def test_costpercapita_l194; assert_in_epsilon(1544.7004216806542, worksheet.costpercapita_l194, 0.001); end
  def test_costpercapita_m194; assert_in_epsilon(1602.1333854386237, worksheet.costpercapita_m194, 0.001); end
  def test_costpercapita_o194; assert_in_epsilon(1174.401543588274, worksheet.costpercapita_o194, 0.001); end
  def test_costpercapita_p194; assert_in_epsilon(1171.5631781366626, worksheet.costpercapita_p194, 0.001); end
  def test_costpercapita_q194; assert_in_epsilon(1198.1045524898896, worksheet.costpercapita_q194, 0.001); end
  def test_costpercapita_r194; assert_in_epsilon(1242.447537020263, worksheet.costpercapita_r194, 0.001); end
  def test_costpercapita_s194; assert_in_epsilon(1281.9817024603599, worksheet.costpercapita_s194, 0.001); end
  def test_costpercapita_t194; assert_in_epsilon(1326.648896462128, worksheet.costpercapita_t194, 0.001); end
  def test_costpercapita_u194; assert_in_epsilon(1364.315126099375, worksheet.costpercapita_u194, 0.001); end
  def test_costpercapita_v194; assert_in_epsilon(1398.4516587005776, worksheet.costpercapita_v194, 0.001); end
  def test_costpercapita_w194; assert_in_epsilon(1433.881016878032, worksheet.costpercapita_w194, 0.001); end
  def test_costpercapita_y194; assert_in_delta(0, (worksheet.costpercapita_y194||0), 0.001); end
  def test_costpercapita_z194; assert_in_delta(0, (worksheet.costpercapita_z194||0), 0.001); end
  def test_costpercapita_aa194; assert_in_delta(0, (worksheet.costpercapita_aa194||0), 0.001); end
  def test_costpercapita_ab194; assert_in_delta(0, (worksheet.costpercapita_ab194||0), 0.001); end
  def test_costpercapita_ac194; assert_in_delta(0, (worksheet.costpercapita_ac194||0), 0.001); end
  def test_costpercapita_ad194; assert_in_delta(0, (worksheet.costpercapita_ad194||0), 0.001); end
  def test_costpercapita_ae194; assert_in_delta(0, (worksheet.costpercapita_ae194||0), 0.001); end
  def test_costpercapita_af194; assert_in_delta(0, (worksheet.costpercapita_af194||0), 0.001); end
  def test_costpercapita_ag194; assert_in_delta(0, (worksheet.costpercapita_ag194||0), 0.001); end
  def test_costpercapita_ai194; assert_in_epsilon(2352.975774117993, worksheet.costpercapita_ai194, 0.001); end
  def test_costpercapita_aj194; assert_in_epsilon(2307.1343660157377, worksheet.costpercapita_aj194, 0.001); end
  def test_costpercapita_ak194; assert_in_epsilon(2408.815687503038, worksheet.costpercapita_ak194, 0.001); end
  def test_costpercapita_al194; assert_in_epsilon(2564.679071977214, worksheet.costpercapita_al194, 0.001); end
  def test_costpercapita_am194; assert_in_epsilon(2657.389339318293, worksheet.costpercapita_am194, 0.001); end
  def test_costpercapita_an194; assert_in_epsilon(2778.072101961471, worksheet.costpercapita_an194, 0.001); end
  def test_costpercapita_ao194; assert_in_epsilon(2867.894063871263, worksheet.costpercapita_ao194, 0.001); end
  def test_costpercapita_ap194; assert_in_epsilon(2943.1520803812323, worksheet.costpercapita_ap194, 0.001); end
  def test_costpercapita_aq194; assert_in_epsilon(3036.014402316655, worksheet.costpercapita_aq194, 0.001); end
  def test_costpercapita_as194; assert_in_epsilon(2657.3474319403217, worksheet.costpercapita_as194, 0.001); end
  def test_costpercapita_at194; assert_in_epsilon(54469.099284987176, worksheet.costpercapita_at194, 0.001); end
  def test_costpercapita_ay194; assert_in_epsilon(491.54224481865305, worksheet.costpercapita_ay194, 0.001); end
  def test_costpercapita_az194; assert_in_epsilon(793.1242331116505, worksheet.costpercapita_az194, 0.001); end
  def test_costpercapita_ba194; assert_in_epsilon(846.0374186481115, worksheet.costpercapita_ba194, 0.001); end
  def test_costpercapita_bb194; assert_in_epsilon(923.4249037849006, worksheet.costpercapita_bb194, 0.001); end
  def test_costpercapita_bc194; assert_in_epsilon(962.6745622185368, worksheet.costpercapita_bc194, 0.001); end
  def test_costpercapita_bd194; assert_in_epsilon(1017.4167966660407, worksheet.costpercapita_bd194, 0.001); end
  def test_costpercapita_be194; assert_in_epsilon(1056.6580847015573, worksheet.costpercapita_be194, 0.001); end
  def test_costpercapita_bf194; assert_in_epsilon(1089.137342905164, worksheet.costpercapita_bf194, 0.001); end
  def test_costpercapita_bg194; assert_in_epsilon(1132.963354440164, worksheet.costpercapita_bg194, 0.001); end
  def test_costpercapita_bi194; assert_in_epsilon(491.54224481865305, worksheet.costpercapita_bi194, 0.001); end
  def test_costpercapita_bj194; assert_in_epsilon(1227.740387988618, worksheet.costpercapita_bj194, 0.001); end
  def test_costpercapita_bk194; assert_in_epsilon(1933.676619592965, worksheet.costpercapita_bk194, 0.001); end
  def test_costpercapita_bl194; assert_in_epsilon(2287.410387737752, worksheet.costpercapita_bl194, 0.001); end
  def test_costpercapita_bm194; assert_in_epsilon(2447.948657368747, worksheet.costpercapita_bm194, 0.001); end
  def test_costpercapita_bn194; assert_in_epsilon(2611.7374973955452, worksheet.costpercapita_bn194, 0.001); end
  def test_costpercapita_bo194; assert_in_epsilon(2733.5728524294873, worksheet.costpercapita_bo194, 0.001); end
  def test_costpercapita_bp194; assert_in_epsilon(2849.444295200801, worksheet.costpercapita_bp194, 0.001); end
  def test_costpercapita_bq194; assert_in_epsilon(2946.507178274776, worksheet.costpercapita_bq194, 0.001); end
  def test_costpercapita_bs194; assert_in_epsilon(1665.9437884069268, worksheet.costpercapita_bs194, 0.001); end
  def test_costpercapita_bt194; assert_in_epsilon(2399.303566125281, worksheet.costpercapita_bt194, 0.001); end
  def test_costpercapita_bu194; assert_in_epsilon(3131.7811720828545, worksheet.costpercapita_bu194, 0.001); end
  def test_costpercapita_bv194; assert_in_epsilon(3529.8579247580146, worksheet.costpercapita_bv194, 0.001); end
  def test_costpercapita_bw194; assert_in_epsilon(3729.9303598291067, worksheet.costpercapita_bw194, 0.001); end
  def test_costpercapita_bx194; assert_in_epsilon(3938.3863938576733, worksheet.costpercapita_bx194, 0.001); end
  def test_costpercapita_by194; assert_in_epsilon(4097.887978528862, worksheet.costpercapita_by194, 0.001); end
  def test_costpercapita_bz194; assert_in_epsilon(4247.895953901379, worksheet.costpercapita_bz194, 0.001); end
  def test_costpercapita_ca194; assert_in_epsilon(4380.388195152808, worksheet.costpercapita_ca194, 0.001); end
  def test_costpercapita_cc194; assert_in_epsilon(3457.9305925158787, worksheet.costpercapita_cc194, 0.001); end
  def test_costpercapita_cd194; assert_in_epsilon(70741.29473586183, worksheet.costpercapita_cd194, 0.001); end
  def test_costpercapita_cf194; assert_in_epsilon(-687.0319857110654, worksheet.costpercapita_cf194, 0.001); end
  def test_costpercapita_cg194; assert_in_epsilon(92.16920010954368, worksheet.costpercapita_cg194, 0.001); end
  def test_costpercapita_ch194; assert_in_epsilon(722.9654845798165, worksheet.costpercapita_ch194, 0.001); end
  def test_costpercapita_ci194; assert_in_epsilon(965.1788527808013, worksheet.costpercapita_ci194, 0.001); end
  def test_costpercapita_cj194; assert_in_epsilon(1072.5410205108135, worksheet.costpercapita_cj194, 0.001); end
  def test_costpercapita_ck194; assert_in_epsilon(1160.314291896202, worksheet.costpercapita_ck194, 0.001); end
  def test_costpercapita_cl194; assert_in_epsilon(1229.9939146575991, worksheet.costpercapita_cl194, 0.001); end
  def test_costpercapita_cm194; assert_in_epsilon(1304.7438735201472, worksheet.costpercapita_cm194, 0.001); end
  def test_costpercapita_cn194; assert_in_epsilon(1344.373792836152, worksheet.costpercapita_cn194, 0.001); end
  def test_costpercapita_cp194; assert_in_epsilon(800.5831605755568, worksheet.costpercapita_cp194, 0.001); end
  def test_costpercapita_cq194; assert_in_epsilon(16272.195450874633, worksheet.costpercapita_cq194, 0.001); end
  def test_costpercapita_cr194; assert_equal("ok", worksheet.costpercapita_cr194); end
  def test_costpercapita_c195; assert_equal("Industry", worksheet.costpercapita_c195); end
  def test_costpercapita_e195; assert_in_epsilon(9.501503394061272, worksheet.costpercapita_e195, 0.001); end
  def test_costpercapita_f195; assert_in_epsilon(8.654657730685964, worksheet.costpercapita_f195, 0.001); end
  def test_costpercapita_g195; assert_in_epsilon(7.932778118698089, worksheet.costpercapita_g195, 0.001); end
  def test_costpercapita_h195; assert_in_epsilon(7.291332390419164, worksheet.costpercapita_h195, 0.001); end
  def test_costpercapita_i195; assert_in_epsilon(6.790810821928129, worksheet.costpercapita_i195, 0.001); end
  def test_costpercapita_j195; assert_in_epsilon(6.40318407443384, worksheet.costpercapita_j195, 0.001); end
  def test_costpercapita_k195; assert_in_epsilon(6.094221775906331, worksheet.costpercapita_k195, 0.001); end
  def test_costpercapita_l195; assert_in_epsilon(5.841911723728388, worksheet.costpercapita_l195, 0.001); end
  def test_costpercapita_m195; assert_in_epsilon(5.6336130361418455, worksheet.costpercapita_m195, 0.001); end
  def test_costpercapita_o195; assert_in_epsilon(14.366948484265311, worksheet.costpercapita_o195, 0.001); end
  def test_costpercapita_p195; assert_in_epsilon(13.1653847697148, worksheet.costpercapita_p195, 0.001); end
  def test_costpercapita_q195; assert_in_epsilon(12.078668379868073, worksheet.costpercapita_q195, 0.001); end
  def test_costpercapita_r195; assert_in_epsilon(11.207378058178438, worksheet.costpercapita_r195, 0.001); end
  def test_costpercapita_s195; assert_in_epsilon(10.52690777830955, worksheet.costpercapita_s195, 0.001); end
  def test_costpercapita_t195; assert_in_epsilon(9.99614813048735, worksheet.costpercapita_t195, 0.001); end
  def test_costpercapita_u195; assert_in_epsilon(9.568814724711372, worksheet.costpercapita_u195, 0.001); end
  def test_costpercapita_v195; assert_in_epsilon(9.215535728368746, worksheet.costpercapita_v195, 0.001); end
  def test_costpercapita_w195; assert_in_epsilon(8.920240132730445, worksheet.costpercapita_w195, 0.001); end
  def test_costpercapita_y195; assert_in_delta(0, (worksheet.costpercapita_y195||0), 0.001); end
  def test_costpercapita_z195; assert_in_delta(0, (worksheet.costpercapita_z195||0), 0.001); end
  def test_costpercapita_aa195; assert_in_delta(0, (worksheet.costpercapita_aa195||0), 0.001); end
  def test_costpercapita_ab195; assert_in_delta(0, (worksheet.costpercapita_ab195||0), 0.001); end
  def test_costpercapita_ac195; assert_in_delta(0, (worksheet.costpercapita_ac195||0), 0.001); end
  def test_costpercapita_ad195; assert_in_delta(0, (worksheet.costpercapita_ad195||0), 0.001); end
  def test_costpercapita_ae195; assert_in_delta(0, (worksheet.costpercapita_ae195||0), 0.001); end
  def test_costpercapita_af195; assert_in_delta(0, (worksheet.costpercapita_af195||0), 0.001); end
  def test_costpercapita_ag195; assert_in_delta(0, (worksheet.costpercapita_ag195||0), 0.001); end
  def test_costpercapita_ai195; assert_in_epsilon(23.86845187832658, worksheet.costpercapita_ai195, 0.001); end
  def test_costpercapita_aj195; assert_in_epsilon(21.820042500400763, worksheet.costpercapita_aj195, 0.001); end
  def test_costpercapita_ak195; assert_in_epsilon(20.011446498566162, worksheet.costpercapita_ak195, 0.001); end
  def test_costpercapita_al195; assert_in_epsilon(18.498710448597603, worksheet.costpercapita_al195, 0.001); end
  def test_costpercapita_am195; assert_in_epsilon(17.31771860023768, worksheet.costpercapita_am195, 0.001); end
  def test_costpercapita_an195; assert_in_epsilon(16.39933220492119, worksheet.costpercapita_an195, 0.001); end
  def test_costpercapita_ao195; assert_in_epsilon(15.663036500617702, worksheet.costpercapita_ao195, 0.001); end
  def test_costpercapita_ap195; assert_in_epsilon(15.057447452097135, worksheet.costpercapita_ap195, 0.001); end
  def test_costpercapita_aq195; assert_in_epsilon(14.553853168872289, worksheet.costpercapita_aq195, 0.001); end
  def test_costpercapita_as195; assert_in_epsilon(18.132226583626345, worksheet.costpercapita_as195, 0.001); end
  def test_costpercapita_at195; assert_in_epsilon(390.41342302506314, worksheet.costpercapita_at195, 0.001); end
  def test_costpercapita_ay195; assert_in_epsilon(3.747595611976263, worksheet.costpercapita_ay195, 0.001); end
  def test_costpercapita_az195; assert_in_epsilon(5.689302697603886, worksheet.costpercapita_az195, 0.001); end
  def test_costpercapita_ba195; assert_in_epsilon(5.214761502373702, worksheet.costpercapita_ba195, 0.001); end
  def test_costpercapita_bb195; assert_in_epsilon(4.793095039548196, worksheet.costpercapita_bb195, 0.001); end
  def test_costpercapita_bc195; assert_in_epsilon(4.464067734432657, worksheet.costpercapita_bc195, 0.001); end
  def test_costpercapita_bd195; assert_in_epsilon(4.209253971854447, worksheet.costpercapita_bd195, 0.001); end
  def test_costpercapita_be195; assert_in_epsilon(4.00615177033837, worksheet.costpercapita_be195, 0.001); end
  def test_costpercapita_bf195; assert_in_epsilon(3.8402909928059494, worksheet.costpercapita_bf195, 0.001); end
  def test_costpercapita_bg195; assert_in_epsilon(3.7033619169175216, worksheet.costpercapita_bg195, 0.001); end
  def test_costpercapita_bi195; assert_in_epsilon(3.747595611976263, worksheet.costpercapita_bi195, 0.001); end
  def test_costpercapita_bj195; assert_in_epsilon(9.31332108475032, worksheet.costpercapita_bj195, 0.001); end
  def test_costpercapita_bk195; assert_in_epsilon(14.223181680288237, worksheet.costpercapita_bk195, 0.001); end
  def test_costpercapita_bl195; assert_in_epsilon(15.179041446909165, worksheet.costpercapita_bl195, 0.001); end
  def test_costpercapita_bm195; assert_in_epsilon(14.04145227422591, worksheet.costpercapita_bm195, 0.001); end
  def test_costpercapita_bn195; assert_in_epsilon(13.120494318508502, worksheet.costpercapita_bn195, 0.001); end
  def test_costpercapita_bo195; assert_in_epsilon(12.39159120565756, worksheet.costpercapita_bo195, 0.001); end
  def test_costpercapita_bp195; assert_in_epsilon(11.80383894721361, worksheet.costpercapita_bp195, 0.001); end
  def test_costpercapita_bq195; assert_in_epsilon(11.324953367902515, worksheet.costpercapita_bq195, 0.001); end
  def test_costpercapita_bs195; assert_in_epsilon(18.114544096241573, worksheet.costpercapita_bs195, 0.001); end
  def test_costpercapita_bt195; assert_in_epsilon(22.47870585446512, worksheet.costpercapita_bt195, 0.001); end
  def test_costpercapita_bu195; assert_in_epsilon(26.301850060156312, worksheet.costpercapita_bu195, 0.001); end
  def test_costpercapita_bv195; assert_in_epsilon(26.386419505087606, worksheet.costpercapita_bv195, 0.001); end
  def test_costpercapita_bw195; assert_in_epsilon(24.56836005253546, worksheet.costpercapita_bw195, 0.001); end
  def test_costpercapita_bx195; assert_in_epsilon(23.116642448995854, worksheet.costpercapita_bx195, 0.001); end
  def test_costpercapita_by195; assert_in_epsilon(21.960405930368932, worksheet.costpercapita_by195, 0.001); end
  def test_costpercapita_bz195; assert_in_epsilon(21.019374675582355, worksheet.costpercapita_bz195, 0.001); end
  def test_costpercapita_ca195; assert_in_epsilon(20.245193500632958, worksheet.costpercapita_ca195, 0.001); end
  def test_costpercapita_cc195; assert_in_epsilon(22.687944013785128, worksheet.costpercapita_cc195, 0.001); end
  def test_costpercapita_cd195; assert_in_epsilon(493.6249462097008, worksheet.costpercapita_cd195, 0.001); end
  def test_costpercapita_cf195; assert_in_epsilon(-5.753907782085008, worksheet.costpercapita_cf195, 0.001); end
  def test_costpercapita_cg195; assert_in_delta(0.6586633540643572, worksheet.costpercapita_cg195, 0.001); end
  def test_costpercapita_ch195; assert_in_epsilon(6.290403561590148, worksheet.costpercapita_ch195, 0.001); end
  def test_costpercapita_ci195; assert_in_epsilon(7.887709056490001, worksheet.costpercapita_ci195, 0.001); end
  def test_costpercapita_cj195; assert_in_epsilon(7.2506414522977805, worksheet.costpercapita_cj195, 0.001); end
  def test_costpercapita_ck195; assert_in_epsilon(6.717310244074663, worksheet.costpercapita_ck195, 0.001); end
  def test_costpercapita_cl195; assert_in_epsilon(6.297369429751228, worksheet.costpercapita_cl195, 0.001); end
  def test_costpercapita_cm195; assert_in_epsilon(5.961927223485222, worksheet.costpercapita_cm195, 0.001); end
  def test_costpercapita_cn195; assert_in_epsilon(5.691340331760669, worksheet.costpercapita_cn195, 0.001); end
  def test_costpercapita_cp195; assert_in_epsilon(4.555717430158785, worksheet.costpercapita_cp195, 0.001); end
  def test_costpercapita_cq195; assert_in_epsilon(103.21152318463771, worksheet.costpercapita_cq195, 0.001); end
  def test_costpercapita_cr195; assert_equal("ok", worksheet.costpercapita_cr195); end
  def test_costpercapita_c196; assert_equal("Other", worksheet.costpercapita_c196); end
  def test_costpercapita_e196; assert_in_delta(0, (worksheet.costpercapita_e196||0), 0.001); end
  def test_costpercapita_f196; assert_in_epsilon(2.510941756577549, worksheet.costpercapita_f196, 0.001); end
  def test_costpercapita_g196; assert_in_epsilon(5.721390312179909, worksheet.costpercapita_g196, 0.001); end
  def test_costpercapita_h196; assert_in_epsilon(5.427672328465383, worksheet.costpercapita_h196, 0.001); end
  def test_costpercapita_i196; assert_in_epsilon(5.170709128499708, worksheet.costpercapita_i196, 0.001); end
  def test_costpercapita_j196; assert_in_epsilon(4.947100165718051, worksheet.costpercapita_j196, 0.001); end
  def test_costpercapita_k196; assert_in_epsilon(4.830627025249025, worksheet.costpercapita_k196, 0.001); end
  def test_costpercapita_l196; assert_in_epsilon(4.640836506622003, worksheet.costpercapita_l196, 0.001); end
  def test_costpercapita_m196; assert_in_epsilon(4.466117568649894, worksheet.costpercapita_m196, 0.001); end
  def test_costpercapita_o196; assert_in_delta(0, (worksheet.costpercapita_o196||0), 0.001); end
  def test_costpercapita_p196; assert_in_delta(0.09799487630794962, worksheet.costpercapita_p196, 0.001); end
  def test_costpercapita_q196; assert_in_delta(0.2749372958886066, worksheet.costpercapita_q196, 0.001); end
  def test_costpercapita_r196; assert_in_delta(0.3098192492647166, worksheet.costpercapita_r196, 0.001); end
  def test_costpercapita_s196; assert_in_delta(0.3418281416008444, worksheet.costpercapita_s196, 0.001); end
  def test_costpercapita_t196; assert_in_delta(0.3717038422174498, worksheet.costpercapita_t196, 0.001); end
  def test_costpercapita_u196; assert_in_delta(0.4065592991466538, worksheet.costpercapita_u196, 0.001); end
  def test_costpercapita_v196; assert_in_delta(0.4324794721308952, worksheet.costpercapita_v196, 0.001); end
  def test_costpercapita_w196; assert_in_delta(0.45651368743202253, worksheet.costpercapita_w196, 0.001); end
  def test_costpercapita_y196; assert_in_delta(0, (worksheet.costpercapita_y196||0), 0.001); end
  def test_costpercapita_z196; assert_in_delta(0, (worksheet.costpercapita_z196||0), 0.001); end
  def test_costpercapita_aa196; assert_in_delta(0, (worksheet.costpercapita_aa196||0), 0.001); end
  def test_costpercapita_ab196; assert_in_delta(0, (worksheet.costpercapita_ab196||0), 0.001); end
  def test_costpercapita_ac196; assert_in_delta(0, (worksheet.costpercapita_ac196||0), 0.001); end
  def test_costpercapita_ad196; assert_in_delta(0, (worksheet.costpercapita_ad196||0), 0.001); end
  def test_costpercapita_ae196; assert_in_delta(0, (worksheet.costpercapita_ae196||0), 0.001); end
  def test_costpercapita_af196; assert_in_delta(0, (worksheet.costpercapita_af196||0), 0.001); end
  def test_costpercapita_ag196; assert_in_delta(0, (worksheet.costpercapita_ag196||0), 0.001); end
  def test_costpercapita_ai196; assert_in_delta(0, (worksheet.costpercapita_ai196||0), 0.001); end
  def test_costpercapita_aj196; assert_in_epsilon(2.6089366328854986, worksheet.costpercapita_aj196, 0.001); end
  def test_costpercapita_ak196; assert_in_epsilon(5.996327608068515, worksheet.costpercapita_ak196, 0.001); end
  def test_costpercapita_al196; assert_in_epsilon(5.7374915777301, worksheet.costpercapita_al196, 0.001); end
  def test_costpercapita_am196; assert_in_epsilon(5.512537270100553, worksheet.costpercapita_am196, 0.001); end
  def test_costpercapita_an196; assert_in_epsilon(5.3188040079355, worksheet.costpercapita_an196, 0.001); end
  def test_costpercapita_ao196; assert_in_epsilon(5.2371863243956795, worksheet.costpercapita_ao196, 0.001); end
  def test_costpercapita_ap196; assert_in_epsilon(5.073315978752898, worksheet.costpercapita_ap196, 0.001); end
  def test_costpercapita_aq196; assert_in_epsilon(4.9226312560819165, worksheet.costpercapita_aq196, 0.001); end
  def test_costpercapita_as196; assert_in_epsilon(4.489692295105629, worksheet.costpercapita_as196, 0.001); end
  def test_costpercapita_at196; assert_in_epsilon(98.11676604939936, worksheet.costpercapita_at196, 0.001); end
  def test_costpercapita_ay196; assert_in_delta(0, (worksheet.costpercapita_ay196||0), 0.001); end
  def test_costpercapita_az196; assert_in_epsilon(1.6506149814073152, worksheet.costpercapita_az196, 0.001); end
  def test_costpercapita_ba196; assert_in_epsilon(3.76106396694557, worksheet.costpercapita_ba196, 0.001); end
  def test_costpercapita_bb196; assert_in_epsilon(3.567982903652108, worksheet.costpercapita_bb196, 0.001); end
  def test_costpercapita_bc196; assert_in_epsilon(3.399063291549347, worksheet.costpercapita_bc196, 0.001); end
  def test_costpercapita_bd196; assert_in_epsilon(3.2520697171354844, worksheet.costpercapita_bd196, 0.001); end
  def test_costpercapita_be196; assert_in_epsilon(3.1755038987185036, worksheet.costpercapita_be196, 0.001); end
  def test_costpercapita_bf196; assert_in_epsilon(3.0507415172119647, worksheet.costpercapita_bf196, 0.001); end
  def test_costpercapita_bg196; assert_in_epsilon(2.9358867238672466, worksheet.costpercapita_bg196, 0.001); end
  def test_costpercapita_bi196; assert_in_delta(0, (worksheet.costpercapita_bi196||0), 0.001); end
  def test_costpercapita_bj196; assert_in_epsilon(1.6506149814073152, worksheet.costpercapita_bj196, 0.001); end
  def test_costpercapita_bk196; assert_in_epsilon(5.357640866761144, worksheet.costpercapita_bk196, 0.001); end
  def test_costpercapita_bl196; assert_in_epsilon(8.759732592706198, worksheet.costpercapita_bl196, 0.001); end
  def test_costpercapita_bm196; assert_in_epsilon(10.414605455483043, worksheet.costpercapita_bm196, 0.001); end
  def test_costpercapita_bn196; assert_in_epsilon(9.959820610581916, worksheet.costpercapita_bn196, 0.001); end
  def test_costpercapita_bo196; assert_in_epsilon(9.60643252102849, worksheet.costpercapita_bo196, 0.001); end
  def test_costpercapita_bp196; assert_in_epsilon(9.28212696563229, worksheet.costpercapita_bp196, 0.001); end
  def test_costpercapita_bq196; assert_in_epsilon(8.983777003909681, worksheet.costpercapita_bq196, 0.001); end
  def test_costpercapita_bs196; assert_in_delta(0, (worksheet.costpercapita_bs196||0), 0.001); end
  def test_costpercapita_bt196; assert_in_epsilon(1.7486098577152647, worksheet.costpercapita_bt196, 0.001); end
  def test_costpercapita_bu196; assert_in_epsilon(5.63257816264975, worksheet.costpercapita_bu196, 0.001); end
  def test_costpercapita_bv196; assert_in_epsilon(9.069551841970915, worksheet.costpercapita_bv196, 0.001); end
  def test_costpercapita_bw196; assert_in_epsilon(10.75643359708389, worksheet.costpercapita_bw196, 0.001); end
  def test_costpercapita_bx196; assert_in_epsilon(10.331524452799366, worksheet.costpercapita_bx196, 0.001); end
  def test_costpercapita_by196; assert_in_epsilon(10.012991820175143, worksheet.costpercapita_by196, 0.001); end
  def test_costpercapita_bz196; assert_in_epsilon(9.714606437763186, worksheet.costpercapita_bz196, 0.001); end
  def test_costpercapita_ca196; assert_in_epsilon(9.440290691341705, worksheet.costpercapita_ca196, 0.001); end
  def test_costpercapita_cc196; assert_in_epsilon(7.411842984611024, worksheet.costpercapita_cc196, 0.001); end
  def test_costpercapita_cd196; assert_in_epsilon(148.56040051821023, worksheet.costpercapita_cd196, 0.001); end
  def test_costpercapita_cf196; assert_in_delta(0, (worksheet.costpercapita_cf196||0), 0.001); end
  def test_costpercapita_cg196; assert_in_delta(-0.8603267751702336, worksheet.costpercapita_cg196, 0.001); end
  def test_costpercapita_ch196; assert_in_delta(-0.3637494454187651, worksheet.costpercapita_ch196, 0.001); end
  def test_costpercapita_ci196; assert_in_epsilon(3.332060264240815, worksheet.costpercapita_ci196, 0.001); end
  def test_costpercapita_cj196; assert_in_epsilon(5.243896326983336, worksheet.costpercapita_cj196, 0.001); end
  def test_costpercapita_ck196; assert_in_epsilon(5.012720444863866, worksheet.costpercapita_ck196, 0.001); end
  def test_costpercapita_cl196; assert_in_epsilon(4.775805495779464, worksheet.costpercapita_cl196, 0.001); end
  def test_costpercapita_cm196; assert_in_epsilon(4.641290459010288, worksheet.costpercapita_cm196, 0.001); end
  def test_costpercapita_cn196; assert_in_epsilon(4.517659435259787, worksheet.costpercapita_cn196, 0.001); end
  def test_costpercapita_cp196; assert_in_epsilon(2.9221506895053952, worksheet.costpercapita_cp196, 0.001); end
  def test_costpercapita_cq196; assert_in_epsilon(50.443634468810856, worksheet.costpercapita_cq196, 0.001); end
  def test_costpercapita_cr196; assert_equal("ok", worksheet.costpercapita_cr196); end
  def test_costpercapita_c197; assert_equal("Total", worksheet.costpercapita_c197); end
  def test_costpercapita_e197; assert_in_epsilon(1883.733026528114, worksheet.costpercapita_e197, 0.001); end
  def test_costpercapita_f197; assert_in_epsilon(1900.289870232425, worksheet.costpercapita_f197, 0.001); end
  def test_costpercapita_g197; assert_in_epsilon(2024.6040001097683, worksheet.costpercapita_g197, 0.001); end
  def test_costpercapita_h197; assert_in_epsilon(2193.4552828425826, worksheet.costpercapita_h197, 0.001); end
  def test_costpercapita_i197; assert_in_epsilon(2249.293019499348, worksheet.costpercapita_i197, 0.001); end
  def test_costpercapita_j197; assert_in_epsilon(2398.3071236743585, worksheet.costpercapita_j197, 0.001); end
  def test_costpercapita_k197; assert_in_epsilon(2595.13738786056, worksheet.costpercapita_k197, 0.001); end
  def test_costpercapita_l197; assert_in_epsilon(2715.0817054329013, worksheet.costpercapita_l197, 0.001); end
  def test_costpercapita_m197; assert_in_epsilon(2857.956661246942, worksheet.costpercapita_m197, 0.001); end
  def test_costpercapita_o197; assert_in_epsilon(1598.3090215807968, worksheet.costpercapita_o197, 0.001); end
  def test_costpercapita_p197; assert_in_epsilon(1593.3297719137818, worksheet.costpercapita_p197, 0.001); end
  def test_costpercapita_q197; assert_in_epsilon(1633.4218638518141, worksheet.costpercapita_q197, 0.001); end
  def test_costpercapita_r197; assert_in_epsilon(1691.0899689690023, worksheet.costpercapita_r197, 0.001); end
  def test_costpercapita_s197; assert_in_epsilon(1732.0670103406671, worksheet.costpercapita_s197, 0.001); end
  def test_costpercapita_t197; assert_in_epsilon(1775.260383255151, worksheet.costpercapita_t197, 0.001); end
  def test_costpercapita_u197; assert_in_epsilon(1817.8969584881506, worksheet.costpercapita_u197, 0.001); end
  def test_costpercapita_v197; assert_in_epsilon(1859.583898334216, worksheet.costpercapita_v197, 0.001); end
  def test_costpercapita_w197; assert_in_epsilon(1910.856505636244, worksheet.costpercapita_w197, 0.001); end
  def test_costpercapita_y197; assert_in_epsilon(752.0153604039896, worksheet.costpercapita_y197, 0.001); end
  def test_costpercapita_z197; assert_in_epsilon(933.1442048955209, worksheet.costpercapita_z197, 0.001); end
  def test_costpercapita_aa197; assert_in_epsilon(1133.774379146809, worksheet.costpercapita_aa197, 0.001); end
  def test_costpercapita_ab197; assert_in_epsilon(1335.083059500866, worksheet.costpercapita_ab197, 0.001); end
  def test_costpercapita_ac197; assert_in_epsilon(1547.1016554321416, worksheet.costpercapita_ac197, 0.001); end
  def test_costpercapita_ad197; assert_in_epsilon(1595.390052238909, worksheet.costpercapita_ad197, 0.001); end
  def test_costpercapita_ae197; assert_in_epsilon(1631.925613673898, worksheet.costpercapita_ae197, 0.001); end
  def test_costpercapita_af197; assert_in_epsilon(1674.0018203383718, worksheet.costpercapita_af197, 0.001); end
  def test_costpercapita_ag197; assert_in_epsilon(1701.266239775938, worksheet.costpercapita_ag197, 0.001); end
  def test_costpercapita_ai197; assert_in_epsilon(4234.057408512901, worksheet.costpercapita_ai197, 0.001); end
  def test_costpercapita_aj197; assert_in_epsilon(4426.763847041729, worksheet.costpercapita_aj197, 0.001); end
  def test_costpercapita_ak197; assert_in_epsilon(4791.800243108392, worksheet.costpercapita_ak197, 0.001); end
  def test_costpercapita_al197; assert_in_epsilon(5219.628311312451, worksheet.costpercapita_al197, 0.001); end
  def test_costpercapita_am197; assert_in_epsilon(5528.461685272156, worksheet.costpercapita_am197, 0.001); end
  def test_costpercapita_an197; assert_in_epsilon(5768.95755916842, worksheet.costpercapita_an197, 0.001); end
  def test_costpercapita_ao197; assert_in_epsilon(6044.959960022608, worksheet.costpercapita_ao197, 0.001); end
  def test_costpercapita_ap197; assert_in_epsilon(6248.66742410549, worksheet.costpercapita_ap197, 0.001); end
  def test_costpercapita_aq197; assert_in_epsilon(6470.079406659123, worksheet.costpercapita_aq197, 0.001); end
  def test_costpercapita_as197; assert_in_epsilon(5414.819538355919, worksheet.costpercapita_as197, 0.001); end
  def test_costpercapita_at197; assert_in_epsilon(110477.1907826424, worksheet.costpercapita_at197, 0.001); end
  def test_costpercapita_ay197; assert_in_epsilon(756.7609553823909, worksheet.costpercapita_ay197, 0.001); end
  def test_costpercapita_az197; assert_in_epsilon(1272.3569130610335, worksheet.costpercapita_az197, 0.001); end
  def test_costpercapita_ba197; assert_in_epsilon(1357.716812247583, worksheet.costpercapita_ba197, 0.001); end
  def test_costpercapita_bb197; assert_in_epsilon(1474.3978635003582, worksheet.costpercapita_bb197, 0.001); end
  def test_costpercapita_bc197; assert_in_epsilon(1519.9019754369947, worksheet.costpercapita_bc197, 0.001); end
  def test_costpercapita_bd197; assert_in_epsilon(1622.3226641081983, worksheet.costpercapita_bd197, 0.001); end
  def test_costpercapita_be197; assert_in_epsilon(1750.524196621344, worksheet.costpercapita_be197, 0.001); end
  def test_costpercapita_bf197; assert_in_epsilon(1834.1937753866528, worksheet.costpercapita_bf197, 0.001); end
  def test_costpercapita_bg197; assert_in_epsilon(1933.5739213583083, worksheet.costpercapita_bg197, 0.001); end
  def test_costpercapita_bi197; assert_in_epsilon(756.7609553823909, worksheet.costpercapita_bi197, 0.001); end
  def test_costpercapita_bj197; assert_in_epsilon(1963.446173154227, worksheet.costpercapita_bj197, 0.001); end
  def test_costpercapita_bk197; assert_in_epsilon(3156.9761516784065, worksheet.costpercapita_bk197, 0.001); end
  def test_costpercapita_bl197; assert_in_epsilon(3860.5397602985327, worksheet.costpercapita_bl197, 0.001); end
  def test_costpercapita_bm197; assert_in_epsilon(4184.198465302867, worksheet.costpercapita_bm197, 0.001); end
  def test_costpercapita_bn197; assert_in_epsilon(4494.890286393293, worksheet.costpercapita_bn197, 0.001); end
  def test_costpercapita_bo197; assert_in_epsilon(4766.232532438681, worksheet.costpercapita_bo197, 0.001); end
  def test_costpercapita_bp197; assert_in_epsilon(5136.159472032096, worksheet.costpercapita_bp197, 0.001); end
  def test_costpercapita_bq197; assert_in_epsilon(5315.977539666274, worksheet.costpercapita_bq197, 0.001); end
  def test_costpercapita_bs197; assert_in_epsilon(3107.0853373671766, worksheet.costpercapita_bs197, 0.001); end
  def test_costpercapita_bt197; assert_in_epsilon(4489.92014996353, worksheet.costpercapita_bt197, 0.001); end
  def test_costpercapita_bu197; assert_in_epsilon(5924.172394677031, worksheet.costpercapita_bu197, 0.001); end
  def test_costpercapita_bv197; assert_in_epsilon(6886.7127887684, worksheet.costpercapita_bv197, 0.001); end
  def test_costpercapita_bw197; assert_in_epsilon(7463.3671310756745, worksheet.costpercapita_bw197, 0.001); end
  def test_costpercapita_bx197; assert_in_epsilon(7865.540721887352, worksheet.costpercapita_bx197, 0.001); end
  def test_costpercapita_by197; assert_in_epsilon(8216.05510460073, worksheet.costpercapita_by197, 0.001); end
  def test_costpercapita_bz197; assert_in_epsilon(8669.745190704685, worksheet.costpercapita_bz197, 0.001); end
  def test_costpercapita_ca197; assert_in_epsilon(8928.100285078459, worksheet.costpercapita_ca197, 0.001); end
  def test_costpercapita_cc197; assert_in_epsilon(6838.966567124782, worksheet.costpercapita_cc197, 0.001); end
  def test_costpercapita_cd197; assert_in_epsilon(138749.205394844, worksheet.costpercapita_cd197, 0.001); end
  def test_costpercapita_cf197; assert_in_epsilon(-1126.972071145723, worksheet.costpercapita_cf197, 0.001); end
  def test_costpercapita_cg197; assert_in_epsilon(63.156302921801895, worksheet.costpercapita_cg197, 0.001); end
  def test_costpercapita_ch197; assert_in_epsilon(1132.3721515686377, worksheet.costpercapita_ch197, 0.001); end
  def test_costpercapita_ci197; assert_in_epsilon(1667.08447745595, worksheet.costpercapita_ci197, 0.001); end
  def test_costpercapita_cj197; assert_in_epsilon(1934.9054458035184, worksheet.costpercapita_cj197, 0.001); end
  def test_costpercapita_ck197; assert_in_epsilon(2096.583162718933, worksheet.costpercapita_ck197, 0.001); end
  def test_costpercapita_cl197; assert_in_epsilon(2171.0951445781216, worksheet.costpercapita_cl197, 0.001); end
  def test_costpercapita_cm197; assert_in_epsilon(2421.0777665991955, worksheet.costpercapita_cm197, 0.001); end
  def test_costpercapita_cn197; assert_in_epsilon(2458.0208784193314, worksheet.costpercapita_cn197, 0.001); end
  def test_costpercapita_cp197; assert_in_epsilon(1424.1470287688633, worksheet.costpercapita_cp197, 0.001); end
  def test_costpercapita_cq197; assert_in_epsilon(28272.01461220161, worksheet.costpercapita_cq197, 0.001); end
  def test_costpercapita_cr197; assert_equal("ok", worksheet.costpercapita_cr197); end
  def test_costpercapita_e198; assert_equal("ok", worksheet.costpercapita_e198); end
  def test_costpercapita_f198; assert_equal("ok", worksheet.costpercapita_f198); end
  def test_costpercapita_g198; assert_equal("ok", worksheet.costpercapita_g198); end
  def test_costpercapita_h198; assert_equal("ok", worksheet.costpercapita_h198); end
  def test_costpercapita_i198; assert_equal("ok", worksheet.costpercapita_i198); end
  def test_costpercapita_j198; assert_equal("ok", worksheet.costpercapita_j198); end
  def test_costpercapita_k198; assert_equal("ok", worksheet.costpercapita_k198); end
  def test_costpercapita_l198; assert_equal("ok", worksheet.costpercapita_l198); end
  def test_costpercapita_m198; assert_equal("ok", worksheet.costpercapita_m198); end
  def test_costpercapita_o198; assert_equal("ok", worksheet.costpercapita_o198); end
  def test_costpercapita_p198; assert_equal("ok", worksheet.costpercapita_p198); end
  def test_costpercapita_q198; assert_equal("ok", worksheet.costpercapita_q198); end
  def test_costpercapita_r198; assert_equal("ok", worksheet.costpercapita_r198); end
  def test_costpercapita_s198; assert_equal("ok", worksheet.costpercapita_s198); end
  def test_costpercapita_t198; assert_equal("ok", worksheet.costpercapita_t198); end
  def test_costpercapita_u198; assert_equal("ok", worksheet.costpercapita_u198); end
  def test_costpercapita_v198; assert_equal("ok", worksheet.costpercapita_v198); end
  def test_costpercapita_w198; assert_equal("ok", worksheet.costpercapita_w198); end
  def test_costpercapita_y198; assert_in_delta(1.1368683772161603e-13, worksheet.costpercapita_y198, 0.001); end
  def test_costpercapita_z198; assert_equal("ok", worksheet.costpercapita_z198); end
  def test_costpercapita_aa198; assert_equal("ok", worksheet.costpercapita_aa198); end
  def test_costpercapita_ab198; assert_equal("ok", worksheet.costpercapita_ab198); end
  def test_costpercapita_ac198; assert_equal("ok", worksheet.costpercapita_ac198); end
  def test_costpercapita_ad198; assert_equal("ok", worksheet.costpercapita_ad198); end
  def test_costpercapita_ae198; assert_equal("ok", worksheet.costpercapita_ae198); end
  def test_costpercapita_af198; assert_equal("ok", worksheet.costpercapita_af198); end
  def test_costpercapita_ag198; assert_equal("ok", worksheet.costpercapita_ag198); end
  def test_costpercapita_ai198; assert_equal("ok", worksheet.costpercapita_ai198); end
  def test_costpercapita_aj198; assert_equal("ok", worksheet.costpercapita_aj198); end
  def test_costpercapita_ak198; assert_equal("ok", worksheet.costpercapita_ak198); end
  def test_costpercapita_al198; assert_equal("ok", worksheet.costpercapita_al198); end
  def test_costpercapita_am198; assert_in_delta(9.094947017729282e-13, worksheet.costpercapita_am198, 0.001); end
  def test_costpercapita_an198; assert_equal("ok", worksheet.costpercapita_an198); end
  def test_costpercapita_ao198; assert_equal("ok", worksheet.costpercapita_ao198); end
  def test_costpercapita_ap198; assert_equal("ok", worksheet.costpercapita_ap198); end
  def test_costpercapita_aq198; assert_equal("ok", worksheet.costpercapita_aq198); end
  def test_costpercapita_as198; assert_equal("ok", worksheet.costpercapita_as198); end
  def test_costpercapita_at198; assert_equal("ok", worksheet.costpercapita_at198); end
  def test_costpercapita_ay198; assert_equal("ok", worksheet.costpercapita_ay198); end
  def test_costpercapita_az198; assert_equal("ok", worksheet.costpercapita_az198); end
  def test_costpercapita_ba198; assert_equal("ok", worksheet.costpercapita_ba198); end
  def test_costpercapita_bb198; assert_equal("ok", worksheet.costpercapita_bb198); end
  def test_costpercapita_bc198; assert_equal("ok", worksheet.costpercapita_bc198); end
  def test_costpercapita_bd198; assert_equal("ok", worksheet.costpercapita_bd198); end
  def test_costpercapita_be198; assert_equal("ok", worksheet.costpercapita_be198); end
  def test_costpercapita_bf198; assert_equal("ok", worksheet.costpercapita_bf198); end
  def test_costpercapita_bg198; assert_equal("ok", worksheet.costpercapita_bg198); end
  def test_costpercapita_bi198; assert_equal("ok", worksheet.costpercapita_bi198); end
  def test_costpercapita_bj198; assert_equal("ok", worksheet.costpercapita_bj198); end
  def test_costpercapita_bk198; assert_equal("ok", worksheet.costpercapita_bk198); end
  def test_costpercapita_bl198; assert_equal("ok", worksheet.costpercapita_bl198); end
  def test_costpercapita_bm198; assert_equal("ok", worksheet.costpercapita_bm198); end
  def test_costpercapita_bn198; assert_equal("ok", worksheet.costpercapita_bn198); end
  def test_costpercapita_bo198; assert_equal("ok", worksheet.costpercapita_bo198); end
  def test_costpercapita_bp198; assert_equal("ok", worksheet.costpercapita_bp198); end
  def test_costpercapita_bq198; assert_equal("ok", worksheet.costpercapita_bq198); end
  def test_costpercapita_bs198; assert_equal("ok", worksheet.costpercapita_bs198); end
  def test_costpercapita_bt198; assert_equal("ok", worksheet.costpercapita_bt198); end
  def test_costpercapita_bu198; assert_equal("ok", worksheet.costpercapita_bu198); end
  def test_costpercapita_bv198; assert_equal("ok", worksheet.costpercapita_bv198); end
  def test_costpercapita_bw198; assert_equal("ok", worksheet.costpercapita_bw198); end
  def test_costpercapita_bx198; assert_equal("ok", worksheet.costpercapita_bx198); end
  def test_costpercapita_by198; assert_equal("ok", worksheet.costpercapita_by198); end
  def test_costpercapita_bz198; assert_in_delta(1.8189894035458565e-12, worksheet.costpercapita_bz198, 0.001); end
  def test_costpercapita_ca198; assert_equal("ok", worksheet.costpercapita_ca198); end
  def test_costpercapita_cc198; assert_equal("ok", worksheet.costpercapita_cc198); end
  def test_costpercapita_cd198; assert_equal("ok", worksheet.costpercapita_cd198); end
  def test_costpercapita_cf198; assert_equal("ok", worksheet.costpercapita_cf198); end
  def test_costpercapita_cg198; assert_in_delta(2.7000623958883807e-13, worksheet.costpercapita_cg198, 0.001); end
  def test_costpercapita_ch198; assert_equal("ok", worksheet.costpercapita_ch198); end
  def test_costpercapita_ci198; assert_equal("ok", worksheet.costpercapita_ci198); end
  def test_costpercapita_cj198; assert_equal("ok", worksheet.costpercapita_cj198); end
  def test_costpercapita_ck198; assert_equal("ok", worksheet.costpercapita_ck198); end
  def test_costpercapita_cl198; assert_equal("ok", worksheet.costpercapita_cl198); end
  def test_costpercapita_cm198; assert_equal("ok", worksheet.costpercapita_cm198); end
  def test_costpercapita_cn198; assert_equal("ok", worksheet.costpercapita_cn198); end
  def test_costpercapita_cp198; assert_equal("ok", worksheet.costpercapita_cp198); end
  def test_costpercapita_cq198; assert_equal("ok", worksheet.costpercapita_cq198); end

  # start of CostAbsolute

  # start of AQ Outputs
  def test_aq_outputs_b2; assert_equal("YOUR CHOICE", worksheet.aq_outputs_b2); end
  def test_aq_outputs_d3; assert_in_epsilon(2010, worksheet.aq_outputs_d3, 0.001); end
  def test_aq_outputs_e3; assert_equal("2050 - All Level 1", worksheet.aq_outputs_e3); end
  def test_aq_outputs_f3; assert_equal("2050 - YOUR CHOICE", worksheet.aq_outputs_f3); end
  def test_aq_outputs_c4; assert_equal("Emissions in 2010", worksheet.aq_outputs_c4); end
  def test_aq_outputs_d4; assert_in_epsilon(100, worksheet.aq_outputs_d4, 0.001); end
  def test_aq_outputs_c5; assert_equal("Low innovation", worksheet.aq_outputs_c5); end
  def test_aq_outputs_e5; assert_in_epsilon(60.550259470292204, worksheet.aq_outputs_e5, 0.001); end
  def test_aq_outputs_f5; assert_in_epsilon(60.55025947029221, worksheet.aq_outputs_f5, 0.001); end
  def test_aq_outputs_c6; assert_equal("High innovation", worksheet.aq_outputs_c6); end
  def test_aq_outputs_e6; assert_in_epsilon(23.027647092934004, worksheet.aq_outputs_e6, 0.001); end
  def test_aq_outputs_f6; assert_in_epsilon(23.027647092934004, worksheet.aq_outputs_f6, 0.001); end

  # start of AQImpactHInv

  # start of AQImpactLInv

  # start of Other AQ Sources

  # start of Conversions

  # start of Global assumptions

  # start of Constants

  # start of Structure of the model

  # start of I.a

  # start of I.b

  # start of II.a

  # start of III.a.1

  # start of III.a.2

  # start of III.b

  # start of III.c

  # start of III.d

  # start of IV.a

  # start of IV.b

  # start of IV.c

  # start of V.a

  # start of V.b

  # start of VI.a

  # start of VI.b

  # start of VI.c

  # start of VII.a

  # start of VII.b

  # start of VII.c

  # start of VIII.a

  # start of IX.a
  def test_ix_a_f597; assert_equal("Chosen", worksheet.ix_a_f597); end
  def test_ix_a_f598; assert_in_delta(0, (worksheet.ix_a_f598||0), 0.001); end
  def test_ix_a_f599; assert_in_delta(0.9, worksheet.ix_a_f599, 0.001); end
  def test_ix_a_f600; assert_in_delta(0.1, worksheet.ix_a_f600, 0.001); end
  def test_ix_a_f601; assert_in_delta(0, (worksheet.ix_a_f601||0), 0.001); end
  def test_ix_a_f602; assert_in_delta(0, (worksheet.ix_a_f602||0), 0.001); end
  def test_ix_a_f603; assert_in_delta(0, (worksheet.ix_a_f603||0), 0.001); end
  def test_ix_a_f604; assert_in_delta(0, (worksheet.ix_a_f604||0), 0.001); end
  def test_ix_a_f605; assert_in_delta(0, (worksheet.ix_a_f605||0), 0.001); end
  def test_ix_a_f606; assert_in_delta(0, (worksheet.ix_a_f606||0), 0.001); end
  def test_ix_a_f607; assert_in_delta(0, (worksheet.ix_a_f607||0), 0.001); end

  # start of IX.c
  def test_ix_c_n317; assert_in_delta(0, (worksheet.ix_c_n317||0), 0.001); end
  def test_ix_c_n318; assert_in_delta(0.9, worksheet.ix_c_n318, 0.001); end
  def test_ix_c_n319; assert_in_delta(0.1, worksheet.ix_c_n319, 0.001); end
  def test_ix_c_n320; assert_in_delta(0, (worksheet.ix_c_n320||0), 0.001); end
  def test_ix_c_n321; assert_in_delta(0, (worksheet.ix_c_n321||0), 0.001); end
  def test_ix_c_n322; assert_in_delta(0, (worksheet.ix_c_n322||0), 0.001); end
  def test_ix_c_n323; assert_in_delta(0, (worksheet.ix_c_n323||0), 0.001); end
  def test_ix_c_n324; assert_in_delta(0, (worksheet.ix_c_n324||0), 0.001); end
  def test_ix_c_n325; assert_in_delta(0, (worksheet.ix_c_n325||0), 0.001); end
  def test_ix_c_n326; assert_in_delta(0, (worksheet.ix_c_n326||0), 0.001); end
  def test_ix_c_n327; assert_in_delta(0, (worksheet.ix_c_n327||0), 0.001); end
  def test_ix_c_n328; assert_in_delta(0, (worksheet.ix_c_n328||0), 0.001); end
  def test_ix_c_n329; assert_in_delta(0, (worksheet.ix_c_n329||0), 0.001); end

  # start of X.a

  # start of X.b

  # start of XI.a

  # start of XII.a

  # start of XII.b

  # start of XII.c

  # start of XII.e

  # start of XIV.a

  # start of XV.a

  # start of XV.b

  # start of XVI.a

  # start of XVI.b

  # start of XVII.a

  # start of XVIII.a

  # start of 2007 (Actual, frozen)

  # start of 2007 (Consistent)

  # start of 2007

  # start of 2010

  # start of 2015

  # start of 2020

  # start of 2025

  # start of 2030

  # start of 2035

  # start of 2040

  # start of 2045

  # start of 2050

  # start of DUKES 09 (1.2)

  # start of DUKES 09 (1.9)

  # start of DUKES 09 (2.5)

  # start of DUKES 09 (5.1)

  # start of DUKES 09 (5.6)

  # start of DUKES 09 (7.2)

  # start of DUKES 09 (7.4)

  # start of DUKES 09 (A.1)

  # start of DECC Energy Cons. (1.14)

  # start of DECC Energy Cons. (4.1)
end
